using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;
using BlackJack.BJFramework.Runtime;
using BlackJack.BJFramework.Runtime.Lua;
using BlackJack.BJFramework.Runtime.PlayerContext;
using BlackJack.BJFramework.Runtime.TaskNs;
using BlackJack.ConfigData;
using BlackJack.ProjectL.Battle;
using BlackJack.ProjectL.Common;
using BlackJack.ProjectL.Misc;
using BlackJack.ProjectL.Protocol;
using BlackJack.ProjectL.UI;
using BlackJack.ServerFramework.Protocol;
using BlackJack.UtilityTools;
using PD.SDK;
using SLua;
using UnityEngine;

namespace BlackJack.ProjectL.PlayerContext
{
	// Token: 0x020008F3 RID: 2291
	[HotFix]
	public class ProjectLPlayerContext : PlayerContextBase, IComponentOwner
	{
		// Token: 0x06007896 RID: 30870 RVA: 0x0020D110 File Offset: 0x0020B310
		public ProjectLPlayerContext()
		{
			this.m_configDataLoader = (GameManager.Instance.ConfigDataLoader as IConfigDataLoader);
			this.m_components = new ComponenetManager<IComponentBase>(this);
			this.m_playerBasicInfoComponent = this.m_components.Add<PlayerBasicInfoComponent>();
			this.m_heroComponent = this.m_components.Add<HeroComponent>();
			this.m_bagComponent = this.m_components.Add<BagComponent>();
			this.m_battleComponent = this.m_components.Add<BattleComponent>();
			this.m_levelComponent = this.m_components.Add<LevelComponent>();
			this.m_riftComponent = this.m_components.Add<RiftComponent>();
			this.m_heroDungeonComponent = this.m_components.Add<HeroDungeonComponent>();
			this.m_thearchyTrialComponent = this.m_components.Add<ThearchyTrialComponent>();
			this.m_anikiGymComponent = this.m_components.Add<AnikiGymComponent>();
			this.m_treasureMapComponent = this.m_components.Add<TreasureMapComponent>();
			this.m_memoryCorridorComponent = this.m_components.Add<MemoryCorridorCompoment>();
			this.m_mailComponent = this.m_components.Add<MailComponent>();
			this.m_fixedStoreComponent = this.m_components.Add<FixedStoreComponent>();
			this.m_randomStoreComponent = this.m_components.Add<RandomStoreComponent>();
			this.m_selectCardComponent = this.m_components.Add<SelectCardComponent>();
			this.m_raffleComponent = this.m_components.Add<RaffleComponent>();
			this.m_missionComponent = this.m_components.Add<MissionComponent>();
			this.m_chatComponent = this.m_components.Add<ChatComponent>();
			this.m_chatGroupComponent = this.m_components.Add<ChatGroupComponent>();
			this.m_commentComponent = this.m_components.Add<CommentComponent>();
			this.m_trainingGroundComponent = this.m_components.Add<TrainingGroundCompoment>();
			this.m_arenaComponent = this.m_components.Add<ArenaComponent>();
			this.m_operationalActivityComponent = this.m_components.Add<OperationalActivityCompoment>();
			this.m_surveyComponent = this.m_components.Add<SurveyComponent>();
			this.m_danmakuComponent = this.m_components.Add<DanmakuComponent>();
			this.m_heroTrainningComponent = this.m_components.Add<HeroTrainningComponent>();
			this.m_friendComponent = this.m_components.Add<FriendComponent>();
			this.m_globalRankingListComponent = this.m_components.Add<GlobalRankingListComponent>();
			this.m_teamComponent = this.m_components.Add<TeamComponent>();
			this.m_heroAssistantsComponent = this.m_components.Add<HeroAssistantsCompoment>();
			this.m_heroPhantomComponent = this.m_components.Add<HeroPhantomCompoment>();
			this.m_cooperateBattleComponent = this.m_components.Add<CooperateBattleCompoment>();
			this.m_noviceComponent = this.m_components.Add<NoviceComponent>();
			this.m_rechargeStoreComponent = this.m_components.Add<RechargeStoreComponent>();
			this.m_resourceComponent = this.m_components.Add<ResourceComponent>();
			this.m_realTimePVPComponent = this.m_components.Add<RealTimePVPComponent>();
			this.m_giftStoreComponent = this.m_components.Add<GiftStoreComponent>();
			this.m_guildComponent = this.m_components.Add<GuildComponent>();
			this.m_unchartedScoreComponent = this.m_components.Add<UnchartedScoreComponent>();
			this.m_climbTowerComponent = this.m_components.Add<ClimbTowerComponent>();
			this.m_components.PostInitComponents();
			this.m_happening = new Happening();
			this.m_currentBattle = new CurrentBattle();
			this.InitAllDefaultConfigHeros();
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ctor_hotfix != null)
			{
				this.m_ctor_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
		}

		// Token: 0x06007897 RID: 30871 RVA: 0x0020D564 File Offset: 0x0020B764
		private bool SendMessage(object msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendMessageObject_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendMessageObject_hotfix.call(new object[]
				{
					this,
					msg
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_networkClient != null && this.m_networkClient.SendMessage(msg);
		}

		// Token: 0x06007898 RID: 30872 RVA: 0x0020D5FC File Offset: 0x0020B7FC
		public override void OnGameServerMessage(object msg, int msgId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnGameServerMessageObjectInt32_hotfix != null)
			{
				this.m_OnGameServerMessageObjectInt32_hotfix.call(new object[]
				{
					this,
					msg,
					msgId
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msgId != 6)
			{
				global::Debug.Log("Receive message " + msg.GetType().Name);
			}
			switch (msgId)
			{
			case 1002:
				this.OnMessage(msg as AnikiGymLevelAttackAck);
				break;
			default:
				if (msgId != 5)
				{
					if (msgId != 6)
					{
						global::Debug.LogWarning("Unhandled message " + msg.GetType().Name);
					}
					else
					{
						this.OnMessage(msg as ServerHeartBeatNtf);
					}
				}
				else
				{
					this.OnMessage(msg as ServerDisconnectNtf);
				}
				break;
			case 1004:
				this.OnMessage(msg as AnikiGymLevelBattleFinishedAck);
				break;
			case 1006:
				this.OnMessage(msg as ArenaBattleFinishedAck);
				break;
			case 1008:
				this.OnMessage(msg as ArenaBattleReconnectAck);
				break;
			case 1010:
				this.OnMessage(msg as ArenaBattleReportBasicDataGetAck);
				break;
			case 1012:
				this.OnMessage(msg as ArenaBattleReportNtf);
				break;
			case 1013:
				this.OnMessage(msg as ArenaBattleReportPlayBackDataGetAck);
				break;
			case 1015:
				this.OnMessage(msg as ArenaOpponentAttackAck);
				break;
			case 1016:
				this.OnMessage(msg as ArenaOpponentAttackFightingAck);
				break;
			case 1019:
				this.OnMessage(msg as ArenaOpponentRevengeAck);
				break;
			case 1023:
				this.OnMessage(msg as ArenaOpponentViewAck);
				break;
			case 1025:
				this.OnMessage(msg as ArenaPlayerInfoGetAck);
				break;
			case 1027:
				this.OnMessage(msg as ArenaPlayerSetDefensiveTeamAck);
				break;
			case 1029:
				this.OnMessage(msg as ArenaRevengeOpponentGetAck);
				break;
			case 1031:
				this.OnMessage(msg as ArenaTicketsBuyAck);
				break;
			case 1033:
				this.OnMessage(msg as ArenaTopRankPlayersGetAck);
				break;
			case 1035:
				this.OnMessage(msg as ArenaVictoryPointsRewardGainAck);
				break;
			case 1037:
				this.OnMessage(msg as BattleArmyRandomSeedGetAck);
				break;
			case 1039:
				this.OnMessage(msg as BattleCancelAck);
				break;
			case 1041:
				this.OnMessage(msg as BattleTeamSetAck);
				break;
			case 1043:
				this.OnMessage(msg as BuyEnergyAck);
				break;
			case 1045:
				this.OnMessage(msg as ChatBannedNtf);
				break;
			case 1046:
				this.OnMessage(msg as ChatMessageNtf);
				break;
			case 1047:
				this.OnMessage(msg as ChatMessageSendAck);
				break;
			case 1049:
				this.OnMessage(msg as ChatVoiceContentAck);
				break;
			case 1051:
				this.OnMessage(msg as ChatWorldChannelRoomEnterAck);
				break;
			case 1053:
				this.OnMessage(msg as CommenterHeroViewAck);
				break;
			case 1055:
				this.OnMessage(msg as CreateCharactorAck);
				break;
			case 1057:
				this.OnMessage(msg as DSAnikiGymNtf);
				break;
			case 1058:
				this.OnMessage(msg as DSAnnouncementNtf);
				break;
			case 1059:
				this.OnMessage(msg as DSArenaNtf);
				break;
			case 1060:
				this.OnMessage(msg as DSBagNtf);
				break;
			case 1061:
				this.OnMessage(msg as DSBattleNtf);
				break;
			case 1062:
				this.OnMessage(msg as DSChatNtf);
				break;
			case 1063:
				this.OnMessage(msg as DSFixedStoreNtf);
				break;
			case 1064:
				this.OnMessage(msg as DSHeroDungeonNtf);
				break;
			case 1065:
				this.OnMessage(msg as DSHeroNtf);
				break;
			case 1066:
				this.OnMessage(msg as DSHeroTrainningNtf);
				break;
			case 1067:
				this.OnMessage(msg as DSLevelNtf);
				break;
			case 1068:
				this.OnMessage(msg as DSMailNtf);
				break;
			case 1069:
				this.OnMessage(msg as DSMemoryCorridorNtf);
				break;
			case 1070:
				this.OnMessage(msg as DSMissionNtf);
				break;
			case 1071:
				this.OnMessage(msg as DSOperationalActivityNtf);
				break;
			case 1072:
				this.OnMessage(msg as DSPlayerBasicNtf);
				break;
			case 1073:
				this.OnMessage(msg as DSRandomStoreNtf);
				break;
			case 1074:
				this.OnMessage(msg as DSRiftNtf);
				break;
			case 1075:
				this.OnMessage(msg as DSSelectCardNtf);
				break;
			case 1076:
				this.OnMessage(msg as DSSurveyNtf);
				break;
			case 1077:
				this.OnMessage(msg as DSTeamNtf);
				break;
			case 1078:
				this.OnMessage(msg as DSThearchyTrialNtf);
				break;
			case 1079:
				this.OnMessage(msg as DSTreasureMapNtf);
				break;
			case 1080:
				this.OnMessage(msg as EquipmentAutoAck);
				break;
			case 1082:
				this.OnMessage(msg as EquipmentEnhanceAck);
				break;
			case 1084:
				this.OnMessage(msg as EquipmentLockAndUnLockAck);
				break;
			case 1086:
				this.OnMessage(msg as EquipmentStarLevelUpAck);
				break;
			case 1088:
				this.OnMessage(msg as EquipmentTakeOffAck);
				break;
			case 1090:
				this.OnMessage(msg as EquipmentWearAck);
				break;
			case 1092:
				this.OnMessage(msg as EverydaySignAck);
				break;
			case 1094:
				this.OnMessage(msg as ExchangeGiftCDKeyAck);
				break;
			case 1096:
				this.OnMessage(msg as FixedStoreBuyStoreItemAck);
				break;
			case 1100:
				this.OnMessage(msg as FlushConfigNtf);
				break;
			case 1101:
				this.OnMessage(msg as FriendBlockAck);
				break;
			case 1103:
				this.OnMessage(msg as FriendDeleteAck);
				break;
			case 1105:
				this.OnMessage(msg as FriendFindAck);
				break;
			case 1109:
				this.OnMessage(msg as FriendInviteAcceptAck);
				break;
			case 1110:
				this.OnMessage(msg as FriendInviteAcceptNtf);
				break;
			case 1112:
				this.OnMessage(msg as FriendInviteAck);
				break;
			case 1113:
				this.OnMessage(msg as FriendInviteDeclineAck);
				break;
			case 1114:
				this.OnMessage(msg as FriendInviteDeclineNtf);
				break;
			case 1116:
				this.OnMessage(msg as FriendInviteNtf);
				break;
			case 1118:
				this.OnMessage(msg as FriendSuggestedAck);
				break;
			case 1120:
				this.OnMessage(msg as FriendSummaryUpdateNtf);
				break;
			case 1121:
				this.OnMessage(msg as FriendUnblockAck);
				break;
			case 1123:
				this.OnMessage(msg as GetMissionRewardAck);
				break;
			case 1125:
				this.OnMessage(msg as GetSurveyRewardAck);
				break;
			case 1127:
				this.OnMessage(msg as GmCommandAck);
				break;
			case 1131:
				this.OnMessage(msg as HeroCommentAck);
				break;
			case 1132:
				this.OnMessage(msg as HeroCommentEntryPraiseAck);
				break;
			case 1134:
				this.OnMessage(msg as HeroCommentGetAck);
				break;
			case 1137:
				this.OnMessage(msg as HeroComposeAck);
				break;
			case 1139:
				this.OnMessage(msg as HeroConfessAck);
				break;
			case 1141:
				this.OnMessage(msg as HeroDungeonChapterStarRewardGainAck);
				break;
			case 1143:
				this.OnMessage(msg as HeroDungeonLevelAttackAck);
				break;
			case 1145:
				this.OnMessage(msg as HeroDungeonLevelBattleFinishedAck);
				break;
			case 1147:
				this.OnMessage(msg as HeroDungeonLevelRaidAck);
				break;
			case 1149:
				this.OnMessage(msg as HeroExpAddAck);
				break;
			case 1151:
				this.OnMessage(msg as HeroFavorabilityExpAddAck);
				break;
			case 1153:
				this.OnMessage(msg as HeroFetterLevelUpAck);
				break;
			case 1155:
				this.OnMessage(msg as HeroFetterUnlockAck);
				break;
			case 1157:
				this.OnMessage(msg as HeroInteractAck);
				break;
			case 1159:
				this.OnMessage(msg as HeroJobLevelUpAck);
				break;
			case 1161:
				this.OnMessage(msg as HeroJobTransferAck);
				break;
			case 1163:
				this.OnMessage(msg as HeroJobUnlockAck);
				break;
			case 1165:
				this.OnMessage(msg as HeroSkillsSelectAck);
				break;
			case 1167:
				this.OnMessage(msg as HeroSoldierSelectAck);
				break;
			case 1169:
				this.OnMessage(msg as HeroStarLevelLevelUpAck);
				break;
			case 1171:
				this.OnMessage(msg as HeroTrainningLevelAttackAck);
				break;
			case 1173:
				this.OnMessage(msg as HeroTrainningLevelBattleFinishedAck);
				break;
			case 1175:
				this.OnMessage(msg as LevelDanmakuGetAck);
				break;
			case 1177:
				this.OnMessage(msg as LevelDanmakuPostAck);
				break;
			case 1179:
				this.OnMessage(msg as LevelScenarioHandleAck);
				break;
			case 1181:
				this.OnMessage(msg as LevelWayPointBattleFinishAck);
				break;
			case 1183:
				this.OnMessage(msg as LevelWayPointMoveAck);
				break;
			case 1185:
				this.OnMessage(msg as MailAttachmentsGetAck);
				break;
			case 1187:
				this.OnMessage(msg as MailReadAck);
				break;
			case 1189:
				this.OnMessage(msg as MailsChangedNtf);
				break;
			case 1190:
				this.OnMessage(msg as MailsGetAck);
				break;
			case 1192:
				this.OnMessage(msg as MemoryCorridorLevelAttackAck);
				break;
			case 1194:
				this.OnMessage(msg as MemoryCorridorLevelBattleFinishedAck);
				break;
			case 1196:
				this.OnMessage(msg as NewAnnouncementNtf);
				break;
			case 1197:
				this.OnMessage(msg as NewMarqueeNtf);
				break;
			case 1198:
				this.OnMessage(msg as NewOperationalActivityNtf);
				break;
			case 1199:
				this.OnMessage(msg as NewSurveyNtf);
				break;
			case 1200:
				this.OnMessage(msg as OpenSurveyAck);
				break;
			case 1202:
				this.OnMessage(msg as OperationalActivityExchangeItemGroupAck);
				break;
			case 1204:
				this.OnMessage(msg as OperationalActivityGainRewardAck);
				break;
			case 1206:
				this.OnMessage(msg as PlayerInfoInitAck);
				break;
			case 1207:
				this.OnMessage(msg as PlayerInfoInitEndNtf);
				break;
			case 1209:
				this.OnMessage(msg as PlayerNameChangeAck);
				break;
			case 1211:
				this.OnMessage(msg as ProChangedGoodsNtf);
				break;
			case 1212:
				this.OnMessage(msg as RandomEventNtf);
				break;
			case 1213:
				this.OnMessage(msg as RandomStoreBuyStoreItemAck);
				break;
			case 1215:
				this.OnMessage(msg as RandomStoreFlushAck);
				break;
			case 1217:
				this.OnMessage(msg as RandomStoreGetAck);
				break;
			case 1219:
				this.OnMessage(msg as RankingListInfoQueryAck);
				break;
			case 1221:
				this.OnMessage(msg as RemoveAnnouncementNtf);
				break;
			case 1222:
				this.OnMessage(msg as RiftChapterRewardGainAck);
				break;
			case 1224:
				this.OnMessage(msg as RiftLevelAttackAck);
				break;
			case 1226:
				this.OnMessage(msg as RiftLevelBattleFinishedAck);
				break;
			case 1228:
				this.OnMessage(msg as RiftLevelRaidAck);
				break;
			case 1230:
				this.OnMessage(msg as SelectCardAck);
				break;
			case 1232:
				this.OnMessage(msg as SellBagItemAck);
				break;
			case 1234:
				this.OnMessage(msg as SetProtagonistAck);
				break;
			case 1236:
				this.OnMessage(msg as TeamRoomAuthorityChangeAck);
				break;
			case 1237:
				this.OnMessage(msg as TeamRoomAuthorityChangeNtf);
				break;
			case 1239:
				this.OnMessage(msg as TeamRoomAutoMatchAck);
				break;
			case 1240:
				this.OnMessage(msg as TeamRoomAutoMatchCancelAck);
				break;
			case 1242:
				this.OnMessage(msg as TeamRoomAutoMatchInfoNtf);
				break;
			case 1244:
				this.OnMessage(msg as TeamRoomCreateAck);
				break;
			case 1246:
				this.OnMessage(msg as TeamRoomGetAck);
				break;
			case 1248:
				this.OnMessage(msg as TeamRoomInvitationRefusedAck);
				break;
			case 1249:
				this.OnMessage(msg as TeamRoomInvitationRefusedNtf);
				break;
			case 1251:
				this.OnMessage(msg as TeamRoomInviteAck);
				break;
			case 1252:
				this.OnMessage(msg as TeamRoomInviteNtf);
				break;
			case 1254:
				this.OnMessage(msg as TeamRoomJoinAck);
				break;
			case 1256:
				this.OnMessage(msg as TeamRoomPlayerJoinNtf);
				break;
			case 1257:
				this.OnMessage(msg as TeamRoomPlayerLeaveWaitingListAndJoinRoomNtf);
				break;
			case 1258:
				this.OnMessage(msg as TeamRoomPlayerQuitNtf);
				break;
			case 1259:
				this.OnMessage(msg as TeamRoomQuitAck);
				break;
			case 1261:
				this.OnMessage(msg as TeamRoomViewAck);
				break;
			case 1263:
				this.OnMessage(msg as ThearchyTrialLevelAttackAck);
				break;
			case 1265:
				this.OnMessage(msg as ThearchyTrialLevelBattleFinishedAck);
				break;
			case 1267:
				this.OnMessage(msg as TreasureLevelAttackAck);
				break;
			case 1269:
				this.OnMessage(msg as TreasureLevelBattleFinishedAck);
				break;
			case 1271:
				this.OnMessage(msg as UpdateOperationalActivityNtf);
				break;
			case 1272:
				this.OnMessage(msg as UpdateSurveyNtf);
				break;
			case 1273:
				this.OnMessage(msg as UseBagItemAck);
				break;
			case 1275:
				this.OnMessage(msg as UserGuideSetAck);
				break;
			case 1277:
				this.OnMessage(msg as DSHeroAssistantNtf);
				break;
			case 1278:
				this.OnMessage(msg as DSTrainingGroundNtf);
				break;
			case 1279:
				this.OnMessage(msg as TrainingGroundTechLevelupAck);
				break;
			case 1282:
				this.OnMessage(msg as TeamRoomSelfKickOutNtf);
				break;
			case 1283:
				this.OnMessage(msg as BusinessCardSelectAck);
				break;
			case 1285:
				this.OnMessage(msg as DSFriendNtf);
				break;
			case 1286:
				this.OnMessage(msg as FriendInfoUpdateNtf);
				break;
			case 1287:
				this.OnMessage(msg as BusinessCardDescUpdateAck);
				break;
			case 1289:
				this.OnMessage(msg as BusinessCardHeroSetUpdateAck);
				break;
			case 1291:
				this.OnMessage(msg as LikesSendAck);
				break;
			case 1295:
				this.OnMessage(msg as HeroAssistantAssignToTaskAck);
				break;
			case 1297:
				this.OnMessage(msg as HeroAssistantCancelTaskAck);
				break;
			case 1299:
				this.OnMessage(msg as HeroAssistantClaimRewardAck);
				break;
			case 1302:
				this.OnMessage(msg as BattleRoomCreateAck);
				break;
			case 1312:
				this.OnMessage(msg as ChatGroupChangeOwnerAck);
				break;
			case 1314:
				this.OnMessage(msg as ChatGroupCreateChatGroupAck);
				break;
			case 1316:
				this.OnMessage(msg as ChatGroupGetChatGroupAck);
				break;
			case 1317:
				this.OnMessage(msg as ChatGroupGetChatGroupMemberAck);
				break;
			case 1320:
				this.OnMessage(msg as ChatGroupInviteToChatGroupAck);
				break;
			case 1322:
				this.OnMessage(msg as ChatGroupLeaveChatGroupAck);
				break;
			case 1324:
				this.OnMessage(msg as ChatGroupUpdateNtf);
				break;
			case 1331:
				this.OnMessage(msg as BattleRoomHeroSetupAck);
				break;
			case 1332:
				this.OnMessage(msg as BattleRoomHeroSetupNtf);
				break;
			case 1334:
				this.OnMessage(msg as BattleRoomHeroSwapAck);
				break;
			case 1339:
				this.OnMessage(msg as BattleRoomPlayerStatusChangedNtf);
				break;
			case 1340:
				this.OnMessage(msg as BattleRoomPlayerStatusChangeAck);
				break;
			case 1342:
				this.OnMessage(msg as HeroRandomActionSetAck);
				break;
			case 1344:
				this.OnMessage(msg as BagItemDecomposeAck);
				break;
			case 1349:
				this.OnMessage(msg as BattleRoomBattleCommandExecuteAck);
				break;
			case 1350:
				this.OnMessage(msg as BattleRoomBattleCommandExecuteNtf);
				break;
			case 1353:
				this.OnMessage(msg as BattlePracticeAcceptAck);
				break;
			case 1355:
				this.OnMessage(msg as BattlePracticeCancelAck);
				break;
			case 1357:
				this.OnMessage(msg as BattlePracticeDeclineAck);
				break;
			case 1358:
				this.OnMessage(msg as BattlePracticeDeclinedNtf);
				break;
			case 1360:
				this.OnMessage(msg as BattlePracticeFailNtf);
				break;
			case 1361:
				this.OnMessage(msg as BattlePracticeInviteAck);
				break;
			case 1362:
				this.OnMessage(msg as BattlePracticeInvitedNtf);
				break;
			case 1366:
				this.OnMessage(msg as BattleRoomQuitAck);
				break;
			case 1368:
				this.OnMessage(msg as ChatGroupKickUserAck);
				break;
			case 1370:
				this.OnMessage(msg as FriendGetUserSummaryAck);
				break;
			case 1372:
				this.OnMessage(msg as BattleRoomPlayerActionBeginAck);
				break;
			case 1374:
				this.OnMessage(msg as BattleRoomTeamBattleFinishNtf);
				break;
			case 1375:
				this.OnMessage(msg as BattleRoomTeamBattleJoinNtf);
				break;
			case 1376:
				this.OnMessage(msg as BattleRoomTeamBattleStartNtf);
				break;
			case 1377:
				this.OnMessage(msg as FriendshipPointsClaimAck);
				break;
			case 1379:
				this.OnMessage(msg as FriendshipPointsSendAck);
				break;
			case 1381:
				this.OnMessage(msg as ChatGroupChangeNameAck);
				break;
			case 1383:
				this.OnMessage(msg as BattleRoomPVPBattleFinishNtf);
				break;
			case 1384:
				this.OnMessage(msg as BattleRoomPVPBattleJoinNtf);
				break;
			case 1385:
				this.OnMessage(msg as BattleRoomPVPBattleStartNtf);
				break;
			case 1386:
				this.OnMessage(msg as DSHeroPhantomNtf);
				break;
			case 1387:
				this.OnMessage(msg as HeroPhantomAttackAck);
				break;
			case 1389:
				this.OnMessage(msg as HeroPhantomBattleFinishedAck);
				break;
			case 1395:
				this.OnMessage(msg as BattleRoomGetAck);
				break;
			case 1397:
				this.OnMessage(msg as ChatContactUserSummaryInfoAck);
				break;
			case 1399:
				this.OnMessage(msg as DSCooperateBattleNtf);
				break;
			case 1400:
				this.OnMessage(msg as EquipmentEnchantAck);
				break;
			case 1402:
				this.OnMessage(msg as EquipmentEnchantSaveAck);
				break;
			case 1404:
				this.OnMessage(msg as BattleRoomPlayerBattleInfoInitNtf);
				break;
			case 1405:
				this.OnMessage(msg as BattleRoomQuitNtf);
				break;
			case 1406:
				this.OnMessage(msg as MailAttachmentAutoGetAck);
				break;
			case 1408:
				this.OnMessage(msg as DSNoviceNtf);
				break;
			case 1409:
				this.OnMessage(msg as NoviceClaimRewardAck);
				break;
			case 1412:
				this.OnMessage(msg as ClientCheatNtf);
				break;
			case 1414:
				this.OnMessage(msg as FriendSocialRelationUpdateNtf);
				break;
			case 1419:
				this.OnMessage(msg as TeamRoomInviteeLevelInfoNtf);
				break;
			case 1420:
				this.OnMessage(msg as GameRatingOpenAck);
				break;
			case 1422:
				this.OnMessage(msg as RealTimePVPWaitingForOpponentAck);
				break;
			case 1424:
				this.OnMessage(msg as ArenaFlushOpponentsNtf);
				break;
			case 1425:
				this.OnMessage(msg as RealTimePVPMatchupNtf);
				break;
			case 1426:
				this.OnMessage(msg as BoughtRechargeStoreItemNtf);
				break;
			case 1427:
				this.OnMessage(msg as DSRechargeStoreNtf);
				break;
			case 1428:
				this.OnMessage(msg as BattleRoomRealTimePVPBattleJoinNtf);
				break;
			case 1431:
				this.OnMessage(msg as DSResourceNtf);
				break;
			case 1434:
				this.OnMessage(msg as BattleRoomRealTimePVPBattleFinishNtf);
				break;
			case 1435:
				this.OnMessage(msg as DSRealTimePVPNtf);
				break;
			case 1436:
				this.OnMessage(msg as DSRaffleNtf);
				break;
			case 1437:
				this.OnMessage(msg as RaffleDrawAck);
				break;
			case 1439:
				this.OnMessage(msg as RealTimePVPCancelWaitingForOpponentAck);
				break;
			case 1441:
				this.OnMessage(msg as RealTimePVPGetInfoAck);
				break;
			case 1443:
				this.OnMessage(msg as RealTimePVPGetTopPlayersAck);
				break;
			case 1445:
				this.OnMessage(msg as GiftStoreBuyGoodsNtf);
				break;
			case 1446:
				this.OnMessage(msg as GiftStoreItemBuyAck);
				break;
			case 1448:
				this.OnMessage(msg as CharSkinTakeOffAck);
				break;
			case 1450:
				this.OnMessage(msg as CharSkinWearAck);
				break;
			case 1452:
				this.OnMessage(msg as ModelSkinTakeOffAck);
				break;
			case 1454:
				this.OnMessage(msg as ModelSkinWearAck);
				break;
			case 1456:
				this.OnMessage(msg as SoldierSkinTakeOffAck);
				break;
			case 1458:
				this.OnMessage(msg as SoldierSkinWearAck);
				break;
			case 1460:
				this.OnMessage(msg as BattleRoomHeroBanAck);
				break;
			case 1462:
				this.OnMessage(msg as BattleRoomHeroProtectAck);
				break;
			case 1464:
				this.OnMessage(msg as DSGiftStoreNtf);
				break;
			case 1465:
				this.OnMessage(msg as MonthCardUpdateNtf);
				break;
			case 1466:
				this.OnMessage(msg as BattleRoomDataChangeNtf);
				break;
			case 1467:
				this.OnMessage(msg as BattleRoomEndCurrentBPTurnAck);
				break;
			case 1469:
				this.OnMessage(msg as RMBUpdateNtf);
				break;
			case 1470:
				this.OnMessage(msg as GiftStoreOperationalGoodsUpdateNtf);
				break;
			case 1471:
				this.OnMessage(msg as GiftStoreAppleSubscribeAck);
				break;
			case 1473:
				this.OnMessage(msg as BattleRoomRealTimePVPBattleStartNtf);
				break;
			case 1474:
				this.OnMessage(msg as AdvertisementFlowLayoutUpdateNtf);
				break;
			case 1475:
				this.OnMessage(msg as RealTimePVPAcquireWinsBonusAck);
				break;
			case 1477:
				this.OnMessage(msg as HeadPortraitAndHeadFrameSetAck);
				break;
			case 1479:
				this.OnMessage(msg as RealTimePVPLeaderboardInfoNtf);
				break;
			case 1480:
				this.OnMessage(msg as RechargeStoreBuyGoodsAck);
				break;
			case 1482:
				this.OnMessage(msg as DSBagExtraNtf);
				break;
			case 1483:
				this.OnMessage(msg as GiftStoreCancelBuyAck);
				break;
			case 1486:
				this.OnMessage(msg as CheckOnlineAck);
				break;
			case 1488:
				this.OnMessage(msg as RechargeStoreCancelBuyAck);
				break;
			case 1491:
				this.OnMessage(msg as PullOrderRewardAck);
				break;
			case 1493:
				this.OnMessage(msg as ShareAck);
				break;
			case 1495:
				this.OnMessage(msg as DSRealTimePVPBattleReportNtf);
				break;
			case 1496:
				this.OnMessage(msg as DSRealTimePVPPromotionBattleReportNtf);
				break;
			case 1497:
				this.OnMessage(msg as DirectelyActivitedMissionUpdateNtf);
				break;
			case 1500:
				this.OnMessage(msg as ExchangeHeroFragmentAck);
				break;
			case 1502:
				this.OnMessage(msg as AutoTakeOffEquipmentsAck);
				break;
			case 1504:
				this.OnMessage(msg as GuildCreateAck);
				break;
			case 1508:
				this.OnMessage(msg as GuildJoinApplyAck);
				break;
			case 1512:
				this.OnMessage(msg as ChatGuildHistoryMessageNtf);
				break;
			case 1513:
				this.OnMessage(msg as GuildInvitePlayerListAck);
				break;
			case 1515:
				this.OnMessage(msg as GuildRandomListAck);
				break;
			case 1517:
				this.OnMessage(msg as GuildSearchAck);
				break;
			case 1519:
				this.OnMessage(msg as GuildHiringDeclarationSetAck);
				break;
			case 1523:
				this.OnMessage(msg as GuildGetAck);
				break;
			case 1525:
				this.OnMessage(msg as GuildVicePresidentAppointAck);
				break;
			case 1527:
				this.OnMessage(msg as GuildKickOutAck);
				break;
			case 1529:
				this.OnMessage(msg as GuildQuitAck);
				break;
			case 1531:
				this.OnMessage(msg as GuildPresidentAppointAck);
				break;
			case 1533:
				this.OnMessage(msg as GuildPresidentRelieveAck);
				break;
			case 1535:
				this.OnMessage(msg as DSGuildNtf);
				break;
			case 1536:
				this.OnMessage(msg as GuildAnnouncementSetAck);
				break;
			case 1538:
				this.OnMessage(msg as GuildJoinApplyConfirmAck);
				break;
			case 1540:
				this.OnMessage(msg as GuildJoinInvitationConfirmAck);
				break;
			case 1542:
				this.OnMessage(msg as AllGuildJoinInvitationRefuseAck);
				break;
			case 1544:
				this.OnMessage(msg as GuildJoinInvitationRefuseAck);
				break;
			case 1548:
				this.OnMessage(msg as GuildJoinInvitationGetAck);
				break;
			case 1550:
				this.OnMessage(msg as DSUnchartedScoreNtf);
				break;
			case 1551:
				this.OnMessage(msg as UnchartedScoreChallengeLevelAttackAck);
				break;
			case 1553:
				this.OnMessage(msg as UnchartedScoreChallengeLevelBattleFinishedAck);
				break;
			case 1557:
				this.OnMessage(msg as UnchartedScoreScoreLevelAttackAck);
				break;
			case 1559:
				this.OnMessage(msg as UnchartedScoreScoreLevelBattleFinishedAck);
				break;
			case 1561:
				this.OnMessage(msg as AllGuildJoinApplyRefuseAck);
				break;
			case 1563:
				this.OnMessage(msg as GuildJoinApplyGetAck);
				break;
			case 1565:
				this.OnMessage(msg as GuildJoinApplyRefuseAck);
				break;
			case 1567:
				this.OnMessage(msg as GuildNameChangeAck);
				break;
			case 1569:
				this.OnMessage(msg as GuildLogGetAck);
				break;
			case 1571:
				this.OnMessage(msg as GuildJoinInviteAck);
				break;
			case 1575:
				this.OnMessage(msg as ClimbTowerGetAck);
				break;
			case 1577:
				this.OnMessage(msg as ClimbTowerLevelAttackAck);
				break;
			case 1579:
				this.OnMessage(msg as ClimbTowerLevelBattleFinishedAck);
				break;
			case 1581:
				this.OnMessage(msg as ClimbTowerRaidAck);
				break;
			case 1583:
				this.OnMessage(msg as DSClimbTowerNtf);
				break;
			case 1584:
				this.OnMessage(msg as RedeemClaimAck);
				break;
			case 1586:
				this.OnMessage(msg as RedeemInfoAck);
				break;
			case 1588:
				this.OnMessage(msg as TeamRoomPlayerPositionChangeAck);
				break;
			case 1590:
				this.OnMessage(msg as TeamRoomPlayerPositionChangeNtf);
				break;
			case 1592:
				this.OnMessage(msg as GuildUpdateAnnouncementNtf);
				break;
			case 1593:
				this.OnMessage(msg as GuildJoinApplyAdminNtf);
				break;
			case 1594:
				this.OnMessage(msg as GuildJoinInvitationNtf);
				break;
			case 1595:
				this.OnMessage(msg as DailyFlushNtf);
				break;
			case 1597:
				this.OnMessage(msg as UpdateServerTimeNtf);
				break;
			case 1598:
				this.OnMessage(msg as FansRewardsFromPBTCBTClaimAck);
				break;
			case 1600:
				this.OnMessage(msg as FansRewardsFromPBTCBTInfoAck);
				break;
			case 1602:
				this.OnMessage(msg as GuildBasicSetAck);
				break;
			case 1604:
				this.OnMessage(msg as GuildMassiveCombatAttackAck);
				break;
			case 1606:
				this.OnMessage(msg as GuildMassiveCombatDataAck);
				break;
			case 1608:
				this.OnMessage(msg as GuildMassiveCombatNtf);
				break;
			case 1611:
				this.OnMessage(msg as GuildMassiveCombatStartAck);
				break;
			case 1613:
				this.OnMessage(msg as GuildMassiveCombatSurrenderAck);
				break;
			case 1615:
				this.OnMessage(msg as OpenMemoryStoreAck);
				break;
			case 1617:
				this.OnMessage(msg as BattleRoomGuildMassiveCombatBattleJoinNtf);
				break;
			case 1618:
				this.OnMessage(msg as BattleGuildMassiveCombatBattleFinishNtf);
				break;
			case 1620:
				this.OnMessage(msg as GuildMassiveCombatPlayerNtf);
				break;
			case 1621:
				this.OnMessage(msg as GuildMassiveCombatAttackFinishedAck);
				break;
			case 1623:
				this.OnMessage(msg as BattleRoomHeroPutdownAck);
				break;
			case 1625:
				this.OnMessage(msg as TeamRoomInviteeInfoGetAck);
				break;
			}
		}

		// Token: 0x06007899 RID: 30873 RVA: 0x0020F6DC File Offset: 0x0020D8DC
		private void OnMessage(ServerHeartBeatNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageServerHeartBeatNtf_hotfix != null)
			{
				this.m_OnMessageServerHeartBeatNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
		}

		// Token: 0x0600789A RID: 30874 RVA: 0x0020F74C File Offset: 0x0020D94C
		private void OnMessage(ServerDisconnectNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageServerDisconnectNtf_hotfix != null)
			{
				this.m_OnMessageServerDisconnectNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnServerDisconnectNtf != null)
			{
				this.EventOnServerDisconnectNtf(ntf.ErrorCode);
			}
		}

		// Token: 0x0600789B RID: 30875 RVA: 0x0020F7D8 File Offset: 0x0020D9D8
		private void OnMessage(ClientCheatNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageClientCheatNtf_hotfix != null)
			{
				this.m_OnMessageClientCheatNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnClientCheatNtf != null)
			{
				this.EventOnClientCheatNtf();
			}
		}

		// Token: 0x0600789C RID: 30876 RVA: 0x0020F860 File Offset: 0x0020DA60
		[DoNotToLua]
		public T AddOwnerComponent<T>() where T : class, IComponentBase, new()
		{
			return this.m_components.Add<T>();
		}

		// Token: 0x0600789D RID: 30877 RVA: 0x0020F870 File Offset: 0x0020DA70
		public void RemoveOwnerComponent<T>() where T : class, IComponentBase
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_RemoveOwnerComponent_hotfix != null)
			{
				this.m_RemoveOwnerComponent_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_components.Remove<T>();
		}

		// Token: 0x0600789E RID: 30878 RVA: 0x0020F8DC File Offset: 0x0020DADC
		public T GetOwnerComponent<T>() where T : class, IComponentBase
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetOwnerComponent_hotfix != null)
			{
				return (T)((object)this.m_GetOwnerComponent_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_components.GetComponent<T>();
		}

		// Token: 0x0600789F RID: 30879 RVA: 0x0020F954 File Offset: 0x0020DB54
		public IComponentBase GetOwnerComponent(string componentName)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetOwnerComponentString_hotfix != null)
			{
				return (IComponentBase)this.m_GetOwnerComponentString_hotfix.call(new object[]
				{
					this,
					componentName
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_components.GetComponent(componentName);
		}

		// Token: 0x060078A0 RID: 30880 RVA: 0x0020F9DC File Offset: 0x0020DBDC
		public override void Tick()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_Tick_hotfix != null)
			{
				this.m_Tick_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			base.Tick();
			if (this.m_isPlayerInfoInitEnd)
			{
				int energy = this.GetEnergy();
				uint deltaMillisecond = (uint)(Time.deltaTime * 1000f);
				this.m_components.Tick(deltaMillisecond);
				if (this.GetEnergy() != energy && this.EventOnPlayerInfoChangeNtf != null)
				{
					this.EventOnPlayerInfoChangeNtf();
				}
			}
		}

		// Token: 0x060078A1 RID: 30881 RVA: 0x0020FA90 File Offset: 0x0020DC90
		private void TestMarquee()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_TestMarquee_hotfix != null)
			{
				this.m_TestMarquee_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_testMarqueeTime += Time.deltaTime;
			if (this.m_testMarqueeTime >= 3f)
			{
				this.m_testMarqueeTime -= 3f;
				Marquee marquee = new Marquee();
				marquee.Content = "123456798zaqxswce,sadfdsfadadsfsfsdfasffdfafsfd1111111111111111111111122222222222222223333333333333333";
				if (this.EventOnChatMessageNtf != null)
				{
					this.EventOnNewMarqueeNtf(marquee);
				}
			}
		}

		// Token: 0x060078A2 RID: 30882 RVA: 0x0020FB4C File Offset: 0x0020DD4C
		private void TestChat()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_TestChat_hotfix != null)
			{
				this.m_TestChat_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_testChatTime += Time.deltaTime;
			if (this.m_testChatTime >= 1f)
			{
				this.m_testChatTime -= 1f;
				ChatTextMessage chatTextMessage = new ChatTextMessage();
				chatTextMessage.ChannelId = ChatChannel.World;
				chatTextMessage.SrcName = "AAA";
				chatTextMessage.Text = "cccccccccccccccccQQQQQQQQQQQQQQQ";
				if (this.EventOnChatMessageNtf != null)
				{
					this.EventOnChatMessageNtf(chatTextMessage);
				}
			}
		}

		// Token: 0x060078A3 RID: 30883 RVA: 0x0020FC1C File Offset: 0x0020DE1C
		public string GetSessionToken()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetSessionToken_hotfix != null)
			{
				return (string)this.m_GetSessionToken_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_sessionToken;
		}

		// Token: 0x060078A4 RID: 30884 RVA: 0x0020FC90 File Offset: 0x0020DE90
		protected override string GetDeviceId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDeviceId_hotfix != null)
			{
				return (string)this.m_GetDeviceId_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (PDSDK.Instance != null && PDSDK.IsInit)
			{
				return PDSDK.Instance.GetDeviceID();
			}
			return SystemInfo.deviceUniqueIdentifier;
		}

		// Token: 0x060078A5 RID: 30885 RVA: 0x0020FD28 File Offset: 0x0020DF28
		protected override string GetClientVersion()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClientVersion_hotfix != null)
			{
				return (string)this.m_GetClientVersion_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_configDataLoader.UtilityGetVersionString(VersionInfoId.VersionInfoId_ClientProgram);
		}

		// Token: 0x060078A6 RID: 30886 RVA: 0x0020FDA0 File Offset: 0x0020DFA0
		public override bool IsDataCacheDirtyByPlayerInfoInitAck(object msg, out bool raiseCriticalDataCacheDirty)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsDataCacheDirtyByPlayerInfoInitAckObjectBoolean__hotfix != null)
			{
				return LuaDelegation.Lua_BlackJack_ProjectL_PlayerContext_ProjectLPlayerContext_IsDataCacheDirtyByPlayerInfoInitAck_Object_Boolean(this, this.m_IsDataCacheDirtyByPlayerInfoInitAckObjectBoolean__hotfix, msg, out raiseCriticalDataCacheDirty);
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			raiseCriticalDataCacheDirty = false;
			return false;
		}

		// Token: 0x060078A7 RID: 30887 RVA: 0x0020FE00 File Offset: 0x0020E000
		public override bool IsPlayerInfoInitAck4CheckOnly(object msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsPlayerInfoInitAck4CheckOnlyObject_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsPlayerInfoInitAck4CheckOnlyObject_hotfix.call(new object[]
				{
					this,
					msg
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return false;
		}

		// Token: 0x060078A8 RID: 30888 RVA: 0x0020FE80 File Offset: 0x0020E080
		public bool IsLocalGame()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsLocalGame_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsLocalGame_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_networkClient == null;
		}

		// Token: 0x060078A9 RID: 30889 RVA: 0x0020FEF8 File Offset: 0x0020E0F8
		public DateTime GetLocalTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetLocalTime_hotfix != null)
			{
				return (DateTime)this.m_GetLocalTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return DateTime.Now;
		}

		// Token: 0x060078AA RID: 30890 RVA: 0x0020FF6C File Offset: 0x0020E16C
		public DateTime GetServerTime_Bug()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetServerTime_Bug_hotfix != null)
			{
				return (DateTime)this.m_GetServerTime_Bug_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			DateTime? serverTimeSynced = this.m_serverTimeSynced;
			if (serverTimeSynced == null)
			{
				return DateTime.Now;
			}
			return this.m_serverTimeSynced.Value.AddSeconds((double)(Time.realtimeSinceStartup - this.m_realtimeSinceStartupAtServerTimeSynced));
		}

		// Token: 0x060078AB RID: 30891 RVA: 0x00210014 File Offset: 0x0020E214
		public DateTime GetServerTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetServerTime_hotfix != null)
			{
				return (DateTime)this.m_GetServerTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return DateTime.Now + this.m_diffToServerTime;
		}

		// Token: 0x060078AC RID: 30892 RVA: 0x00210090 File Offset: 0x0020E290
		public DateTime LocalTimeToServerTime(DateTime t)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_LocalTimeToServerTimeDateTime_hotfix != null)
			{
				return (DateTime)this.m_LocalTimeToServerTimeDateTime_hotfix.call(new object[]
				{
					this,
					t
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return t + this.m_diffToServerTime;
		}

		// Token: 0x060078AD RID: 30893 RVA: 0x00210118 File Offset: 0x0020E318
		public DateTime ServerTimeToLocalTime(DateTime t)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ServerTimeToLocalTimeDateTime_hotfix != null)
			{
				return (DateTime)this.m_ServerTimeToLocalTimeDateTime_hotfix.call(new object[]
				{
					this,
					t
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return t - this.m_diffToServerTime;
		}

		// Token: 0x060078AE RID: 30894 RVA: 0x002101A0 File Offset: 0x0020E3A0
		private void DataError(int result)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_DataErrorInt32_hotfix != null)
			{
				this.m_DataErrorInt32_hotfix.call(new object[]
				{
					this,
					result
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (result != 0)
			{
				ClientConfigDataLoader clientConfigDataLoader = this.m_configDataLoader as ClientConfigDataLoader;
				string arg = clientConfigDataLoader.UtilityGetErrorCodeString(result);
				global::Debug.LogError(string.Format("DataError, error code {0}: {1}", result, arg));
				this.m_isDataError = true;
			}
		}

		// Token: 0x060078AF RID: 30895 RVA: 0x00210248 File Offset: 0x0020E448
		public bool IsDataError()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsDataError_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsDataError_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_isDataError;
		}

		// Token: 0x17001BEC RID: 7148
		// (get) Token: 0x060078B0 RID: 30896 RVA: 0x002102BC File Offset: 0x0020E4BC
		public Happening Happening
		{
			get
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_get_Happening_hotfix != null)
				{
					return (Happening)this.m_get_Happening_hotfix.call(new object[]
					{
						this
					});
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				return this.m_happening;
			}
		}

		// Token: 0x17001BED RID: 7149
		// (get) Token: 0x060078B1 RID: 30897 RVA: 0x00210330 File Offset: 0x0020E530
		public CurrentBattle CurrentBattle
		{
			get
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_get_CurrentBattle_hotfix != null)
				{
					return (CurrentBattle)this.m_get_CurrentBattle_hotfix.call(new object[]
					{
						this
					});
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				return this.m_currentBattle;
			}
		}

		// Token: 0x14000069 RID: 105
		// (add) Token: 0x060078B2 RID: 30898 RVA: 0x002103A4 File Offset: 0x0020E5A4
		// (remove) Token: 0x060078B3 RID: 30899 RVA: 0x00210440 File Offset: 0x0020E640
		public event Action EventOnClientCheatNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnClientCheatNtfAction_hotfix != null)
				{
					this.m_add_EventOnClientCheatNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnClientCheatNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnClientCheatNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnClientCheatNtfAction_hotfix != null)
				{
					this.m_remove_EventOnClientCheatNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnClientCheatNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnClientCheatNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400006A RID: 106
		// (add) Token: 0x060078B4 RID: 30900 RVA: 0x002104DC File Offset: 0x0020E6DC
		// (remove) Token: 0x060078B5 RID: 30901 RVA: 0x00210578 File Offset: 0x0020E778
		public event Action<int> EventOnServerDisconnectNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnServerDisconnectNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnServerDisconnectNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnServerDisconnectNtf;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnServerDisconnectNtf, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnServerDisconnectNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnServerDisconnectNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnServerDisconnectNtf;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnServerDisconnectNtf, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x060078B6 RID: 30902 RVA: 0x00210614 File Offset: 0x0020E814
		public bool SendAnikiGymLevelAttackReq(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendAnikiGymLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendAnikiGymLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new AnikiGymLevelAttackReq
			{
				LevelId = levelId
			});
		}

		// Token: 0x060078B7 RID: 30903 RVA: 0x002106A4 File Offset: 0x0020E8A4
		public bool SendAnikiGymLevelBattleFinishedReq(int levelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendAnikiGymLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendAnikiGymLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					levelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new AnikiGymLevelBattleFinishedReq
			{
				LevelId = levelId,
				BattleReport = battleReport
			});
		}

		// Token: 0x060078B8 RID: 30904 RVA: 0x0021074C File Offset: 0x0020E94C
		private void OnMessage(DSAnikiGymNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSAnikiGymNtf_hotfix != null)
			{
				this.m_OnMessageDSAnikiGymNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_anikiGymComponent.DeSerialize(msg);
		}

		// Token: 0x060078B9 RID: 30905 RVA: 0x002107C8 File Offset: 0x0020E9C8
		private void OnMessage(AnikiGymLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageAnikiGymLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageAnikiGymLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_anikiGymComponent.AttackAnikiGymLevel(msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnAnikiGymLevelAttackAck != null)
			{
				this.EventOnAnikiGymLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x060078BA RID: 30906 RVA: 0x002108C0 File Offset: 0x0020EAC0
		private void OnMessage(AnikiGymLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageAnikiGymLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageAnikiGymLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.DailyGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.DailyRewards));
				int num = this.m_anikiGymComponent.FinishedAnikiGymLevel(msg.LevelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnAnikiGymLevelBattleFinishedAck != null)
			{
				this.EventOnAnikiGymLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x060078BB RID: 30907 RVA: 0x00210A0C File Offset: 0x0020EC0C
		public bool IsAnikiGymOpened(int anikiGymId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsAnikiGymOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsAnikiGymOpenedInt32_hotfix.call(new object[]
				{
					this,
					anikiGymId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_anikiGymComponent.IsAnikiGymOpened(anikiGymId);
		}

		// Token: 0x060078BC RID: 30908 RVA: 0x00210A94 File Offset: 0x0020EC94
		public bool IsAnikiLevelOpened(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsAnikiLevelOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsAnikiLevelOpenedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_anikiGymComponent.IsAnikiLevelOpened(levelId);
		}

		// Token: 0x060078BD RID: 30909 RVA: 0x00210B1C File Offset: 0x0020ED1C
		public int CanAttackAnikiLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackAnikiLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackAnikiLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_anikiGymComponent.CanAttackAnikiGymLevel(levelId, false);
		}

		// Token: 0x060078BE RID: 30910 RVA: 0x00210BA8 File Offset: 0x0020EDA8
		public int GetAnikiTicketCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAnikiTicketCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetAnikiTicketCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_anikiGymComponent.GetCurrentTicketNums();
		}

		// Token: 0x060078BF RID: 30911 RVA: 0x00210C20 File Offset: 0x0020EE20
		public bool IsAnikiLevelFinished(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsAnikiLevelFinishedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsAnikiLevelFinishedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_anikiGymComponent.IsLevelFinished(levelId);
		}

		// Token: 0x060078C0 RID: 30912 RVA: 0x00210CA8 File Offset: 0x0020EEA8
		public int GetAnikiDailyRewardRestCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAnikiDailyRewardRestCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetAnikiDailyRewardRestCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_anikiGymComponent.GetDailyChallengNums();
		}

		// Token: 0x1400006B RID: 107
		// (add) Token: 0x060078C1 RID: 30913 RVA: 0x00210D20 File Offset: 0x0020EF20
		// (remove) Token: 0x060078C2 RID: 30914 RVA: 0x00210DBC File Offset: 0x0020EFBC
		public event Action<int> EventOnAnikiGymLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnAnikiGymLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnAnikiGymLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAnikiGymLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAnikiGymLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnAnikiGymLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnAnikiGymLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAnikiGymLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAnikiGymLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400006C RID: 108
		// (add) Token: 0x060078C3 RID: 30915 RVA: 0x00210E58 File Offset: 0x0020F058
		// (remove) Token: 0x060078C4 RID: 30916 RVA: 0x00210EF4 File Offset: 0x0020F0F4
		public event Action<int, bool, BattleReward> EventOnAnikiGymLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnAnikiGymLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnAnikiGymLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnAnikiGymLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnAnikiGymLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnAnikiGymLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnAnikiGymLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnAnikiGymLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnAnikiGymLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x060078C5 RID: 30917 RVA: 0x00210F90 File Offset: 0x0020F190
		public bool SendArenaPlayerInfoGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaPlayerInfoGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaPlayerInfoGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isNeedGetArenaPlayerInfo = false;
			ArenaPlayerInfoGetReq msg = new ArenaPlayerInfoGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x060078C6 RID: 30918 RVA: 0x00211010 File Offset: 0x0020F210
		public bool SendArenaOpponentViewReq(int opponentIndex)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaOpponentViewReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaOpponentViewReqInt32_hotfix.call(new object[]
				{
					this,
					opponentIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ArenaOpponentViewReq
			{
				OpponentIndex = opponentIndex
			});
		}

		// Token: 0x060078C7 RID: 30919 RVA: 0x002110A0 File Offset: 0x0020F2A0
		public bool SendArenaOpponentAttackReq(bool autoBattle)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaOpponentAttackReqBoolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaOpponentAttackReqBoolean_hotfix.call(new object[]
				{
					this,
					autoBattle
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ArenaOpponentAttackReq
			{
				AutoBattle = autoBattle
			});
		}

		// Token: 0x060078C8 RID: 30920 RVA: 0x00211130 File Offset: 0x0020F330
		public bool SendArenaRevengeOpponentGetReq(ulong arenaBattleReportInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaRevengeOpponentGetReqUInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaRevengeOpponentGetReqUInt64_hotfix.call(new object[]
				{
					this,
					arenaBattleReportInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ArenaRevengeOpponentGetReq
			{
				ArenaBattleReportInstanceId = arenaBattleReportInstanceId
			});
		}

		// Token: 0x060078C9 RID: 30921 RVA: 0x002111C0 File Offset: 0x0020F3C0
		public bool SendArenaOpponentRevengeReq(ulong arenaBattleReportInstanceId, bool autoBattle)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaOpponentRevengeReqUInt64Boolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaOpponentRevengeReqUInt64Boolean_hotfix.call(new object[]
				{
					this,
					arenaBattleReportInstanceId,
					autoBattle
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ArenaOpponentRevengeReq
			{
				BattleReportInstanceId = arenaBattleReportInstanceId,
				AutoBattle = autoBattle
			});
		}

		// Token: 0x060078CA RID: 30922 RVA: 0x00211268 File Offset: 0x0020F468
		public bool SendArenaOpponentAttackFightingReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaOpponentAttackFightingReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaOpponentAttackFightingReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaOpponentAttackFightingReq msg = new ArenaOpponentAttackFightingReq();
			return this.SendMessage(msg);
		}

		// Token: 0x060078CB RID: 30923 RVA: 0x002112E4 File Offset: 0x0020F4E4
		public bool SendArenaBattleFinishedReq(ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaBattleFinishedReqProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaBattleFinishedReqProBattleReport_hotfix.call(new object[]
				{
					this,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ArenaBattleFinishedReq
			{
				BattleReport = battleReport
			});
		}

		// Token: 0x060078CC RID: 30924 RVA: 0x00211374 File Offset: 0x0020F574
		public bool SendArenaPlayerSetDefensiveTeamReq(int arenaDefenderRuleId, int battleId, List<ArenaPlayerDefensiveHero> defensiveHeroes)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaPlayerSetDefensiveTeamReqInt32Int32List`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaPlayerSetDefensiveTeamReqInt32Int32List`1_hotfix.call(new object[]
				{
					this,
					arenaDefenderRuleId,
					battleId,
					defensiveHeroes
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaPlayerSetDefensiveTeamReq arenaPlayerSetDefensiveTeamReq = new ArenaPlayerSetDefensiveTeamReq();
			arenaPlayerSetDefensiveTeamReq.DefensiveTeam = new ProArenaPlayerDefensiveTeam();
			arenaPlayerSetDefensiveTeamReq.DefensiveTeam.ArenaDefenderRuleId = arenaDefenderRuleId;
			arenaPlayerSetDefensiveTeamReq.DefensiveTeam.BattleId = battleId;
			foreach (ArenaPlayerDefensiveHero defensiveHero in defensiveHeroes)
			{
				arenaPlayerSetDefensiveTeamReq.DefensiveTeam.DefenderHeroes.Add(ArenaPlayerDefensiveHero.ArenaDefensiveHeroToPBDfensiveHero(defensiveHero));
			}
			return this.SendMessage(arenaPlayerSetDefensiveTeamReq);
		}

		// Token: 0x060078CD RID: 30925 RVA: 0x0021149C File Offset: 0x0020F69C
		public bool SendArenaVictoryPointsRewardGainReq(int rewardIndex)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaVictoryPointsRewardGainReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaVictoryPointsRewardGainReqInt32_hotfix.call(new object[]
				{
					this,
					rewardIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ArenaVictoryPointsRewardGainReq
			{
				RewardIndex = rewardIndex
			});
		}

		// Token: 0x060078CE RID: 30926 RVA: 0x0021152C File Offset: 0x0020F72C
		public bool SendArenaBattleReportBaiscDataGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaBattleReportBaiscDataGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaBattleReportBaiscDataGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaBattleReportBasicDataGetReq msg = new ArenaBattleReportBasicDataGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x060078CF RID: 30927 RVA: 0x002115A8 File Offset: 0x0020F7A8
		public bool SendArenaBattleReportPlayBackDataGetReq(ulong arenaBattleReportInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaBattleReportPlayBackDataGetReqUInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaBattleReportPlayBackDataGetReqUInt64_hotfix.call(new object[]
				{
					this,
					arenaBattleReportInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ArenaBattleReportPlayBackDataGetReq
			{
				ArenaBattleReportInstanceId = arenaBattleReportInstanceId
			});
		}

		// Token: 0x060078D0 RID: 30928 RVA: 0x00211638 File Offset: 0x0020F838
		public bool SendArenaTopRankPlayersGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaTopRankPlayersGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaTopRankPlayersGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaTopRankPlayersGetReq msg = new ArenaTopRankPlayersGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x060078D1 RID: 30929 RVA: 0x002116B4 File Offset: 0x0020F8B4
		public bool SendArenaBattleReconnectReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendArenaBattleReconnectReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendArenaBattleReconnectReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaBattleReconnectReq msg = new ArenaBattleReconnectReq();
			return this.SendMessage(msg);
		}

		// Token: 0x060078D2 RID: 30930 RVA: 0x00211730 File Offset: 0x0020F930
		private void OnMessage(DSArenaNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSArenaNtf_hotfix != null)
			{
				this.m_OnMessageDSArenaNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaPlayerInfo arenaPlayerInfo = this.m_arenaComponent.GetArenaPlayerInfo();
			ushort num = 0;
			int num2 = 0;
			if (arenaPlayerInfo != null)
			{
				num = arenaPlayerInfo.ArenaPoints;
				num2 = arenaPlayerInfo.ArenaLevelId;
			}
			this.m_arenaComponent.DeSerialize(msg);
			ArenaPlayerInfo arenaPlayerInfo2 = this.m_arenaComponent.GetArenaPlayerInfo();
			if (arenaPlayerInfo2 != null)
			{
				if (arenaPlayerInfo2.ArenaPoints == 0)
				{
					global::Debug.LogWarning("DSArenaNtf ArenaPoints is 0, old is " + num);
					arenaPlayerInfo2.ArenaPoints = num;
				}
				if (arenaPlayerInfo2.ArenaLevelId == 0)
				{
					global::Debug.LogWarning("DSArenaNtf ArenaLevelId is 0, old is " + num2);
					arenaPlayerInfo2.ArenaLevelId = num2;
				}
			}
		}

		// Token: 0x060078D3 RID: 30931 RVA: 0x00211830 File Offset: 0x0020FA30
		private void OnMessage(ArenaPlayerInfoGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaPlayerInfoGetAck_hotfix != null)
			{
				this.m_OnMessageArenaPlayerInfoGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_arenaComponent.InitArenaPlayInfo(msg.ArenaPlayerData);
			}
			if (this.EventOnArenaPlayerInfoGetAck != null)
			{
				this.EventOnArenaPlayerInfoGetAck(msg.Result);
			}
		}

		// Token: 0x060078D4 RID: 30932 RVA: 0x002118D8 File Offset: 0x0020FAD8
		private void OnMessage(ArenaOpponentViewAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaOpponentViewAck_hotfix != null)
			{
				this.m_OnMessageArenaOpponentViewAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnArenaOpponentViewAck != null)
			{
				this.EventOnArenaOpponentViewAck(msg.Result, msg.Heroes, msg.BattlePower);
			}
		}

		// Token: 0x060078D5 RID: 30933 RVA: 0x0021197C File Offset: 0x0020FB7C
		private void OnMessage(ArenaOpponentAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaOpponentAttackAck_hotfix != null)
			{
				this.m_OnMessageArenaOpponentAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_arenaComponent.StartArenaBattle(msg.OpponentDefensiveBattleInfo, msg.AutoBattle);
			}
			if (this.EventOnArenaOpponentAttackAck != null)
			{
				this.EventOnArenaOpponentAttackAck(msg.Result);
			}
		}

		// Token: 0x060078D6 RID: 30934 RVA: 0x00211A2C File Offset: 0x0020FC2C
		private void OnMessage(ArenaRevengeOpponentGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaRevengeOpponentGetAck_hotfix != null)
			{
				this.m_OnMessageArenaRevengeOpponentGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnArenaRevengeOpponentGetAck != null)
			{
				this.EventOnArenaRevengeOpponentGetAck(msg.Result, msg.Opponent, msg.Heroes, msg.BattlePower);
			}
		}

		// Token: 0x060078D7 RID: 30935 RVA: 0x00211AD8 File Offset: 0x0020FCD8
		private void OnMessage(ArenaOpponentRevengeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaOpponentRevengeAck_hotfix != null)
			{
				this.m_OnMessageArenaOpponentRevengeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_arenaComponent.RevengeOpponent(msg.BattleReportInstanceId, msg.AutoBattle, msg.OpponentDefensiveBattleInfo);
			}
			if (this.EventOnArenaOpponentRevengeAck != null)
			{
				this.EventOnArenaOpponentRevengeAck(msg.Result);
			}
		}

		// Token: 0x060078D8 RID: 30936 RVA: 0x00211B8C File Offset: 0x0020FD8C
		private void OnMessage(ArenaOpponentAttackFightingAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaOpponentAttackFightingAck_hotfix != null)
			{
				this.m_OnMessageArenaOpponentAttackFightingAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_arenaComponent.AttackOpponentFighting();
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnArenaOpponentAttackFightingAck != null)
			{
				this.EventOnArenaOpponentAttackFightingAck(msg.Result);
			}
		}

		// Token: 0x060078D9 RID: 30937 RVA: 0x00211C5C File Offset: 0x0020FE5C
		private void OnMessage(ArenaBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageArenaBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				this.m_arenaComponent.FinsihArenaBattle(msg.Win);
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.Score = this.GetArenaPointChangeValue(msg.BattleReportInstanceId);
			}
			this.m_arenaComponent.ArenaBattleFinish(GameFunctionStatus.End);
			if (this.EventOnArenaBattleFinishedAck != null)
			{
				this.EventOnArenaBattleFinishedAck(msg.Result, battleReward, msg.Win);
			}
		}

		// Token: 0x060078DA RID: 30938 RVA: 0x00211D70 File Offset: 0x0020FF70
		private void OnMessage(ArenaPlayerSetDefensiveTeamAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaPlayerSetDefensiveTeamAck_hotfix != null)
			{
				this.m_OnMessageArenaPlayerSetDefensiveTeamAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_arenaComponent.SetDefensiveTeam(msg.DefensiveTeam);
			}
			if (this.EventOnArenaPlayerSetDefensiveTeamAck != null)
			{
				this.EventOnArenaPlayerSetDefensiveTeamAck(msg.Result);
			}
		}

		// Token: 0x060078DB RID: 30939 RVA: 0x00211E18 File Offset: 0x00210018
		private void OnMessage(ArenaVictoryPointsRewardGainAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaVictoryPointsRewardGainAck_hotfix != null)
			{
				this.m_OnMessageArenaVictoryPointsRewardGainAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				this.m_arenaComponent.GainVictoryPointsReward(msg.RewardIndex);
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
			}
			if (this.EventOnArenaVictoryPointsRewardGainAck != null)
			{
				this.EventOnArenaVictoryPointsRewardGainAck(msg.Result, battleReward);
			}
		}

		// Token: 0x060078DC RID: 30940 RVA: 0x00211F00 File Offset: 0x00210100
		private void OnMessage(ArenaBattleReportBasicDataGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaBattleReportBasicDataGetAck_hotfix != null)
			{
				this.m_OnMessageArenaBattleReportBasicDataGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_arenaComponent.InitBattleReportBasicInfo(msg.ArenaReports, msg.NextBattleReportIndex);
			}
			if (this.EventOnArenaBattleReportBasicDataGetAck != null)
			{
				this.EventOnArenaBattleReportBasicDataGetAck(msg.Result);
			}
		}

		// Token: 0x060078DD RID: 30941 RVA: 0x00211FB0 File Offset: 0x002101B0
		private void OnMessage(ArenaBattleReportPlayBackDataGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaBattleReportPlayBackDataGetAck_hotfix != null)
			{
				this.m_OnMessageArenaBattleReportPlayBackDataGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_arenaComponent.AddArenaBattleReportPlayBackData(msg.BattlePlayBackData);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnArenaBattleReportPlayBackDataGetAck != null)
			{
				this.EventOnArenaBattleReportPlayBackDataGetAck(msg.Result);
			}
		}

		// Token: 0x060078DE RID: 30942 RVA: 0x00212068 File Offset: 0x00210268
		private void OnMessage(ArenaTopRankPlayersGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaTopRankPlayersGetAck_hotfix != null)
			{
				this.m_OnMessageArenaTopRankPlayersGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_playerArenaRank = msg.MineRank;
				this.m_arenaTopRankPlayers.Clear();
				this.m_arenaTopRankPlayers.AddRange(msg.TopRankPlayers);
			}
			if (this.EventOnArenaTopRankPlayersGetAck != null)
			{
				this.EventOnArenaTopRankPlayersGetAck(msg.Result);
			}
		}

		// Token: 0x060078DF RID: 30943 RVA: 0x00212128 File Offset: 0x00210328
		private void OnMessage(ArenaBattleReconnectAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaBattleReconnectAck_hotfix != null)
			{
				this.m_OnMessageArenaBattleReconnectAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_arenaComponent.ReconnectArenaBattle(msg.OpponentDefensiveBattleInfo);
			}
			if (this.EventOnArenaBattleReconnectAck != null)
			{
				this.EventOnArenaBattleReconnectAck(msg.Result);
			}
		}

		// Token: 0x060078E0 RID: 30944 RVA: 0x002121D0 File Offset: 0x002103D0
		private void OnMessage(ArenaBattleReportNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaBattleReportNtf_hotfix != null)
			{
				this.m_OnMessageArenaBattleReportNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_arenaComponent.IsEmptyArenaPlayerInfo())
			{
				return;
			}
			ArenaBattleReport arenaBattleReport = ArenaBattleReport.PBArenaBattleReportToArenaBattleReport(ntf.BattleReport, false);
			this.m_arenaComponent.AddArenaBattleReport(arenaBattleReport);
			this.m_arenaComponent.SetArenaLevelIdAndPoints(ntf.ArenaLevelId, (ushort)ntf.ArenaPoints);
			if (this.EventOnArenaBattleReportNtf != null)
			{
				this.EventOnArenaBattleReportNtf();
			}
		}

		// Token: 0x060078E1 RID: 30945 RVA: 0x00212298 File Offset: 0x00210498
		private void OnMessage(ArenaFlushOpponentsNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaFlushOpponentsNtf_hotfix != null)
			{
				this.m_OnMessageArenaFlushOpponentsNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return;
			}
			this.m_arenaComponent.FlushOpponents(msg.Opponents, msg.NextFlushOpponentTime);
			if (this.EventOnArenaFlushOpponentsNtf != null)
			{
				this.EventOnArenaFlushOpponentsNtf();
			}
		}

		// Token: 0x060078E2 RID: 30946 RVA: 0x00212344 File Offset: 0x00210544
		private bool IsEmptyArenaPlayerInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsEmptyArenaPlayerInfo_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsEmptyArenaPlayerInfo_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.IsEmptyArenaPlayerInfo();
		}

		// Token: 0x060078E3 RID: 30947 RVA: 0x002123BC File Offset: 0x002105BC
		public bool IsNeedGetArenaPlayerInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsNeedGetArenaPlayerInfo_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsNeedGetArenaPlayerInfo_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaPlayerInfo arenaPlayerInfo = this.m_arenaComponent.GetArenaPlayerInfo();
			return arenaPlayerInfo == null || this.m_isNeedGetArenaPlayerInfo;
		}

		// Token: 0x060078E4 RID: 30948 RVA: 0x00212448 File Offset: 0x00210648
		public int GetPlayerArenaLevelId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerArenaLevelId_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerArenaLevelId_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return 0;
			}
			return this.m_arenaComponent.GetArenaPlayerInfo().ArenaLevelId;
		}

		// Token: 0x060078E5 RID: 30949 RVA: 0x002124D4 File Offset: 0x002106D4
		public int GetPlayerArenaPoints()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerArenaPoints_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerArenaPoints_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return 0;
			}
			return (int)this.m_arenaComponent.GetArenaPlayerInfo().ArenaPoints;
		}

		// Token: 0x060078E6 RID: 30950 RVA: 0x00212560 File Offset: 0x00210760
		public int GetPlayerArenaVictoryPoints()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerArenaVictoryPoints_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerArenaVictoryPoints_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return 0;
			}
			return this.m_arenaComponent.GetArenaPlayerInfo().VictoryPoints;
		}

		// Token: 0x060078E7 RID: 30951 RVA: 0x002125EC File Offset: 0x002107EC
		public int GetArenaThisWeekVictoryNums()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaThisWeekVictoryNums_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetArenaThisWeekVictoryNums_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.GetArenaPlayerInfo().ThisWeekVictoryNums;
		}

		// Token: 0x060078E8 RID: 30952 RVA: 0x00212668 File Offset: 0x00210868
		public int GetArenaThisWeekTotalBattleNums()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaThisWeekTotalBattleNums_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetArenaThisWeekTotalBattleNums_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.GetArenaPlayerInfo().ThisWeekTotalBattleNums;
		}

		// Token: 0x060078E9 RID: 30953 RVA: 0x002126E4 File Offset: 0x002108E4
		public bool IsArenaAutoBattle()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsArenaAutoBattle_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsArenaAutoBattle_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.GetArenaPlayerInfo() != null && this.m_arenaComponent.GetArenaPlayerInfo().IsAutoBattle;
		}

		// Token: 0x060078EA RID: 30954 RVA: 0x00212774 File Offset: 0x00210974
		public int GetArenaTicketCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaTicketCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetArenaTicketCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().ArenaTickets;
		}

		// Token: 0x060078EB RID: 30955 RVA: 0x002127F0 File Offset: 0x002109F0
		public int GetArenaHonour()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaHonour_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetArenaHonour_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().ArenaHonour;
		}

		// Token: 0x060078EC RID: 30956 RVA: 0x0021286C File Offset: 0x00210A6C
		public int CanGetArenaVictoryPointsReward(int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGetArenaVictoryPointsRewardInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanGetArenaVictoryPointsRewardInt32_hotfix.call(new object[]
				{
					this,
					id
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.CanGetVictoryPointsReward(id);
		}

		// Token: 0x060078ED RID: 30957 RVA: 0x002128F4 File Offset: 0x00210AF4
		public GainRewardStatus GetArenaVictoryPointsRewardStatus(int index)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaVictoryPointsRewardStatusInt32_hotfix != null)
			{
				return (GainRewardStatus)this.m_GetArenaVictoryPointsRewardStatusInt32_hotfix.call(new object[]
				{
					this,
					index
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = this.CanGetArenaVictoryPointsReward(index);
			if (num == -2012)
			{
				return GainRewardStatus.Got;
			}
			if (num == 0)
			{
				return GainRewardStatus.CanGet;
			}
			return GainRewardStatus.CanNotGet;
		}

		// Token: 0x060078EE RID: 30958 RVA: 0x00212990 File Offset: 0x00210B90
		public List<int> GetArenaThisWeekDefendBattleIds()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaThisWeekDefendBattleIds_hotfix != null)
			{
				return (List<int>)this.m_GetArenaThisWeekDefendBattleIds_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return null;
			}
			return this.m_arenaComponent.GetArenaPlayerInfo().ThisWeekBattleIds;
		}

		// Token: 0x060078EF RID: 30959 RVA: 0x00212A1C File Offset: 0x00210C1C
		public int CanAttackArenaOpponent()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackArenaOpponent_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackArenaOpponent_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.CanAttackOpponentByClient();
		}

		// Token: 0x060078F0 RID: 30960 RVA: 0x00212A94 File Offset: 0x00210C94
		public int CanRevengeArenaOpponent(ulong battleReportInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanRevengeArenaOpponentUInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanRevengeArenaOpponentUInt64_hotfix.call(new object[]
				{
					this,
					battleReportInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.CanRevengeOpponent(battleReportInstanceId);
		}

		// Token: 0x060078F1 RID: 30961 RVA: 0x00212B1C File Offset: 0x00210D1C
		public List<ArenaOpponent> GetArenaOpponents()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaOpponents_hotfix != null)
			{
				return (List<ArenaOpponent>)this.m_GetArenaOpponents_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return null;
			}
			return this.m_arenaComponent.GetArenaPlayerInfo().Opponents;
		}

		// Token: 0x060078F2 RID: 30962 RVA: 0x00212BA8 File Offset: 0x00210DA8
		public DateTime GetArenaOpponentNextFlushTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaOpponentNextFlushTime_hotfix != null)
			{
				return (DateTime)this.m_GetArenaOpponentNextFlushTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return DateTime.MinValue;
			}
			return new DateTime(this.m_arenaComponent.GetArenaPlayerInfo().NextFlushOpponentTime);
		}

		// Token: 0x060078F3 RID: 30963 RVA: 0x00212C3C File Offset: 0x00210E3C
		public ArenaOpponentDefensiveBattleInfo GetArenaOpponentDefensiveBattleInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaOpponentDefensiveBattleInfo_hotfix != null)
			{
				return (ArenaOpponentDefensiveBattleInfo)this.m_GetArenaOpponentDefensiveBattleInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return null;
			}
			return this.m_arenaComponent.GetArenaPlayerInfo().OpponentDefensiveBattleInfo;
		}

		// Token: 0x060078F4 RID: 30964 RVA: 0x00212CC8 File Offset: 0x00210EC8
		public ArenaPlayerDefensiveTeam GetArenaPlayerDefensiveTeam()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaPlayerDefensiveTeam_hotfix != null)
			{
				return (ArenaPlayerDefensiveTeam)this.m_GetArenaPlayerDefensiveTeam_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyArenaPlayerInfo())
			{
				return null;
			}
			return this.m_arenaComponent.GetArenaPlayerInfo().DefensiveTeam;
		}

		// Token: 0x060078F5 RID: 30965 RVA: 0x00212D54 File Offset: 0x00210F54
		public bool IsArenaInSettleTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsArenaInSettleTime_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsArenaInSettleTime_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.IsInSettleCacheTime();
		}

		// Token: 0x060078F6 RID: 30966 RVA: 0x00212DCC File Offset: 0x00210FCC
		public List<ArenaBattleReport> GetAllArenaBattleReports()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllArenaBattleReports_hotfix != null)
			{
				return (List<ArenaBattleReport>)this.m_GetAllArenaBattleReports_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.GetAllArenaBattleReports();
		}

		// Token: 0x060078F7 RID: 30967 RVA: 0x00212E44 File Offset: 0x00211044
		private int GetArenaPointChangeValue(ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaPointChangeValueUInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetArenaPointChangeValueUInt64_hotfix.call(new object[]
				{
					this,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaBattleReport arenaBattleReport = this.m_arenaComponent.GetArenaBattleReport(instanceId);
			if (arenaBattleReport != null)
			{
				if (this.IsMe(arenaBattleReport.AttackerUserId))
				{
					return arenaBattleReport.AttackerGotArenaPoints;
				}
				if (this.IsMe(arenaBattleReport.DefenderUserId))
				{
					return arenaBattleReport.DefenderGotArenaPoints;
				}
			}
			return 0;
		}

		// Token: 0x060078F8 RID: 30968 RVA: 0x00212F04 File Offset: 0x00211104
		public int GetPlayerArenaRank()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerArenaRank_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerArenaRank_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerArenaRank;
		}

		// Token: 0x060078F9 RID: 30969 RVA: 0x00212F78 File Offset: 0x00211178
		public List<ProArenaTopRankPlayer> GetArenaTopRankPlayers()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaTopRankPlayers_hotfix != null)
			{
				return (List<ProArenaTopRankPlayer>)this.m_GetArenaTopRankPlayers_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaTopRankPlayers;
		}

		// Token: 0x060078FA RID: 30970 RVA: 0x00212FEC File Offset: 0x002111EC
		public int CanReconnectArenaBattle()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanReconnectArenaBattle_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanReconnectArenaBattle_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.CanReconnectArenaBattle();
		}

		// Token: 0x1400006D RID: 109
		// (add) Token: 0x060078FB RID: 30971 RVA: 0x00213064 File Offset: 0x00211264
		// (remove) Token: 0x060078FC RID: 30972 RVA: 0x00213100 File Offset: 0x00211300
		public event Action<int> EventOnArenaPlayerInfoGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaPlayerInfoGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaPlayerInfoGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaPlayerInfoGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaPlayerInfoGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaPlayerInfoGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaPlayerInfoGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaPlayerInfoGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaPlayerInfoGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400006E RID: 110
		// (add) Token: 0x060078FD RID: 30973 RVA: 0x0021319C File Offset: 0x0021139C
		// (remove) Token: 0x060078FE RID: 30974 RVA: 0x00213238 File Offset: 0x00211438
		public event Action<int, List<ProBattleHero>, int> EventOnArenaOpponentViewAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaOpponentViewAckAction`3_hotfix != null)
				{
					this.m_add_EventOnArenaOpponentViewAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<ProBattleHero>, int> action = this.EventOnArenaOpponentViewAck;
				Action<int, List<ProBattleHero>, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<ProBattleHero>, int>>(ref this.EventOnArenaOpponentViewAck, (Action<int, List<ProBattleHero>, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaOpponentViewAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnArenaOpponentViewAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<ProBattleHero>, int> action = this.EventOnArenaOpponentViewAck;
				Action<int, List<ProBattleHero>, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<ProBattleHero>, int>>(ref this.EventOnArenaOpponentViewAck, (Action<int, List<ProBattleHero>, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400006F RID: 111
		// (add) Token: 0x060078FF RID: 30975 RVA: 0x002132D4 File Offset: 0x002114D4
		// (remove) Token: 0x06007900 RID: 30976 RVA: 0x00213370 File Offset: 0x00211570
		public event Action<int> EventOnArenaOpponentAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaOpponentAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaOpponentAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaOpponentAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaOpponentAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaOpponentAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaOpponentAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaOpponentAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaOpponentAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000070 RID: 112
		// (add) Token: 0x06007901 RID: 30977 RVA: 0x0021340C File Offset: 0x0021160C
		// (remove) Token: 0x06007902 RID: 30978 RVA: 0x002134A8 File Offset: 0x002116A8
		public event Action<int, ProArenaOpponent, List<ProBattleHero>, int> EventOnArenaRevengeOpponentGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaRevengeOpponentGetAckAction`4_hotfix != null)
				{
					this.m_add_EventOnArenaRevengeOpponentGetAckAction`4_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProArenaOpponent, List<ProBattleHero>, int> action = this.EventOnArenaRevengeOpponentGetAck;
				Action<int, ProArenaOpponent, List<ProBattleHero>, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProArenaOpponent, List<ProBattleHero>, int>>(ref this.EventOnArenaRevengeOpponentGetAck, (Action<int, ProArenaOpponent, List<ProBattleHero>, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaRevengeOpponentGetAckAction`4_hotfix != null)
				{
					this.m_remove_EventOnArenaRevengeOpponentGetAckAction`4_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProArenaOpponent, List<ProBattleHero>, int> action = this.EventOnArenaRevengeOpponentGetAck;
				Action<int, ProArenaOpponent, List<ProBattleHero>, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProArenaOpponent, List<ProBattleHero>, int>>(ref this.EventOnArenaRevengeOpponentGetAck, (Action<int, ProArenaOpponent, List<ProBattleHero>, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000071 RID: 113
		// (add) Token: 0x06007903 RID: 30979 RVA: 0x00213544 File Offset: 0x00211744
		// (remove) Token: 0x06007904 RID: 30980 RVA: 0x002135E0 File Offset: 0x002117E0
		public event Action<int> EventOnArenaOpponentRevengeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaOpponentRevengeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaOpponentRevengeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaOpponentRevengeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaOpponentRevengeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaOpponentRevengeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaOpponentRevengeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaOpponentRevengeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaOpponentRevengeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000072 RID: 114
		// (add) Token: 0x06007905 RID: 30981 RVA: 0x0021367C File Offset: 0x0021187C
		// (remove) Token: 0x06007906 RID: 30982 RVA: 0x00213718 File Offset: 0x00211918
		public event Action<int> EventOnArenaOpponentAttackFightingAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaOpponentAttackFightingAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaOpponentAttackFightingAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaOpponentAttackFightingAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaOpponentAttackFightingAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaOpponentAttackFightingAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaOpponentAttackFightingAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaOpponentAttackFightingAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaOpponentAttackFightingAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000073 RID: 115
		// (add) Token: 0x06007907 RID: 30983 RVA: 0x002137B4 File Offset: 0x002119B4
		// (remove) Token: 0x06007908 RID: 30984 RVA: 0x00213850 File Offset: 0x00211A50
		public event Action<int, BattleReward, bool> EventOnArenaBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnArenaBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward, bool> action = this.EventOnArenaBattleFinishedAck;
				Action<int, BattleReward, bool> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward, bool>>(ref this.EventOnArenaBattleFinishedAck, (Action<int, BattleReward, bool>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnArenaBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward, bool> action = this.EventOnArenaBattleFinishedAck;
				Action<int, BattleReward, bool> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward, bool>>(ref this.EventOnArenaBattleFinishedAck, (Action<int, BattleReward, bool>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000074 RID: 116
		// (add) Token: 0x06007909 RID: 30985 RVA: 0x002138EC File Offset: 0x00211AEC
		// (remove) Token: 0x0600790A RID: 30986 RVA: 0x00213988 File Offset: 0x00211B88
		public event Action<int> EventOnArenaPlayerSetDefensiveTeamAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaPlayerSetDefensiveTeamAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaPlayerSetDefensiveTeamAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaPlayerSetDefensiveTeamAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaPlayerSetDefensiveTeamAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaPlayerSetDefensiveTeamAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaPlayerSetDefensiveTeamAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaPlayerSetDefensiveTeamAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaPlayerSetDefensiveTeamAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000075 RID: 117
		// (add) Token: 0x0600790B RID: 30987 RVA: 0x00213A24 File Offset: 0x00211C24
		// (remove) Token: 0x0600790C RID: 30988 RVA: 0x00213AC0 File Offset: 0x00211CC0
		public event Action<int, BattleReward> EventOnArenaVictoryPointsRewardGainAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaVictoryPointsRewardGainAckAction`2_hotfix != null)
				{
					this.m_add_EventOnArenaVictoryPointsRewardGainAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnArenaVictoryPointsRewardGainAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnArenaVictoryPointsRewardGainAck, (Action<int, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaVictoryPointsRewardGainAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnArenaVictoryPointsRewardGainAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnArenaVictoryPointsRewardGainAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnArenaVictoryPointsRewardGainAck, (Action<int, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000076 RID: 118
		// (add) Token: 0x0600790D RID: 30989 RVA: 0x00213B5C File Offset: 0x00211D5C
		// (remove) Token: 0x0600790E RID: 30990 RVA: 0x00213BF8 File Offset: 0x00211DF8
		public event Action<int> EventOnArenaBattleReportBasicDataGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaBattleReportBasicDataGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaBattleReportBasicDataGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaBattleReportBasicDataGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaBattleReportBasicDataGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaBattleReportBasicDataGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaBattleReportBasicDataGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaBattleReportBasicDataGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaBattleReportBasicDataGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000077 RID: 119
		// (add) Token: 0x0600790F RID: 30991 RVA: 0x00213C94 File Offset: 0x00211E94
		// (remove) Token: 0x06007910 RID: 30992 RVA: 0x00213D30 File Offset: 0x00211F30
		public event Action<int> EventOnArenaBattleReportPlayBackDataGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaBattleReportPlayBackDataGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaBattleReportPlayBackDataGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaBattleReportPlayBackDataGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaBattleReportPlayBackDataGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaBattleReportPlayBackDataGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaBattleReportPlayBackDataGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaBattleReportPlayBackDataGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaBattleReportPlayBackDataGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000078 RID: 120
		// (add) Token: 0x06007911 RID: 30993 RVA: 0x00213DCC File Offset: 0x00211FCC
		// (remove) Token: 0x06007912 RID: 30994 RVA: 0x00213E68 File Offset: 0x00212068
		public event Action<int> EventOnArenaTopRankPlayersGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaTopRankPlayersGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaTopRankPlayersGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaTopRankPlayersGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaTopRankPlayersGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaTopRankPlayersGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaTopRankPlayersGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaTopRankPlayersGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaTopRankPlayersGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000079 RID: 121
		// (add) Token: 0x06007913 RID: 30995 RVA: 0x00213F04 File Offset: 0x00212104
		// (remove) Token: 0x06007914 RID: 30996 RVA: 0x00213FA0 File Offset: 0x002121A0
		public event Action<int> EventOnArenaBattleReconnectAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaBattleReconnectAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaBattleReconnectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaBattleReconnectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaBattleReconnectAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaBattleReconnectAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaBattleReconnectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaBattleReconnectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaBattleReconnectAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400007A RID: 122
		// (add) Token: 0x06007915 RID: 30997 RVA: 0x0021403C File Offset: 0x0021223C
		// (remove) Token: 0x06007916 RID: 30998 RVA: 0x002140D8 File Offset: 0x002122D8
		public event Action EventOnArenaBattleReportNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaBattleReportNtfAction_hotfix != null)
				{
					this.m_add_EventOnArenaBattleReportNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnArenaBattleReportNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnArenaBattleReportNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaBattleReportNtfAction_hotfix != null)
				{
					this.m_remove_EventOnArenaBattleReportNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnArenaBattleReportNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnArenaBattleReportNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400007B RID: 123
		// (add) Token: 0x06007917 RID: 30999 RVA: 0x00214174 File Offset: 0x00212374
		// (remove) Token: 0x06007918 RID: 31000 RVA: 0x00214210 File Offset: 0x00212410
		public event Action EventOnArenaFlushOpponentsNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaFlushOpponentsNtfAction_hotfix != null)
				{
					this.m_add_EventOnArenaFlushOpponentsNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnArenaFlushOpponentsNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnArenaFlushOpponentsNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaFlushOpponentsNtfAction_hotfix != null)
				{
					this.m_remove_EventOnArenaFlushOpponentsNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnArenaFlushOpponentsNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnArenaFlushOpponentsNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007919 RID: 31001 RVA: 0x002142AC File Offset: 0x002124AC
		public bool SendUseBagItemReq(GoodsType goodsType, int id, int count, int selectedIndex = -1)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUseBagItemReqGoodsTypeInt32Int32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUseBagItemReqGoodsTypeInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					goodsType,
					id,
					count,
					selectedIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new UseBagItemReq
			{
				ItemType = (int)goodsType,
				ItemId = id,
				Nums = count,
				SelectedIndex = selectedIndex
			});
		}

		// Token: 0x0600791A RID: 31002 RVA: 0x00214384 File Offset: 0x00212584
		public bool SendSellBagItemReq(ulong instanceId, int count)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendSellBagItemReqUInt64Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendSellBagItemReqUInt64Int32_hotfix.call(new object[]
				{
					this,
					instanceId,
					count
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new SellBagItemReq
			{
				InstanceId = instanceId,
				Nums = count
			});
		}

		// Token: 0x0600791B RID: 31003 RVA: 0x0021442C File Offset: 0x0021262C
		public bool SendLockAndUnLockEquipmentReq(ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLockAndUnLockEquipmentReqUInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLockAndUnLockEquipmentReqUInt64_hotfix.call(new object[]
				{
					this,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentLockAndUnLockReq msg = new EquipmentLockAndUnLockReq
			{
				InstanceId = instanceId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x0600791C RID: 31004 RVA: 0x002144C0 File Offset: 0x002126C0
		public bool SendEquipmentEnhanceReq(ulong instanceId, List<ulong> materialIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendEquipmentEnhanceReqUInt64List`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendEquipmentEnhanceReqUInt64List`1_hotfix.call(new object[]
				{
					this,
					instanceId,
					materialIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentEnhanceReq equipmentEnhanceReq = new EquipmentEnhanceReq
			{
				InstanceId = instanceId
			};
			equipmentEnhanceReq.MaterialIds.AddRange(materialIds);
			return this.SendMessage(equipmentEnhanceReq);
		}

		// Token: 0x0600791D RID: 31005 RVA: 0x00214570 File Offset: 0x00212770
		public bool SendEquipmentStarLevelUpReq(ulong instanceId, ulong materialId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendEquipmentStarLevelUpReqUInt64UInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendEquipmentStarLevelUpReqUInt64UInt64_hotfix.call(new object[]
				{
					this,
					instanceId,
					materialId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentStarLevelUpReq msg = new EquipmentStarLevelUpReq
			{
				InstanceId = instanceId,
				MaterialId = materialId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x0600791E RID: 31006 RVA: 0x0021461C File Offset: 0x0021281C
		public bool SendBagItemDecomposeReq(List<ProGoods> goods)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBagItemDecomposeReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBagItemDecomposeReqList`1_hotfix.call(new object[]
				{
					this,
					goods
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BagItemDecomposeReq bagItemDecomposeReq = new BagItemDecomposeReq();
			bagItemDecomposeReq.Goods.AddRange(goods);
			return this.SendMessage(bagItemDecomposeReq);
		}

		// Token: 0x0600791F RID: 31007 RVA: 0x002146B4 File Offset: 0x002128B4
		public bool SendEquipmentEnchantReq(ulong equipmentInstanceId, ulong enchantStoneInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendEquipmentEnchantReqUInt64UInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendEquipmentEnchantReqUInt64UInt64_hotfix.call(new object[]
				{
					this,
					equipmentInstanceId,
					enchantStoneInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentEnchantReq msg = new EquipmentEnchantReq
			{
				EquipmentInstanceId = equipmentInstanceId,
				EnchantStoneInstanceId = enchantStoneInstanceId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007920 RID: 31008 RVA: 0x00214760 File Offset: 0x00212960
		public bool SendEquipmentEnchantSaveReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendEquipmentEnchantSaveReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendEquipmentEnchantSaveReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentEnchantSaveReq msg = new EquipmentEnchantSaveReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007921 RID: 31009 RVA: 0x002147DC File Offset: 0x002129DC
		private void OnMessage(DSBagNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSBagNtf_hotfix != null)
			{
				this.m_OnMessageDSBagNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_bagComponent.DeSerialize(msg);
		}

		// Token: 0x06007922 RID: 31010 RVA: 0x00214858 File Offset: 0x00212A58
		private void OnMessage(DSBagExtraNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSBagExtraNtf_hotfix != null)
			{
				this.m_OnMessageDSBagExtraNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_bagComponent.DeSerialize(msg);
		}

		// Token: 0x06007923 RID: 31011 RVA: 0x002148D4 File Offset: 0x00212AD4
		private void OnMessage(UseBagItemAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUseBagItemAck_hotfix != null)
			{
				this.m_OnMessageUseBagItemAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_bagComponent.UseBagItem((GoodsType)msg.ItemType, msg.ItemId, msg.ReqNums, new object[0]);
				if (num != msg.Nums)
				{
					this.DataError(-501);
				}
				if (this.NeedUpdatePlayerResource((GoodsType)msg.ItemType, msg.ItemId) && this.EventOnPlayerInfoChangeNtf != null)
				{
					this.EventOnPlayerInfoChangeNtf();
				}
			}
			if (this.EventOnUseBagItemAck != null)
			{
				this.EventOnUseBagItemAck(msg.Result, list);
			}
		}

		// Token: 0x06007924 RID: 31012 RVA: 0x00214A04 File Offset: 0x00212C04
		private void OnMessage(SellBagItemAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageSellBagItemAck_hotfix != null)
			{
				this.m_OnMessageSellBagItemAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_bagComponent.SellBagItem(msg.InstanceId, msg.ReqNums);
				if (num != msg.Nums)
				{
					this.DataError(-501);
				}
			}
			if (this.EventOnSellBagItemAck != null)
			{
				this.EventOnSellBagItemAck(msg.Result);
			}
		}

		// Token: 0x06007925 RID: 31013 RVA: 0x00214ACC File Offset: 0x00212CCC
		private void OnMessage(EquipmentLockAndUnLockAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentLockAndUnLockAck_hotfix != null)
			{
				this.m_OnMessageEquipmentLockAndUnLockAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_bagComponent.LockAndUnLockEquipment(msg.InstanceId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnEquipmentLockAndUnLockAck != null)
			{
				this.EventOnEquipmentLockAndUnLockAck(msg.Result);
			}
		}

		// Token: 0x06007926 RID: 31014 RVA: 0x00214B84 File Offset: 0x00212D84
		private void OnMessage(EquipmentEnhanceAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentEnhanceAck_hotfix != null)
			{
				this.m_OnMessageEquipmentEnhanceAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_bagComponent.EnhanceEquipment(msg.InstanceId, msg.MaterialIds);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnEquipmentEnhanceAck != null)
			{
				this.EventOnEquipmentEnhanceAck(msg.Result);
			}
		}

		// Token: 0x06007927 RID: 31015 RVA: 0x00214C40 File Offset: 0x00212E40
		private void OnMessage(EquipmentStarLevelUpAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentStarLevelUpAck_hotfix != null)
			{
				this.m_OnMessageEquipmentStarLevelUpAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_bagComponent.LevelUpEquipmentStar(msg.InstanceId, msg.MaterialId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnEquipmentStarLevelUpAck != null)
			{
				this.EventOnEquipmentStarLevelUpAck(msg.Result);
			}
		}

		// Token: 0x06007928 RID: 31016 RVA: 0x00214CFC File Offset: 0x00212EFC
		private void OnMessage(BagItemDecomposeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBagItemDecomposeAck_hotfix != null)
			{
				this.m_OnMessageBagItemDecomposeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_bagComponent.DecomposeBagItems(msg.Goods);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnBagItemDecomposeAck != null)
			{
				this.EventOnBagItemDecomposeAck(msg.Result, list);
			}
		}

		// Token: 0x06007929 RID: 31017 RVA: 0x00214DE4 File Offset: 0x00212FE4
		private void OnMessage(EquipmentEnchantAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentEnchantAck_hotfix != null)
			{
				this.m_OnMessageEquipmentEnchantAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<CommonBattleProperty> list = null;
			if (msg.Result == 0)
			{
				list = new List<CommonBattleProperty>();
				foreach (ProCommonBattleProperty pbProperty in msg.NewEnchantProperties)
				{
					list.Add(CommonBattleProperty.PBCommonBattlePropertyToCommonBattleProperty(pbProperty));
				}
				int num = this.m_bagComponent.EnchantEquipment(msg.EquipmentInstanceId, msg.EnchantStoneInstanceId);
				if (num != 0)
				{
					this.DataError(num);
				}
				BagItemBase bagItemBase = this.m_bagComponent.FindBagItemByInstanceId(msg.EquipmentInstanceId);
				this.m_bagComponent.OnEnchantMissionEvent(bagItemBase as EquipmentBagItem);
			}
			if (this.EventOnEquipmentEnchantAck != null)
			{
				this.EventOnEquipmentEnchantAck(msg.Result, msg.NewResonanceId, list);
			}
		}

		// Token: 0x0600792A RID: 31018 RVA: 0x00214F28 File Offset: 0x00213128
		private void OnMessage(EquipmentEnchantSaveAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentEnchantSaveAck_hotfix != null)
			{
				this.m_OnMessageEquipmentEnchantSaveAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentBagItem equipmentBagItem = null;
			if (msg.Result == 0)
			{
				equipmentBagItem = (this.SetBagItemPropertyChanges(msg.Equipment) as EquipmentBagItem);
				this.m_bagComponent.OnSaveEnchantSaveMissionEvent(equipmentBagItem);
			}
			if (this.EventOnEquipmentEnchantSaveAck != null)
			{
				this.EventOnEquipmentEnchantSaveAck(msg.Result, equipmentBagItem);
			}
		}

		// Token: 0x0600792B RID: 31019 RVA: 0x00214FE0 File Offset: 0x002131E0
		public int CanEnchantEquipment(ulong equipmentInstanceId, ulong enchantStoneInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanEnchantEquipmentUInt64UInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanEnchantEquipmentUInt64UInt64_hotfix.call(new object[]
				{
					this,
					equipmentInstanceId,
					enchantStoneInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CanEnchantEquipment(equipmentInstanceId, enchantStoneInstanceId);
		}

		// Token: 0x0600792C RID: 31020 RVA: 0x0021507C File Offset: 0x0021327C
		public List<BagItemBase> GetBagItems()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItems_hotfix != null)
			{
				return (List<BagItemBase>)this.m_GetBagItems_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.GetAllBagItems();
		}

		// Token: 0x0600792D RID: 31021 RVA: 0x002150F4 File Offset: 0x002132F4
		public int GetBagSize()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagSize_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBagSize_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.GetBagSize();
		}

		// Token: 0x0600792E RID: 31022 RVA: 0x0021516C File Offset: 0x0021336C
		public BagItemBase GetBagItem(GoodsType goodsType, int id, ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItemGoodsTypeInt32UInt64_hotfix != null)
			{
				return (BagItemBase)this.m_GetBagItemGoodsTypeInt32UInt64_hotfix.call(new object[]
				{
					this,
					goodsType,
					id,
					instanceId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.FindBagItem(goodsType, id, instanceId);
		}

		// Token: 0x0600792F RID: 31023 RVA: 0x00215218 File Offset: 0x00213418
		public BagItemBase GetBagItemByType(GoodsType goodsType, int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItemByTypeGoodsTypeInt32_hotfix != null)
			{
				return (BagItemBase)this.m_GetBagItemByTypeGoodsTypeInt32_hotfix.call(new object[]
				{
					this,
					goodsType,
					id
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.FindBagItemByType(goodsType, id);
		}

		// Token: 0x06007930 RID: 31024 RVA: 0x002152B4 File Offset: 0x002134B4
		public bool IsExistBagItemIgnoreInstanceDifference(GoodsType goodsType, int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsExistBagItemIgnoreInstanceDifferenceGoodsTypeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsExistBagItemIgnoreInstanceDifferenceGoodsTypeInt32_hotfix.call(new object[]
				{
					this,
					goodsType,
					id
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.IsExistBagItemIgnoreInstanceDifference(goodsType, id);
		}

		// Token: 0x06007931 RID: 31025 RVA: 0x00215350 File Offset: 0x00213550
		public BagItemBase GetBagItemByInstanceId(ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItemByInstanceIdUInt64_hotfix != null)
			{
				return (BagItemBase)this.m_GetBagItemByInstanceIdUInt64_hotfix.call(new object[]
				{
					this,
					instanceId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.FindBagItemByInstanceId(instanceId);
		}

		// Token: 0x06007932 RID: 31026 RVA: 0x002153D8 File Offset: 0x002135D8
		public int GetBagItemCount(GoodsType goodsType, int id, ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItemCountGoodsTypeInt32UInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBagItemCountGoodsTypeInt32UInt64_hotfix.call(new object[]
				{
					this,
					goodsType,
					id,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BagItemBase bagItem = this.GetBagItem(goodsType, id, instanceId);
			if (bagItem != null)
			{
				return bagItem.Nums;
			}
			return 0;
		}

		// Token: 0x06007933 RID: 31027 RVA: 0x0021548C File Offset: 0x0021368C
		public int GetBagItemCountByType(GoodsType goodsType, int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItemCountByTypeGoodsTypeInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBagItemCountByTypeGoodsTypeInt32_hotfix.call(new object[]
				{
					this,
					goodsType,
					id
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BagItemBase bagItemByType = this.GetBagItemByType(goodsType, id);
			if (bagItemByType != null)
			{
				return bagItemByType.Nums;
			}
			return 0;
		}

		// Token: 0x06007934 RID: 31028 RVA: 0x00215530 File Offset: 0x00213730
		public int GetBagItemCountByTypeAndID(GoodsType goodsType, int goodsID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItemCountByTypeAndIDGoodsTypeInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBagItemCountByTypeAndIDGoodsTypeInt32_hotfix.call(new object[]
				{
					this,
					goodsType,
					goodsID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.GetBagItemNums(goodsType, goodsID);
		}

		// Token: 0x06007935 RID: 31029 RVA: 0x002155CC File Offset: 0x002137CC
		public List<ulong> GetInstanceBagItemInstanceIdsByContentId(int contentId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetInstanceBagItemInstanceIdsByContentIdInt32_hotfix != null)
			{
				return (List<ulong>)this.m_GetInstanceBagItemInstanceIdsByContentIdInt32_hotfix.call(new object[]
				{
					this,
					contentId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.GetInstanceBagItemInstanceIdsByContentId(contentId);
		}

		// Token: 0x06007936 RID: 31030 RVA: 0x00215654 File Offset: 0x00213854
		public int GetBagItemCountByInstanceId(ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBagItemCountByInstanceIdUInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBagItemCountByInstanceIdUInt64_hotfix.call(new object[]
				{
					this,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BagItemBase bagItemByInstanceId = this.GetBagItemByInstanceId(instanceId);
			if (bagItemByInstanceId != null)
			{
				return bagItemByInstanceId.Nums;
			}
			return 0;
		}

		// Token: 0x06007937 RID: 31031 RVA: 0x002156E8 File Offset: 0x002138E8
		public int CanUseEnergyMedicine(int itemId, int useCount)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUseEnergyMedicineInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUseEnergyMedicineInt32Int32_hotfix.call(new object[]
				{
					this,
					itemId,
					useCount
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CanUseEnergyMedicine(itemId, useCount);
		}

		// Token: 0x06007938 RID: 31032 RVA: 0x00215784 File Offset: 0x00213984
		public int CalculateEnhanceEquipmentExp(List<ulong> materialIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CalculateEnhanceEquipmentExpList`1_hotfix != null)
			{
				return Convert.ToInt32(this.m_CalculateEnhanceEquipmentExpList`1_hotfix.call(new object[]
				{
					this,
					materialIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ProjectLPlayerContext projectLPlayerContext = GameManager.Instance.PlayerContext as ProjectLPlayerContext;
			List<BagItemBase> list = new List<BagItemBase>();
			foreach (ulong num in materialIds)
			{
				if (num != 0UL)
				{
					BagItemBase bagItemByInstanceId = projectLPlayerContext.GetBagItemByInstanceId(num);
					list.Add(bagItemByInstanceId);
				}
			}
			return this.m_bagComponent.CalculateEnhanceEquipmentExp(list);
		}

		// Token: 0x06007939 RID: 31033 RVA: 0x00215884 File Offset: 0x00213A84
		public int CalculateEnhanceEquipmentGold(int exp)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CalculateEnhanceEquipmentGoldInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CalculateEnhanceEquipmentGoldInt32_hotfix.call(new object[]
				{
					this,
					exp
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CalculateEnhanceEquipmentGold(exp);
		}

		// Token: 0x0600793A RID: 31034 RVA: 0x0021590C File Offset: 0x00213B0C
		public int CaculateEquipmentNextLevelExp(EquipmentBagItem equipment)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CaculateEquipmentNextLevelExpEquipmentBagItem_hotfix != null)
			{
				return Convert.ToInt32(this.m_CaculateEquipmentNextLevelExpEquipmentBagItem_hotfix.call(new object[]
				{
					this,
					equipment
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CaculateEquipmentNextLevelExp(equipment.ContentId, equipment.Level);
		}

		// Token: 0x0600793B RID: 31035 RVA: 0x002159A0 File Offset: 0x00213BA0
		public int CaculateEquipmentNextLevelExp(int contentID, int Level)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CaculateEquipmentNextLevelExpInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CaculateEquipmentNextLevelExpInt32Int32_hotfix.call(new object[]
				{
					this,
					contentID,
					Level
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CaculateEquipmentNextLevelExp(contentID, Level);
		}

		// Token: 0x0600793C RID: 31036 RVA: 0x00215A3C File Offset: 0x00213C3C
		public int CanEnhanceEquipment(ulong instanceId, List<ulong> materialIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanEnhanceEquipmentUInt64List`1_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanEnhanceEquipmentUInt64List`1_hotfix.call(new object[]
				{
					this,
					instanceId,
					materialIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CanEnhanceEquipment(instanceId, materialIds);
		}

		// Token: 0x0600793D RID: 31037 RVA: 0x00215AD8 File Offset: 0x00213CD8
		public int CanLevelUpEquipmentStar(ulong instanceId, ulong materialId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanLevelUpEquipmentStarUInt64UInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanLevelUpEquipmentStarUInt64UInt64_hotfix.call(new object[]
				{
					this,
					instanceId,
					materialId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CanLevelUpEquipmentStar(instanceId, materialId);
		}

		// Token: 0x0600793E RID: 31038 RVA: 0x00215B74 File Offset: 0x00213D74
		public bool IsLevelTicketsMaxInMission(List<Goods> goods)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsLevelTicketsMaxInMissionList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsLevelTicketsMaxInMissionList`1_hotfix.call(new object[]
				{
					this,
					goods
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			foreach (Goods goods2 in goods)
			{
				if (this.m_bagComponent.IsLevelTicketsMaxByUI(GameFunctionType.GameFunctionType_Mission, goods2.GoodsType, goods2.Id, goods2.Count))
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x0600793F RID: 31039 RVA: 0x00215C60 File Offset: 0x00213E60
		public int CalcEquipmentDecomposeReturnGold(EquipmentBagItem equipment)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CalcEquipmentDecomposeReturnGoldEquipmentBagItem_hotfix != null)
			{
				return Convert.ToInt32(this.m_CalcEquipmentDecomposeReturnGoldEquipmentBagItem_hotfix.call(new object[]
				{
					this,
					equipment
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.CalculateDecomposeEquipmentBackGold(equipment);
		}

		// Token: 0x06007940 RID: 31040 RVA: 0x00215CE8 File Offset: 0x00213EE8
		public int GetEquipmentResonanceNums(ulong equipmentInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetEquipmentResonanceNumsUInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetEquipmentResonanceNumsUInt64_hotfix.call(new object[]
				{
					this,
					equipmentInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.GetEquipmentResonanceNums(equipmentInstanceId);
		}

		// Token: 0x06007941 RID: 31041 RVA: 0x00215D70 File Offset: 0x00213F70
		public int GetEquipmentResonanceNumsByHeroId(ulong equipmentInstanceId, int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetEquipmentResonanceNumsByHeroIdUInt64Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetEquipmentResonanceNumsByHeroIdUInt64Int32_hotfix.call(new object[]
				{
					this,
					equipmentInstanceId,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = this.m_bagComponent.GetEquipmentResonanceNumsByHeroId(equipmentInstanceId, heroId);
			Hero wearedEquipmentHero = this.m_heroComponent.GetWearedEquipmentHero(equipmentInstanceId);
			if (wearedEquipmentHero == null)
			{
				num++;
			}
			else if (wearedEquipmentHero.HeroId != heroId)
			{
				num++;
			}
			return num;
		}

		// Token: 0x06007942 RID: 31042 RVA: 0x00215E38 File Offset: 0x00214038
		public int RemoveBagItemByType(GoodsType goodsTypeId, int contentId, int consumeNums, GameFunctionType caseId = GameFunctionType.GameFunctionType_None, string location = null)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_RemoveBagItemByTypeGoodsTypeInt32Int32GameFunctionTypeString_hotfix != null)
			{
				return Convert.ToInt32(this.m_RemoveBagItemByTypeGoodsTypeInt32Int32GameFunctionTypeString_hotfix.call(new object[]
				{
					this,
					goodsTypeId,
					contentId,
					consumeNums,
					caseId,
					location
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.RemoveBagItemByType(goodsTypeId, contentId, consumeNums, caseId, location);
		}

		// Token: 0x06007943 RID: 31043 RVA: 0x00215F08 File Offset: 0x00214108
		public bool IsShowEnchantCancelConfirmPanel()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsShowEnchantCancelConfirmPanel_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsShowEnchantCancelConfirmPanel_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.ShowEnchantCancelConfirmPanel;
		}

		// Token: 0x06007944 RID: 31044 RVA: 0x00215F7C File Offset: 0x0021417C
		public void SetEnchantCancelConfirmFlag(bool isShow)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetEnchantCancelConfirmFlagBoolean_hotfix != null)
			{
				this.m_SetEnchantCancelConfirmFlagBoolean_hotfix.call(new object[]
				{
					this,
					isShow
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.ShowEnchantCancelConfirmPanel = isShow;
		}

		// Token: 0x06007945 RID: 31045 RVA: 0x00215FF4 File Offset: 0x002141F4
		public bool IsShowEnchantSaveConfirmPanel()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsShowEnchantSaveConfirmPanel_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsShowEnchantSaveConfirmPanel_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.ShowEnchantSaveConfirmPanel;
		}

		// Token: 0x06007946 RID: 31046 RVA: 0x00216068 File Offset: 0x00214268
		public void SetEnchantSaveConfirmFlag(bool isShow)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetEnchantSaveConfirmFlagBoolean_hotfix != null)
			{
				this.m_SetEnchantSaveConfirmFlagBoolean_hotfix.call(new object[]
				{
					this,
					isShow
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.ShowEnchantSaveConfirmPanel = isShow;
		}

		// Token: 0x06007947 RID: 31047 RVA: 0x002160E0 File Offset: 0x002142E0
		public bool HasOwn(GoodsType goodsType, int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasOwnGoodsTypeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasOwnGoodsTypeInt32_hotfix.call(new object[]
				{
					this,
					goodsType,
					id
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_bagComponent.HasOwn(goodsType, id);
		}

		// Token: 0x06007948 RID: 31048 RVA: 0x0021617C File Offset: 0x0021437C
		private bool NeedUpdatePlayerResource(GoodsType goodsType, int itemId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_NeedUpdatePlayerResourceGoodsTypeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_NeedUpdatePlayerResourceGoodsTypeInt32_hotfix.call(new object[]
				{
					this,
					goodsType,
					itemId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			bool result = false;
			if (goodsType == GoodsType.GoodsType_Item)
			{
				ConfigDataItemInfo configDataItemInfo = this.m_configDataLoader.GetConfigDataItemInfo(itemId);
				if (configDataItemInfo != null && configDataItemInfo.FuncType == ItemFuncType.ItemFuncType_Energy)
				{
					result = true;
				}
			}
			return result;
		}

		// Token: 0x1400007C RID: 124
		// (add) Token: 0x06007949 RID: 31049 RVA: 0x00216244 File Offset: 0x00214444
		// (remove) Token: 0x0600794A RID: 31050 RVA: 0x002162E0 File Offset: 0x002144E0
		public event Action EventOnBagItemChangeNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBagItemChangeNtfAction_hotfix != null)
				{
					this.m_add_EventOnBagItemChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBagItemChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBagItemChangeNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBagItemChangeNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBagItemChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBagItemChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBagItemChangeNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400007D RID: 125
		// (add) Token: 0x0600794B RID: 31051 RVA: 0x0021637C File Offset: 0x0021457C
		// (remove) Token: 0x0600794C RID: 31052 RVA: 0x00216418 File Offset: 0x00214618
		public event Action<int, List<Goods>> EventOnUseBagItemAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnUseBagItemAckAction`2_hotfix != null)
				{
					this.m_add_EventOnUseBagItemAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnUseBagItemAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnUseBagItemAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnUseBagItemAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnUseBagItemAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnUseBagItemAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnUseBagItemAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400007E RID: 126
		// (add) Token: 0x0600794D RID: 31053 RVA: 0x002164B4 File Offset: 0x002146B4
		// (remove) Token: 0x0600794E RID: 31054 RVA: 0x00216550 File Offset: 0x00214750
		public event Action<int> EventOnSellBagItemAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnSellBagItemAckAction`1_hotfix != null)
				{
					this.m_add_EventOnSellBagItemAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSellBagItemAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSellBagItemAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnSellBagItemAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnSellBagItemAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSellBagItemAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSellBagItemAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400007F RID: 127
		// (add) Token: 0x0600794F RID: 31055 RVA: 0x002165EC File Offset: 0x002147EC
		// (remove) Token: 0x06007950 RID: 31056 RVA: 0x00216688 File Offset: 0x00214888
		public event Action<int> EventOnEquipmentLockAndUnLockAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEquipmentLockAndUnLockAckAction`1_hotfix != null)
				{
					this.m_add_EventOnEquipmentLockAndUnLockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentLockAndUnLockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentLockAndUnLockAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEquipmentLockAndUnLockAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnEquipmentLockAndUnLockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentLockAndUnLockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentLockAndUnLockAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000080 RID: 128
		// (add) Token: 0x06007951 RID: 31057 RVA: 0x00216724 File Offset: 0x00214924
		// (remove) Token: 0x06007952 RID: 31058 RVA: 0x002167C0 File Offset: 0x002149C0
		public event Action<int> EventOnEquipmentEnhanceAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEquipmentEnhanceAckAction`1_hotfix != null)
				{
					this.m_add_EventOnEquipmentEnhanceAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentEnhanceAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentEnhanceAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEquipmentEnhanceAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnEquipmentEnhanceAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentEnhanceAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentEnhanceAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000081 RID: 129
		// (add) Token: 0x06007953 RID: 31059 RVA: 0x0021685C File Offset: 0x00214A5C
		// (remove) Token: 0x06007954 RID: 31060 RVA: 0x002168F8 File Offset: 0x00214AF8
		public event Action<int> EventOnEquipmentStarLevelUpAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEquipmentStarLevelUpAckAction`1_hotfix != null)
				{
					this.m_add_EventOnEquipmentStarLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentStarLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentStarLevelUpAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEquipmentStarLevelUpAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnEquipmentStarLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentStarLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentStarLevelUpAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000082 RID: 130
		// (add) Token: 0x06007955 RID: 31061 RVA: 0x00216994 File Offset: 0x00214B94
		// (remove) Token: 0x06007956 RID: 31062 RVA: 0x00216A30 File Offset: 0x00214C30
		public event Action<int, List<Goods>> EventOnBagItemDecomposeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBagItemDecomposeAckAction`2_hotfix != null)
				{
					this.m_add_EventOnBagItemDecomposeAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnBagItemDecomposeAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnBagItemDecomposeAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBagItemDecomposeAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnBagItemDecomposeAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnBagItemDecomposeAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnBagItemDecomposeAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000083 RID: 131
		// (add) Token: 0x06007957 RID: 31063 RVA: 0x00216ACC File Offset: 0x00214CCC
		// (remove) Token: 0x06007958 RID: 31064 RVA: 0x00216B68 File Offset: 0x00214D68
		public event Action<int, int, List<CommonBattleProperty>> EventOnEquipmentEnchantAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEquipmentEnchantAckAction`3_hotfix != null)
				{
					this.m_add_EventOnEquipmentEnchantAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int, List<CommonBattleProperty>> action = this.EventOnEquipmentEnchantAck;
				Action<int, int, List<CommonBattleProperty>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int, List<CommonBattleProperty>>>(ref this.EventOnEquipmentEnchantAck, (Action<int, int, List<CommonBattleProperty>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEquipmentEnchantAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnEquipmentEnchantAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int, List<CommonBattleProperty>> action = this.EventOnEquipmentEnchantAck;
				Action<int, int, List<CommonBattleProperty>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int, List<CommonBattleProperty>>>(ref this.EventOnEquipmentEnchantAck, (Action<int, int, List<CommonBattleProperty>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000084 RID: 132
		// (add) Token: 0x06007959 RID: 31065 RVA: 0x00216C04 File Offset: 0x00214E04
		// (remove) Token: 0x0600795A RID: 31066 RVA: 0x00216CA0 File Offset: 0x00214EA0
		public event Action<int, EquipmentBagItem> EventOnEquipmentEnchantSaveAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEquipmentEnchantSaveAckAction`2_hotfix != null)
				{
					this.m_add_EventOnEquipmentEnchantSaveAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, EquipmentBagItem> action = this.EventOnEquipmentEnchantSaveAck;
				Action<int, EquipmentBagItem> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, EquipmentBagItem>>(ref this.EventOnEquipmentEnchantSaveAck, (Action<int, EquipmentBagItem>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEquipmentEnchantSaveAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnEquipmentEnchantSaveAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, EquipmentBagItem> action = this.EventOnEquipmentEnchantSaveAck;
				Action<int, EquipmentBagItem> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, EquipmentBagItem>>(ref this.EventOnEquipmentEnchantSaveAck, (Action<int, EquipmentBagItem>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x0600795B RID: 31067 RVA: 0x00216D3C File Offset: 0x00214F3C
		public bool SendBattleCancelReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleCancelReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleCancelReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleCancelReq msg = new BattleCancelReq();
			return this.SendMessage(msg);
		}

		// Token: 0x0600795C RID: 31068 RVA: 0x00216DB8 File Offset: 0x00214FB8
		public bool SendBattleTeamSetReq(BattleType battleType, int battleId, List<int> heroIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleTeamSetReqBattleTypeInt32List`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleTeamSetReqBattleTypeInt32List`1_hotfix.call(new object[]
				{
					this,
					battleType,
					battleId,
					heroIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleTeamSetReq battleTeamSetReq = new BattleTeamSetReq();
			battleTeamSetReq.BattleId = battleId;
			battleTeamSetReq.BattleType = (int)battleType;
			battleTeamSetReq.HeroIds.AddRange(heroIds);
			return this.SendMessage(battleTeamSetReq);
		}

		// Token: 0x0600795D RID: 31069 RVA: 0x00216E7C File Offset: 0x0021507C
		public bool SendBattleArmyRandomSeedGetReq(int battleId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleArmyRandomSeedGetReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleArmyRandomSeedGetReqInt32_hotfix.call(new object[]
				{
					this,
					battleId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new BattleArmyRandomSeedGetReq
			{
				BattleId = battleId
			});
		}

		// Token: 0x0600795E RID: 31070 RVA: 0x00216F0C File Offset: 0x0021510C
		private void OnMessage(DSBattleNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSBattleNtf_hotfix != null)
			{
				this.m_OnMessageDSBattleNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.DeSerialize(msg);
		}

		// Token: 0x0600795F RID: 31071 RVA: 0x00216F88 File Offset: 0x00215188
		private void OnMessage(BattleCancelAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleCancelAck_hotfix != null)
			{
				this.m_OnMessageBattleCancelAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_battleComponent.CancelBattle();
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnBattleCancelAck != null)
			{
				this.EventOnBattleCancelAck(msg.Result);
			}
		}

		// Token: 0x06007960 RID: 31072 RVA: 0x00217038 File Offset: 0x00215238
		private void OnMessage(BattleTeamSetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleTeamSetAck_hotfix != null)
			{
				this.m_OnMessageBattleTeamSetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_battleComponent.SetMineTeam(msg.BattleId, msg.BattleType, msg.HeroIds);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnBattleTeamSetAck != null)
			{
				this.EventOnBattleTeamSetAck(msg.Result);
			}
		}

		// Token: 0x06007961 RID: 31073 RVA: 0x0021711C File Offset: 0x0021531C
		private void OnMessage(BattleArmyRandomSeedGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleArmyRandomSeedGetAck_hotfix != null)
			{
				this.m_OnMessageBattleArmyRandomSeedGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_battleComponent.SetBattleArmyRandomSeed(msg.ArmyRandomSeed);
			}
			if (this.EventOnBattleArmyRandomSeedGetAck != null)
			{
				this.EventOnBattleArmyRandomSeedGetAck(msg.Result);
			}
		}

		// Token: 0x06007962 RID: 31074 RVA: 0x002171C4 File Offset: 0x002153C4
		public bool IsGameFunctionOpenByMonthCard(GameFunctionType gameFuncTypeId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsGameFunctionOpenByMonthCardGameFunctionType_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsGameFunctionOpenByMonthCardGameFunctionType_hotfix.call(new object[]
				{
					this,
					gameFuncTypeId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.IsGameFunctionOpenByMonthCard(gameFuncTypeId);
		}

		// Token: 0x06007963 RID: 31075 RVA: 0x0021724C File Offset: 0x0021544C
		public int GetDailyBonusMaxNums(GameFunctionType gameFuncTypeId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDailyBonusMaxNumsGameFunctionType_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetDailyBonusMaxNumsGameFunctionType_hotfix.call(new object[]
				{
					this,
					gameFuncTypeId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.GetDailyBonusMaxNums(gameFuncTypeId);
		}

		// Token: 0x06007964 RID: 31076 RVA: 0x002172D4 File Offset: 0x002154D4
		public void SetBattleBase(BattleBase battleBase)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetBattleBaseBattleBase_hotfix != null)
			{
				this.m_SetBattleBaseBattleBase_hotfix.call(new object[]
				{
					this,
					battleBase
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.SetBattleBase(battleBase);
		}

		// Token: 0x06007965 RID: 31077 RVA: 0x00217350 File Offset: 0x00215550
		public void SetCurrentBattle(ConfigDataBattleInfo battleInfo, BattleType battleType)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetCurrentBattleConfigDataBattleInfoBattleType_hotfix != null)
			{
				this.m_SetCurrentBattleConfigDataBattleInfoBattleType_hotfix.call(new object[]
				{
					this,
					battleInfo,
					battleType
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentBattle.Clear();
			this.m_currentBattle.BattleInfo = battleInfo;
			this.m_currentBattle.BattleType = battleType;
			this.m_battleRegretCount = this.m_configDataLoader.UtilityGetConfigableConst(ConfigableConstId.ConfigableConstId_BattleRegretCountMax);
		}

		// Token: 0x06007966 RID: 31078 RVA: 0x0021740C File Offset: 0x0021560C
		public void SetCurrentArenaBattle(ConfigDataArenaBattleInfo battleInfo, ConfigDataArenaDefendRuleInfo arenaDefendRule, int defenderPlayerLevel, List<BattleHero> defenderHeros, List<TrainingTech> defenderTechs, bool isRevenge)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetCurrentArenaBattleConfigDataArenaBattleInfoConfigDataArenaDefendRuleInfoInt32List`1List`1Boolean_hotfix != null)
			{
				this.m_SetCurrentArenaBattleConfigDataArenaBattleInfoConfigDataArenaDefendRuleInfoInt32List`1List`1Boolean_hotfix.call(new object[]
				{
					this,
					battleInfo,
					arenaDefendRule,
					defenderPlayerLevel,
					defenderHeros,
					defenderTechs,
					isRevenge
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentBattle.Clear();
			this.m_currentBattle.ArenaBattleInfo = battleInfo;
			this.m_currentBattle.ArenaDefendRuleInfo = arenaDefendRule;
			this.m_currentBattle.ArenaDefenderPlayerLevel = defenderPlayerLevel;
			this.m_currentBattle.ArenaDefenderHeros = defenderHeros;
			this.m_currentBattle.ArenaDefenderTrainTechs = defenderTechs;
			this.m_currentBattle.IsArenaRevenge = isRevenge;
			this.m_currentBattle.BattleType = BattleType.ArenaAttack;
		}

		// Token: 0x06007967 RID: 31079 RVA: 0x00217530 File Offset: 0x00215730
		public void SetCurrentArenaBattleReport(ArenaBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetCurrentArenaBattleReportArenaBattleReport_hotfix != null)
			{
				this.m_SetCurrentArenaBattleReportArenaBattleReport_hotfix.call(new object[]
				{
					this,
					battleReport
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentBattle.ArenaBattleReport = battleReport;
		}

		// Token: 0x06007968 RID: 31080 RVA: 0x002175AC File Offset: 0x002157AC
		public void SetCurrentPVPBattle(ConfigDataPVPBattleInfo battleInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetCurrentPVPBattleConfigDataPVPBattleInfo_hotfix != null)
			{
				this.m_SetCurrentPVPBattleConfigDataPVPBattleInfo_hotfix.call(new object[]
				{
					this,
					battleInfo
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentBattle.Clear();
			this.m_currentBattle.PVPBattleInfo = battleInfo;
			this.m_currentBattle.BattleType = BattleType.PVP;
		}

		// Token: 0x06007969 RID: 31081 RVA: 0x00217640 File Offset: 0x00215840
		public void SetCurrentRealTimePVPBattle(ConfigDataRealTimePVPBattleInfo battleInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetCurrentRealTimePVPBattleConfigDataRealTimePVPBattleInfo_hotfix != null)
			{
				this.m_SetCurrentRealTimePVPBattleConfigDataRealTimePVPBattleInfo_hotfix.call(new object[]
				{
					this,
					battleInfo
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentBattle.Clear();
			this.m_currentBattle.RealTimePVPBattleInfo = battleInfo;
			this.m_currentBattle.BattleType = BattleType.RealTimePVP;
		}

		// Token: 0x0600796A RID: 31082 RVA: 0x002176D4 File Offset: 0x002158D4
		public void SetCurrentRealTimePVPBattleReport(RealTimePVPBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetCurrentRealTimePVPBattleReportRealTimePVPBattleReport_hotfix != null)
			{
				this.m_SetCurrentRealTimePVPBattleReportRealTimePVPBattleReport_hotfix.call(new object[]
				{
					this,
					battleReport
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentBattle.RealTimePVPBattleReport = battleReport;
		}

		// Token: 0x0600796B RID: 31083 RVA: 0x00217750 File Offset: 0x00215950
		public bool IsCurrentBattleFirstBattle()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsCurrentBattleFirstBattle_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsCurrentBattleFirstBattle_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.CurrentBattle.BattleInfo != null)
			{
				if (this.m_firstBattleInfo == null)
				{
					int key = this.m_configDataLoader.UtilityGetConfigableConst(ConfigableConstId.ConfigableConstId_FirstBattleID);
					this.m_firstBattleInfo = this.m_configDataLoader.GetConfigDataBattleInfo(key);
				}
				if (this.m_firstBattleInfo != null)
				{
					if (this.CurrentBattle.BattleInfo.ID == this.m_firstBattleInfo.ID)
					{
						return true;
					}
					if (this.CurrentBattle.BattleInfo.ID == this.m_firstBattleInfo.BeforePerformBattle_ID)
					{
						return true;
					}
					if (this.CurrentBattle.BattleInfo.ID == this.m_firstBattleInfo.AfterPerformBattle_ID)
					{
						return true;
					}
				}
			}
			return false;
		}

		// Token: 0x0600796C RID: 31084 RVA: 0x0021786C File Offset: 0x00215A6C
		public List<int> GetBattleTeam(BattleType battleType)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBattleTeamBattleType_hotfix != null)
			{
				return (List<int>)this.m_GetBattleTeamBattleType_hotfix.call(new object[]
				{
					this,
					battleType
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataGamePlayTeamTypeInfo configDataGamePlayTeamTypeInfo = this.m_configDataLoader.GetConfigDataGamePlayTeamTypeInfo((int)battleType);
			if (configDataGamePlayTeamTypeInfo != null)
			{
				return this.m_battleComponent.GetBattleTeam(configDataGamePlayTeamTypeInfo.TeamType);
			}
			return new List<int>();
		}

		// Token: 0x0600796D RID: 31085 RVA: 0x00217914 File Offset: 0x00215B14
		public BattleHero CreateBattleHeroFromMyHero(Hero hero)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CreateBattleHeroFromMyHeroHero_hotfix != null)
			{
				return (BattleHero)this.m_CreateBattleHeroFromMyHeroHero_hotfix.call(new object[]
				{
					this,
					hero
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleHero battleHero = BattleHero.HeroToBattleHero(hero);
			battleHero.Equipments = this.m_battleComponent.CreateMineBattleHeroEquipments(hero.EquipmentIds);
			return battleHero;
		}

		// Token: 0x0600796E RID: 31086 RVA: 0x002179B0 File Offset: 0x00215BB0
		public BattleHero CreateDefaultBattleHero(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CreateDefaultBattleHeroInt32_hotfix != null)
			{
				return (BattleHero)this.m_CreateDefaultBattleHeroInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroInfo configDataHeroInfo = this.m_configDataLoader.GetConfigDataHeroInfo(heroId);
			if (configDataHeroInfo == null)
			{
				return null;
			}
			return BattleUtility.CreateDefaultConfigBattleHero(configDataHeroInfo);
		}

		// Token: 0x0600796F RID: 31087 RVA: 0x00217A48 File Offset: 0x00215C48
		public void SaveBeforeRewardStatus()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SaveBeforeRewardStatus_hotfix != null)
			{
				this.m_SaveBeforeRewardStatus_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_beforeRewardPlayerStatus.Clear();
			this.m_beforeRewardPlayerStatus.Level = this.GetPlayerLevel();
			this.m_beforeRewardPlayerStatus.Exp = this.GetPlayerExp();
			this.m_beforeRewardPlayerStatus.NextLevelExp = this.GetPlayerNextLevelExp();
			this.m_beforeRewardPlayerStatus.Energy = this.GetEnergy();
			this.m_beforeRewardHeroStatus.Clear();
			if (this.m_battleHeroIDs != null)
			{
				foreach (int num in this.m_battleHeroIDs)
				{
					Hero hero = this.GetHero(num);
					if (hero != null)
					{
						RewardHeroStatus rewardHeroStatus = new RewardHeroStatus();
						rewardHeroStatus.Id = num;
						rewardHeroStatus.Level = hero.Level;
						rewardHeroStatus.Exp = hero.Exp;
						rewardHeroStatus.NextLevelExp = this.GetHeroNextLevelExp(hero.Level);
						this.m_beforeRewardHeroStatus.Add(rewardHeroStatus);
					}
				}
			}
			this.m_beforeRewardPlayerStatus.ArenaVictoryPoints = this.GetPlayerArenaVictoryPoints();
			this.m_beforeRewardPlayerStatus.ArenaLevelID = this.GetPlayerArenaLevelId();
			this.m_beforeRewardPlayerStatus.RealTimePVPScore = this.GetPlayerRealTimePVPScore();
			this.m_beforeRewardPlayerStatus.RealTimePVPDan = this.GetPlayerRealTimePVPDan();
			this.m_beforeRewardPlayerStatus.RealTimePVPIsPromotion = this.IsRealTimePVPPromotion();
			this.m_beforeRewardPlayerStatus.ClimbTowerFinishedFloorId = this.GetClimbTowerFinishedFloorId();
			this.m_beforeRewardPlayerStatus.GuildMassiveCombatEliminateRate = this.GetGuildMassiveCombatEliminateRate();
		}

		// Token: 0x06007970 RID: 31088 RVA: 0x00217C20 File Offset: 0x00215E20
		public void SaveBattleHeroIds(List<int> heroIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SaveBattleHeroIdsList`1_hotfix != null)
			{
				this.m_SaveBattleHeroIdsList`1_hotfix.call(new object[]
				{
					this,
					heroIds
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleHeroIDs.Clear();
			this.m_battleHeroIDs.AddRange(heroIds);
		}

		// Token: 0x06007971 RID: 31089 RVA: 0x00217CA8 File Offset: 0x00215EA8
		public RewardPlayerStatus GetBeforeRewardPlayerStatus()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBeforeRewardPlayerStatus_hotfix != null)
			{
				return (RewardPlayerStatus)this.m_GetBeforeRewardPlayerStatus_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_beforeRewardPlayerStatus;
		}

		// Token: 0x06007972 RID: 31090 RVA: 0x00217D1C File Offset: 0x00215F1C
		public RewardHeroStatus GetBeforeRewardHeroStatus(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBeforeRewardHeroStatusInt32_hotfix != null)
			{
				return (RewardHeroStatus)this.m_GetBeforeRewardHeroStatusInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			foreach (RewardHeroStatus rewardHeroStatus in this.m_beforeRewardHeroStatus)
			{
				if (rewardHeroStatus.Id == heroId)
				{
					return rewardHeroStatus;
				}
			}
			return null;
		}

		// Token: 0x06007973 RID: 31091 RVA: 0x00217DF8 File Offset: 0x00215FF8
		public ProcessingBattle GetProcessingBattle()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetProcessingBattle_hotfix != null)
			{
				return (ProcessingBattle)this.m_GetProcessingBattle_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.GetProcessingBattle();
		}

		// Token: 0x06007974 RID: 31092 RVA: 0x00217E70 File Offset: 0x00216070
		public ArenaBattleStatus GetArenaBattleStatus()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaBattleStatus_hotfix != null)
			{
				return (ArenaBattleStatus)this.m_GetArenaBattleStatus_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.GetArenaBattleStatus();
		}

		// Token: 0x06007975 RID: 31093 RVA: 0x00217EE8 File Offset: 0x002160E8
		public int GetArenaBattleId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaBattleId_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetArenaBattleId_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.GetArenaBattleId();
		}

		// Token: 0x06007976 RID: 31094 RVA: 0x00217F60 File Offset: 0x00216160
		public void SetNeedRebuildBattle(bool need)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetNeedRebuildBattleBoolean_hotfix != null)
			{
				this.m_SetNeedRebuildBattleBoolean_hotfix.call(new object[]
				{
					this,
					need
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isNeedRebuildBattle = need;
		}

		// Token: 0x06007977 RID: 31095 RVA: 0x00217FD8 File Offset: 0x002161D8
		public bool IsNeedRebuildBattle()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsNeedRebuildBattle_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsNeedRebuildBattle_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_isNeedRebuildBattle;
		}

		// Token: 0x06007978 RID: 31096 RVA: 0x0021804C File Offset: 0x0021624C
		public List<int> GetGainBattleTreasrueIds()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGainBattleTreasrueIds_hotfix != null)
			{
				return (List<int>)this.m_GetGainBattleTreasrueIds_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.GetGotBattleTreasureIds();
		}

		// Token: 0x06007979 RID: 31097 RVA: 0x002180C4 File Offset: 0x002162C4
		public int GetGainBattleTreasureCount(ConfigDataBattleInfo battleInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGainBattleTreasureCountConfigDataBattleInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGainBattleTreasureCountConfigDataBattleInfo_hotfix.call(new object[]
				{
					this,
					battleInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (battleInfo == null || battleInfo.BattleTreasures_ID.Count <= 0)
			{
				return 0;
			}
			List<int> gainBattleTreasrueIds = this.GetGainBattleTreasrueIds();
			int num = 0;
			foreach (int item in battleInfo.BattleTreasures_ID)
			{
				if (gainBattleTreasrueIds.Contains(item))
				{
					num++;
				}
			}
			return num;
		}

		// Token: 0x0600797A RID: 31098 RVA: 0x002181BC File Offset: 0x002163BC
		public int ComputeBattlePower(Hero hero)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ComputeBattlePowerHero_hotfix != null)
			{
				return Convert.ToInt32(this.m_ComputeBattlePowerHero_hotfix.call(new object[]
				{
					this,
					hero
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.ComputeBattlePower(hero);
		}

		// Token: 0x0600797B RID: 31099 RVA: 0x00218244 File Offset: 0x00216444
		public int ComputeBattlePower(BattleHero hero, List<TrainingTech> techs)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ComputeBattlePowerBattleHeroList`1_hotfix != null)
			{
				return Convert.ToInt32(this.m_ComputeBattlePowerBattleHeroList`1_hotfix.call(new object[]
				{
					this,
					hero,
					techs
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.ComputeBattlePower(hero, techs);
		}

		// Token: 0x0600797C RID: 31100 RVA: 0x002182E0 File Offset: 0x002164E0
		public void SetBattleRandomSeed(int seed)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetBattleRandomSeedInt32_hotfix != null)
			{
				this.m_SetBattleRandomSeedInt32_hotfix.call(new object[]
				{
					this,
					seed
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.SetBattleRandomSeed(seed);
		}

		// Token: 0x0600797D RID: 31101 RVA: 0x0021835C File Offset: 0x0021655C
		public int GetBattleRandomSeed()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBattleRandomSeed_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBattleRandomSeed_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.BattleRandomSeed;
		}

		// Token: 0x0600797E RID: 31102 RVA: 0x002183D4 File Offset: 0x002165D4
		public void SetArenaBattleRandomSeed(int seed)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetArenaBattleRandomSeedInt32_hotfix != null)
			{
				this.m_SetArenaBattleRandomSeedInt32_hotfix.call(new object[]
				{
					this,
					seed
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.SetArenaBattleRandomSeed(seed);
		}

		// Token: 0x0600797F RID: 31103 RVA: 0x00218450 File Offset: 0x00216650
		public int GetArenaBattleRandomSeed()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaBattleRandomSeed_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetArenaBattleRandomSeed_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.ArenaBattleRandomSeed;
		}

		// Token: 0x06007980 RID: 31104 RVA: 0x002184C8 File Offset: 0x002166C8
		public void SetBattleArmyRandomSeed(int seed)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetBattleArmyRandomSeedInt32_hotfix != null)
			{
				this.m_SetBattleArmyRandomSeedInt32_hotfix.call(new object[]
				{
					this,
					seed
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.SetBattleArmyRandomSeed(seed);
		}

		// Token: 0x06007981 RID: 31105 RVA: 0x00218544 File Offset: 0x00216744
		public int GetBattleArmyRandomSeed()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBattleArmyRandomSeed_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBattleArmyRandomSeed_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.ArmyRandomSeed;
		}

		// Token: 0x06007982 RID: 31106 RVA: 0x002185BC File Offset: 0x002167BC
		private void BattleFinishedError(int result)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_BattleFinishedErrorInt32_hotfix != null)
			{
				this.m_BattleFinishedErrorInt32_hotfix.call(new object[]
				{
					this,
					result
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.FightFinished(GameFunctionStatus.Error, false, true);
			if (result == -910)
			{
				this.DataError(result);
			}
		}

		// Token: 0x06007983 RID: 31107 RVA: 0x0021864C File Offset: 0x0021684C
		public List<BattleActor> GetDeadEnemyHeroIds()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDeadEnemyHeroIds_hotfix != null)
			{
				return (List<BattleActor>)this.m_GetDeadEnemyHeroIds_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleBase battleBase = this.m_battleComponent.GetBattleBase();
			if (battleBase == null)
			{
				return null;
			}
			return battleBase.GetDeadEnemyActors();
		}

		// Token: 0x06007984 RID: 31108 RVA: 0x002186D4 File Offset: 0x002168D4
		public void UpdateGeneralInviteInfos(List<GeneralInviteInfo> list)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_UpdateGeneralInviteInfosList`1_hotfix != null)
			{
				this.m_UpdateGeneralInviteInfosList`1_hotfix.call(new object[]
				{
					this,
					list
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			list.Clear();
			DateTime serverTime = this.GetServerTime();
			foreach (TeamRoomInviteInfo teamRoomInviteInfo in this.GetTeamRoomInviteInfos())
			{
				if (serverTime > teamRoomInviteInfo.TimeOut)
				{
					this.RemoveTeamRoomAInviteInfo(teamRoomInviteInfo.SessionId, teamRoomInviteInfo.RoomId);
				}
				else
				{
					list.Add(new GeneralInviteInfo
					{
						TeamRoomInviteInfo = teamRoomInviteInfo
					});
				}
			}
			List<PVPInviteInfo> pvpinviteInfos = this.GetPVPInviteInfos();
			int i = 0;
			while (i < pvpinviteInfos.Count)
			{
				if (serverTime > pvpinviteInfos[i].Timeout)
				{
					pvpinviteInfos.RemoveAt(i);
				}
				else
				{
					list.Add(new GeneralInviteInfo
					{
						PVPInviteInfo = pvpinviteInfos[i]
					});
					i++;
				}
			}
			if (ProjectLPlayerContext.<>f__mg$cache0 == null)
			{
				ProjectLPlayerContext.<>f__mg$cache0 = new Comparison<GeneralInviteInfo>(ProjectLPlayerContext.CompareInviteTimeout);
			}
			list.Sort(ProjectLPlayerContext.<>f__mg$cache0);
		}

		// Token: 0x06007985 RID: 31109 RVA: 0x00218864 File Offset: 0x00216A64
		public void SetRemainBattleRegretCount(int count)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetRemainBattleRegretCountInt32_hotfix != null)
			{
				this.m_SetRemainBattleRegretCountInt32_hotfix.call(new object[]
				{
					this,
					count
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = this.m_configDataLoader.UtilityGetConfigableConst(ConfigableConstId.ConfigableConstId_BattleRegretCountMax);
			if (count > num)
			{
				count = num;
			}
			this.m_battleRegretCount = count;
		}

		// Token: 0x06007986 RID: 31110 RVA: 0x002188F8 File Offset: 0x00216AF8
		public int GetRemainBattleRegretCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRemainBattleRegretCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRemainBattleRegretCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleRegretCount;
		}

		// Token: 0x06007987 RID: 31111 RVA: 0x0021896C File Offset: 0x00216B6C
		public void UseBattleRegret()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_UseBattleRegret_hotfix != null)
			{
				this.m_UseBattleRegret_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_battleRegretCount > 0)
			{
				this.m_battleRegretCount--;
			}
		}

		// Token: 0x06007988 RID: 31112 RVA: 0x002189E8 File Offset: 0x00216BE8
		public int GetCurrentBattleFailEnergyCost()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentBattleFailEnergyCost_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetCurrentBattleFailEnergyCost_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoom battleRoom = this.GetBattleRoom();
			if (!this.IsInBattleRoom() || battleRoom == null)
			{
				return this.m_battleComponent.GetSinglePveBattleFailEnergyCostByMonthCard();
			}
			if (battleRoom.BattleRoomType == BattleRoomType.Team)
			{
				return this.m_battleComponent.GetTeamPveBattleFailEnergyCostByMonthCard(battleRoom.GameFunctionType, battleRoom.LocationId);
			}
			return 0;
		}

		// Token: 0x06007989 RID: 31113 RVA: 0x00218AA0 File Offset: 0x00216CA0
		private static int CompareInviteTimeout(GeneralInviteInfo i1, GeneralInviteInfo i2)
		{
			DateTime timeout = i1.GetTimeout();
			DateTime timeout2 = i2.GetTimeout();
			if (timeout > timeout2)
			{
				return 1;
			}
			if (timeout < timeout2)
			{
				return -1;
			}
			return 0;
		}

		// Token: 0x14000085 RID: 133
		// (add) Token: 0x0600798A RID: 31114 RVA: 0x00218AD8 File Offset: 0x00216CD8
		// (remove) Token: 0x0600798B RID: 31115 RVA: 0x00218B74 File Offset: 0x00216D74
		public event Action<int> EventOnBattleCancelAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleCancelAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleCancelAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleCancelAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleCancelAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleCancelAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleCancelAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleCancelAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleCancelAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000086 RID: 134
		// (add) Token: 0x0600798C RID: 31116 RVA: 0x00218C10 File Offset: 0x00216E10
		// (remove) Token: 0x0600798D RID: 31117 RVA: 0x00218CAC File Offset: 0x00216EAC
		public event Action<int> EventOnBattleTeamSetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleTeamSetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleTeamSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleTeamSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleTeamSetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleTeamSetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleTeamSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleTeamSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleTeamSetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000087 RID: 135
		// (add) Token: 0x0600798E RID: 31118 RVA: 0x00218D48 File Offset: 0x00216F48
		// (remove) Token: 0x0600798F RID: 31119 RVA: 0x00218DE4 File Offset: 0x00216FE4
		public event Action<int> EventOnBattleArmyRandomSeedGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleArmyRandomSeedGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleArmyRandomSeedGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleArmyRandomSeedGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleArmyRandomSeedGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleArmyRandomSeedGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleArmyRandomSeedGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleArmyRandomSeedGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleArmyRandomSeedGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007990 RID: 31120 RVA: 0x00218E80 File Offset: 0x00217080
		public bool SendTeamBattleRoomCreateReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamBattleRoomCreateReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamBattleRoomCreateReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamBattleRoomCreateReq msg = new TeamBattleRoomCreateReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007991 RID: 31121 RVA: 0x00218EFC File Offset: 0x002170FC
		public bool SendBattleRoomPlayerStatusChangeReq(PlayerBattleStatus status)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomPlayerStatusChangeReqPlayerBattleStatus_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomPlayerStatusChangeReqPlayerBattleStatus_hotfix.call(new object[]
				{
					this,
					status
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomPlayerStatusChangeReq msg = new BattleRoomPlayerStatusChangeReq
			{
				PlayerBattleStatus = (int)status
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007992 RID: 31122 RVA: 0x00218F90 File Offset: 0x00217190
		private void OnMessage(BattleRoomQuitNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomQuitNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomQuitNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoom battleRoom = this.m_battleComponent.GetBattleRoom();
			if (battleRoom != null && battleRoom.BattleRoomType == BattleRoomType.Team)
			{
				BattleRoomPlayer battleRoomPlayer = battleRoom.FindPlayerBySessionId(msg.SessionId);
				if (battleRoomPlayer != null && this.m_playerBasicInfoComponent.IsMe(battleRoomPlayer.UserId))
				{
					this.m_battleComponent.AddTeamPveFightFailCompensationEnergyByMonthCard(battleRoom.GameFunctionType, battleRoom.LocationId);
				}
			}
			if (this.EventOnBattleRoomPlayerQuitNtf != null)
			{
				this.EventOnBattleRoomPlayerQuitNtf(msg.SessionId, (BattleRoomQuitReason)msg.Reason);
			}
		}

		// Token: 0x06007993 RID: 31123 RVA: 0x00219080 File Offset: 0x00217280
		public bool SendBattleRoomHeroSetupReq(int heroId, int position)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomHeroSetupReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomHeroSetupReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					position
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomHeroSetupReq msg = new BattleRoomHeroSetupReq
			{
				RoomId = this.m_battleComponent.BattleRoomId,
				HeroId = heroId,
				Position = position
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007994 RID: 31124 RVA: 0x0021913C File Offset: 0x0021733C
		public bool SendBattleRoomHeroSwapReq(int fromPosition, int toPosition)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomHeroSwapReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomHeroSwapReqInt32Int32_hotfix.call(new object[]
				{
					this,
					fromPosition,
					toPosition
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomHeroSwapReq msg = new BattleRoomHeroSwapReq
			{
				RoomId = this.m_battleComponent.BattleRoomId,
				FromPosition = fromPosition,
				ToPosition = toPosition
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007995 RID: 31125 RVA: 0x002191F8 File Offset: 0x002173F8
		public bool SendBattleRoomHeroPutdownReq(int position)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomHeroPutdownReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomHeroPutdownReqInt32_hotfix.call(new object[]
				{
					this,
					position
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomHeroPutdownReq msg = new BattleRoomHeroPutdownReq
			{
				RoomId = this.m_battleComponent.BattleRoomId,
				Position = position
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007996 RID: 31126 RVA: 0x0021929C File Offset: 0x0021749C
		public bool SendBattleRoomHeroProtectReq(int position)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomHeroProtectReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomHeroProtectReqInt32_hotfix.call(new object[]
				{
					this,
					position
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomHeroProtectReq msg = new BattleRoomHeroProtectReq
			{
				RoomId = this.m_battleComponent.BattleRoomId,
				Position = position
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007997 RID: 31127 RVA: 0x00219340 File Offset: 0x00217540
		public bool SendBattleRoomHeroBanReq(int position)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomHeroBanReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomHeroBanReqInt32_hotfix.call(new object[]
				{
					this,
					position
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomHeroBanReq msg = new BattleRoomHeroBanReq
			{
				RoomId = this.m_battleComponent.BattleRoomId,
				Position = position
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007998 RID: 31128 RVA: 0x002193E4 File Offset: 0x002175E4
		public bool SendBattleRoomEndCurrentBPTurnReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomEndCurrentBPTurnReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomEndCurrentBPTurnReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomEndCurrentBPTurnReq msg = new BattleRoomEndCurrentBPTurnReq
			{
				RoomId = this.m_battleComponent.BattleRoomId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007999 RID: 31129 RVA: 0x00219470 File Offset: 0x00217670
		public bool SendBattleRoomBattleCommandExecuteReq(List<BattleCommand> commands)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomBattleCommandExecuteReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomBattleCommandExecuteReqList`1_hotfix.call(new object[]
				{
					this,
					commands
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomBattleCommandExecuteReq battleRoomBattleCommandExecuteReq = new BattleRoomBattleCommandExecuteReq();
			battleRoomBattleCommandExecuteReq.RoomId = this.m_battleComponent.BattleRoomId;
			foreach (BattleCommand battleCommand in commands)
			{
				battleRoomBattleCommandExecuteReq.Commands.Add(BattleCommand.BattleCommandToPBBattleCommand(battleCommand));
			}
			return this.SendMessage(battleRoomBattleCommandExecuteReq);
		}

		// Token: 0x0600799A RID: 31130 RVA: 0x00219560 File Offset: 0x00217760
		public bool SendBattleRoomQuitReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomQuitReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomQuitReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomQuitReq msg = new BattleRoomQuitReq
			{
				RoomId = this.m_battleComponent.BattleRoomId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x0600799B RID: 31131 RVA: 0x002195EC File Offset: 0x002177EC
		public bool SendBattleRoomPlayerActionBeginReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomPlayerActionBeginReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomPlayerActionBeginReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomPlayerActionBeginReq msg = new BattleRoomPlayerActionBeginReq
			{
				RoomId = this.m_battleComponent.BattleRoomId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x0600799C RID: 31132 RVA: 0x00219678 File Offset: 0x00217878
		public bool SendBattleRoomGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomGetReq msg = new BattleRoomGetReq
			{
				RoomId = this.m_battleComponent.BattleRoomId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x0600799D RID: 31133 RVA: 0x00219704 File Offset: 0x00217904
		public bool SendBattleRoomBattleLogReq(string log)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattleRoomBattleLogReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattleRoomBattleLogReqString_hotfix.call(new object[]
				{
					this,
					log
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomBattleLogReq msg = new BattleRoomBattleLogReq
			{
				RoomId = this.m_battleComponent.BattleRoomId,
				Log = log
			};
			return this.SendMessage(msg);
		}

		// Token: 0x0600799E RID: 31134 RVA: 0x002197A8 File Offset: 0x002179A8
		private void OnMessage(BattleRoomCreateAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomCreateAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomCreateAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomCreateAck != null)
			{
				this.EventOnBattleRoomCreateAck(msg.Result);
			}
		}

		// Token: 0x0600799F RID: 31135 RVA: 0x00219840 File Offset: 0x00217A40
		private void OnMessage(BattleRoomPlayerStatusChangeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomPlayerStatusChangeAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomPlayerStatusChangeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomPlayerStatusChangeAck != null)
			{
				this.EventOnBattleRoomPlayerStatusChangeAck(msg.Result);
			}
		}

		// Token: 0x060079A0 RID: 31136 RVA: 0x002198D8 File Offset: 0x00217AD8
		private void OnMessage(BattleRoomHeroSetupAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomHeroSetupAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomHeroSetupAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomHeroSetupAck != null)
			{
				this.EventOnBattleRoomHeroSetupAck(msg.Result);
			}
		}

		// Token: 0x060079A1 RID: 31137 RVA: 0x00219970 File Offset: 0x00217B70
		private void OnMessage(BattleRoomHeroSwapAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomHeroSwapAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomHeroSwapAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomHeroSwapAck != null)
			{
				this.EventOnBattleRoomHeroSwapAck(msg.Result);
			}
		}

		// Token: 0x060079A2 RID: 31138 RVA: 0x00219A08 File Offset: 0x00217C08
		private void OnMessage(BattleRoomHeroPutdownAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomHeroPutdownAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomHeroPutdownAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomHeroPutdownAck != null)
			{
				this.EventOnBattleRoomHeroPutdownAck(msg.Result);
			}
		}

		// Token: 0x060079A3 RID: 31139 RVA: 0x00219AA0 File Offset: 0x00217CA0
		private void OnMessage(BattleRoomHeroProtectAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomHeroProtectAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomHeroProtectAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattleRoomHeroProtectAck != null)
			{
				this.EventOnBattleRoomHeroProtectAck(msg.Result);
			}
		}

		// Token: 0x060079A4 RID: 31140 RVA: 0x00219B2C File Offset: 0x00217D2C
		private void OnMessage(BattleRoomHeroBanAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomHeroBanAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomHeroBanAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattleRoomHeroBanAck != null)
			{
				this.EventOnBattleRoomHeroBanAck(msg.Result);
			}
		}

		// Token: 0x060079A5 RID: 31141 RVA: 0x00219BB8 File Offset: 0x00217DB8
		private void OnMessage(BattleRoomEndCurrentBPTurnAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomEndCurrentBPTurnAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomEndCurrentBPTurnAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattleRoomEndCurrentBPTurnAck != null)
			{
				this.EventOnBattleRoomEndCurrentBPTurnAck(msg.Result);
			}
		}

		// Token: 0x060079A6 RID: 31142 RVA: 0x00219C44 File Offset: 0x00217E44
		private void OnMessage(BattleRoomBattleCommandExecuteAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomBattleCommandExecuteAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomBattleCommandExecuteAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomBattleCommandExecuteAck != null)
			{
				this.EventOnBattleRoomBattleCommandExecuteAck(msg.Result);
			}
		}

		// Token: 0x060079A7 RID: 31143 RVA: 0x00219CDC File Offset: 0x00217EDC
		private void OnMessage(BattleRoomQuitAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomQuitAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomQuitAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomQuitAck != null)
			{
				this.EventOnBattleRoomQuitAck(msg.Result);
			}
		}

		// Token: 0x060079A8 RID: 31144 RVA: 0x00219D74 File Offset: 0x00217F74
		private void OnMessage(BattleRoomPlayerActionBeginAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomPlayerActionBeginAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomPlayerActionBeginAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnBattleRoomPlayerActionBeginAck != null)
			{
				this.EventOnBattleRoomPlayerActionBeginAck(msg.Result);
			}
		}

		// Token: 0x060079A9 RID: 31145 RVA: 0x00219E0C File Offset: 0x0021800C
		private void OnMessage(BattleRoomGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomGetAck_hotfix != null)
			{
				this.m_OnMessageBattleRoomGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				BattleRoomType battleRoomType = (BattleRoomType)msg.BattleRoomType;
				if (battleRoomType == BattleRoomType.Team)
				{
					this.m_battleComponent.JoinTeamBattleRoom(this.m_battleComponent.BattleRoomId, msg.BattleId, (GameFunctionType)msg.GameFunctionTypeId, msg.LocationId, msg.Players, new DateTime(msg.ReadyTimeOut));
				}
				else if (battleRoomType == BattleRoomType.PVP)
				{
					this.m_battleComponent.JoinPVPBattleRoom(this.m_battleComponent.BattleRoomId, msg.BattleId, msg.Players, new DateTime(msg.ReadyTimeOut));
				}
				else if (battleRoomType == BattleRoomType.RealTimePVPBPMode || battleRoomType == BattleRoomType.RealTimePVPDefaultMode)
				{
					this.m_battleComponent.JoinRealtimePVPBattleRoom(this.m_battleComponent.BattleRoomId, msg.BattleId, msg.Players, new DateTime(msg.ReadyTimeOut), battleRoomType);
					if (msg.RealTimePVPRoomData != null)
					{
						this.m_battleComponent.SetRealtimePVPBattleRoomData(msg.RealTimePVPRoomData);
					}
				}
				else if (battleRoomType == BattleRoomType.GuildMassiveCombat)
				{
					this.m_battleComponent.JoinGuildMassiveCombatBattleRoom(this.m_battleComponent.BattleRoomId, msg.BattleId, msg.LocationId, msg.Players, new DateTime(msg.ReadyTimeOut), msg.PreferredHeroTagIds);
				}
				BattleRoom battleRoom = this.GetBattleRoom();
				battleRoom.BattleRoomStatus = (BattleRoomStatus)msg.BattleRoomStatus;
				battleRoom.SetMyPlayer(this.GetUserId());
				battleRoom.LeaderPlayerIndex = msg.LeaderIndex;
				battleRoom.LastPlayerBeginActionTime = new DateTime(msg.LastPlayerBeginActionTime);
				foreach (ProBattleHeroSetupInfo heroSetup in msg.AllSetupInfos)
				{
					this.m_battleComponent.BattleRoomHeroSetup(heroSetup);
				}
				this.m_battleComponent.AppendBattleRoomCommands(msg.Commands);
				this.m_battleComponent.SetBattleRandomSeed(msg.RandomSeed);
				this.m_battleComponent.SetBattleArmyRandomSeed(msg.ArmyRandomSeed);
			}
			if (this.EventOnBattleRoomGetAck != null)
			{
				this.EventOnBattleRoomGetAck(msg.Result);
			}
		}

		// Token: 0x060079AA RID: 31146 RVA: 0x0021A08C File Offset: 0x0021828C
		private void OnMessage(BattleRoomTeamBattleJoinNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomTeamBattleJoinNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomTeamBattleJoinNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomSetting setting = this.GetTeamRoom().Setting;
			this.m_battleComponent.JoinTeamBattleRoom(msg.RoomId, msg.BattleId, setting.GameFunctionTypeId, setting.LocationId, msg.Players, new DateTime(msg.ReadyTimeOut));
			this.m_battleComponent.SetBattleRandomSeed(msg.RandomSeed);
			this.m_battleComponent.SetBattleArmyRandomSeed(msg.ArmyRandomSeed);
			this.GetBattleRoom().SetMyPlayer(this.GetUserId());
			this.GetBattleRoom().SetLeaderPlayer(this.GetTeamRoom().Leader.UserId);
			this.m_teamComponent.ClearTeamRoom();
			this.m_teamComponent.DeductTeamPveBattleEnergyByClient();
			if (this.EventOnBattleRoomTeamBattleJoinNtf != null)
			{
				this.EventOnBattleRoomTeamBattleJoinNtf();
			}
		}

		// Token: 0x060079AB RID: 31147 RVA: 0x0021A1B8 File Offset: 0x002183B8
		private void OnMessage(BattleRoomPVPBattleJoinNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomPVPBattleJoinNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomPVPBattleJoinNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.JoinPVPBattleRoom(msg.RoomId, msg.BattleId, msg.Players, new DateTime(msg.ReadyTimeOut));
			this.m_battleComponent.SetBattleRandomSeed(msg.RandomSeed);
			this.GetBattleRoom().SetMyPlayer(this.GetUserId());
			this.m_teamComponent.ClearTeamRoom();
			foreach (PVPInviteInfo pvpinviteInfo in this.m_friendComponent.PVPInviteInfos)
			{
				this.SendBattlePracticeDeclineReq(pvpinviteInfo.Inviter.UserId);
			}
			this.m_friendComponent.PVPInviteInfos.Clear();
			if (this.EventOnBattleRoomPVPBattleJoinNtf != null)
			{
				this.EventOnBattleRoomPVPBattleJoinNtf();
			}
			this.m_battleComponent.OnBattlePracticeMissionEvent();
		}

		// Token: 0x060079AC RID: 31148 RVA: 0x0021A310 File Offset: 0x00218510
		private void OnMessage(BattleRoomRealTimePVPBattleJoinNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomRealTimePVPBattleJoinNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomRealTimePVPBattleJoinNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoomType battleRoomType = (BattleRoomType)msg.BattleRoomType;
			this.m_battleComponent.JoinRealtimePVPBattleRoom(msg.RoomId, msg.BattleId, msg.Players, new DateTime(msg.ReadyTimeOut), battleRoomType);
			if (msg.RealTimePVPRoomData != null)
			{
				this.m_battleComponent.SetRealtimePVPBattleRoomData(msg.RealTimePVPRoomData);
			}
			this.m_battleComponent.SetBattleRandomSeed(msg.RandomSeed);
			this.GetBattleRoom().SetMyPlayer(this.GetUserId());
			this.m_teamComponent.ClearTeamRoom();
			if (this.EventOnBattleRoomRealTimePVPBattleJoinNtf != null)
			{
				this.EventOnBattleRoomRealTimePVPBattleJoinNtf();
			}
		}

		// Token: 0x060079AD RID: 31149 RVA: 0x0021A410 File Offset: 0x00218610
		private void OnMessage(BattleRoomGuildMassiveCombatBattleJoinNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomGuildMassiveCombatBattleJoinNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomGuildMassiveCombatBattleJoinNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomSetting setting = this.GetTeamRoom().Setting;
			this.m_battleComponent.JoinGuildMassiveCombatBattleRoom(msg.RoomId, msg.BattleId, setting.LocationId, msg.Players, new DateTime(msg.ReadyTimeOut), msg.PreferredHeroTagIds);
			this.m_battleComponent.SetBattleRandomSeed(msg.RandomSeed);
			this.m_battleComponent.SetBattleArmyRandomSeed(msg.GuildMassiveCombatRandomSeed);
			this.GetBattleRoom().SetMyPlayer(this.GetUserId());
			this.GetBattleRoom().SetLeaderPlayer(this.GetTeamRoom().Leader.UserId);
			this.m_teamComponent.ClearTeamRoom();
			if (this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf != null)
			{
				this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf();
			}
		}

		// Token: 0x060079AE RID: 31150 RVA: 0x0021A530 File Offset: 0x00218730
		private void OnMessage(BattleRoomPlayerStatusChangedNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomPlayerStatusChangedNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomPlayerStatusChangedNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.SetBattleRoomPlayerStatus(msg.SessionId, (PlayerBattleStatus)msg.PlayerBattleStatus, msg.Offline);
			if (this.EventOnBattleRoomPlayerStatusChangedNtf != null)
			{
				this.EventOnBattleRoomPlayerStatusChangedNtf(msg.SessionId);
			}
		}

		// Token: 0x060079AF RID: 31151 RVA: 0x0021A5DC File Offset: 0x002187DC
		private void OnMessage(BattleRoomHeroSetupNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomHeroSetupNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomHeroSetupNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<int> list = new List<int>();
			foreach (ProBattleHeroSetupInfo proBattleHeroSetupInfo in msg.ChangedInfos)
			{
				this.m_battleComponent.BattleRoomHeroSetup(proBattleHeroSetupInfo);
				list.Add(proBattleHeroSetupInfo.Position);
			}
			if (this.EventOnBattleRoomHeroSetupNtf != null)
			{
				this.EventOnBattleRoomHeroSetupNtf(list);
			}
		}

		// Token: 0x060079B0 RID: 31152 RVA: 0x0021A6CC File Offset: 0x002188CC
		private void OnMessage(BattleRoomTeamBattleStartNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomTeamBattleStartNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomTeamBattleStartNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.BattleRoomBattleStart();
			if (this.EventOnBattleRoomTeamBattleStartNtf != null)
			{
				this.EventOnBattleRoomTeamBattleStartNtf();
			}
		}

		// Token: 0x060079B1 RID: 31153 RVA: 0x0021A760 File Offset: 0x00218960
		private void OnMessage(BattleRoomPVPBattleStartNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomPVPBattleStartNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomPVPBattleStartNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.BattleRoomBattleStart();
			foreach (ProBattleHeroSetupInfo heroSetup in msg.All)
			{
				this.m_battleComponent.BattleRoomHeroSetup(heroSetup);
			}
			if (this.EventOnBattleRoomPVPBattleStartNtf != null)
			{
				this.EventOnBattleRoomPVPBattleStartNtf();
			}
		}

		// Token: 0x060079B2 RID: 31154 RVA: 0x0021A848 File Offset: 0x00218A48
		private void OnMessage(BattleRoomRealTimePVPBattleStartNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomRealTimePVPBattleStartNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomRealTimePVPBattleStartNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.BattleRoomBattleStart();
			foreach (ProBattleHeroSetupInfo heroSetup in msg.All)
			{
				this.m_battleComponent.BattleRoomHeroSetup(heroSetup);
			}
			this.m_realTimePVPComponent.RealTimeArenaBattleStart((BattleMode)msg.BattleMode);
			if (this.EventOnBattleRoomRealTimePVPBattleStartNtf != null)
			{
				this.EventOnBattleRoomRealTimePVPBattleStartNtf();
			}
		}

		// Token: 0x060079B3 RID: 31155 RVA: 0x0021A940 File Offset: 0x00218B40
		private void OnMessage(BattleRoomBattleCommandExecuteNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomBattleCommandExecuteNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomBattleCommandExecuteNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.AppendBattleRoomCommands(msg.Commands);
			this.GetBattleRoom().LastPlayerBeginActionTime = DateTime.MinValue;
			if (this.EventOnBattleRoomBattleCommandExecuteNtf != null)
			{
				this.EventOnBattleRoomBattleCommandExecuteNtf(msg.SessionId);
			}
		}

		// Token: 0x060079B4 RID: 31156 RVA: 0x0021A9F0 File Offset: 0x00218BF0
		private void OnMessage(BattleRoomTeamBattleFinishNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomTeamBattleFinishNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomTeamBattleFinishNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			this.SaveBeforeRewardStatus();
			BattleRoom battleRoom = this.GetBattleRoom();
			GameFunctionType gameFunctionType = battleRoom.GameFunctionType;
			int locationId = battleRoom.LocationId;
			bool flag = msg.Stars > 0;
			if (flag)
			{
				List<int> battleTreasures = new List<int>();
				List<int> list = new List<int>();
				List<int> list2 = new List<int>();
				for (int i = 0; i < battleRoom.BattleRoomPlayerHeroSetup.GetCount(); i++)
				{
					BattleHeroSetupInfo battleHeroSetupInfo = battleRoom.BattleRoomPlayerHeroSetup.GetBattleHeroSetupInfo(i);
					list.Add(battleHeroSetupInfo.Hero.HeroId);
					if (battleHeroSetupInfo.PlayerIndex == battleRoom.MyPlayerIndex)
					{
						list2.Add(battleHeroSetupInfo.Hero.HeroId);
					}
				}
				if (gameFunctionType != GameFunctionType.GameFunctionType_AnikiGym)
				{
					if (gameFunctionType != GameFunctionType.GameFunctionType_ThearchyTrial)
					{
						if (gameFunctionType != GameFunctionType.GameFunctionType_MemoryCorridor)
						{
							if (gameFunctionType != GameFunctionType.GameFunctionType_HeroTrainning)
							{
								if (gameFunctionType != GameFunctionType.GameFunctionType_CooperateBattle)
								{
									if (gameFunctionType == GameFunctionType.GameFunctionType_UnchartedScoreScoreLevel)
									{
										ConfigDataScoreLevelInfo configDataScoreLevelInfo = this.m_configDataLoader.GetConfigDataScoreLevelInfo(locationId);
										this.m_unchartedScoreComponent.SetSuccessScoreLevelLevel(configDataScoreLevelInfo.UnchartedScoreInfo.ID, configDataScoreLevelInfo, battleTreasures, list2, list, true);
									}
								}
								else
								{
									ConfigDataCooperateBattleLevelInfo configDataCooperateBattleLevelInfo = this.m_configDataLoader.GetConfigDataCooperateBattleLevelInfo(locationId);
									this.m_cooperateBattleComponent.SetSuccessCooperateBattleLevel(configDataCooperateBattleLevelInfo, battleTreasures, list2);
								}
							}
							else
							{
								ConfigDataHeroTrainningLevelInfo configDataHeroTrainningLevelInfo = this.m_configDataLoader.GetConfigDataHeroTrainningLevelInfo(locationId);
								this.m_heroTrainningComponent.SetSuccessHeroTrainningLevel(configDataHeroTrainningLevelInfo, battleTreasures, list2, true);
							}
						}
						else
						{
							ConfigDataMemoryCorridorLevelInfo configDataMemoryCorridorLevelInfo = this.m_configDataLoader.GetConfigDataMemoryCorridorLevelInfo(locationId);
							this.m_memoryCorridorComponent.SetSuccessMemoryCorridorLevel(configDataMemoryCorridorLevelInfo, battleTreasures, list2, true);
						}
					}
					else
					{
						ConfigDataThearchyTrialLevelInfo configDataThearchyTrialLevelInfo = this.m_configDataLoader.GetConfigDataThearchyTrialLevelInfo(locationId);
						this.m_thearchyTrialComponent.SetSuccessThearchyTrialLevel(configDataThearchyTrialLevelInfo, battleTreasures, list2, true);
					}
				}
				else
				{
					ConfigDataAnikiLevelInfo configDataAnikiLevelInfo = this.m_configDataLoader.GetConfigDataAnikiLevelInfo(locationId);
					this.m_anikiGymComponent.SetSuccessAnikiGymLevel(configDataAnikiLevelInfo, battleTreasures, list2, true);
				}
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.TeamGoods1.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.TeamRewards1));
				battleReward.TeamGoods2.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.TeamRewards2));
				battleReward.FriendGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.FriendRewards));
				battleReward.DailyGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.DailyRewards));
				battleReward.ScoreGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.UnchartedScoreRewards));
				battleReward.FriendshipPoints = msg.FriendshipPoints;
			}
			else
			{
				this.m_battleComponent.AddTeamPveFightFailCompensationEnergyByMonthCard(gameFunctionType, locationId);
			}
			battleRoom.BattleReward = battleReward;
			battleRoom.BattleStars = msg.Stars;
			if (this.EventOnBattleRoomTeamBattleFinishNtf != null)
			{
				this.EventOnBattleRoomTeamBattleFinishNtf();
			}
			if (this.m_teamComponent.FinishTeamBattleMissionEvent != null)
			{
				this.m_teamComponent.FinishTeamBattleMissionEvent();
			}
		}

		// Token: 0x060079B5 RID: 31157 RVA: 0x0021AD40 File Offset: 0x00218F40
		private void OnMessage(BattleRoomPVPBattleFinishNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomPVPBattleFinishNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomPVPBattleFinishNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			this.SaveBeforeRewardStatus();
			BattleRoom battleRoom = this.GetBattleRoom();
			battleRoom.BattleReward = battleReward;
			battleRoom.PVPWinSessionId = msg.WinSessionId;
			if (this.EventOnBattleRoomPVPBattleFinishNtf != null)
			{
				this.EventOnBattleRoomPVPBattleFinishNtf();
			}
		}

		// Token: 0x060079B6 RID: 31158 RVA: 0x0021ADF8 File Offset: 0x00218FF8
		private void OnMessage(BattleRoomRealTimePVPBattleFinishNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomRealTimePVPBattleFinishNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomRealTimePVPBattleFinishNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleRoom battleRoom = this.GetBattleRoom();
			bool flag = msg.BattleInstanceId == battleRoom.RealtimePVPBattleInstanceId;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			if (flag)
			{
				battleReward.Clear();
				this.SaveBeforeRewardStatus();
				this.m_beforeRewardPlayerStatus.RealtTimePVPBattleMode = (BattleMode)msg.Mode;
				battleRoom.BattleReward = battleReward;
				battleRoom.PVPWinSessionId = msg.WinSessionId;
			}
			RealTimePVPBattleReport realTimePVPBattleReport = msg.Report.ToMemory();
			this.m_realTimePVPComponent.SaveReport(realTimePVPBattleReport);
			if (realTimePVPBattleReport.ReportType == RealTimePVPBattleReportType.Promotion)
			{
				this.m_realTimePVPComponent.SavePromotionReport(realTimePVPBattleReport);
			}
			if (msg.Mode == 0)
			{
				if (this.m_realTimePVPComponent.IsPromotion() && !msg.IsPromotion)
				{
					this.m_realTimePVPComponent.EndPromotion();
				}
				if (msg.IsPromotion)
				{
					this.m_realTimePVPComponent.StartPromotion();
				}
				this.m_realtimePVPPlayerInfo.Dan += msg.DanDiff;
				ProRealTimePVPBattleReportPlayerData proRealTimePVPBattleReportPlayerData = msg.Report.Datas.Find((ProRealTimePVPBattleReportPlayerData d) => d.UserId == this.m_playerBasicInfoComponent.GetUserId());
				this.m_realtimePVPPlayerInfo.Score += proRealTimePVPBattleReportPlayerData.ScoreDiff;
				this.m_realtimePVPPlayerInfo.LocalRank += msg.LocalRankDiff;
				this.m_realtimePVPPlayerInfo.GlobalRank += msg.GlobalRankDiff;
				if (flag)
				{
					battleReward.Score = proRealTimePVPBattleReportPlayerData.ScoreDiff;
				}
			}
			this.m_realTimePVPComponent.RealTimeArenaBattleFinish((BattleMode)msg.Mode, realTimePVPBattleReport.Win);
			if (this.EventOnBattleRoomRealTimePVPBattleFinishNtf != null && flag)
			{
				this.EventOnBattleRoomRealTimePVPBattleFinishNtf();
			}
		}

		// Token: 0x060079B7 RID: 31159 RVA: 0x0021AFFC File Offset: 0x002191FC
		private void OnMessage(BattleGuildMassiveCombatBattleFinishNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleGuildMassiveCombatBattleFinishNtf_hotfix != null)
			{
				this.m_OnMessageBattleGuildMassiveCombatBattleFinishNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			this.SaveBeforeRewardStatus();
			BattleRoom battleRoom = this.GetBattleRoom();
			bool flag = msg.Stars > 0;
			if (flag)
			{
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf.Ntf);
				}
				battleReward.ScoreGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.Ntf.PointslRewards));
				battleReward.Score = msg.Ntf.Points;
				this.m_guildComponent.GuildDS.MassiveCombat.Points = msg.Ntf.TotalPoints;
			}
			battleRoom.BattleReward = battleReward;
			battleRoom.BattleStars = msg.Stars;
			if (this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf != null)
			{
				this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf();
			}
		}

		// Token: 0x060079B8 RID: 31160 RVA: 0x0021B134 File Offset: 0x00219334
		private void OnMessage(BattleRoomPlayerBattleInfoInitNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomPlayerBattleInfoInitNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomPlayerBattleInfoInitNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.InitBattleRoomPlayer(msg.SessionId, msg.Techs);
			if (this.EventOnBattleRoomPlayerBattleInfoInitNtf != null)
			{
				this.EventOnBattleRoomPlayerBattleInfoInitNtf();
			}
		}

		// Token: 0x060079B9 RID: 31161 RVA: 0x0021B1D4 File Offset: 0x002193D4
		private void OnMessage(BattleRoomDataChangeNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattleRoomDataChangeNtf_hotfix != null)
			{
				this.m_OnMessageBattleRoomDataChangeNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.SetRealtimePVPBattleRoomData(msg);
			if (this.EventOnBattleRoomDataChangeNtf != null)
			{
				this.EventOnBattleRoomDataChangeNtf();
			}
		}

		// Token: 0x060079BA RID: 31162 RVA: 0x0021B268 File Offset: 0x00219468
		public bool IsInBattleRoom()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsInBattleRoom_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsInBattleRoom_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.IsInBattleRoom();
		}

		// Token: 0x060079BB RID: 31163 RVA: 0x0021B2E0 File Offset: 0x002194E0
		public BattleRoom GetBattleRoom()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBattleRoom_hotfix != null)
			{
				return (BattleRoom)this.m_GetBattleRoom_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_battleComponent.GetBattleRoom();
		}

		// Token: 0x060079BC RID: 31164 RVA: 0x0021B358 File Offset: 0x00219558
		public void SetQuitBattleRoom()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetQuitBattleRoom_hotfix != null)
			{
				this.m_SetQuitBattleRoom_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_battleComponent.QuitBattleRoom();
		}

		// Token: 0x14000088 RID: 136
		// (add) Token: 0x060079BD RID: 31165 RVA: 0x0021B3C4 File Offset: 0x002195C4
		// (remove) Token: 0x060079BE RID: 31166 RVA: 0x0021B460 File Offset: 0x00219660
		public event Action<int> EventOnBattleRoomCreateAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomCreateAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomCreateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomCreateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomCreateAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomCreateAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomCreateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomCreateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomCreateAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000089 RID: 137
		// (add) Token: 0x060079BF RID: 31167 RVA: 0x0021B4FC File Offset: 0x002196FC
		// (remove) Token: 0x060079C0 RID: 31168 RVA: 0x0021B598 File Offset: 0x00219798
		public event Action<int> EventOnBattleRoomPlayerStatusChangeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPlayerStatusChangeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPlayerStatusChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomPlayerStatusChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomPlayerStatusChangeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPlayerStatusChangeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPlayerStatusChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomPlayerStatusChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomPlayerStatusChangeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400008A RID: 138
		// (add) Token: 0x060079C1 RID: 31169 RVA: 0x0021B634 File Offset: 0x00219834
		// (remove) Token: 0x060079C2 RID: 31170 RVA: 0x0021B6D0 File Offset: 0x002198D0
		public event Action<int> EventOnBattleRoomHeroSetupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomHeroSetupAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomHeroSetupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroSetupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroSetupAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomHeroSetupAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomHeroSetupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroSetupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroSetupAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400008B RID: 139
		// (add) Token: 0x060079C3 RID: 31171 RVA: 0x0021B76C File Offset: 0x0021996C
		// (remove) Token: 0x060079C4 RID: 31172 RVA: 0x0021B808 File Offset: 0x00219A08
		public event Action<int> EventOnBattleRoomHeroSwapAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomHeroSwapAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomHeroSwapAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroSwapAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroSwapAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomHeroSwapAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomHeroSwapAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroSwapAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroSwapAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400008C RID: 140
		// (add) Token: 0x060079C5 RID: 31173 RVA: 0x0021B8A4 File Offset: 0x00219AA4
		// (remove) Token: 0x060079C6 RID: 31174 RVA: 0x0021B940 File Offset: 0x00219B40
		public event Action<int> EventOnBattleRoomHeroPutdownAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomHeroPutdownAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomHeroPutdownAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroPutdownAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroPutdownAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomHeroPutdownAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomHeroPutdownAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroPutdownAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroPutdownAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400008D RID: 141
		// (add) Token: 0x060079C7 RID: 31175 RVA: 0x0021B9DC File Offset: 0x00219BDC
		// (remove) Token: 0x060079C8 RID: 31176 RVA: 0x0021BA78 File Offset: 0x00219C78
		public event Action<int> EventOnBattleRoomHeroProtectAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomHeroProtectAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomHeroProtectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroProtectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroProtectAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomHeroProtectAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomHeroProtectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroProtectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroProtectAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400008E RID: 142
		// (add) Token: 0x060079C9 RID: 31177 RVA: 0x0021BB14 File Offset: 0x00219D14
		// (remove) Token: 0x060079CA RID: 31178 RVA: 0x0021BBB0 File Offset: 0x00219DB0
		public event Action<int> EventOnBattleRoomHeroBanAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomHeroBanAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomHeroBanAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroBanAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroBanAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomHeroBanAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomHeroBanAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomHeroBanAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomHeroBanAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400008F RID: 143
		// (add) Token: 0x060079CB RID: 31179 RVA: 0x0021BC4C File Offset: 0x00219E4C
		// (remove) Token: 0x060079CC RID: 31180 RVA: 0x0021BCE8 File Offset: 0x00219EE8
		public event Action<int> EventOnBattleRoomBattleCommandExecuteAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomBattleCommandExecuteAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomBattleCommandExecuteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomBattleCommandExecuteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomBattleCommandExecuteAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomBattleCommandExecuteAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomBattleCommandExecuteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomBattleCommandExecuteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomBattleCommandExecuteAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000090 RID: 144
		// (add) Token: 0x060079CD RID: 31181 RVA: 0x0021BD84 File Offset: 0x00219F84
		// (remove) Token: 0x060079CE RID: 31182 RVA: 0x0021BE20 File Offset: 0x0021A020
		public event Action<int> EventOnBattleRoomQuitAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomQuitAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomQuitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomQuitAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomQuitAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomQuitAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomQuitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomQuitAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomQuitAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000091 RID: 145
		// (add) Token: 0x060079CF RID: 31183 RVA: 0x0021BEBC File Offset: 0x0021A0BC
		// (remove) Token: 0x060079D0 RID: 31184 RVA: 0x0021BF58 File Offset: 0x0021A158
		public event Action<int> EventOnBattleRoomPlayerActionBeginAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPlayerActionBeginAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPlayerActionBeginAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomPlayerActionBeginAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomPlayerActionBeginAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPlayerActionBeginAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPlayerActionBeginAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomPlayerActionBeginAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomPlayerActionBeginAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000092 RID: 146
		// (add) Token: 0x060079D1 RID: 31185 RVA: 0x0021BFF4 File Offset: 0x0021A1F4
		// (remove) Token: 0x060079D2 RID: 31186 RVA: 0x0021C090 File Offset: 0x0021A290
		public event Action<int> EventOnBattleRoomGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000093 RID: 147
		// (add) Token: 0x060079D3 RID: 31187 RVA: 0x0021C12C File Offset: 0x0021A32C
		// (remove) Token: 0x060079D4 RID: 31188 RVA: 0x0021C1C8 File Offset: 0x0021A3C8
		public event Action<int> EventOnBattleRoomEndCurrentBPTurnAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomEndCurrentBPTurnAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomEndCurrentBPTurnAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomEndCurrentBPTurnAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomEndCurrentBPTurnAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomEndCurrentBPTurnAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomEndCurrentBPTurnAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattleRoomEndCurrentBPTurnAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattleRoomEndCurrentBPTurnAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000094 RID: 148
		// (add) Token: 0x060079D5 RID: 31189 RVA: 0x0021C264 File Offset: 0x0021A464
		// (remove) Token: 0x060079D6 RID: 31190 RVA: 0x0021C300 File Offset: 0x0021A500
		public event Action EventOnBattleRoomTeamBattleJoinNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomTeamBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomTeamBattleJoinNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomTeamBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomTeamBattleJoinNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000095 RID: 149
		// (add) Token: 0x060079D7 RID: 31191 RVA: 0x0021C39C File Offset: 0x0021A59C
		// (remove) Token: 0x060079D8 RID: 31192 RVA: 0x0021C438 File Offset: 0x0021A638
		public event Action EventOnBattleRoomPVPBattleJoinNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPVPBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPVPBattleJoinNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPVPBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPVPBattleJoinNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000096 RID: 150
		// (add) Token: 0x060079D9 RID: 31193 RVA: 0x0021C4D4 File Offset: 0x0021A6D4
		// (remove) Token: 0x060079DA RID: 31194 RVA: 0x0021C570 File Offset: 0x0021A770
		public event Action EventOnBattleRoomRealTimePVPBattleJoinNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomRealTimePVPBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomRealTimePVPBattleJoinNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomRealTimePVPBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomRealTimePVPBattleJoinNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000097 RID: 151
		// (add) Token: 0x060079DB RID: 31195 RVA: 0x0021C60C File Offset: 0x0021A80C
		// (remove) Token: 0x060079DC RID: 31196 RVA: 0x0021C6A8 File Offset: 0x0021A8A8
		public event Action EventOnBattleRoomGuildMassiveCombatBattleJoinNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000098 RID: 152
		// (add) Token: 0x060079DD RID: 31197 RVA: 0x0021C744 File Offset: 0x0021A944
		// (remove) Token: 0x060079DE RID: 31198 RVA: 0x0021C7E0 File Offset: 0x0021A9E0
		public event Action<ulong> EventOnBattleRoomPlayerStatusChangedNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPlayerStatusChangedNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPlayerStatusChangedNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ulong> action = this.EventOnBattleRoomPlayerStatusChangedNtf;
				Action<ulong> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ulong>>(ref this.EventOnBattleRoomPlayerStatusChangedNtf, (Action<ulong>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPlayerStatusChangedNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPlayerStatusChangedNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ulong> action = this.EventOnBattleRoomPlayerStatusChangedNtf;
				Action<ulong> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ulong>>(ref this.EventOnBattleRoomPlayerStatusChangedNtf, (Action<ulong>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000099 RID: 153
		// (add) Token: 0x060079DF RID: 31199 RVA: 0x0021C87C File Offset: 0x0021AA7C
		// (remove) Token: 0x060079E0 RID: 31200 RVA: 0x0021C918 File Offset: 0x0021AB18
		public event Action<ulong, BattleRoomQuitReason> EventOnBattleRoomPlayerQuitNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPlayerQuitNtfAction`2_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPlayerQuitNtfAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ulong, BattleRoomQuitReason> action = this.EventOnBattleRoomPlayerQuitNtf;
				Action<ulong, BattleRoomQuitReason> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ulong, BattleRoomQuitReason>>(ref this.EventOnBattleRoomPlayerQuitNtf, (Action<ulong, BattleRoomQuitReason>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPlayerQuitNtfAction`2_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPlayerQuitNtfAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ulong, BattleRoomQuitReason> action = this.EventOnBattleRoomPlayerQuitNtf;
				Action<ulong, BattleRoomQuitReason> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ulong, BattleRoomQuitReason>>(ref this.EventOnBattleRoomPlayerQuitNtf, (Action<ulong, BattleRoomQuitReason>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400009A RID: 154
		// (add) Token: 0x060079E1 RID: 31201 RVA: 0x0021C9B4 File Offset: 0x0021ABB4
		// (remove) Token: 0x060079E2 RID: 31202 RVA: 0x0021CA50 File Offset: 0x0021AC50
		public event Action<List<int>> EventOnBattleRoomHeroSetupNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomHeroSetupNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomHeroSetupNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<List<int>> action = this.EventOnBattleRoomHeroSetupNtf;
				Action<List<int>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<List<int>>>(ref this.EventOnBattleRoomHeroSetupNtf, (Action<List<int>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomHeroSetupNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomHeroSetupNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<List<int>> action = this.EventOnBattleRoomHeroSetupNtf;
				Action<List<int>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<List<int>>>(ref this.EventOnBattleRoomHeroSetupNtf, (Action<List<int>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400009B RID: 155
		// (add) Token: 0x060079E3 RID: 31203 RVA: 0x0021CAEC File Offset: 0x0021ACEC
		// (remove) Token: 0x060079E4 RID: 31204 RVA: 0x0021CB88 File Offset: 0x0021AD88
		public event Action EventOnBattleRoomTeamBattleStartNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomTeamBattleStartNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomTeamBattleStartNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomTeamBattleStartNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomTeamBattleStartNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomTeamBattleStartNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomTeamBattleStartNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomTeamBattleStartNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomTeamBattleStartNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400009C RID: 156
		// (add) Token: 0x060079E5 RID: 31205 RVA: 0x0021CC24 File Offset: 0x0021AE24
		// (remove) Token: 0x060079E6 RID: 31206 RVA: 0x0021CCC0 File Offset: 0x0021AEC0
		public event Action EventOnBattleRoomPVPBattleStartNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPVPBattleStartNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPVPBattleStartNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPVPBattleStartNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPVPBattleStartNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPVPBattleStartNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPVPBattleStartNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPVPBattleStartNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPVPBattleStartNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400009D RID: 157
		// (add) Token: 0x060079E7 RID: 31207 RVA: 0x0021CD5C File Offset: 0x0021AF5C
		// (remove) Token: 0x060079E8 RID: 31208 RVA: 0x0021CDF8 File Offset: 0x0021AFF8
		public event Action EventOnBattleRoomRealTimePVPBattleStartNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomRealTimePVPBattleStartNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomRealTimePVPBattleStartNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomRealTimePVPBattleStartNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomRealTimePVPBattleStartNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400009E RID: 158
		// (add) Token: 0x060079E9 RID: 31209 RVA: 0x0021CE94 File Offset: 0x0021B094
		// (remove) Token: 0x060079EA RID: 31210 RVA: 0x0021CF30 File Offset: 0x0021B130
		public event Action<ulong> EventOnBattleRoomBattleCommandExecuteNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomBattleCommandExecuteNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnBattleRoomBattleCommandExecuteNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ulong> action = this.EventOnBattleRoomBattleCommandExecuteNtf;
				Action<ulong> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ulong>>(ref this.EventOnBattleRoomBattleCommandExecuteNtf, (Action<ulong>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomBattleCommandExecuteNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomBattleCommandExecuteNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ulong> action = this.EventOnBattleRoomBattleCommandExecuteNtf;
				Action<ulong> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ulong>>(ref this.EventOnBattleRoomBattleCommandExecuteNtf, (Action<ulong>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400009F RID: 159
		// (add) Token: 0x060079EB RID: 31211 RVA: 0x0021CFCC File Offset: 0x0021B1CC
		// (remove) Token: 0x060079EC RID: 31212 RVA: 0x0021D068 File Offset: 0x0021B268
		public event Action EventOnBattleRoomTeamBattleFinishNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomTeamBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomTeamBattleFinishNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomTeamBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomTeamBattleFinishNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A0 RID: 160
		// (add) Token: 0x060079ED RID: 31213 RVA: 0x0021D104 File Offset: 0x0021B304
		// (remove) Token: 0x060079EE RID: 31214 RVA: 0x0021D1A0 File Offset: 0x0021B3A0
		public event Action EventOnBattleRoomPVPBattleFinishNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPVPBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPVPBattleFinishNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPVPBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPVPBattleFinishNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A1 RID: 161
		// (add) Token: 0x060079EF RID: 31215 RVA: 0x0021D23C File Offset: 0x0021B43C
		// (remove) Token: 0x060079F0 RID: 31216 RVA: 0x0021D2D8 File Offset: 0x0021B4D8
		public event Action EventOnBattleRoomRealTimePVPBattleFinishNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomRealTimePVPBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomRealTimePVPBattleFinishNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomRealTimePVPBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomRealTimePVPBattleFinishNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A2 RID: 162
		// (add) Token: 0x060079F1 RID: 31217 RVA: 0x0021D374 File Offset: 0x0021B574
		// (remove) Token: 0x060079F2 RID: 31218 RVA: 0x0021D410 File Offset: 0x0021B610
		public event Action EventOnBattleRoomGuildMassiveCombatBattleFinishNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A3 RID: 163
		// (add) Token: 0x060079F3 RID: 31219 RVA: 0x0021D4AC File Offset: 0x0021B6AC
		// (remove) Token: 0x060079F4 RID: 31220 RVA: 0x0021D548 File Offset: 0x0021B748
		public event Action EventOnBattleRoomPlayerBattleInfoInitNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPlayerBattleInfoInitNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPlayerBattleInfoInitNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomPlayerBattleInfoInitNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomPlayerBattleInfoInitNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A4 RID: 164
		// (add) Token: 0x060079F5 RID: 31221 RVA: 0x0021D5E4 File Offset: 0x0021B7E4
		// (remove) Token: 0x060079F6 RID: 31222 RVA: 0x0021D680 File Offset: 0x0021B880
		public event Action EventOnBattleRoomDataChangeNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattleRoomDataChangeNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattleRoomDataChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomDataChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomDataChangeNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattleRoomDataChangeNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattleRoomDataChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattleRoomDataChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattleRoomDataChangeNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x060079F7 RID: 31223 RVA: 0x0021D71C File Offset: 0x0021B91C
		public bool SendChatTextMessage(ChatChannel channel, string content)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendChatTextMessageChatChannelString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendChatTextMessageChatChannelString_hotfix.call(new object[]
				{
					this,
					channel,
					content
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			content = content.Replace("\n", string.Empty);
			ChatMessageSendReq chatMessageSendReq = new ChatMessageSendReq();
			chatMessageSendReq.ChatInfo = new ProChatInfo();
			chatMessageSendReq.ChannelId = (int)channel;
			chatMessageSendReq.ChatInfo.ChatSrcType = 0;
			chatMessageSendReq.ChatInfo.SrcName = this.m_playerBasicInfoComponent.GetPlayerName();
			chatMessageSendReq.ChatInfo.AvatarId = this.m_playerBasicInfoComponent.GetHeadIcon();
			chatMessageSendReq.ChatInfo.ChatContentType = 0;
			chatMessageSendReq.ChatInfo.SrcPlayerLevel = this.m_playerBasicInfoComponent.GetLevel();
			chatMessageSendReq.ChatInfo.SrcGameUserID = this.m_playerBasicInfoComponent.GetUserId();
			if (channel == ChatChannel.Private)
			{
				chatMessageSendReq.DestGameUserId = this.m_chatComponent.m_currPrivateChatPlayerGameUserId;
			}
			else if (channel == ChatChannel.Group)
			{
				chatMessageSendReq.ChatGroupId = this.m_chatComponent.GetGroupChatTarget();
			}
			chatMessageSendReq.Content = new ProChatContentText();
			chatMessageSendReq.Content.Text = content;
			return this.SendMessage(chatMessageSendReq);
		}

		// Token: 0x060079F8 RID: 31224 RVA: 0x0021D898 File Offset: 0x0021BA98
		public bool SendChatExpressionMessage(ChatChannel channel, string content)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendChatExpressionMessageChatChannelString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendChatExpressionMessageChatChannelString_hotfix.call(new object[]
				{
					this,
					channel,
					content
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			content = content.Replace("\n", string.Empty);
			ChatMessageSendReq chatMessageSendReq = new ChatMessageSendReq();
			chatMessageSendReq.ChatInfo = new ProChatInfo();
			chatMessageSendReq.ChannelId = (int)channel;
			chatMessageSendReq.ChatInfo.ChatSrcType = 0;
			chatMessageSendReq.ChatInfo.SrcName = this.m_playerBasicInfoComponent.GetPlayerName();
			chatMessageSendReq.ChatInfo.AvatarId = this.m_playerBasicInfoComponent.GetHeadIcon();
			chatMessageSendReq.ChatInfo.ChatContentType = 3;
			chatMessageSendReq.ChatInfo.SrcPlayerLevel = this.m_playerBasicInfoComponent.GetLevel();
			chatMessageSendReq.ChatInfo.SrcGameUserID = this.m_playerBasicInfoComponent.GetUserId();
			if (channel == ChatChannel.Private)
			{
				chatMessageSendReq.DestGameUserId = this.m_chatComponent.m_currPrivateChatPlayerGameUserId;
			}
			else if (channel == ChatChannel.Group)
			{
				chatMessageSendReq.ChatGroupId = this.m_chatComponent.GetGroupChatTarget();
			}
			chatMessageSendReq.Content = new ProChatContentText();
			chatMessageSendReq.Content.Text = content;
			return this.SendMessage(chatMessageSendReq);
		}

		// Token: 0x060079F9 RID: 31225 RVA: 0x0021DA14 File Offset: 0x0021BC14
		public bool SendChatVoiceMessage(ChatChannel channel, byte[] voiceBytes, int length, int frequency, int samples, string translateText, string destId = "")
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendChatVoiceMessageChatChannelBytebeInt32Int32Int32StringString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendChatVoiceMessageChatChannelBytebeInt32Int32Int32StringString_hotfix.call(new object[]
				{
					this,
					channel,
					voiceBytes,
					length,
					frequency,
					samples,
					translateText,
					destId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatMessageSendReq chatMessageSendReq = new ChatMessageSendReq();
			chatMessageSendReq.ChatInfo = new ProChatInfo();
			chatMessageSendReq.ChannelId = (int)channel;
			chatMessageSendReq.ChatInfo.ChatSrcType = 0;
			chatMessageSendReq.ChatInfo.SrcName = this.m_playerBasicInfoComponent.GetPlayerName();
			chatMessageSendReq.ChatInfo.AvatarId = this.m_playerBasicInfoComponent.GetHeadIcon();
			chatMessageSendReq.ChatInfo.ChatContentType = 1;
			chatMessageSendReq.ChatInfo.SrcPlayerLevel = this.m_playerBasicInfoComponent.GetLevel();
			chatMessageSendReq.ChatInfo.SrcGameUserID = this.m_playerBasicInfoComponent.GetUserId();
			if (channel == ChatChannel.Private)
			{
				chatMessageSendReq.DestGameUserId = destId;
			}
			if (channel == ChatChannel.Group)
			{
				chatMessageSendReq.ChatGroupId = destId;
			}
			chatMessageSendReq.VoiceInfo = new ProChatContentVoice();
			chatMessageSendReq.VoiceInfo.Voice = voiceBytes;
			chatMessageSendReq.VoiceInfo.VoiceLenth = length;
			chatMessageSendReq.VoiceInfo.TranslateText = translateText;
			chatMessageSendReq.VoiceInfo.AudioFrequency = frequency;
			chatMessageSendReq.VoiceInfo.AudioSampleLength = samples;
			return this.SendMessage(chatMessageSendReq);
		}

		// Token: 0x060079FA RID: 31226 RVA: 0x0021DBE8 File Offset: 0x0021BDE8
		public bool SendGetVoiceContentMessage(ChatChannel channel, ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetVoiceContentMessageChatChannelUInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetVoiceContentMessageChatChannelUInt64_hotfix.call(new object[]
				{
					this,
					channel,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ChatVoiceContentReq
			{
				ChannelId = (int)channel,
				InstanceId = instanceId
			});
		}

		// Token: 0x060079FB RID: 31227 RVA: 0x0021DC90 File Offset: 0x0021BE90
		public bool SendWorldEnterNewRoomMessage(int roomId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendWorldEnterNewRoomMessageInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendWorldEnterNewRoomMessageInt32_hotfix.call(new object[]
				{
					this,
					roomId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ChatWorldChannelRoomEnterReq
			{
				RoomId = roomId
			});
		}

		// Token: 0x060079FC RID: 31228 RVA: 0x0021DD20 File Offset: 0x0021BF20
		public bool SendGetChatContactUserSummaryInfoMessage(List<string> playerIdList)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetChatContactUserSummaryInfoMessageList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetChatContactUserSummaryInfoMessageList`1_hotfix.call(new object[]
				{
					this,
					playerIdList
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatContactUserSummaryInfoReq chatContactUserSummaryInfoReq = new ChatContactUserSummaryInfoReq();
			chatContactUserSummaryInfoReq.ContactUserList.AddRange(playerIdList);
			return this.SendMessage(chatContactUserSummaryInfoReq);
		}

		// Token: 0x060079FD RID: 31229 RVA: 0x0021DDB8 File Offset: 0x0021BFB8
		private void OnMessage(ChatContactUserSummaryInfoAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatContactUserSummaryInfoAck_hotfix != null)
			{
				this.m_OnMessageChatContactUserSummaryInfoAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.NotifyGetPlayerInfo(msg.UserSummaryInfoList);
			if (this.EventOnChatContactUserSummaryInfoAck != null)
			{
				this.EventOnChatContactUserSummaryInfoAck();
			}
		}

		// Token: 0x060079FE RID: 31230 RVA: 0x0021DE50 File Offset: 0x0021C050
		private void OnMessage(DSChatNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSChatNtf_hotfix != null)
			{
				this.m_OnMessageDSChatNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.DeSerialize(msg);
		}

		// Token: 0x060079FF RID: 31231 RVA: 0x0021DECC File Offset: 0x0021C0CC
		private void OnMessage(ChatMessageNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatMessageNtf_hotfix != null)
			{
				this.m_OnMessageChatMessageNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.ChannelId == 0 || msg.ChannelId == 4)
			{
				ChatMessage chatMessage = ChatMessageFactory.CreateChatMessageByProtocol(msg);
				List<UserSummary> blackList = this.GetBlackList();
				foreach (UserSummary userSummary in blackList)
				{
					if (userSummary.UserId == chatMessage.SrcGameUserID)
					{
						return;
					}
				}
				if (msg.ChannelId == 4 && this.m_chatComponent.GetUserInfo(chatMessage.SrcGameUserID) == null)
				{
					UserSummary userSummary2 = new UserSummary();
					userSummary2.UserId = chatMessage.SrcGameUserID;
					userSummary2.Name = chatMessage.SrcName;
					userSummary2.Level = chatMessage.SrcPlayerLevel;
					this.m_chatComponent.AddUserInfo(userSummary2);
				}
			}
			ChatMessage obj = this.m_chatComponent.NotifyChatMessage(msg);
			if (this.EventOnChatMessageNtf != null)
			{
				this.EventOnChatMessageNtf(obj);
			}
		}

		// Token: 0x06007A00 RID: 31232 RVA: 0x0021E044 File Offset: 0x0021C244
		private void OnMessage(ChatMessageSendAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatMessageSendAck_hotfix != null)
			{
				this.m_OnMessageChatMessageSendAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnChatMessageAck != null)
			{
				this.EventOnChatMessageAck(msg.Result);
			}
		}

		// Token: 0x06007A01 RID: 31233 RVA: 0x0021E0D0 File Offset: 0x0021C2D0
		private void OnMessage(ChatBannedNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatBannedNtf_hotfix != null)
			{
				this.m_OnMessageChatBannedNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.Ban(new DateTime(msg.BannedTime));
		}

		// Token: 0x06007A02 RID: 31234 RVA: 0x0021E158 File Offset: 0x0021C358
		private void OnMessage(ChatVoiceContentAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatVoiceContentAck_hotfix != null)
			{
				this.m_OnMessageChatVoiceContentAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatVoiceMessage chatVoiceMessage = null;
			if (msg.ChatContentVoice != null)
			{
				chatVoiceMessage = new ChatVoiceMessage();
				chatVoiceMessage.VoiceData = msg.ChatContentVoice.Voice;
				chatVoiceMessage.AudioFrequency = msg.ChatContentVoice.AudioFrequency;
				chatVoiceMessage.SampleLength = msg.ChatContentVoice.AudioSampleLength;
			}
			if (this.EventOnChatGetVoiceContentAck != null)
			{
				this.EventOnChatGetVoiceContentAck(chatVoiceMessage);
			}
		}

		// Token: 0x06007A03 RID: 31235 RVA: 0x0021E228 File Offset: 0x0021C428
		private void OnMessage(ChatWorldChannelRoomEnterAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatWorldChannelRoomEnterAck_hotfix != null)
			{
				this.m_OnMessageChatWorldChannelRoomEnterAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0 || msg.Result == -1405)
			{
				this.m_chatComponent.NotifyEnterNewRoom(msg.RoomId);
			}
			if (this.EventOnChatEnterRoomAck != null)
			{
				this.EventOnChatEnterRoomAck(msg.Result, msg.RoomId);
			}
		}

		// Token: 0x06007A04 RID: 31236 RVA: 0x0021E2E8 File Offset: 0x0021C4E8
		private void OnMessage(ChatGuildHistoryMessageNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGuildHistoryMessageNtf_hotfix != null)
			{
				this.m_OnMessageChatGuildHistoryMessageNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			foreach (ChatMessageNtf msg2 in msg.MsgList)
			{
				this.m_chatComponent.NotifyChatMessage(msg2);
			}
		}

		// Token: 0x06007A05 RID: 31237 RVA: 0x0021E3B0 File Offset: 0x0021C5B0
		public string GetChatGroupName(string groupId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetChatGroupNameString_hotfix != null)
			{
				return (string)this.m_GetChatGroupNameString_hotfix.call(new object[]
				{
					this,
					groupId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupCompactInfo chatGroupSimpleInfo = this.m_chatGroupComponent.GetChatGroupSimpleInfo(groupId);
			return (chatGroupSimpleInfo == null) ? string.Empty : chatGroupSimpleInfo.ChatGroupName;
		}

		// Token: 0x06007A06 RID: 31238 RVA: 0x0021E450 File Offset: 0x0021C650
		public string GetPrivateChatPlayeName(string gameUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPrivateChatPlayeNameString_hotfix != null)
			{
				return (string)this.m_GetPrivateChatPlayeNameString_hotfix.call(new object[]
				{
					this,
					gameUserId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			UserSummary userInfo = this.m_chatComponent.GetUserInfo(gameUserId);
			return (userInfo == null) ? string.Empty : userInfo.Name;
		}

		// Token: 0x06007A07 RID: 31239 RVA: 0x0021E4F0 File Offset: 0x0021C6F0
		public ChatComponent GetChatComponent()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetChatComponent_hotfix != null)
			{
				return (ChatComponent)this.m_GetChatComponent_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent;
		}

		// Token: 0x06007A08 RID: 31240 RVA: 0x0021E564 File Offset: 0x0021C764
		public int CanSendChatMessage(int channelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanSendChatMessageInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanSendChatMessageInt32_hotfix.call(new object[]
				{
					this,
					channelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.CanSendChatMessage(channelId);
		}

		// Token: 0x06007A09 RID: 31241 RVA: 0x0021E5EC File Offset: 0x0021C7EC
		public List<ChatComponent.ChatMessageClient> GetChatMessageList(ChatChannel channel)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetChatMessageListChatChannel_hotfix != null)
			{
				return (List<ChatComponent.ChatMessageClient>)this.m_GetChatMessageListChatChannel_hotfix.call(new object[]
				{
					this,
					channel
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetChatMessageList(channel);
		}

		// Token: 0x06007A0A RID: 31242 RVA: 0x0021E674 File Offset: 0x0021C874
		public int GetUnReadChatMsgCount4PointPlayerOrGroup(ChatChannel channel, string id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUnReadChatMsgCount4PointPlayerOrGroupChatChannelString_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetUnReadChatMsgCount4PointPlayerOrGroupChatChannelString_hotfix.call(new object[]
				{
					this,
					channel,
					id
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetUnReadChatMsgCount4PointPlayerOrGroup(channel, id);
		}

		// Token: 0x06007A0B RID: 31243 RVA: 0x0021E710 File Offset: 0x0021C910
		public string GetGroupChatId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGroupChatId_hotfix != null)
			{
				return (string)this.m_GetGroupChatId_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetGroupChatTarget();
		}

		// Token: 0x06007A0C RID: 31244 RVA: 0x0021E788 File Offset: 0x0021C988
		public void SetGroupChatTarget(string groupId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetGroupChatTargetString_hotfix != null)
			{
				this.m_SetGroupChatTargetString_hotfix.call(new object[]
				{
					this,
					groupId
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.SetGroupChatTarget(groupId);
		}

		// Token: 0x06007A0D RID: 31245 RVA: 0x0021E804 File Offset: 0x0021CA04
		public void ClearGroupChatTarget()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ClearGroupChatTarget_hotfix != null)
			{
				this.m_ClearGroupChatTarget_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.m_currGroupChatGroupId = string.Empty;
		}

		// Token: 0x06007A0E RID: 31246 RVA: 0x0021E874 File Offset: 0x0021CA74
		public void SetPrivateChatTarget(string gameUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetPrivateChatTargetString_hotfix != null)
			{
				this.m_SetPrivateChatTargetString_hotfix.call(new object[]
				{
					this,
					gameUserId
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.SetPrivateChatTarget(gameUserId);
		}

		// Token: 0x06007A0F RID: 31247 RVA: 0x0021E8F0 File Offset: 0x0021CAF0
		public void CleanPrivateChatTarget()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CleanPrivateChatTarget_hotfix != null)
			{
				this.m_CleanPrivateChatTarget_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.m_currPrivateChatPlayerGameUserId = string.Empty;
		}

		// Token: 0x06007A10 RID: 31248 RVA: 0x0021E960 File Offset: 0x0021CB60
		public string GetPrivateChatPlayerId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPrivateChatPlayerId_hotfix != null)
			{
				return (string)this.m_GetPrivateChatPlayerId_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.m_currPrivateChatPlayerGameUserId;
		}

		// Token: 0x06007A11 RID: 31249 RVA: 0x0021E9D8 File Offset: 0x0021CBD8
		public List<string> GetRecentPrivateChatIdList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRecentPrivateChatIdList_hotfix != null)
			{
				return (List<string>)this.m_GetRecentPrivateChatIdList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.m_recentPrivateChatPlayerIdList;
		}

		// Token: 0x06007A12 RID: 31250 RVA: 0x0021EA50 File Offset: 0x0021CC50
		public int GetNewChatMsgCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNewChatMsgCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetNewChatMsgCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetAllUnReadChatMsgCount();
		}

		// Token: 0x06007A13 RID: 31251 RVA: 0x0021EAC8 File Offset: 0x0021CCC8
		public int GetGroupUnreadChatMsgCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGroupUnreadChatMsgCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGroupUnreadChatMsgCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetGroupUnreadChatMsgCount();
		}

		// Token: 0x06007A14 RID: 31252 RVA: 0x0021EB40 File Offset: 0x0021CD40
		public int GetAssignGroupUnreadChatMsgCount(string groupID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAssignGroupUnreadChatMsgCountString_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetAssignGroupUnreadChatMsgCountString_hotfix.call(new object[]
				{
					this,
					groupID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetAssignGroupUnreadChatMsgCount(groupID);
		}

		// Token: 0x06007A15 RID: 31253 RVA: 0x0021EBC8 File Offset: 0x0021CDC8
		public int GetAssignPrivateUnreadChatMsgCount(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAssignPrivateUnreadChatMsgCountString_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetAssignPrivateUnreadChatMsgCountString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetAssignPrivateUnreadChatMsgCount(userID);
		}

		// Token: 0x06007A16 RID: 31254 RVA: 0x0021EC50 File Offset: 0x0021CE50
		public int GetPrivateUnreadChatMsgCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPrivateUnreadChatMsgCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPrivateUnreadChatMsgCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetPrivateUnreadChatMsgCount();
		}

		// Token: 0x06007A17 RID: 31255 RVA: 0x0021ECC8 File Offset: 0x0021CEC8
		public int GetGuildUnreadChatMsgCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildUnreadChatMsgCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGuildUnreadChatMsgCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetGuildUnreadChatMsgCount();
		}

		// Token: 0x06007A18 RID: 31256 RVA: 0x0021ED40 File Offset: 0x0021CF40
		public int GetRoomIndex()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRoomIndex_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRoomIndex_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.RoomIndex;
		}

		// Token: 0x06007A19 RID: 31257 RVA: 0x0021EDB8 File Offset: 0x0021CFB8
		public void ReadChat(ChatChannel type)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ReadChatChatChannel_hotfix != null)
			{
				this.m_ReadChatChatChannel_hotfix.call(new object[]
				{
					this,
					type
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<ChatComponent.ChatMessageClient> chatMessageList = this.m_chatComponent.GetChatMessageList(type);
			foreach (ChatComponent.ChatMessageClient chatMessageClient in chatMessageList)
			{
				chatMessageClient.isRead = (chatMessageClient.ChatMessageInfo.ChannelId == type);
			}
		}

		// Token: 0x06007A1A RID: 31258 RVA: 0x0021EE8C File Offset: 0x0021D08C
		public void ReadChatBeforeDate(ChatChannel type, DateTime date)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ReadChatBeforeDateChatChannelDateTime_hotfix != null)
			{
				this.m_ReadChatBeforeDateChatChannelDateTime_hotfix.call(new object[]
				{
					this,
					type,
					date
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.ReadChatBeforeDate(type, date);
		}

		// Token: 0x06007A1B RID: 31259 RVA: 0x0021EF1C File Offset: 0x0021D11C
		public void RefreshGuildChatLastReadTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_RefreshGuildChatLastReadTime_hotfix != null)
			{
				this.m_RefreshGuildChatLastReadTime_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.m_guildChatLastReadTime = this.m_playerBasicInfoComponent.GetCurrentTime();
			this.m_chatComponent.DataDirty = true;
		}

		// Token: 0x06007A1C RID: 31260 RVA: 0x0021EFA0 File Offset: 0x0021D1A0
		public DateTime GetGuildChatLastReadTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildChatLastReadTime_hotfix != null)
			{
				return (DateTime)this.m_GetGuildChatLastReadTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.m_guildChatLastReadTime;
		}

		// Token: 0x06007A1D RID: 31261 RVA: 0x0021F018 File Offset: 0x0021D218
		public KeyValuePair<List<string>, List<string>> GetRecentChatTargetList(ChatChannel channel)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRecentChatTargetListChatChannel_hotfix != null)
			{
				return (KeyValuePair<List<string>, List<string>>)this.m_GetRecentChatTargetListChatChannel_hotfix.call(new object[]
				{
					this,
					channel
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_chatComponent.GetRecentChatTargetList(channel);
		}

		// Token: 0x06007A1E RID: 31262 RVA: 0x0021F0A0 File Offset: 0x0021D2A0
		public void ClearGuildChatContent()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ClearGuildChatContent_hotfix != null)
			{
				this.m_ClearGuildChatContent_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatComponent.m_guildChatMsgList.Clear();
		}

		// Token: 0x06007A1F RID: 31263 RVA: 0x0021F110 File Offset: 0x0021D310
		public NoticeText GetWaitingNoticeStringListFirstNotice()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetWaitingNoticeStringListFirstNotice_hotfix != null)
			{
				return (NoticeText)this.m_GetWaitingNoticeStringListFirstNotice_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.GetGetWaitingNoticeStringListCount() > 0)
			{
				NoticeText result = this.m_waitingNoticeStringList[0];
				this.m_waitingNoticeStringList.RemoveAt(0);
				return result;
			}
			return null;
		}

		// Token: 0x06007A20 RID: 31264 RVA: 0x0021F1A4 File Offset: 0x0021D3A4
		public int GetGetWaitingNoticeStringListCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGetWaitingNoticeStringListCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGetWaitingNoticeStringListCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_waitingNoticeStringList.Count;
		}

		// Token: 0x06007A21 RID: 31265 RVA: 0x0021F21C File Offset: 0x0021D41C
		public void AddNoticeToWaitingNoticeStringList(NoticeText noticeText)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_AddNoticeToWaitingNoticeStringListNoticeText_hotfix != null)
			{
				this.m_AddNoticeToWaitingNoticeStringListNoticeText_hotfix.call(new object[]
				{
					this,
					noticeText
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_waitingNoticeStringList.Count > 0)
			{
				this.m_waitingNoticeStringList.Clear();
			}
			this.m_waitingNoticeStringList.Add(noticeText);
		}

		// Token: 0x06007A22 RID: 31266 RVA: 0x0021F2B4 File Offset: 0x0021D4B4
		public void SetIsShowingNoticeFlag(bool value)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetIsShowingNoticeFlagBoolean_hotfix != null)
			{
				this.m_SetIsShowingNoticeFlagBoolean_hotfix.call(new object[]
				{
					this,
					value
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isShowingNotice = value;
		}

		// Token: 0x06007A23 RID: 31267 RVA: 0x0021F32C File Offset: 0x0021D52C
		public bool GetIsShowingNoticeFlag()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetIsShowingNoticeFlag_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GetIsShowingNoticeFlag_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_isShowingNotice;
		}

		// Token: 0x06007A24 RID: 31268 RVA: 0x0021F3A0 File Offset: 0x0021D5A0
		private List<ChatComponent.ChatMessageClient> GetChatMsgWithBlacklist(ChatChannel channel)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetChatMsgWithBlacklistChatChannel_hotfix != null)
			{
				return (List<ChatComponent.ChatMessageClient>)this.m_GetChatMsgWithBlacklistChatChannel_hotfix.call(new object[]
				{
					this,
					channel
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<ChatComponent.ChatMessageClient> chatMessageList = this.m_chatComponent.GetChatMessageList(channel);
			return chatMessageList.FindAll(delegate(ChatComponent.ChatMessageClient msg)
			{
				List<UserSummary> blackList = this.GetBlackList();
				foreach (UserSummary userSummary in blackList)
				{
					if (userSummary.UserId == msg.ChatMessageInfo.SrcGameUserID)
					{
						return false;
					}
				}
				return true;
			});
		}

		// Token: 0x140000A5 RID: 165
		// (add) Token: 0x06007A25 RID: 31269 RVA: 0x0021F440 File Offset: 0x0021D640
		// (remove) Token: 0x06007A26 RID: 31270 RVA: 0x0021F4DC File Offset: 0x0021D6DC
		public event Action<ChatMessage> EventOnChatMessageNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatMessageNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnChatMessageNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ChatMessage> action = this.EventOnChatMessageNtf;
				Action<ChatMessage> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ChatMessage>>(ref this.EventOnChatMessageNtf, (Action<ChatMessage>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatMessageNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnChatMessageNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ChatMessage> action = this.EventOnChatMessageNtf;
				Action<ChatMessage> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ChatMessage>>(ref this.EventOnChatMessageNtf, (Action<ChatMessage>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A6 RID: 166
		// (add) Token: 0x06007A27 RID: 31271 RVA: 0x0021F578 File Offset: 0x0021D778
		// (remove) Token: 0x06007A28 RID: 31272 RVA: 0x0021F614 File Offset: 0x0021D814
		public event Action EventOnChatContactUserSummaryInfoAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatContactUserSummaryInfoAckAction_hotfix != null)
				{
					this.m_add_EventOnChatContactUserSummaryInfoAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnChatContactUserSummaryInfoAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnChatContactUserSummaryInfoAck, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatContactUserSummaryInfoAckAction_hotfix != null)
				{
					this.m_remove_EventOnChatContactUserSummaryInfoAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnChatContactUserSummaryInfoAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnChatContactUserSummaryInfoAck, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A7 RID: 167
		// (add) Token: 0x06007A29 RID: 31273 RVA: 0x0021F6B0 File Offset: 0x0021D8B0
		// (remove) Token: 0x06007A2A RID: 31274 RVA: 0x0021F74C File Offset: 0x0021D94C
		public event Action<int> EventOnChatMessageAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatMessageAckAction`1_hotfix != null)
				{
					this.m_add_EventOnChatMessageAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnChatMessageAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnChatMessageAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatMessageAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnChatMessageAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnChatMessageAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnChatMessageAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A8 RID: 168
		// (add) Token: 0x06007A2B RID: 31275 RVA: 0x0021F7E8 File Offset: 0x0021D9E8
		// (remove) Token: 0x06007A2C RID: 31276 RVA: 0x0021F884 File Offset: 0x0021DA84
		public event Action<ChatVoiceMessage> EventOnChatGetVoiceContentAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatGetVoiceContentAckAction`1_hotfix != null)
				{
					this.m_add_EventOnChatGetVoiceContentAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ChatVoiceMessage> action = this.EventOnChatGetVoiceContentAck;
				Action<ChatVoiceMessage> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ChatVoiceMessage>>(ref this.EventOnChatGetVoiceContentAck, (Action<ChatVoiceMessage>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatGetVoiceContentAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnChatGetVoiceContentAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ChatVoiceMessage> action = this.EventOnChatGetVoiceContentAck;
				Action<ChatVoiceMessage> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ChatVoiceMessage>>(ref this.EventOnChatGetVoiceContentAck, (Action<ChatVoiceMessage>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000A9 RID: 169
		// (add) Token: 0x06007A2D RID: 31277 RVA: 0x0021F920 File Offset: 0x0021DB20
		// (remove) Token: 0x06007A2E RID: 31278 RVA: 0x0021F9BC File Offset: 0x0021DBBC
		public event Action<int, int> EventOnChatEnterRoomAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatEnterRoomAckAction`2_hotfix != null)
				{
					this.m_add_EventOnChatEnterRoomAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnChatEnterRoomAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnChatEnterRoomAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatEnterRoomAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnChatEnterRoomAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnChatEnterRoomAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnChatEnterRoomAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007A2F RID: 31279 RVA: 0x0021FA58 File Offset: 0x0021DC58
		public bool SendChangeOwnerReq(string chatGroupId, string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendChangeOwnerReqStringString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendChangeOwnerReqStringString_hotfix.call(new object[]
				{
					this,
					chatGroupId,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupChangeOwnerReq msg = new ChatGroupChangeOwnerReq
			{
				ChatGroupId = chatGroupId,
				TargetUserId = targetUserId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A30 RID: 31280 RVA: 0x0021FB04 File Offset: 0x0021DD04
		public bool SendChangeNameReq(string chatGroupId, string newName)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendChangeNameReqStringString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendChangeNameReqStringString_hotfix.call(new object[]
				{
					this,
					chatGroupId,
					newName
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupChangeNameReq msg = new ChatGroupChangeNameReq
			{
				ChatGroupId = chatGroupId,
				NewName = newName
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A31 RID: 31281 RVA: 0x0021FBB0 File Offset: 0x0021DDB0
		public bool SendCreateChatGroupReq(string groupName, List<string> targetUserIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendCreateChatGroupReqStringList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendCreateChatGroupReqStringList`1_hotfix.call(new object[]
				{
					this,
					groupName,
					targetUserIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupCreateChatGroupReq chatGroupCreateChatGroupReq = new ChatGroupCreateChatGroupReq
			{
				GroupName = groupName
			};
			chatGroupCreateChatGroupReq.TargetUserIds.AddRange(targetUserIds);
			return this.SendMessage(chatGroupCreateChatGroupReq);
		}

		// Token: 0x06007A32 RID: 31282 RVA: 0x0021FC60 File Offset: 0x0021DE60
		public bool SendGetChatGroupMemberReq(string chatGroupId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetChatGroupMemberReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetChatGroupMemberReqString_hotfix.call(new object[]
				{
					this,
					chatGroupId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupGetChatGroupMemberReq msg = new ChatGroupGetChatGroupMemberReq
			{
				ChatGroupId = chatGroupId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A33 RID: 31283 RVA: 0x0021FCF4 File Offset: 0x0021DEF4
		public bool SendGetAllChatGroupReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetAllChatGroupReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetAllChatGroupReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupGetChatGroupReq msg = new ChatGroupGetChatGroupReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007A34 RID: 31284 RVA: 0x0021FD70 File Offset: 0x0021DF70
		public bool SendInviteToChatGroupReq(string chatGroupId, List<string> targetUserIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendInviteToChatGroupReqStringList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendInviteToChatGroupReqStringList`1_hotfix.call(new object[]
				{
					this,
					chatGroupId,
					targetUserIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupInviteToChatGroupReq chatGroupInviteToChatGroupReq = new ChatGroupInviteToChatGroupReq
			{
				ChatGroupId = chatGroupId
			};
			chatGroupInviteToChatGroupReq.TargetUserIds.AddRange(targetUserIds);
			return this.SendMessage(chatGroupInviteToChatGroupReq);
		}

		// Token: 0x06007A35 RID: 31285 RVA: 0x0021FE20 File Offset: 0x0021E020
		public bool SendLeaveChatGroupReq(string chatGroupId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLeaveChatGroupReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLeaveChatGroupReqString_hotfix.call(new object[]
				{
					this,
					chatGroupId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupLeaveChatGroupReq msg = new ChatGroupLeaveChatGroupReq
			{
				ChatGroupId = chatGroupId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A36 RID: 31286 RVA: 0x0021FEB4 File Offset: 0x0021E0B4
		public bool SendKickUserReq(string chatGroupId, string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendKickUserReqStringString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendKickUserReqStringString_hotfix.call(new object[]
				{
					this,
					chatGroupId,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ChatGroupKickUserReq msg = new ChatGroupKickUserReq
			{
				ChatGroupId = chatGroupId,
				TargetUserId = targetUserId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A37 RID: 31287 RVA: 0x0021FF60 File Offset: 0x0021E160
		public bool SendGetUserSummaryReq(List<string> targetUserIds, Action<FriendGetUserSummaryAck> action)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetUserSummaryReqList`1Action`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetUserSummaryReqList`1Action`1_hotfix.call(new object[]
				{
					this,
					targetUserIds,
					action
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = Interlocked.Increment(ref this.summaryToken);
			this.EventsOnGetUserSummaryAck[num % this.EventsOnGetUserSummaryAck.Length] = action;
			FriendGetUserSummaryReq friendGetUserSummaryReq = new FriendGetUserSummaryReq
			{
				ClientOnlyToken = num
			};
			friendGetUserSummaryReq.TargetUserIds.AddRange(targetUserIds);
			return this.SendMessage(friendGetUserSummaryReq);
		}

		// Token: 0x06007A38 RID: 31288 RVA: 0x0022002C File Offset: 0x0021E22C
		private void OnMessage(ChatGroupChangeOwnerAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupChangeOwnerAck_hotfix != null)
			{
				this.m_OnMessageChatGroupChangeOwnerAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnChatGroupChangeOwnerAck != null)
			{
				this.EventOnChatGroupChangeOwnerAck(msg.Result);
			}
		}

		// Token: 0x06007A39 RID: 31289 RVA: 0x002200B8 File Offset: 0x0021E2B8
		private void OnMessage(ChatGroupChangeNameAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupChangeNameAck_hotfix != null)
			{
				this.m_OnMessageChatGroupChangeNameAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnChatGroupChangeNameAck != null)
			{
				this.EventOnChatGroupChangeNameAck(msg.Result);
			}
		}

		// Token: 0x06007A3A RID: 31290 RVA: 0x00220144 File Offset: 0x0021E344
		private void OnMessage(ChatGroupCreateChatGroupAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupCreateChatGroupAck_hotfix != null)
			{
				this.m_OnMessageChatGroupCreateChatGroupAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnCreateChatGroupAck != null)
			{
				this.EventOnCreateChatGroupAck(msg.Result, msg.ChatGroup, msg.FailedUser);
			}
		}

		// Token: 0x06007A3B RID: 31291 RVA: 0x002201DC File Offset: 0x0021E3DC
		private void OnMessage(ChatGroupGetChatGroupAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupGetChatGroupAck_hotfix != null)
			{
				this.m_OnMessageChatGroupGetChatGroupAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_chatGroupComponent.NotifyChatGroupInfo(msg.ChatGroup, this.GetServerTime());
			}
			if (this.EventOnGetAllChatGroupAck != null)
			{
				this.EventOnGetAllChatGroupAck(msg.Result, msg.ChatGroup);
			}
		}

		// Token: 0x06007A3C RID: 31292 RVA: 0x00220290 File Offset: 0x0021E490
		private void OnMessage(ChatGroupGetChatGroupMemberAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupGetChatGroupMemberAck_hotfix != null)
			{
				this.m_OnMessageChatGroupGetChatGroupMemberAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnGetChatGroupMemberAck != null)
			{
				this.EventOnGetChatGroupMemberAck(msg.Result, msg.ChatGroup);
			}
		}

		// Token: 0x06007A3D RID: 31293 RVA: 0x00220324 File Offset: 0x0021E524
		private void OnMessage(ChatGroupInviteToChatGroupAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupInviteToChatGroupAck_hotfix != null)
			{
				this.m_OnMessageChatGroupInviteToChatGroupAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnInviteToChatGroupAck != null)
			{
				this.EventOnInviteToChatGroupAck(msg.Result, msg.ChatGroup, msg.FailedUser);
			}
		}

		// Token: 0x06007A3E RID: 31294 RVA: 0x002203BC File Offset: 0x0021E5BC
		private void OnMessage(ChatGroupLeaveChatGroupAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupLeaveChatGroupAck_hotfix != null)
			{
				this.m_OnMessageChatGroupLeaveChatGroupAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnLeaveChatGroupAck != null)
			{
				this.EventOnLeaveChatGroupAck(msg.Result);
			}
		}

		// Token: 0x06007A3F RID: 31295 RVA: 0x00220448 File Offset: 0x0021E648
		private void OnMessage(ChatGroupKickUserAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupKickUserAck_hotfix != null)
			{
				this.m_OnMessageChatGroupKickUserAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnKickUserFromGroupAck != null)
			{
				this.EventOnKickUserFromGroupAck(msg.Result);
			}
		}

		// Token: 0x06007A40 RID: 31296 RVA: 0x002204D4 File Offset: 0x0021E6D4
		private void OnMessage(FriendGetUserSummaryAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendGetUserSummaryAck_hotfix != null)
			{
				this.m_OnMessageFriendGetUserSummaryAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Action<FriendGetUserSummaryAck> action = this.EventsOnGetUserSummaryAck[msg.Req.ClientOnlyToken % this.EventsOnGetUserSummaryAck.Length];
			if (action != null)
			{
				action(msg);
			}
		}

		// Token: 0x06007A41 RID: 31297 RVA: 0x00220570 File Offset: 0x0021E770
		private void OnMessage(ChatGroupUpdateNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageChatGroupUpdateNtf_hotfix != null)
			{
				this.m_OnMessageChatGroupUpdateNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_chatGroupComponent.ChatGroupStateChangedNtf(msg.ChatGroup);
			if (this.EventOnChatGroupUpdateNtf != null)
			{
				this.EventOnChatGroupUpdateNtf(msg.ChatGroup);
			}
		}

		// Token: 0x06007A42 RID: 31298 RVA: 0x00220610 File Offset: 0x0021E810
		public bool GetGuildMemberSummary(List<string> targetUserIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildMemberSummaryList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GetGuildMemberSummaryList`1_hotfix.call(new object[]
				{
					this,
					targetUserIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendGetUserSummaryReq(targetUserIds, new Action<FriendGetUserSummaryAck>(this.OnGetGuildMemberSummary));
		}

		// Token: 0x06007A43 RID: 31299 RVA: 0x002206A0 File Offset: 0x0021E8A0
		private void OnGetGuildMemberSummary(FriendGetUserSummaryAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnGetGuildMemberSummaryFriendGetUserSummaryAck_hotfix != null)
			{
				this.m_OnGetGuildMemberSummaryFriendGetUserSummaryAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<UserSummary> list = new List<UserSummary>();
			foreach (ProUserSummary pro in msg.Users)
			{
				list.Add(pro.ToUserSummary());
			}
			this.m_friendComponent.GuildPlayers.Clear();
			this.m_friendComponent.GuildPlayers.AddRange(list);
			if (this.EventOnGetUserSummaryAck != null)
			{
				this.EventOnGetUserSummaryAck(msg.Result, list);
			}
		}

		// Token: 0x140000AA RID: 170
		// (add) Token: 0x06007A44 RID: 31300 RVA: 0x002207A8 File Offset: 0x0021E9A8
		// (remove) Token: 0x06007A45 RID: 31301 RVA: 0x00220844 File Offset: 0x0021EA44
		public event Action<int, ProChatGroupInfo, ProChatUserInfo> EventOnCreateChatGroupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnCreateChatGroupAckAction`3_hotfix != null)
				{
					this.m_add_EventOnCreateChatGroupAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action = this.EventOnCreateChatGroupAck;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProChatGroupInfo, ProChatUserInfo>>(ref this.EventOnCreateChatGroupAck, (Action<int, ProChatGroupInfo, ProChatUserInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnCreateChatGroupAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnCreateChatGroupAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action = this.EventOnCreateChatGroupAck;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProChatGroupInfo, ProChatUserInfo>>(ref this.EventOnCreateChatGroupAck, (Action<int, ProChatGroupInfo, ProChatUserInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000AB RID: 171
		// (add) Token: 0x06007A46 RID: 31302 RVA: 0x002208E0 File Offset: 0x0021EAE0
		// (remove) Token: 0x06007A47 RID: 31303 RVA: 0x0022097C File Offset: 0x0021EB7C
		public event Action<int, List<ProChatGroupCompactInfo>> EventOnGetAllChatGroupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGetAllChatGroupAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGetAllChatGroupAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<ProChatGroupCompactInfo>> action = this.EventOnGetAllChatGroupAck;
				Action<int, List<ProChatGroupCompactInfo>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<ProChatGroupCompactInfo>>>(ref this.EventOnGetAllChatGroupAck, (Action<int, List<ProChatGroupCompactInfo>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGetAllChatGroupAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGetAllChatGroupAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<ProChatGroupCompactInfo>> action = this.EventOnGetAllChatGroupAck;
				Action<int, List<ProChatGroupCompactInfo>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<ProChatGroupCompactInfo>>>(ref this.EventOnGetAllChatGroupAck, (Action<int, List<ProChatGroupCompactInfo>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000AC RID: 172
		// (add) Token: 0x06007A48 RID: 31304 RVA: 0x00220A18 File Offset: 0x0021EC18
		// (remove) Token: 0x06007A49 RID: 31305 RVA: 0x00220AB4 File Offset: 0x0021ECB4
		public event Action<int, ProChatGroupInfo> EventOnGetChatGroupMemberAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGetChatGroupMemberAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGetChatGroupMemberAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProChatGroupInfo> action = this.EventOnGetChatGroupMemberAck;
				Action<int, ProChatGroupInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProChatGroupInfo>>(ref this.EventOnGetChatGroupMemberAck, (Action<int, ProChatGroupInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGetChatGroupMemberAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGetChatGroupMemberAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProChatGroupInfo> action = this.EventOnGetChatGroupMemberAck;
				Action<int, ProChatGroupInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProChatGroupInfo>>(ref this.EventOnGetChatGroupMemberAck, (Action<int, ProChatGroupInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000AD RID: 173
		// (add) Token: 0x06007A4A RID: 31306 RVA: 0x00220B50 File Offset: 0x0021ED50
		// (remove) Token: 0x06007A4B RID: 31307 RVA: 0x00220BEC File Offset: 0x0021EDEC
		public event Action<int> EventOnChatGroupChangeOwnerAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatGroupChangeOwnerAckAction`1_hotfix != null)
				{
					this.m_add_EventOnChatGroupChangeOwnerAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnChatGroupChangeOwnerAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnChatGroupChangeOwnerAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatGroupChangeOwnerAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnChatGroupChangeOwnerAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnChatGroupChangeOwnerAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnChatGroupChangeOwnerAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000AE RID: 174
		// (add) Token: 0x06007A4C RID: 31308 RVA: 0x00220C88 File Offset: 0x0021EE88
		// (remove) Token: 0x06007A4D RID: 31309 RVA: 0x00220D24 File Offset: 0x0021EF24
		public event Action<int> EventOnChatGroupChangeNameAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatGroupChangeNameAckAction`1_hotfix != null)
				{
					this.m_add_EventOnChatGroupChangeNameAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnChatGroupChangeNameAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnChatGroupChangeNameAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatGroupChangeNameAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnChatGroupChangeNameAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnChatGroupChangeNameAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnChatGroupChangeNameAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000AF RID: 175
		// (add) Token: 0x06007A4E RID: 31310 RVA: 0x00220DC0 File Offset: 0x0021EFC0
		// (remove) Token: 0x06007A4F RID: 31311 RVA: 0x00220E5C File Offset: 0x0021F05C
		public event Action<int, ProChatGroupInfo, ProChatUserInfo> EventOnInviteToChatGroupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnInviteToChatGroupAckAction`3_hotfix != null)
				{
					this.m_add_EventOnInviteToChatGroupAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action = this.EventOnInviteToChatGroupAck;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProChatGroupInfo, ProChatUserInfo>>(ref this.EventOnInviteToChatGroupAck, (Action<int, ProChatGroupInfo, ProChatUserInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnInviteToChatGroupAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnInviteToChatGroupAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action = this.EventOnInviteToChatGroupAck;
				Action<int, ProChatGroupInfo, ProChatUserInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, ProChatGroupInfo, ProChatUserInfo>>(ref this.EventOnInviteToChatGroupAck, (Action<int, ProChatGroupInfo, ProChatUserInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B0 RID: 176
		// (add) Token: 0x06007A50 RID: 31312 RVA: 0x00220EF8 File Offset: 0x0021F0F8
		// (remove) Token: 0x06007A51 RID: 31313 RVA: 0x00220F94 File Offset: 0x0021F194
		public event Action<int> EventOnLeaveChatGroupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnLeaveChatGroupAckAction`1_hotfix != null)
				{
					this.m_add_EventOnLeaveChatGroupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnLeaveChatGroupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnLeaveChatGroupAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnLeaveChatGroupAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnLeaveChatGroupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnLeaveChatGroupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnLeaveChatGroupAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B1 RID: 177
		// (add) Token: 0x06007A52 RID: 31314 RVA: 0x00221030 File Offset: 0x0021F230
		// (remove) Token: 0x06007A53 RID: 31315 RVA: 0x002210CC File Offset: 0x0021F2CC
		public event Action<int> EventOnKickUserFromGroupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnKickUserFromGroupAckAction`1_hotfix != null)
				{
					this.m_add_EventOnKickUserFromGroupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnKickUserFromGroupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnKickUserFromGroupAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnKickUserFromGroupAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnKickUserFromGroupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnKickUserFromGroupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnKickUserFromGroupAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B2 RID: 178
		// (add) Token: 0x06007A54 RID: 31316 RVA: 0x00221168 File Offset: 0x0021F368
		// (remove) Token: 0x06007A55 RID: 31317 RVA: 0x00221204 File Offset: 0x0021F404
		public event Action<int, List<UserSummary>> EventOnGetUserSummaryAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGetUserSummaryAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGetUserSummaryAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<UserSummary>> action = this.EventOnGetUserSummaryAck;
				Action<int, List<UserSummary>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<UserSummary>>>(ref this.EventOnGetUserSummaryAck, (Action<int, List<UserSummary>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGetUserSummaryAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGetUserSummaryAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<UserSummary>> action = this.EventOnGetUserSummaryAck;
				Action<int, List<UserSummary>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<UserSummary>>>(ref this.EventOnGetUserSummaryAck, (Action<int, List<UserSummary>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B3 RID: 179
		// (add) Token: 0x06007A56 RID: 31318 RVA: 0x002212A0 File Offset: 0x0021F4A0
		// (remove) Token: 0x06007A57 RID: 31319 RVA: 0x0022133C File Offset: 0x0021F53C
		public event Action<ProChatGroupInfo> EventOnChatGroupUpdateNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnChatGroupUpdateNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnChatGroupUpdateNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ProChatGroupInfo> action = this.EventOnChatGroupUpdateNtf;
				Action<ProChatGroupInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ProChatGroupInfo>>(ref this.EventOnChatGroupUpdateNtf, (Action<ProChatGroupInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnChatGroupUpdateNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnChatGroupUpdateNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ProChatGroupInfo> action = this.EventOnChatGroupUpdateNtf;
				Action<ProChatGroupInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ProChatGroupInfo>>(ref this.EventOnChatGroupUpdateNtf, (Action<ProChatGroupInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007A58 RID: 31320 RVA: 0x002213D8 File Offset: 0x0021F5D8
		public bool SendClimbTowerGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendClimbTowerGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendClimbTowerGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ClimbTowerGetReq msg = new ClimbTowerGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007A59 RID: 31321 RVA: 0x00221454 File Offset: 0x0021F654
		public bool SendClimbTowerLevelAttackReq(int floorId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendClimbTowerLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendClimbTowerLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					floorId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ClimbTowerLevelAttackReq msg = new ClimbTowerLevelAttackReq
			{
				FloorId = floorId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A5A RID: 31322 RVA: 0x002214E8 File Offset: 0x0021F6E8
		public bool SendClimbTowerLevelBattleFinishedReq(int floorId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendClimbTowerLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendClimbTowerLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					floorId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ClimbTowerLevelBattleFinishedReq msg = new ClimbTowerLevelBattleFinishedReq
			{
				FloorId = floorId,
				BattleReport = battleReport
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A5B RID: 31323 RVA: 0x00221594 File Offset: 0x0021F794
		public bool SendClimbTowerRaidReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendClimbTowerRaidReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendClimbTowerRaidReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ClimbTowerRaidReq msg = new ClimbTowerRaidReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007A5C RID: 31324 RVA: 0x00221610 File Offset: 0x0021F810
		private void OnMessage(DSClimbTowerNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSClimbTowerNtf_hotfix != null)
			{
				this.m_OnMessageDSClimbTowerNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_climbTowerComponent.DeSerialize(msg);
		}

		// Token: 0x06007A5D RID: 31325 RVA: 0x0022168C File Offset: 0x0021F88C
		private void OnMessage(ClimbTowerGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageClimbTowerGetAck_hotfix != null)
			{
				this.m_OnMessageClimbTowerGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_climbTowerComponent.SetClimbTower(msg);
			}
			if (this.EventOnClimbTowerGetAck != null)
			{
				this.EventOnClimbTowerGetAck(msg.Result);
			}
		}

		// Token: 0x06007A5E RID: 31326 RVA: 0x00221730 File Offset: 0x0021F930
		private void OnMessage(ClimbTowerLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageClimbTowerLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageClimbTowerLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_climbTowerComponent.AttackClimbTowerLevel(msg.FloorId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnClimbTowerLevelAttackAck != null)
			{
				this.EventOnClimbTowerLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007A5F RID: 31327 RVA: 0x00221828 File Offset: 0x0021FA28
		private void OnMessage(ClimbTowerLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageClimbTowerLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageClimbTowerLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				ClimberTowerProcessingBattleParamInterface climberTowerProcessingBattleParamInterface = new ClimberTowerProcessingBattleParamInterface(this.GetProcessingBattle());
				int levelId = climberTowerProcessingBattleParamInterface.GetLevelId();
				int num = this.m_climbTowerComponent.FinishedClimbTowerLevel(msg.FloorId, levelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnClimbTowerLevelBattleFinishedAck != null)
			{
				this.EventOnClimbTowerLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007A60 RID: 31328 RVA: 0x00221974 File Offset: 0x0021FB74
		private void OnMessage(ClimbTowerRaidAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageClimbTowerRaidAck_hotfix != null)
			{
				this.m_OnMessageClimbTowerRaidAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_climbTowerComponent.RaidClimbTowerLevel(msg.FloorId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnClimbTowerRaidAck != null)
			{
				this.EventOnClimbTowerRaidAck(msg.Result, battleReward);
			}
		}

		// Token: 0x06007A61 RID: 31329 RVA: 0x00221A70 File Offset: 0x0021FC70
		public int CanAttackClimbTowerFloor(int floorId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackClimbTowerFloorInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackClimbTowerFloorInt32_hotfix.call(new object[]
				{
					this,
					floorId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.CanAttackClimbTowerLevel(floorId);
		}

		// Token: 0x06007A62 RID: 31330 RVA: 0x00221AF8 File Offset: 0x0021FCF8
		public DateTime GetClimbTowerNextFlushTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClimbTowerNextFlushTime_hotfix != null)
			{
				return (DateTime)this.m_GetClimbTowerNextFlushTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.GetNextFlushTime();
		}

		// Token: 0x06007A63 RID: 31331 RVA: 0x00221B70 File Offset: 0x0021FD70
		public int GetClimbTowerMaxFloorId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClimbTowerMaxFloorId_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetClimbTowerMaxFloorId_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.GetClimbTowerFloorMax();
		}

		// Token: 0x06007A64 RID: 31332 RVA: 0x00221BE8 File Offset: 0x0021FDE8
		public int GetClimbTowerFinishedFloorId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClimbTowerFinishedFloorId_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetClimbTowerFinishedFloorId_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.GetFinishedFloorId();
		}

		// Token: 0x06007A65 RID: 31333 RVA: 0x00221C60 File Offset: 0x0021FE60
		public int GetClimbTowerRaidMaxFloorId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClimbTowerRaidMaxFloorId_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetClimbTowerRaidMaxFloorId_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.GetAutoRaidClimbTowerMax();
		}

		// Token: 0x06007A66 RID: 31334 RVA: 0x00221CD8 File Offset: 0x0021FED8
		public int GetClimbTowerHistoryMaxFloorId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClimbTowerHistoryMaxFloorId_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetClimbTowerHistoryMaxFloorId_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.GetHistoryMaxFloorId();
		}

		// Token: 0x06007A67 RID: 31335 RVA: 0x00221D50 File Offset: 0x0021FF50
		public int ClimbTowerTryRaid(out int reachFloorId, out int costEnergy)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ClimbTowerTryRaidInt32_Int32__hotfix != null)
			{
				return LuaDelegation.Lua_BlackJack_ProjectL_PlayerContext_ProjectLPlayerContext_ClimbTowerTryRaid_Int32_Int32(this, this.m_ClimbTowerTryRaidInt32_Int32__hotfix, out reachFloorId, out costEnergy);
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.TryRaid(out reachFloorId, out costEnergy);
		}

		// Token: 0x06007A68 RID: 31336 RVA: 0x00221DBC File Offset: 0x0021FFBC
		public GlobalClimbTowerFloor GetClimbTowerFloor(int floorId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClimbTowerFloorInt32_hotfix != null)
			{
				return (GlobalClimbTowerFloor)this.m_GetClimbTowerFloorInt32_hotfix.call(new object[]
				{
					this,
					floorId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_climbTowerComponent.GetFloor(floorId);
		}

		// Token: 0x140000B4 RID: 180
		// (add) Token: 0x06007A69 RID: 31337 RVA: 0x00221E44 File Offset: 0x00220044
		// (remove) Token: 0x06007A6A RID: 31338 RVA: 0x00221EE0 File Offset: 0x002200E0
		public event Action<int> EventOnClimbTowerGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnClimbTowerGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnClimbTowerGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnClimbTowerGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnClimbTowerGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnClimbTowerGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnClimbTowerGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnClimbTowerGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnClimbTowerGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B5 RID: 181
		// (add) Token: 0x06007A6B RID: 31339 RVA: 0x00221F7C File Offset: 0x0022017C
		// (remove) Token: 0x06007A6C RID: 31340 RVA: 0x00222018 File Offset: 0x00220218
		public event Action<int> EventOnClimbTowerLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnClimbTowerLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnClimbTowerLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnClimbTowerLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnClimbTowerLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnClimbTowerLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnClimbTowerLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnClimbTowerLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnClimbTowerLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B6 RID: 182
		// (add) Token: 0x06007A6D RID: 31341 RVA: 0x002220B4 File Offset: 0x002202B4
		// (remove) Token: 0x06007A6E RID: 31342 RVA: 0x00222150 File Offset: 0x00220350
		public event Action<int, bool, BattleReward> EventOnClimbTowerLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnClimbTowerLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnClimbTowerLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnClimbTowerLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnClimbTowerLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnClimbTowerLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnClimbTowerLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnClimbTowerLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnClimbTowerLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B7 RID: 183
		// (add) Token: 0x06007A6F RID: 31343 RVA: 0x002221EC File Offset: 0x002203EC
		// (remove) Token: 0x06007A70 RID: 31344 RVA: 0x00222288 File Offset: 0x00220488
		public event Action<int, BattleReward> EventOnClimbTowerRaidAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnClimbTowerRaidAckAction`2_hotfix != null)
				{
					this.m_add_EventOnClimbTowerRaidAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnClimbTowerRaidAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnClimbTowerRaidAck, (Action<int, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnClimbTowerRaidAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnClimbTowerRaidAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnClimbTowerRaidAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnClimbTowerRaidAck, (Action<int, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007A71 RID: 31345 RVA: 0x00222324 File Offset: 0x00220524
		public bool SendGetHeroCommentReq(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetHeroCommentReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetHeroCommentReqInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			long lastUpdateTime = this.m_commentComponent.GetLastUpdateTime(heroId);
			HeroCommentGetReq msg = new HeroCommentGetReq
			{
				HeroId = heroId,
				LastUpdateTime = lastUpdateTime
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A72 RID: 31346 RVA: 0x002223CC File Offset: 0x002205CC
		public bool SendCommentHeroReq(int heroId, string content)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendCommentHeroReqInt32String_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendCommentHeroReqInt32String_hotfix.call(new object[]
				{
					this,
					heroId,
					content
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			long lastUpdateTime = this.m_commentComponent.GetLastUpdateTime(heroId);
			HeroCommentReq msg = new HeroCommentReq
			{
				HeroId = heroId,
				Content = content,
				LastUpdateTime = lastUpdateTime
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A73 RID: 31347 RVA: 0x0022248C File Offset: 0x0022068C
		public bool SendPraiseHeroCommentEntryReq(int heroId, ulong entryInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendPraiseHeroCommentEntryReqInt32UInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendPraiseHeroCommentEntryReqInt32UInt64_hotfix.call(new object[]
				{
					this,
					heroId,
					entryInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			long lastUpdateTime = this.m_commentComponent.GetLastUpdateTime(heroId);
			HeroCommentEntryPraiseReq msg = new HeroCommentEntryPraiseReq
			{
				HeroId = heroId,
				EntryInstanceId = entryInstanceId,
				LastUpdateTime = lastUpdateTime
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A74 RID: 31348 RVA: 0x0022254C File Offset: 0x0022074C
		public bool SendViewCommenterHeroReq(int heroId, string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendViewCommenterHeroReqInt32String_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendViewCommenterHeroReqInt32String_hotfix.call(new object[]
				{
					this,
					heroId,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			CommenterHeroViewReq msg = new CommenterHeroViewReq
			{
				HeroId = heroId,
				UserId = userId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007A75 RID: 31349 RVA: 0x002225F8 File Offset: 0x002207F8
		private void OnMessage(HeroCommentGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroCommentGetAck_hotfix != null)
			{
				this.m_OnMessageHeroCommentGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				HeroComment heroComment = null;
				if (msg.HeroComment != null)
				{
					heroComment = HeroComment.PBHeroCommentToHeroComment(msg.HeroComment);
				}
				PlayerHeroCommentEntry playerCommentEntry = null;
				if (msg.PlayerCommentEntry != null)
				{
					playerCommentEntry = PlayerHeroCommentEntry.PBPlayerHeroCommentEntryToPlayerHeroCommentEntry(msg.PlayerCommentEntry);
				}
				int heroComment2 = this.m_commentComponent.GetHeroComment(msg.HeroId, heroComment, playerCommentEntry);
				if (heroComment2 != 0)
				{
					this.DataError(heroComment2);
				}
			}
			else if (msg.Result == -2405)
			{
				this.m_commentComponent.ClearAllComment();
			}
			if (this.EventOnHeroCommentGetAck != null)
			{
				this.EventOnHeroCommentGetAck(msg.Result);
			}
		}

		// Token: 0x06007A76 RID: 31350 RVA: 0x00222704 File Offset: 0x00220904
		private void OnMessage(HeroCommentAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroCommentAck_hotfix != null)
			{
				this.m_OnMessageHeroCommentAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				HeroCommentEntry commentEntry = HeroCommentEntry.PBHeroCommentEntryToHeroCommentEntry(msg.CommentEntry);
				int num = this.m_commentComponent.CommentHero(msg.HeroId, commentEntry, msg.LastUpdateTime);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroCommentSendAck != null)
			{
				this.EventOnHeroCommentSendAck(msg.Result);
			}
		}

		// Token: 0x06007A77 RID: 31351 RVA: 0x002227D0 File Offset: 0x002209D0
		private void OnMessage(HeroCommentEntryPraiseAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroCommentEntryPraiseAck_hotfix != null)
			{
				this.m_OnMessageHeroCommentEntryPraiseAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_commentComponent.PraiseHeroCommentEntry(msg.HeroId, msg.EntryInstanceId, msg.LastUpdateTime);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroCommentPraisedAck != null)
			{
				this.EventOnHeroCommentPraisedAck(msg.Result);
			}
		}

		// Token: 0x06007A78 RID: 31352 RVA: 0x00222894 File Offset: 0x00220A94
		private void OnMessage(CommenterHeroViewAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageCommenterHeroViewAck_hotfix != null)
			{
				this.m_OnMessageCommenterHeroViewAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Hero arg = null;
			if (msg.Result == 0)
			{
				arg = Hero.PBHeroToHero(msg.Hero);
			}
			if (this.EventOnCommenterHeroViewAck != null)
			{
				this.EventOnCommenterHeroViewAck(msg.Result, arg);
			}
		}

		// Token: 0x140000B8 RID: 184
		// (add) Token: 0x06007A79 RID: 31353 RVA: 0x0022293C File Offset: 0x00220B3C
		// (remove) Token: 0x06007A7A RID: 31354 RVA: 0x002229D8 File Offset: 0x00220BD8
		public event Action<int> EventOnHeroCommentGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroCommentGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroCommentGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroCommentGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroCommentGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroCommentGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroCommentGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroCommentGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroCommentGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000B9 RID: 185
		// (add) Token: 0x06007A7B RID: 31355 RVA: 0x00222A74 File Offset: 0x00220C74
		// (remove) Token: 0x06007A7C RID: 31356 RVA: 0x00222B10 File Offset: 0x00220D10
		public event Action<int> EventOnHeroCommentSendAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroCommentSendAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroCommentSendAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroCommentSendAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroCommentSendAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroCommentSendAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroCommentSendAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroCommentSendAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroCommentSendAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000BA RID: 186
		// (add) Token: 0x06007A7D RID: 31357 RVA: 0x00222BAC File Offset: 0x00220DAC
		// (remove) Token: 0x06007A7E RID: 31358 RVA: 0x00222C48 File Offset: 0x00220E48
		public event Action<int> EventOnHeroCommentPraisedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroCommentPraisedAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroCommentPraisedAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroCommentPraisedAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroCommentPraisedAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroCommentPraisedAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroCommentPraisedAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroCommentPraisedAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroCommentPraisedAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000BB RID: 187
		// (add) Token: 0x06007A7F RID: 31359 RVA: 0x00222CE4 File Offset: 0x00220EE4
		// (remove) Token: 0x06007A80 RID: 31360 RVA: 0x00222D80 File Offset: 0x00220F80
		public event Action<int, Hero> EventOnCommenterHeroViewAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnCommenterHeroViewAckAction`2_hotfix != null)
				{
					this.m_add_EventOnCommenterHeroViewAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, Hero> action = this.EventOnCommenterHeroViewAck;
				Action<int, Hero> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, Hero>>(ref this.EventOnCommenterHeroViewAck, (Action<int, Hero>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnCommenterHeroViewAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnCommenterHeroViewAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, Hero> action = this.EventOnCommenterHeroViewAck;
				Action<int, Hero> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, Hero>>(ref this.EventOnCommenterHeroViewAck, (Action<int, Hero>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007A81 RID: 31361 RVA: 0x00222E1C File Offset: 0x0022101C
		public HeroComment GetHeroComments(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroCommentsInt32_hotfix != null)
			{
				return (HeroComment)this.m_GetHeroCommentsInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_commentComponent.GetHeroComment(heroId);
		}

		// Token: 0x06007A82 RID: 31362 RVA: 0x00222EA4 File Offset: 0x002210A4
		public int CanPraiseHeroCommentEntry(int heroId, ulong entryInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanPraiseHeroCommentEntryInt32UInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanPraiseHeroCommentEntryInt32UInt64_hotfix.call(new object[]
				{
					this,
					heroId,
					entryInstanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_commentComponent.CanPraiseHeroCommentEntry(heroId, entryInstanceId);
		}

		// Token: 0x06007A83 RID: 31363 RVA: 0x00222F40 File Offset: 0x00221140
		private void OnMessage(DSCooperateBattleNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSCooperateBattleNtf_hotfix != null)
			{
				this.m_OnMessageDSCooperateBattleNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_cooperateBattleComponent.DeSerialize(ntf);
		}

		// Token: 0x06007A84 RID: 31364 RVA: 0x00222FBC File Offset: 0x002211BC
		public bool IsCooperateBattleOpened(int cooperateBattleId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsCooperateBattleOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsCooperateBattleOpenedInt32_hotfix.call(new object[]
				{
					this,
					cooperateBattleId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = 0;
			return this.m_cooperateBattleComponent.CheckCooperateBattleAvailable(cooperateBattleId, ref num);
		}

		// Token: 0x06007A85 RID: 31365 RVA: 0x00223048 File Offset: 0x00221248
		public bool IsCooperateBattleDisplayable(int cooperateBattleId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsCooperateBattleDisplayableInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsCooperateBattleDisplayableInt32_hotfix.call(new object[]
				{
					this,
					cooperateBattleId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_cooperateBattleComponent.CheckCooperateBattleDisplayable(cooperateBattleId);
		}

		// Token: 0x06007A86 RID: 31366 RVA: 0x002230D0 File Offset: 0x002212D0
		public int GetCooperateBattleDailyChallengeNums(int cooperateBattleId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCooperateBattleDailyChallengeNumsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetCooperateBattleDailyChallengeNumsInt32_hotfix.call(new object[]
				{
					this,
					cooperateBattleId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_cooperateBattleComponent.GetDailyChallengeNums(cooperateBattleId);
		}

		// Token: 0x06007A87 RID: 31367 RVA: 0x00223158 File Offset: 0x00221358
		public ConfigDataCooperateBattleInfo GetFirstOpenedCooperateBattle()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFirstOpenedCooperateBattle_hotfix != null)
			{
				return (ConfigDataCooperateBattleInfo)this.m_GetFirstOpenedCooperateBattle_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			foreach (KeyValuePair<int, ConfigDataCooperateBattleInfo> keyValuePair in this.m_configDataLoader.GetAllConfigDataCooperateBattleInfo())
			{
				if (this.IsCooperateBattleOpened(keyValuePair.Value.ID))
				{
					return keyValuePair.Value;
				}
			}
			return null;
		}

		// Token: 0x06007A88 RID: 31368 RVA: 0x00223238 File Offset: 0x00221438
		public bool IsCooperateBattleLevelOpened(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsCooperateBattleLevelOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsCooperateBattleLevelOpenedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_cooperateBattleComponent.IsLevelUnlocked(levelId);
		}

		// Token: 0x06007A89 RID: 31369 RVA: 0x002232C0 File Offset: 0x002214C0
		public int CanAttackCooperateBattleLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackCooperateBattleLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackCooperateBattleLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_cooperateBattleComponent.CanAttackCooperateBattleLevel(levelId);
		}

		// Token: 0x06007A8A RID: 31370 RVA: 0x00223348 File Offset: 0x00221548
		public bool SendLevelDanmakuGetReq(int gameFunctionTypeId, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLevelDanmakuGetReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLevelDanmakuGetReqInt32Int32_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new LevelDanmakuGetReq
			{
				GameFunctionTypeId = gameFunctionTypeId,
				LocationId = locationId
			});
		}

		// Token: 0x06007A8B RID: 31371 RVA: 0x002233F0 File Offset: 0x002215F0
		public bool SendLevelDanmakuPostReq(int gameFunctionTypeId, int locationId, List<PostDanmakuEntry> entries)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLevelDanmakuPostReqInt32Int32List`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLevelDanmakuPostReqInt32Int32List`1_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					locationId,
					entries
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			LevelDanmakuPostReq levelDanmakuPostReq = new LevelDanmakuPostReq();
			levelDanmakuPostReq.GameFunctionTypeId = gameFunctionTypeId;
			levelDanmakuPostReq.LocationId = locationId;
			foreach (PostDanmakuEntry entry in entries)
			{
				levelDanmakuPostReq.Entries.Add(PostDanmakuEntry.PostDanmakuEntryToPBPostDanmakuEntry(entry));
			}
			return this.SendMessage(levelDanmakuPostReq);
		}

		// Token: 0x06007A8C RID: 31372 RVA: 0x002234FC File Offset: 0x002216FC
		private void OnMessage(LevelDanmakuGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageLevelDanmakuGetAck_hotfix != null)
			{
				this.m_OnMessageLevelDanmakuGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				if (msg.LevelDanmaku != null)
				{
					this.m_danmakuComponent.SetLevelDanmaku(LevelDanmaku.PBLevelDanmakuToLevelDanmaku(msg.LevelDanmaku));
				}
				else
				{
					this.m_danmakuComponent.SetLevelDanmaku(new LevelDanmaku());
				}
			}
			else if (msg.Result == -2405)
			{
				this.m_danmakuComponent.SetLevelDanmaku(new LevelDanmaku());
				msg.Result = 0;
			}
			if (this.EventOnGetLevelDanmakuAck != null)
			{
				this.EventOnGetLevelDanmakuAck(msg.Result);
			}
		}

		// Token: 0x06007A8D RID: 31373 RVA: 0x002235F8 File Offset: 0x002217F8
		private void OnMessage(LevelDanmakuPostAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageLevelDanmakuPostAck_hotfix != null)
			{
				this.m_OnMessageLevelDanmakuPostAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == -2405)
			{
				msg.Result = 0;
			}
			if (this.EventOnSendLevelDanmakuAck != null)
			{
				this.EventOnSendLevelDanmakuAck(msg.Result);
			}
		}

		// Token: 0x06007A8E RID: 31374 RVA: 0x0022369C File Offset: 0x0022189C
		public LevelDanmaku GetLevelDanmaku()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetLevelDanmaku_hotfix != null)
			{
				return (LevelDanmaku)this.m_GetLevelDanmaku_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_danmakuComponent.GetLevelDanmaku();
		}

		// Token: 0x06007A8F RID: 31375 RVA: 0x00223714 File Offset: 0x00221914
		public List<PostDanmakuEntry> GetPostedLevelDanmaku()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPostedLevelDanmaku_hotfix != null)
			{
				return (List<PostDanmakuEntry>)this.m_GetPostedLevelDanmaku_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_danmakuComponent.GetPostedLevelDanmaku();
		}

		// Token: 0x06007A90 RID: 31376 RVA: 0x0022378C File Offset: 0x0022198C
		public void PostLevelDanmaku(PostDanmakuEntry entry)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_PostLevelDanmakuPostDanmakuEntry_hotfix != null)
			{
				this.m_PostLevelDanmakuPostDanmakuEntry_hotfix.call(new object[]
				{
					this,
					entry
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_danmakuComponent.PostLevelDanmaku(entry);
		}

		// Token: 0x06007A91 RID: 31377 RVA: 0x00223808 File Offset: 0x00221A08
		public int CanGetLevelDanmaku(int gameFunctionTypeId, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGetLevelDanmakuInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanGetLevelDanmakuInt32Int32_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_danmakuComponent.CanGetLevelDanmaku(gameFunctionTypeId, locationId);
		}

		// Token: 0x06007A92 RID: 31378 RVA: 0x002238A4 File Offset: 0x00221AA4
		public int CanPostLevelDanmaku(int gameFunctionTypeId, int locationId, List<PostDanmakuEntry> entries)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanPostLevelDanmakuInt32Int32List`1_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanPostLevelDanmakuInt32Int32List`1_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					locationId,
					entries
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_danmakuComponent.CanPostLevelDanmaku(gameFunctionTypeId, locationId, entries);
		}

		// Token: 0x06007A93 RID: 31379 RVA: 0x00223950 File Offset: 0x00221B50
		public void ClearLevelDanmaku()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ClearLevelDanmaku_hotfix != null)
			{
				this.m_ClearLevelDanmaku_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_danmakuComponent.ClearLevelDanmaku();
		}

		// Token: 0x06007A94 RID: 31380 RVA: 0x002239BC File Offset: 0x00221BBC
		public bool CanUseDanmaku()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUseDanmaku_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanUseDanmaku_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.CurrentBattle.ArenaBattleInfo == null && !this.IsInBattleRoom() && !this.IsCurrentBattleFirstBattle();
		}

		// Token: 0x140000BC RID: 188
		// (add) Token: 0x06007A95 RID: 31381 RVA: 0x00223A58 File Offset: 0x00221C58
		// (remove) Token: 0x06007A96 RID: 31382 RVA: 0x00223AF4 File Offset: 0x00221CF4
		public event Action<int> EventOnGetLevelDanmakuAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGetLevelDanmakuAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGetLevelDanmakuAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGetLevelDanmakuAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGetLevelDanmakuAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGetLevelDanmakuAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGetLevelDanmakuAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGetLevelDanmakuAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGetLevelDanmakuAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000BD RID: 189
		// (add) Token: 0x06007A97 RID: 31383 RVA: 0x00223B90 File Offset: 0x00221D90
		// (remove) Token: 0x06007A98 RID: 31384 RVA: 0x00223C2C File Offset: 0x00221E2C
		public event Action<int> EventOnSendLevelDanmakuAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnSendLevelDanmakuAckAction`1_hotfix != null)
				{
					this.m_add_EventOnSendLevelDanmakuAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSendLevelDanmakuAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSendLevelDanmakuAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnSendLevelDanmakuAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnSendLevelDanmakuAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSendLevelDanmakuAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSendLevelDanmakuAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007A99 RID: 31385 RVA: 0x00223CC8 File Offset: 0x00221EC8
		public bool SendFixedStoreBuyStoreItemReq(int storeId, int goodsId, int selectedIndex = -1)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFixedStoreBuyStoreItemReqInt32Int32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFixedStoreBuyStoreItemReqInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					storeId,
					goodsId,
					selectedIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new FixedStoreBuyStoreItemReq
			{
				StoreId = storeId,
				GoodsId = goodsId,
				SelectedIndex = selectedIndex
			});
		}

		// Token: 0x06007A9A RID: 31386 RVA: 0x00223D88 File Offset: 0x00221F88
		private void OnMessage(DSFixedStoreNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSFixedStoreNtf_hotfix != null)
			{
				this.m_OnMessageDSFixedStoreNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_fixedStoreComponent.DeSerialize(msg);
		}

		// Token: 0x06007A9B RID: 31387 RVA: 0x00223E04 File Offset: 0x00222004
		private void OnMessage(FixedStoreBuyStoreItemAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFixedStoreBuyStoreItemAck_hotfix != null)
			{
				this.m_OnMessageFixedStoreBuyStoreItemAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> rewards = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, rewards);
					this.OnMessage(msg.Ntf);
				}
				this.m_fixedStoreComponent.BuyStoreItem(msg.StoreId, msg.GoodsId, msg.GoodsNextFlushTime, msg.IsResetNextFlushTime);
			}
			if (this.EventOnFixedStoreBuyStoreItemAck != null)
			{
				this.EventOnFixedStoreBuyStoreItemAck(msg.Result);
			}
		}

		// Token: 0x06007A9C RID: 31388 RVA: 0x00223EF0 File Offset: 0x002220F0
		public int GetSkinTicket()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetSkinTicket_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetSkinTicket_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().SkinTickets;
		}

		// Token: 0x06007A9D RID: 31389 RVA: 0x00223F6C File Offset: 0x0022216C
		public int GetMemoryEssence()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMemoryEssence_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetMemoryEssence_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().MemoryEssence;
		}

		// Token: 0x06007A9E RID: 31390 RVA: 0x00223FE8 File Offset: 0x002221E8
		public FixedStore FindFixedStoreByID(int storeID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_FindFixedStoreByIDInt32_hotfix != null)
			{
				return (FixedStore)this.m_FindFixedStoreByIDInt32_hotfix.call(new object[]
				{
					this,
					storeID
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_fixedStoreComponent.FindStoreById(storeID);
		}

		// Token: 0x06007A9F RID: 31391 RVA: 0x00224070 File Offset: 0x00222270
		public List<FixedStoreItem> GetFixedStoreItemList(int storeId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFixedStoreItemListInt32_hotfix != null)
			{
				return (List<FixedStoreItem>)this.m_GetFixedStoreItemListInt32_hotfix.call(new object[]
				{
					this,
					storeId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<FixedStoreItem> result = new List<FixedStoreItem>();
			FixedStore store = this.m_fixedStoreComponent.GetStore(storeId);
			if (store != null)
			{
				result = store.Items;
			}
			return result;
		}

		// Token: 0x06007AA0 RID: 31392 RVA: 0x00224110 File Offset: 0x00222310
		public int CanBuyFixedStoreGoods(int storeId, int goodsId, int selfChooseItemIndex = -1)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanBuyFixedStoreGoodsInt32Int32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanBuyFixedStoreGoodsInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					storeId,
					goodsId,
					selfChooseItemIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_fixedStoreComponent.CanBuyGoods(storeId, goodsId, selfChooseItemIndex);
		}

		// Token: 0x06007AA1 RID: 31393 RVA: 0x002241BC File Offset: 0x002223BC
		public bool IsOnDiscount(ConfigDataFixedStoreItemInfo itemInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsOnDiscountConfigDataFixedStoreItemInfo_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsOnDiscountConfigDataFixedStoreItemInfo_hotfix.call(new object[]
				{
					this,
					itemInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_fixedStoreComponent.IsOnDiscountPeriod(itemInfo);
		}

		// Token: 0x140000BE RID: 190
		// (add) Token: 0x06007AA2 RID: 31394 RVA: 0x00224244 File Offset: 0x00222444
		// (remove) Token: 0x06007AA3 RID: 31395 RVA: 0x002242E0 File Offset: 0x002224E0
		public event Action<int> EventOnFixedStoreBuyStoreItemAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFixedStoreBuyStoreItemAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFixedStoreBuyStoreItemAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFixedStoreBuyStoreItemAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFixedStoreBuyStoreItemAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFixedStoreBuyStoreItemAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFixedStoreBuyStoreItemAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFixedStoreBuyStoreItemAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFixedStoreBuyStoreItemAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007AA4 RID: 31396 RVA: 0x0022437C File Offset: 0x0022257C
		public bool SendHeroRandomActionSetReq(bool isActionRandom)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroRandomActionSetReqBoolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroRandomActionSetReqBoolean_hotfix.call(new object[]
				{
					this,
					isActionRandom
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroRandomActionSetReq msg = new HeroRandomActionSetReq
			{
				IsActionRandom = isActionRandom
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007AA5 RID: 31397 RVA: 0x00224410 File Offset: 0x00222610
		public bool SendLikesSendReq(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLikesSendReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLikesSendReqString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			LikesSendReq msg = new LikesSendReq
			{
				TargetUserId = userId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007AA6 RID: 31398 RVA: 0x002244A4 File Offset: 0x002226A4
		public bool SendBusinessCardDescUpdateReq(string desc)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBusinessCardDescUpdateReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBusinessCardDescUpdateReqString_hotfix.call(new object[]
				{
					this,
					desc
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BusinessCardDescUpdateReq msg = new BusinessCardDescUpdateReq
			{
				Desc = desc
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007AA7 RID: 31399 RVA: 0x00224538 File Offset: 0x00222738
		public bool SendBusinessCardHeroSetUpdateReq(List<BusinessCardHeroSet> heroSets)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBusinessCardHeroSetUpdateReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBusinessCardHeroSetUpdateReqList`1_hotfix.call(new object[]
				{
					this,
					heroSets
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BusinessCardHeroSetUpdateReq businessCardHeroSetUpdateReq = new BusinessCardHeroSetUpdateReq();
			businessCardHeroSetUpdateReq.HeroSets.AddRange(BusinessCardHeroSet.ToProtocols(heroSets));
			return this.SendMessage(businessCardHeroSetUpdateReq);
		}

		// Token: 0x06007AA8 RID: 31400 RVA: 0x002245D4 File Offset: 0x002227D4
		public bool SendBusinessCardSelectReq(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBusinessCardSelectReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBusinessCardSelectReqString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BusinessCardSelectReq msg = new BusinessCardSelectReq
			{
				TargetUserId = targetUserId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007AA9 RID: 31401 RVA: 0x00224668 File Offset: 0x00222868
		public bool SendGetSocialRelationReq(FriendSocialRelationFlag Flag = FriendSocialRelationFlag.All)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetSocialRelationReqFriendSocialRelationFlag_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetSocialRelationReqFriendSocialRelationFlag_hotfix.call(new object[]
				{
					this,
					Flag
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new FriendGetSocialRelationReq
			{
				Flag = (int)Flag
			});
		}

		// Token: 0x06007AAA RID: 31402 RVA: 0x002246F8 File Offset: 0x002228F8
		public bool SendFriendInivteReq(List<string> targetUserIdList)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFriendInivteReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFriendInivteReqList`1_hotfix.call(new object[]
				{
					this,
					targetUserIdList
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FriendInviteReq friendInviteReq = new FriendInviteReq();
			friendInviteReq.TargetUserIds.AddRange(targetUserIdList);
			return this.SendMessage(friendInviteReq);
		}

		// Token: 0x06007AAB RID: 31403 RVA: 0x00224790 File Offset: 0x00222990
		public bool SendFriendAcceptReq(List<string> inviterUserIdList)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFriendAcceptReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFriendAcceptReqList`1_hotfix.call(new object[]
				{
					this,
					inviterUserIdList
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FriendInviteAcceptReq friendInviteAcceptReq = new FriendInviteAcceptReq();
			friendInviteAcceptReq.InviterUserIds.AddRange(inviterUserIdList);
			return this.SendMessage(friendInviteAcceptReq);
		}

		// Token: 0x06007AAC RID: 31404 RVA: 0x00224828 File Offset: 0x00222A28
		public bool SendFriendDeclineReq(List<string> inviterUserIdList)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFriendDeclineReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFriendDeclineReqList`1_hotfix.call(new object[]
				{
					this,
					inviterUserIdList
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FriendInviteDeclineReq friendInviteDeclineReq = new FriendInviteDeclineReq();
			friendInviteDeclineReq.InviterUserIds.AddRange(inviterUserIdList);
			return this.SendMessage(friendInviteDeclineReq);
		}

		// Token: 0x06007AAD RID: 31405 RVA: 0x002248C0 File Offset: 0x00222AC0
		public bool SendFriendDeleteReq(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFriendDeleteReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFriendDeleteReqString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new FriendDeleteReq
			{
				TargetUserId = targetUserId
			});
		}

		// Token: 0x06007AAE RID: 31406 RVA: 0x00224950 File Offset: 0x00222B50
		public bool SendPlayerBlockReq(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendPlayerBlockReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendPlayerBlockReqString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new FriendBlockReq
			{
				TargetUserId = targetUserId
			});
		}

		// Token: 0x06007AAF RID: 31407 RVA: 0x002249E0 File Offset: 0x00222BE0
		public bool SendPlayerUnblockReq(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendPlayerUnblockReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendPlayerUnblockReqString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new FriendUnblockReq
			{
				TargetUserId = targetUserId
			});
		}

		// Token: 0x06007AB0 RID: 31408 RVA: 0x00224A70 File Offset: 0x00222C70
		public bool SendPlayerFindReq(int targetBornChannelId, string partialName)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendPlayerFindReqInt32String_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendPlayerFindReqInt32String_hotfix.call(new object[]
				{
					this,
					targetBornChannelId,
					partialName
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new FriendFindReq
			{
				TargetBornChannelId = targetBornChannelId,
				PartialName = partialName
			});
		}

		// Token: 0x06007AB1 RID: 31409 RVA: 0x00224B18 File Offset: 0x00222D18
		public bool SendSuggestedUserReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendSuggestedUserReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendSuggestedUserReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FriendSuggestedReq msg = new FriendSuggestedReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007AB2 RID: 31410 RVA: 0x00224B94 File Offset: 0x00222D94
		public bool SendBattlePracticeInviteReq(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattlePracticeInviteReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattlePracticeInviteReqString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattlePracticeInviteReq msg = new BattlePracticeInviteReq
			{
				TargetUserId = targetUserId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007AB3 RID: 31411 RVA: 0x00224C28 File Offset: 0x00222E28
		public bool SendBattlePracticeAcceptReq(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattlePracticeAcceptReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattlePracticeAcceptReqString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattlePracticeAcceptReq msg = new BattlePracticeAcceptReq
			{
				TargetUserId = targetUserId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007AB4 RID: 31412 RVA: 0x00224CBC File Offset: 0x00222EBC
		public bool SendBattlePracticeDeclineReq(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattlePracticeDeclineReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattlePracticeDeclineReqString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattlePracticeDeclineReq msg = new BattlePracticeDeclineReq
			{
				TargetUserId = targetUserId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007AB5 RID: 31413 RVA: 0x00224D50 File Offset: 0x00222F50
		public bool SendBattlePracticeCancelReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBattlePracticeCancelReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBattlePracticeCancelReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattlePracticeCancelReq msg = new BattlePracticeCancelReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007AB6 RID: 31414 RVA: 0x00224DCC File Offset: 0x00222FCC
		public bool SendFriendshipPointsSendReq(List<string> TargetUserIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFriendshipPointsSendReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFriendshipPointsSendReqList`1_hotfix.call(new object[]
				{
					this,
					TargetUserIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FriendshipPointsSendReq friendshipPointsSendReq = new FriendshipPointsSendReq();
			friendshipPointsSendReq.TargetUserIds.AddRange(TargetUserIds);
			return this.SendMessage(friendshipPointsSendReq);
		}

		// Token: 0x06007AB7 RID: 31415 RVA: 0x00224E64 File Offset: 0x00223064
		public bool SendFriendshipPointsClaimReq(List<string> TargetUserIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFriendshipPointsClaimReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFriendshipPointsClaimReqList`1_hotfix.call(new object[]
				{
					this,
					TargetUserIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FriendshipPointsClaimReq friendshipPointsClaimReq = new FriendshipPointsClaimReq();
			friendshipPointsClaimReq.TargetUserIds.AddRange(TargetUserIds);
			return this.SendMessage(friendshipPointsClaimReq);
		}

		// Token: 0x06007AB8 RID: 31416 RVA: 0x00224EFC File Offset: 0x002230FC
		private void OnMessage(HeroRandomActionSetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroRandomActionSetAck_hotfix != null)
			{
				this.m_OnMessageHeroRandomActionSetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_friendComponent.SetRandomHeroAction(msg.IsActionRandom);
				this.BusinessCard.SetInfo.IsActionRandom = msg.IsActionRandom;
			}
			if (this.EventOnBusinessCardRandomShowChangeAck != null)
			{
				this.EventOnBusinessCardRandomShowChangeAck(msg.Result);
			}
		}

		// Token: 0x06007AB9 RID: 31417 RVA: 0x00224FBC File Offset: 0x002231BC
		private void OnMessage(LikesSendAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageLikesSendAck_hotfix != null)
			{
				this.m_OnMessageLikesSendAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_friendComponent.AddLikedUser(msg.TargetUserId);
				this.BusinessCard.Likes = msg.Likes;
			}
			if (this.EventOnLikeAck != null)
			{
				this.EventOnLikeAck(msg.Result);
			}
		}

		// Token: 0x06007ABA RID: 31418 RVA: 0x00225078 File Offset: 0x00223278
		private void OnMessage(BusinessCardSelectAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBusinessCardSelectAck_hotfix != null)
			{
				this.m_OnMessageBusinessCardSelectAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.BusinessCard = BusinessCard.FromProtocol(msg.BusinessCard);
			}
			else
			{
				this.BusinessCard = null;
			}
			if (this.EventOnBusinessCardGetAck != null)
			{
				this.EventOnBusinessCardGetAck(msg.Result);
			}
		}

		// Token: 0x06007ABB RID: 31419 RVA: 0x0022512C File Offset: 0x0022332C
		private void OnMessage(BusinessCardDescUpdateAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBusinessCardDescUpdateAck_hotfix != null)
			{
				this.m_OnMessageBusinessCardDescUpdateAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_friendComponent.SetBusinessCardDesc(msg.Desc);
				this.UpdateMineBusinessCard(true);
			}
			if (this.EventOnBusinessCardDescUpdateAck != null)
			{
				this.EventOnBusinessCardDescUpdateAck(msg.Result);
			}
		}

		// Token: 0x06007ABC RID: 31420 RVA: 0x002251DC File Offset: 0x002233DC
		private void OnMessage(BusinessCardHeroSetUpdateAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBusinessCardHeroSetUpdateAck_hotfix != null)
			{
				this.m_OnMessageBusinessCardHeroSetUpdateAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_friendComponent.SetBusinessCardHeroSet(BusinessCardHeroSet.FromProtocols(msg.HeroSets));
				this.UpdateMineBusinessCard(false);
			}
			if (this.EventOnBusinessCardHeroSetUpdateAck != null)
			{
				this.EventOnBusinessCardHeroSetUpdateAck(msg.Result);
			}
		}

		// Token: 0x06007ABD RID: 31421 RVA: 0x00225290 File Offset: 0x00223490
		private void UpdateMineBusinessCard(bool isDescUpdate)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_UpdateMineBusinessCardBoolean_hotfix != null)
			{
				this.m_UpdateMineBusinessCardBoolean_hotfix.call(new object[]
				{
					this,
					isDescUpdate
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.BusinessCard == null)
			{
				return;
			}
			BusinessCardInfoSet businessCardInfoSet = this.m_friendComponent.GetBusinessCardInfoSet();
			if (isDescUpdate)
			{
				this.BusinessCard.SetInfo.Desc = businessCardInfoSet.Desc;
			}
			else
			{
				this.BusinessCard.SetInfo.Heroes.Clear();
				this.BusinessCard.SetInfo.Heroes.AddRange(businessCardInfoSet.Heroes);
				this.BusinessCard.Heroes.Clear();
				this.BusinessCard.Heroes.AddRange(this.m_friendComponent.GetBusinessCardHeroes());
			}
		}

		// Token: 0x06007ABE RID: 31422 RVA: 0x00225394 File Offset: 0x00223594
		private void OnMessage(DSFriendNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSFriendNtf_hotfix != null)
			{
				this.m_OnMessageDSFriendNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_friendComponent.Deserialize(ntf);
		}

		// Token: 0x06007ABF RID: 31423 RVA: 0x00225410 File Offset: 0x00223610
		private void OnMessage(FriendInfoUpdateNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendInfoUpdateNtf_hotfix != null)
			{
				this.m_OnMessageFriendInfoUpdateNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_friendComponent.Deserialize(ntf);
			if (this.EventOnFriendshipPointsReceivedNtf != null)
			{
				this.EventOnFriendshipPointsReceivedNtf();
			}
		}

		// Token: 0x06007AC0 RID: 31424 RVA: 0x002254A4 File Offset: 0x002236A4
		private void OnMessage(FriendSocialRelationUpdateNtf Ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendSocialRelationUpdateNtf_hotfix != null)
			{
				this.m_OnMessageFriendSocialRelationUpdateNtf_hotfix.call(new object[]
				{
					this,
					Ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if ((Ntf.Flag & 1) != 0)
			{
				ProjectLPlayerContext.<OnMessage>c__AnonStorey1 <OnMessage>c__AnonStorey = new ProjectLPlayerContext.<OnMessage>c__AnonStorey1();
				if (this.EventOnFriendInviteAcceptNtf != null)
				{
					using (List<ProUserSummary>.Enumerator enumerator = Ntf.Friends.GetEnumerator())
					{
						while (enumerator.MoveNext())
						{
							ProUserSummary Friend = enumerator.Current;
							if (!this.m_friendComponent.Friends.Exists((UserSummary f) => f.UserId == Friend.UserId) && this.m_friendComponent.Invite.Exists((UserSummary I) => I.UserId == Friend.UserId))
							{
								this.EventOnFriendInviteAcceptNtf(Friend.ToUserSummary());
							}
						}
					}
				}
				this.m_friendComponent.Friends.Clear();
				foreach (ProUserSummary pro in Ntf.Friends)
				{
					this.m_friendComponent.Friends.Add(pro.ToUserSummary());
				}
				this.SortUserSummaryList(this.m_friendComponent.Friends);
				<OnMessage>c__AnonStorey.FriendshipPointsReceived = this.m_friendComponent.GetFriendshipPointsReceivedUsers();
				int i;
				for (i = <OnMessage>c__AnonStorey.FriendshipPointsReceived.Count - 1; i >= 0; i--)
				{
					if (!this.m_friendComponent.Friends.Exists((UserSummary f) => f.UserId == <OnMessage>c__AnonStorey.FriendshipPointsReceived[i]))
					{
						this.m_friendComponent.RemoveFriendshipPointsReceivedUser(<OnMessage>c__AnonStorey.FriendshipPointsReceived[i]);
					}
				}
			}
			if ((Ntf.Flag & 2) != 0)
			{
				this.m_friendComponent.Blacklist.Clear();
				foreach (ProUserSummary pro2 in Ntf.Blacklist)
				{
					this.m_friendComponent.Blacklist.Add(pro2.ToUserSummary());
				}
				this.SortUserSummaryList(this.m_friendComponent.Blacklist);
			}
			if ((Ntf.Flag & 4) != 0)
			{
				this.m_friendComponent.Invite.Clear();
				foreach (ProUserSummary pro3 in Ntf.Invite)
				{
					this.m_friendComponent.Invite.Add(pro3.ToUserSummary());
				}
				this.SortUserSummaryList(this.m_friendComponent.Invite);
			}
			if ((Ntf.Flag & 8) != 0)
			{
				this.m_friendComponent.Invited.Clear();
				foreach (ProUserSummary pro4 in Ntf.Invited)
				{
					this.m_friendComponent.Invited.Add(pro4.ToUserSummary());
				}
				this.SortUserSummaryList(this.m_friendComponent.Invited);
				if (this.EventOnFriendInviteNtf != null)
				{
					this.EventOnFriendInviteNtf();
				}
			}
			if ((Ntf.Flag & 16) != 0)
			{
				this.m_friendComponent.RecentContactsChat.Clear();
				foreach (ProUserSummary pro5 in Ntf.RecentContactsChat)
				{
					this.m_friendComponent.RecentContactsChat.Add(pro5.ToUserSummary());
				}
				this.SortUserSummaryList(this.m_friendComponent.RecentContactsChat);
			}
			if ((Ntf.Flag & 32) != 0)
			{
				this.m_friendComponent.RecentContactsTeamBattle.Clear();
				foreach (ProUserSummary pro6 in Ntf.RecentContactsTeamBattle)
				{
					this.m_friendComponent.RecentContactsTeamBattle.Add(pro6.ToUserSummary());
				}
				this.SortUserSummaryList(this.m_friendComponent.RecentContactsTeamBattle);
			}
			if (this.EventOnFriendGetSocialRelationAck != null)
			{
				this.EventOnFriendGetSocialRelationAck(0);
			}
		}

		// Token: 0x06007AC1 RID: 31425 RVA: 0x002259D4 File Offset: 0x00223BD4
		private void OnMessage(FriendInviteAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendInviteAck_hotfix != null)
			{
				this.m_OnMessageFriendInviteAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnFriendInviteAck != null)
			{
				this.EventOnFriendInviteAck(msg.Result, msg.FailedUser.ToUserSummary());
			}
			if (msg.Result == 0)
			{
				this.m_friendComponent.OnInviteFriendSuccess();
			}
		}

		// Token: 0x06007AC2 RID: 31426 RVA: 0x00225A84 File Offset: 0x00223C84
		private void OnMessage(FriendInviteNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendInviteNtf_hotfix != null)
			{
				this.m_OnMessageFriendInviteNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
		}

		// Token: 0x06007AC3 RID: 31427 RVA: 0x00225AF4 File Offset: 0x00223CF4
		private void OnMessage(FriendInviteAcceptAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendInviteAcceptAck_hotfix != null)
			{
				this.m_OnMessageFriendInviteAcceptAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnFriendInviteAcceptAck != null)
			{
				this.EventOnFriendInviteAcceptAck(msg.Result, msg.FailedUser.ToUserSummary());
			}
		}

		// Token: 0x06007AC4 RID: 31428 RVA: 0x00225B8C File Offset: 0x00223D8C
		private void OnMessage(FriendInviteAcceptNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendInviteAcceptNtf_hotfix != null)
			{
				this.m_OnMessageFriendInviteAcceptNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
		}

		// Token: 0x06007AC5 RID: 31429 RVA: 0x00225BFC File Offset: 0x00223DFC
		private void OnMessage(FriendInviteDeclineAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendInviteDeclineAck_hotfix != null)
			{
				this.m_OnMessageFriendInviteDeclineAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnFriendInviteDeclineAck != null)
			{
				this.EventOnFriendInviteDeclineAck(msg.Result);
			}
		}

		// Token: 0x06007AC6 RID: 31430 RVA: 0x00225C88 File Offset: 0x00223E88
		private void OnMessage(FriendInviteDeclineNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendInviteDeclineNtf_hotfix != null)
			{
				this.m_OnMessageFriendInviteDeclineNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnFriendInviteDeclineNtf != null)
			{
				this.EventOnFriendInviteDeclineNtf(msg.Decliner.ToUserSummary());
			}
		}

		// Token: 0x06007AC7 RID: 31431 RVA: 0x00225D1C File Offset: 0x00223F1C
		private void OnMessage(FriendDeleteAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendDeleteAck_hotfix != null)
			{
				this.m_OnMessageFriendDeleteAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_friendComponent.RemoveFriendshipPointsReceivedUser(msg.Req.TargetUserId);
			}
			if (this.EventOnFriendDeleteAck != null)
			{
				this.EventOnFriendDeleteAck(msg.Result);
			}
		}

		// Token: 0x06007AC8 RID: 31432 RVA: 0x00225DCC File Offset: 0x00223FCC
		private void OnMessage(FriendBlockAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendBlockAck_hotfix != null)
			{
				this.m_OnMessageFriendBlockAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnPlayerBlockAck != null)
			{
				this.EventOnPlayerBlockAck(msg.Result);
			}
		}

		// Token: 0x06007AC9 RID: 31433 RVA: 0x00225E58 File Offset: 0x00224058
		private void OnMessage(FriendUnblockAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendUnblockAck_hotfix != null)
			{
				this.m_OnMessageFriendUnblockAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnPlayerUnblockAck != null)
			{
				this.EventOnPlayerUnblockAck(msg.Result);
			}
		}

		// Token: 0x06007ACA RID: 31434 RVA: 0x00225EE4 File Offset: 0x002240E4
		private void OnMessage(FriendFindAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendFindAck_hotfix != null)
			{
				this.m_OnMessageFriendFindAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_findFriendList.Clear();
				foreach (ProUserSummary pro in msg.Users)
				{
					this.m_findFriendList.Add(pro.ToUserSummary());
				}
			}
			if (this.EventOnFriendFindAck != null)
			{
				this.EventOnFriendFindAck(msg.Result);
			}
		}

		// Token: 0x06007ACB RID: 31435 RVA: 0x00225FE0 File Offset: 0x002241E0
		private void OnMessage(FriendSuggestedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendSuggestedAck_hotfix != null)
			{
				this.m_OnMessageFriendSuggestedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_recommendFriendList.Clear();
				using (List<ProUserSummary>.Enumerator enumerator = msg.SuggestedUsers.GetEnumerator())
				{
					while (enumerator.MoveNext())
					{
						ProUserSummary User = enumerator.Current;
						if (this.m_recommendFriendList.Find((UserSummary x) => x.UserId == User.UserId) == null)
						{
							this.m_recommendFriendList.Add(User.ToUserSummary());
						}
					}
				}
			}
			if (this.EventOnFriendSuggestedAck != null)
			{
				this.EventOnFriendSuggestedAck(msg.Result);
			}
		}

		// Token: 0x06007ACC RID: 31436 RVA: 0x00226108 File Offset: 0x00224308
		private void OnMessage(FriendSummaryUpdateNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendSummaryUpdateNtf_hotfix != null)
			{
				this.m_OnMessageFriendSummaryUpdateNtf_hotfix.call(new object[]
				{
					this,
					msg2
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FriendSummaryUpdateNtf msg = msg2;
			int num = this.m_friendComponent.Friends.FindIndex((UserSummary f) => f.UserId == msg.Friend.UserId);
			if (num >= 0)
			{
				UserSummary userSummary = msg.Friend.ToUserSummary();
				this.m_friendComponent.Friends[num] = userSummary;
				UserSummary obj = userSummary;
				if (this.EventOnFriendSummaryUpdateNtf != null)
				{
					this.EventOnFriendSummaryUpdateNtf(obj);
				}
			}
		}

		// Token: 0x06007ACD RID: 31437 RVA: 0x002261E8 File Offset: 0x002243E8
		private void OnMessage(BattlePracticeInviteAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattlePracticeInviteAck_hotfix != null)
			{
				this.m_OnMessageBattlePracticeInviteAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattlePracticeInviteAck != null)
			{
				this.EventOnBattlePracticeInviteAck(msg.Result);
			}
		}

		// Token: 0x06007ACE RID: 31438 RVA: 0x00226274 File Offset: 0x00224474
		private void OnMessage(BattlePracticeAcceptAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattlePracticeAcceptAck_hotfix != null)
			{
				this.m_OnMessageBattlePracticeAcceptAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result != 0)
			{
				if (msg.Result == -3008)
				{
					this.SendBattlePracticeDeclineReq(msg.Req.TargetUserId);
				}
			}
			if (this.EventOnBattlePracticeAcceptAck != null)
			{
				this.EventOnBattlePracticeAcceptAck(msg.Result);
			}
		}

		// Token: 0x06007ACF RID: 31439 RVA: 0x00226334 File Offset: 0x00224534
		private void OnMessage(BattlePracticeDeclineAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattlePracticeDeclineAck_hotfix != null)
			{
				this.m_OnMessageBattlePracticeDeclineAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattlePracticeDeclineAck != null)
			{
				this.EventOnBattlePracticeDeclineAck(msg.Result);
			}
		}

		// Token: 0x06007AD0 RID: 31440 RVA: 0x002263C0 File Offset: 0x002245C0
		private void OnMessage(BattlePracticeCancelAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattlePracticeCancelAck_hotfix != null)
			{
				this.m_OnMessageBattlePracticeCancelAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattlePracticeCancelAck != null)
			{
				this.EventOnBattlePracticeCancelAck(msg.Result);
			}
		}

		// Token: 0x06007AD1 RID: 31441 RVA: 0x0022644C File Offset: 0x0022464C
		private void OnMessage(BattlePracticeInvitedNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattlePracticeInvitedNtf_hotfix != null)
			{
				this.m_OnMessageBattlePracticeInvitedNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			UserSummary userSummary = msg.Inviter.ToUserSummary();
			this.RemovePVPInviteInfo(userSummary.UserId);
			PVPInviteInfo pvpinviteInfo = new PVPInviteInfo();
			pvpinviteInfo.Inviter = userSummary;
			pvpinviteInfo.Timeout = this.GetServerTime().AddSeconds((double)this.m_configDataLoader.UtilityGetConfigableConst(ConfigableConstId.ConfigableConstId_BattleInviteFriendsToPracticeMaxWaitInterval));
			this.m_friendComponent.PVPInviteInfos.Add(pvpinviteInfo);
			if (this.EventOnBattlePracticeInvitedNtf != null)
			{
				this.EventOnBattlePracticeInvitedNtf(pvpinviteInfo);
			}
		}

		// Token: 0x06007AD2 RID: 31442 RVA: 0x00226530 File Offset: 0x00224730
		private void OnMessage(BattlePracticeFailNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattlePracticeFailNtf_hotfix != null)
			{
				this.m_OnMessageBattlePracticeFailNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattlePracticeFailNtf != null)
			{
				this.EventOnBattlePracticeFailNtf();
			}
		}

		// Token: 0x06007AD3 RID: 31443 RVA: 0x002265B8 File Offset: 0x002247B8
		private void OnMessage(BattlePracticeDeclinedNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBattlePracticeDeclinedNtf_hotfix != null)
			{
				this.m_OnMessageBattlePracticeDeclinedNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnBattlePracticeDeclinedNtf != null)
			{
				this.EventOnBattlePracticeDeclinedNtf();
			}
		}

		// Token: 0x06007AD4 RID: 31444 RVA: 0x00226640 File Offset: 0x00224840
		private void OnMessage(FriendshipPointsSendAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendshipPointsSendAck_hotfix != null)
			{
				this.m_OnMessageFriendshipPointsSendAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				foreach (string targetUserId in msg.SentUserIds)
				{
					this.m_friendComponent.SendFriendshipPoints(targetUserId);
				}
			}
			if (this.EventOnFriendshipPointsSendAck != null)
			{
				this.EventOnFriendshipPointsSendAck(msg.Result);
			}
		}

		// Token: 0x06007AD5 RID: 31445 RVA: 0x0022672C File Offset: 0x0022492C
		private void OnMessage(FriendshipPointsClaimAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFriendshipPointsClaimAck_hotfix != null)
			{
				this.m_OnMessageFriendshipPointsClaimAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				foreach (string targetUserId in msg.ReceivedUserIds)
				{
					this.m_friendComponent.ClaimFriendshipPointsFromFriend(targetUserId);
				}
			}
			if (this.EventOnFriendshipPointsClaimAck != null)
			{
				this.EventOnFriendshipPointsClaimAck(msg.Result, msg.ReceivedUserIds.Count);
			}
		}

		// Token: 0x06007AD6 RID: 31446 RVA: 0x00226824 File Offset: 0x00224A24
		public int CanSendLikes(string targetUserId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanSendLikesString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanSendLikesString_hotfix.call(new object[]
				{
					this,
					targetUserId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.CanSendLikes(targetUserId);
		}

		// Token: 0x06007AD7 RID: 31447 RVA: 0x002268AC File Offset: 0x00224AAC
		public bool CanSendFriendshipPoint(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanSendFriendshipPointString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanSendFriendshipPointString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return !this.HasSentFriendShipPoints(userID) && this.GetSendFriendShipPointsCountToday() < this.m_configDataLoader.ConfigableConstId_SendFriendShipPointsMaxTimes;
		}

		// Token: 0x06007AD8 RID: 31448 RVA: 0x0022694C File Offset: 0x00224B4C
		public bool CanGetFriendshipPoint(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGetFriendshipPointString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanGetFriendshipPointString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.HasReceivedFriendShipPoints(userID) && this.GetClaimedFriendShipPointsToday() < this.m_configDataLoader.ConfigableConstId_ReceiveFriendShipPointsMaxTimes;
		}

		// Token: 0x06007AD9 RID: 31449 RVA: 0x002269EC File Offset: 0x00224BEC
		public bool HasSentFriendShipPoints(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasSentFriendShipPointsString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasSentFriendShipPointsString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.HasSentFriendShipPoints(userID);
		}

		// Token: 0x06007ADA RID: 31450 RVA: 0x00226A74 File Offset: 0x00224C74
		public bool HasReceivedFriendShipPoints(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasReceivedFriendShipPointsString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasReceivedFriendShipPointsString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.HasReceivedFriendShipPoints(userID);
		}

		// Token: 0x06007ADB RID: 31451 RVA: 0x00226AFC File Offset: 0x00224CFC
		public int GetSendFriendShipPointsCountToday()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetSendFriendShipPointsCountToday_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetSendFriendShipPointsCountToday_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.GetSendFriendShipPointsCount();
		}

		// Token: 0x06007ADC RID: 31452 RVA: 0x00226B74 File Offset: 0x00224D74
		public int GetClaimedFriendShipPointsToday()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetClaimedFriendShipPointsToday_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetClaimedFriendShipPointsToday_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.GetClaimedFriendShipPointsCount();
		}

		// Token: 0x06007ADD RID: 31453 RVA: 0x00226BEC File Offset: 0x00224DEC
		public int CanUpdateBusinessCardDesc(string desc)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUpdateBusinessCardDescString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUpdateBusinessCardDescString_hotfix.call(new object[]
				{
					this,
					desc
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.CanUpdateBusinessCardDesc(desc);
		}

		// Token: 0x06007ADE RID: 31454 RVA: 0x00226C74 File Offset: 0x00224E74
		public int CanUpdateBusinessCardHeroSets(List<BusinessCardHeroSet> heroSets)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUpdateBusinessCardHeroSetsList`1_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUpdateBusinessCardHeroSetsList`1_hotfix.call(new object[]
				{
					this,
					heroSets
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.CanUpdateBusinessCardHeroSets(heroSets);
		}

		// Token: 0x06007ADF RID: 31455 RVA: 0x00226CFC File Offset: 0x00224EFC
		public List<UserSummary> GetFriendList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFriendList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetFriendList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_friendList.Clear();
			foreach (UserSummary userSummary in this.m_friendComponent.Friends)
			{
				if (!this.IsAcrossServerFriend(userSummary.UserId))
				{
					this.m_friendList.Add(userSummary);
				}
			}
			return this.m_friendList;
		}

		// Token: 0x06007AE0 RID: 31456 RVA: 0x00226DE4 File Offset: 0x00224FE4
		public List<UserSummary> GetAcrossServerFriendList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAcrossServerFriendList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetAcrossServerFriendList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_acrossServerFriendList.Clear();
			foreach (UserSummary userSummary in this.m_friendComponent.Friends)
			{
				if (this.IsAcrossServerFriend(userSummary.UserId))
				{
					this.m_acrossServerFriendList.Add(userSummary);
				}
			}
			return this.m_acrossServerFriendList;
		}

		// Token: 0x06007AE1 RID: 31457 RVA: 0x00226ECC File Offset: 0x002250CC
		public List<UserSummary> GetRecentChatPlayerList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRecentChatPlayerList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetRecentChatPlayerList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.RecentContactsChat;
		}

		// Token: 0x06007AE2 RID: 31458 RVA: 0x00226F44 File Offset: 0x00225144
		public List<UserSummary> GetRecentTeamBattlePlayerList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRecentTeamBattlePlayerList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetRecentTeamBattlePlayerList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.RecentContactsTeamBattle;
		}

		// Token: 0x06007AE3 RID: 31459 RVA: 0x00226FBC File Offset: 0x002251BC
		public List<UserSummary> GetGuildPlayerList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildPlayerList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetGuildPlayerList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.GuildPlayers;
		}

		// Token: 0x06007AE4 RID: 31460 RVA: 0x00227034 File Offset: 0x00225234
		private bool IsAcrossServerFriend(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsAcrossServerFriendString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsAcrossServerFriendString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return RoleGenerator.GetBornChannelIdFromUserId(userId) != LoginUITask.GetCurrentSelectServerInfo().m_bornChannelId;
		}

		// Token: 0x06007AE5 RID: 31461 RVA: 0x002270C8 File Offset: 0x002252C8
		public List<UserSummary> GetBlackList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBlackList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetBlackList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.Blacklist;
		}

		// Token: 0x06007AE6 RID: 31462 RVA: 0x00227140 File Offset: 0x00225340
		public List<UserSummary> GetFriendInvitedList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFriendInvitedList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetFriendInvitedList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.Invited;
		}

		// Token: 0x06007AE7 RID: 31463 RVA: 0x002271B8 File Offset: 0x002253B8
		public List<UserSummary> GetFriendInviteList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFriendInviteList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetFriendInviteList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.Invite;
		}

		// Token: 0x06007AE8 RID: 31464 RVA: 0x00227230 File Offset: 0x00225430
		public List<UserSummary> GetRecommendFriendList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRecommendFriendList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetRecommendFriendList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_recommendFriendList;
		}

		// Token: 0x06007AE9 RID: 31465 RVA: 0x002272A4 File Offset: 0x002254A4
		public List<UserSummary> GetFindFriendList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFindFriendList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetFindFriendList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_findFriendList;
		}

		// Token: 0x06007AEA RID: 31466 RVA: 0x00227318 File Offset: 0x00225518
		public void SortUserSummaryList(List<UserSummary> Summaries)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SortUserSummaryListList`1_hotfix != null)
			{
				this.m_SortUserSummaryListList`1_hotfix.call(new object[]
				{
					this,
					Summaries
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Summaries.Reverse();
			Summaries.Sort(new BlackJack.UtilityTools.ListExtensions.ComparisonComparer<UserSummary>(delegate(UserSummary x, UserSummary y)
			{
				if (x.Online && !y.Online)
				{
					return -1;
				}
				if (!x.Online && y.Online)
				{
					return 1;
				}
				return 0;
			}, false));
		}

		// Token: 0x06007AEB RID: 31467 RVA: 0x002273B8 File Offset: 0x002255B8
		public bool IsFriend(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsFriendString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsFriendString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			foreach (UserSummary userSummary in this.m_friendComponent.Friends)
			{
				if (userSummary.UserId == userID)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007AEC RID: 31468 RVA: 0x0022749C File Offset: 0x0022569C
		public int GetFriendShipPoints()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFriendShipPoints_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetFriendShipPoints_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetFriendshipPoints();
		}

		// Token: 0x06007AED RID: 31469 RVA: 0x00227514 File Offset: 0x00225714
		public bool IsFriendRedMarkShow()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsFriendRedMarkShow_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsFriendRedMarkShow_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.GetFriendInvitedList().Count > 0 || (this.m_friendComponent.GetClaimedFriendShipPointsCount() < this.m_configDataLoader.ConfigableConstId_ReceiveFriendShipPointsMaxTimes && this.m_friendComponent.ReceivedFriendShipPointsCount() > 0);
		}

		// Token: 0x06007AEE RID: 31470 RVA: 0x002275C0 File Offset: 0x002257C0
		public List<PVPInviteInfo> GetPVPInviteInfos()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPVPInviteInfos_hotfix != null)
			{
				return (List<PVPInviteInfo>)this.m_GetPVPInviteInfos_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_friendComponent.PVPInviteInfos;
		}

		// Token: 0x06007AEF RID: 31471 RVA: 0x00227638 File Offset: 0x00225838
		public void RemovePVPInviteInfo(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_RemovePVPInviteInfoString_hotfix != null)
			{
				this.m_RemovePVPInviteInfoString_hotfix.call(new object[]
				{
					this,
					userId2
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			string userId = userId2;
			this.m_friendComponent.PVPInviteInfos.RemoveAll((PVPInviteInfo x) => x.Inviter.UserId == userId);
		}

		// Token: 0x06007AF0 RID: 31472 RVA: 0x002276D4 File Offset: 0x002258D4
		public bool IsNeedGetFriendSocialRelation()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsNeedGetFriendSocialRelation_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsNeedGetFriendSocialRelation_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_needGetFriendSocialRelation;
		}

		// Token: 0x06007AF1 RID: 31473 RVA: 0x00227748 File Offset: 0x00225948
		public void SetNeedGetFriendSocialRelation(bool isNeed)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetNeedGetFriendSocialRelationBoolean_hotfix != null)
			{
				this.m_SetNeedGetFriendSocialRelationBoolean_hotfix.call(new object[]
				{
					this,
					isNeed
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_needGetFriendSocialRelation = isNeed;
		}

		// Token: 0x17001BEE RID: 7150
		// (get) Token: 0x06007AF2 RID: 31474 RVA: 0x002277C0 File Offset: 0x002259C0
		// (set) Token: 0x06007AF3 RID: 31475 RVA: 0x00227834 File Offset: 0x00225A34
		public BusinessCard BusinessCard
		{
			[CompilerGenerated]
			get
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_get_BusinessCard_hotfix != null)
				{
					return (BusinessCard)this.m_get_BusinessCard_hotfix.call(new object[]
					{
						this
					});
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				return this.<BusinessCard>k__BackingField;
			}
			[CompilerGenerated]
			set
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_set_BusinessCardBusinessCard_hotfix != null)
				{
					this.m_set_BusinessCardBusinessCard_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				this.<BusinessCard>k__BackingField = value;
			}
		}

		// Token: 0x140000BF RID: 191
		// (add) Token: 0x06007AF4 RID: 31476 RVA: 0x002278AC File Offset: 0x00225AAC
		// (remove) Token: 0x06007AF5 RID: 31477 RVA: 0x00227948 File Offset: 0x00225B48
		public event Action<int> EventOnBusinessCardRandomShowChangeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBusinessCardRandomShowChangeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBusinessCardRandomShowChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardRandomShowChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardRandomShowChangeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBusinessCardRandomShowChangeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBusinessCardRandomShowChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardRandomShowChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardRandomShowChangeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C0 RID: 192
		// (add) Token: 0x06007AF6 RID: 31478 RVA: 0x002279E4 File Offset: 0x00225BE4
		// (remove) Token: 0x06007AF7 RID: 31479 RVA: 0x00227A80 File Offset: 0x00225C80
		public event Action<int> EventOnLikeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnLikeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnLikeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnLikeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnLikeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnLikeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnLikeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnLikeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnLikeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C1 RID: 193
		// (add) Token: 0x06007AF8 RID: 31480 RVA: 0x00227B1C File Offset: 0x00225D1C
		// (remove) Token: 0x06007AF9 RID: 31481 RVA: 0x00227BB8 File Offset: 0x00225DB8
		public event Action<int> EventOnBusinessCardGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBusinessCardGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBusinessCardGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBusinessCardGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBusinessCardGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C2 RID: 194
		// (add) Token: 0x06007AFA RID: 31482 RVA: 0x00227C54 File Offset: 0x00225E54
		// (remove) Token: 0x06007AFB RID: 31483 RVA: 0x00227CF0 File Offset: 0x00225EF0
		public event Action<int> EventOnBusinessCardDescUpdateAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBusinessCardDescUpdateAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBusinessCardDescUpdateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardDescUpdateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardDescUpdateAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBusinessCardDescUpdateAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBusinessCardDescUpdateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardDescUpdateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardDescUpdateAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C3 RID: 195
		// (add) Token: 0x06007AFC RID: 31484 RVA: 0x00227D8C File Offset: 0x00225F8C
		// (remove) Token: 0x06007AFD RID: 31485 RVA: 0x00227E28 File Offset: 0x00226028
		public event Action<int> EventOnBusinessCardHeroSetUpdateAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBusinessCardHeroSetUpdateAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBusinessCardHeroSetUpdateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardHeroSetUpdateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardHeroSetUpdateAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBusinessCardHeroSetUpdateAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBusinessCardHeroSetUpdateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBusinessCardHeroSetUpdateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBusinessCardHeroSetUpdateAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C4 RID: 196
		// (add) Token: 0x06007AFE RID: 31486 RVA: 0x00227EC4 File Offset: 0x002260C4
		// (remove) Token: 0x06007AFF RID: 31487 RVA: 0x00227F60 File Offset: 0x00226160
		public event Action<int> EventOnFriendGetSocialRelationAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendGetSocialRelationAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendGetSocialRelationAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendGetSocialRelationAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendGetSocialRelationAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendGetSocialRelationAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendGetSocialRelationAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendGetSocialRelationAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendGetSocialRelationAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C5 RID: 197
		// (add) Token: 0x06007B00 RID: 31488 RVA: 0x00227FFC File Offset: 0x002261FC
		// (remove) Token: 0x06007B01 RID: 31489 RVA: 0x00228098 File Offset: 0x00226298
		public event Action<int, UserSummary> EventOnFriendInviteAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendInviteAckAction`2_hotfix != null)
				{
					this.m_add_EventOnFriendInviteAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, UserSummary> action = this.EventOnFriendInviteAck;
				Action<int, UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, UserSummary>>(ref this.EventOnFriendInviteAck, (Action<int, UserSummary>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendInviteAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnFriendInviteAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, UserSummary> action = this.EventOnFriendInviteAck;
				Action<int, UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, UserSummary>>(ref this.EventOnFriendInviteAck, (Action<int, UserSummary>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C6 RID: 198
		// (add) Token: 0x06007B02 RID: 31490 RVA: 0x00228134 File Offset: 0x00226334
		// (remove) Token: 0x06007B03 RID: 31491 RVA: 0x002281D0 File Offset: 0x002263D0
		public event Action EventOnFriendInviteNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendInviteNtfAction_hotfix != null)
				{
					this.m_add_EventOnFriendInviteNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnFriendInviteNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnFriendInviteNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendInviteNtfAction_hotfix != null)
				{
					this.m_remove_EventOnFriendInviteNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnFriendInviteNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnFriendInviteNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C7 RID: 199
		// (add) Token: 0x06007B04 RID: 31492 RVA: 0x0022826C File Offset: 0x0022646C
		// (remove) Token: 0x06007B05 RID: 31493 RVA: 0x00228308 File Offset: 0x00226508
		public event Action<int, UserSummary> EventOnFriendInviteAcceptAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendInviteAcceptAckAction`2_hotfix != null)
				{
					this.m_add_EventOnFriendInviteAcceptAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, UserSummary> action = this.EventOnFriendInviteAcceptAck;
				Action<int, UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, UserSummary>>(ref this.EventOnFriendInviteAcceptAck, (Action<int, UserSummary>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendInviteAcceptAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnFriendInviteAcceptAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, UserSummary> action = this.EventOnFriendInviteAcceptAck;
				Action<int, UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, UserSummary>>(ref this.EventOnFriendInviteAcceptAck, (Action<int, UserSummary>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C8 RID: 200
		// (add) Token: 0x06007B06 RID: 31494 RVA: 0x002283A4 File Offset: 0x002265A4
		// (remove) Token: 0x06007B07 RID: 31495 RVA: 0x00228440 File Offset: 0x00226640
		public event Action<UserSummary> EventOnFriendInviteAcceptNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendInviteAcceptNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendInviteAcceptNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<UserSummary> action = this.EventOnFriendInviteAcceptNtf;
				Action<UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<UserSummary>>(ref this.EventOnFriendInviteAcceptNtf, (Action<UserSummary>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendInviteAcceptNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendInviteAcceptNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<UserSummary> action = this.EventOnFriendInviteAcceptNtf;
				Action<UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<UserSummary>>(ref this.EventOnFriendInviteAcceptNtf, (Action<UserSummary>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000C9 RID: 201
		// (add) Token: 0x06007B08 RID: 31496 RVA: 0x002284DC File Offset: 0x002266DC
		// (remove) Token: 0x06007B09 RID: 31497 RVA: 0x00228578 File Offset: 0x00226778
		public event Action<int> EventOnFriendInviteDeclineAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendInviteDeclineAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendInviteDeclineAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendInviteDeclineAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendInviteDeclineAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendInviteDeclineAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendInviteDeclineAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendInviteDeclineAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendInviteDeclineAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000CA RID: 202
		// (add) Token: 0x06007B0A RID: 31498 RVA: 0x00228614 File Offset: 0x00226814
		// (remove) Token: 0x06007B0B RID: 31499 RVA: 0x002286B0 File Offset: 0x002268B0
		public event Action<UserSummary> EventOnFriendInviteDeclineNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendInviteDeclineNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendInviteDeclineNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<UserSummary> action = this.EventOnFriendInviteDeclineNtf;
				Action<UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<UserSummary>>(ref this.EventOnFriendInviteDeclineNtf, (Action<UserSummary>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendInviteDeclineNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendInviteDeclineNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<UserSummary> action = this.EventOnFriendInviteDeclineNtf;
				Action<UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<UserSummary>>(ref this.EventOnFriendInviteDeclineNtf, (Action<UserSummary>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000CB RID: 203
		// (add) Token: 0x06007B0C RID: 31500 RVA: 0x0022874C File Offset: 0x0022694C
		// (remove) Token: 0x06007B0D RID: 31501 RVA: 0x002287E8 File Offset: 0x002269E8
		public event Action<int> EventOnFriendDeleteAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendDeleteAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendDeleteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendDeleteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendDeleteAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendDeleteAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendDeleteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendDeleteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendDeleteAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000CC RID: 204
		// (add) Token: 0x06007B0E RID: 31502 RVA: 0x00228884 File Offset: 0x00226A84
		// (remove) Token: 0x06007B0F RID: 31503 RVA: 0x00228920 File Offset: 0x00226B20
		public event Action<int> EventOnPlayerBlockAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnPlayerBlockAckAction`1_hotfix != null)
				{
					this.m_add_EventOnPlayerBlockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnPlayerBlockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnPlayerBlockAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnPlayerBlockAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnPlayerBlockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnPlayerBlockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnPlayerBlockAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000CD RID: 205
		// (add) Token: 0x06007B10 RID: 31504 RVA: 0x002289BC File Offset: 0x00226BBC
		// (remove) Token: 0x06007B11 RID: 31505 RVA: 0x00228A58 File Offset: 0x00226C58
		public event Action<int> EventOnPlayerUnblockAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnPlayerUnblockAckAction`1_hotfix != null)
				{
					this.m_add_EventOnPlayerUnblockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnPlayerUnblockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnPlayerUnblockAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnPlayerUnblockAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnPlayerUnblockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnPlayerUnblockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnPlayerUnblockAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000CE RID: 206
		// (add) Token: 0x06007B12 RID: 31506 RVA: 0x00228AF4 File Offset: 0x00226CF4
		// (remove) Token: 0x06007B13 RID: 31507 RVA: 0x00228B90 File Offset: 0x00226D90
		public event Action<int> EventOnFriendFindAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendFindAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendFindAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendFindAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendFindAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendFindAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendFindAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendFindAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendFindAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000CF RID: 207
		// (add) Token: 0x06007B14 RID: 31508 RVA: 0x00228C2C File Offset: 0x00226E2C
		// (remove) Token: 0x06007B15 RID: 31509 RVA: 0x00228CC8 File Offset: 0x00226EC8
		public event Action<int> EventOnFriendSuggestedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendSuggestedAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendSuggestedAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendSuggestedAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendSuggestedAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendSuggestedAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendSuggestedAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendSuggestedAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendSuggestedAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D0 RID: 208
		// (add) Token: 0x06007B16 RID: 31510 RVA: 0x00228D64 File Offset: 0x00226F64
		// (remove) Token: 0x06007B17 RID: 31511 RVA: 0x00228E00 File Offset: 0x00227000
		public event Action<UserSummary> EventOnFriendSummaryUpdateNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendSummaryUpdateNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendSummaryUpdateNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<UserSummary> action = this.EventOnFriendSummaryUpdateNtf;
				Action<UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<UserSummary>>(ref this.EventOnFriendSummaryUpdateNtf, (Action<UserSummary>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendSummaryUpdateNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendSummaryUpdateNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<UserSummary> action = this.EventOnFriendSummaryUpdateNtf;
				Action<UserSummary> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<UserSummary>>(ref this.EventOnFriendSummaryUpdateNtf, (Action<UserSummary>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D1 RID: 209
		// (add) Token: 0x06007B18 RID: 31512 RVA: 0x00228E9C File Offset: 0x0022709C
		// (remove) Token: 0x06007B19 RID: 31513 RVA: 0x00228F38 File Offset: 0x00227138
		public event Action<int> EventOnBattlePracticeInviteAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattlePracticeInviteAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattlePracticeInviteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeInviteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeInviteAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattlePracticeInviteAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattlePracticeInviteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeInviteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeInviteAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D2 RID: 210
		// (add) Token: 0x06007B1A RID: 31514 RVA: 0x00228FD4 File Offset: 0x002271D4
		// (remove) Token: 0x06007B1B RID: 31515 RVA: 0x00229070 File Offset: 0x00227270
		public event Action<int> EventOnBattlePracticeAcceptAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattlePracticeAcceptAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattlePracticeAcceptAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeAcceptAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeAcceptAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattlePracticeAcceptAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattlePracticeAcceptAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeAcceptAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeAcceptAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D3 RID: 211
		// (add) Token: 0x06007B1C RID: 31516 RVA: 0x0022910C File Offset: 0x0022730C
		// (remove) Token: 0x06007B1D RID: 31517 RVA: 0x002291A8 File Offset: 0x002273A8
		public event Action<int> EventOnBattlePracticeDeclineAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattlePracticeDeclineAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattlePracticeDeclineAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeDeclineAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeDeclineAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattlePracticeDeclineAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattlePracticeDeclineAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeDeclineAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeDeclineAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D4 RID: 212
		// (add) Token: 0x06007B1E RID: 31518 RVA: 0x00229244 File Offset: 0x00227444
		// (remove) Token: 0x06007B1F RID: 31519 RVA: 0x002292E0 File Offset: 0x002274E0
		public event Action<int> EventOnBattlePracticeCancelAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattlePracticeCancelAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBattlePracticeCancelAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeCancelAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeCancelAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattlePracticeCancelAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattlePracticeCancelAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBattlePracticeCancelAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBattlePracticeCancelAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D5 RID: 213
		// (add) Token: 0x06007B20 RID: 31520 RVA: 0x0022937C File Offset: 0x0022757C
		// (remove) Token: 0x06007B21 RID: 31521 RVA: 0x00229418 File Offset: 0x00227618
		public event Action<PVPInviteInfo> EventOnBattlePracticeInvitedNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattlePracticeInvitedNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnBattlePracticeInvitedNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<PVPInviteInfo> action = this.EventOnBattlePracticeInvitedNtf;
				Action<PVPInviteInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<PVPInviteInfo>>(ref this.EventOnBattlePracticeInvitedNtf, (Action<PVPInviteInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattlePracticeInvitedNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnBattlePracticeInvitedNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<PVPInviteInfo> action = this.EventOnBattlePracticeInvitedNtf;
				Action<PVPInviteInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<PVPInviteInfo>>(ref this.EventOnBattlePracticeInvitedNtf, (Action<PVPInviteInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D6 RID: 214
		// (add) Token: 0x06007B22 RID: 31522 RVA: 0x002294B4 File Offset: 0x002276B4
		// (remove) Token: 0x06007B23 RID: 31523 RVA: 0x00229550 File Offset: 0x00227750
		public event Action EventOnBattlePracticeFailNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattlePracticeFailNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattlePracticeFailNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattlePracticeFailNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattlePracticeFailNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattlePracticeFailNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattlePracticeFailNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattlePracticeFailNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattlePracticeFailNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D7 RID: 215
		// (add) Token: 0x06007B24 RID: 31524 RVA: 0x002295EC File Offset: 0x002277EC
		// (remove) Token: 0x06007B25 RID: 31525 RVA: 0x00229688 File Offset: 0x00227888
		public event Action EventOnBattlePracticeDeclinedNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBattlePracticeDeclinedNtfAction_hotfix != null)
				{
					this.m_add_EventOnBattlePracticeDeclinedNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattlePracticeDeclinedNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattlePracticeDeclinedNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBattlePracticeDeclinedNtfAction_hotfix != null)
				{
					this.m_remove_EventOnBattlePracticeDeclinedNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnBattlePracticeDeclinedNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnBattlePracticeDeclinedNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D8 RID: 216
		// (add) Token: 0x06007B26 RID: 31526 RVA: 0x00229724 File Offset: 0x00227924
		// (remove) Token: 0x06007B27 RID: 31527 RVA: 0x002297C0 File Offset: 0x002279C0
		public event Action<int> EventOnFriendshipPointsSendAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendshipPointsSendAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFriendshipPointsSendAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendshipPointsSendAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendshipPointsSendAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendshipPointsSendAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFriendshipPointsSendAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFriendshipPointsSendAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFriendshipPointsSendAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000D9 RID: 217
		// (add) Token: 0x06007B28 RID: 31528 RVA: 0x0022985C File Offset: 0x00227A5C
		// (remove) Token: 0x06007B29 RID: 31529 RVA: 0x002298F8 File Offset: 0x00227AF8
		public event Action<int, int> EventOnFriendshipPointsClaimAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendshipPointsClaimAckAction`2_hotfix != null)
				{
					this.m_add_EventOnFriendshipPointsClaimAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnFriendshipPointsClaimAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnFriendshipPointsClaimAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendshipPointsClaimAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnFriendshipPointsClaimAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnFriendshipPointsClaimAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnFriendshipPointsClaimAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000DA RID: 218
		// (add) Token: 0x06007B2A RID: 31530 RVA: 0x00229994 File Offset: 0x00227B94
		// (remove) Token: 0x06007B2B RID: 31531 RVA: 0x00229A30 File Offset: 0x00227C30
		public event Action EventOnFriendshipPointsReceivedNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFriendshipPointsReceivedNtfAction_hotfix != null)
				{
					this.m_add_EventOnFriendshipPointsReceivedNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnFriendshipPointsReceivedNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnFriendshipPointsReceivedNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFriendshipPointsReceivedNtfAction_hotfix != null)
				{
					this.m_remove_EventOnFriendshipPointsReceivedNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnFriendshipPointsReceivedNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnFriendshipPointsReceivedNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007B2C RID: 31532 RVA: 0x00229ACC File Offset: 0x00227CCC
		public bool SendPullOrderRewardReq(string orderId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendPullOrderRewardReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendPullOrderRewardReqString_hotfix.call(new object[]
				{
					this,
					orderId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new PullOrderRewardReq
			{
				OrderId = orderId
			});
		}

		// Token: 0x06007B2D RID: 31533 RVA: 0x00229B5C File Offset: 0x00227D5C
		public bool SendGiftStoreCancelBuyReq(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGiftStoreCancelBuyReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGiftStoreCancelBuyReqInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GiftStoreCancelBuyReq
			{
				GoodsId = goodsId
			});
		}

		// Token: 0x06007B2E RID: 31534 RVA: 0x00229BEC File Offset: 0x00227DEC
		public bool SendGiftStoreItemBuyReq(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGiftStoreItemBuyReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGiftStoreItemBuyReqInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GiftStoreItemBuyReq
			{
				GoodsId = goodsId
			});
		}

		// Token: 0x06007B2F RID: 31535 RVA: 0x00229C7C File Offset: 0x00227E7C
		public bool SendGiftStoreAppleSubscribeReq(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGiftStoreAppleSubscribeReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGiftStoreAppleSubscribeReqInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GiftStoreAppleSubscribeReq
			{
				GoodsId = goodsId
			});
		}

		// Token: 0x06007B30 RID: 31536 RVA: 0x00229D0C File Offset: 0x00227F0C
		private void OnMessage(PullOrderRewardAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessagePullOrderRewardAck_hotfix != null)
			{
				this.m_OnMessagePullOrderRewardAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			OrderReward orderReward = new OrderReward();
			if (msg.Result == 0)
			{
				orderReward = OrderReward.FromPB(msg.Reward);
				this.m_giftStoreComponent.RemoveOrderReward(msg.OrderId);
				global::Debug.Log(CommonReportLog.GoodsListReportLog(orderReward.Rewards, string.Format("ProjectLPlayerContext::OnMessage Pull Order {0} rewards", msg.OrderId)));
			}
			if (this.EventOnPullOrderRewardAck != null)
			{
				this.EventOnPullOrderRewardAck(msg.Result, msg.OrderId, orderReward);
			}
		}

		// Token: 0x06007B31 RID: 31537 RVA: 0x00229DF0 File Offset: 0x00227FF0
		private void OnMessage(DSGiftStoreNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSGiftStoreNtf_hotfix != null)
			{
				this.m_OnMessageDSGiftStoreNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_giftStoreComponent.DeSerialize(msg);
		}

		// Token: 0x06007B32 RID: 31538 RVA: 0x00229E6C File Offset: 0x0022806C
		private void OnMessage(GiftStoreCancelBuyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGiftStoreCancelBuyAck_hotfix != null)
			{
				this.m_OnMessageGiftStoreCancelBuyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Format("gift store cancel buy goodsId {0} result = {1}", msg.GoodsId, msg.Result));
			if (this.EventOnGiftStoreItemCancelBuyAck != null)
			{
				this.EventOnGiftStoreItemCancelBuyAck(msg.Result, msg.GoodsId);
			}
		}

		// Token: 0x06007B33 RID: 31539 RVA: 0x00229F24 File Offset: 0x00228124
		private void OnMessage(GiftStoreBuyGoodsNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGiftStoreBuyGoodsNtf_hotfix != null)
			{
				this.m_OnMessageGiftStoreBuyGoodsNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.OnMessage(msg.Ntf);
			this.m_giftStoreComponent.BuyGoods(msg.GoodsId, msg.GoodsRegisterId, msg.BoughtNums, msg.NextFlushTime);
			this.m_giftStoreComponent.AddOrderReward(msg.Reward.OrderId, OrderReward.FromPB(msg.Reward));
			global::Debug.Log(string.Format("gift store buy goods goodsId = {0} goodsRegisterId = {1} boughtNums = {2} nextFlushTime = {3}", new object[]
			{
				msg.GoodsId,
				msg.GoodsRegisterId,
				msg.BoughtNums,
				new DateTime(msg.NextFlushTime)
			}));
			if (this.EventOnGiftStoreBuyGoodsNtf != null)
			{
				this.EventOnGiftStoreBuyGoodsNtf(msg.Reward.OrderId);
			}
		}

		// Token: 0x06007B34 RID: 31540 RVA: 0x0022A054 File Offset: 0x00228254
		private void OnMessage(GiftStoreOperationalGoodsUpdateNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGiftStoreOperationalGoodsUpdateNtf_hotfix != null)
			{
				this.m_OnMessageGiftStoreOperationalGoodsUpdateNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_giftStoreComponent.DeSerialize(msg);
			if (this.EventOnGiftStoreOperationalGoodsUpdateNtf != null)
			{
				this.EventOnGiftStoreOperationalGoodsUpdateNtf();
			}
		}

		// Token: 0x06007B35 RID: 31541 RVA: 0x0022A0E8 File Offset: 0x002282E8
		private void OnMessage(GiftStoreItemBuyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGiftStoreItemBuyAck_hotfix != null)
			{
				this.m_OnMessageGiftStoreItemBuyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Format("gift store apply buy goodsId {0} result = {1}", msg.GoodsId, msg.Result));
			if (this.EventOnGiftStoreItemBuyAck != null)
			{
				this.EventOnGiftStoreItemBuyAck(msg.Result, msg.GoodsId);
			}
		}

		// Token: 0x06007B36 RID: 31542 RVA: 0x0022A1A0 File Offset: 0x002283A0
		private void OnMessage(GiftStoreAppleSubscribeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGiftStoreAppleSubscribeAck_hotfix != null)
			{
				this.m_OnMessageGiftStoreAppleSubscribeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Format("gift store apply apple subscribe goodsId {0} result = {1}", msg.GoodsId, msg.Result));
			if (this.EventOnGiftStoreAppleSubscribeAck != null)
			{
				this.EventOnGiftStoreAppleSubscribeAck(msg.Result, msg.GoodsId);
			}
		}

		// Token: 0x06007B37 RID: 31543 RVA: 0x0022A258 File Offset: 0x00228458
		public List<OrderReward> GetAllOrderRewards()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllOrderRewards_hotfix != null)
			{
				return (List<OrderReward>)this.m_GetAllOrderRewards_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_giftStoreComponent.GetAllOrderRewards();
		}

		// Token: 0x06007B38 RID: 31544 RVA: 0x0022A2D0 File Offset: 0x002284D0
		public List<GiftStoreItem> GetGiftStoreItemList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGiftStoreItemList_hotfix != null)
			{
				return (List<GiftStoreItem>)this.m_GetGiftStoreItemList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_giftStoreComponent.GetOfferedStoreItems();
		}

		// Token: 0x06007B39 RID: 31545 RVA: 0x0022A348 File Offset: 0x00228548
		public bool IsGiftStoreItemSellOut(GiftStoreItem item)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsGiftStoreItemSellOutGiftStoreItem_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsGiftStoreItemSellOutGiftStoreItem_hotfix.call(new object[]
				{
					this,
					item
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_giftStoreComponent.IsGiftStoreItemSellOut(item);
		}

		// Token: 0x06007B3A RID: 31546 RVA: 0x0022A3D0 File Offset: 0x002285D0
		public int CanBuyGiftStoreGoods(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanBuyGiftStoreGoodsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanBuyGiftStoreGoodsInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_giftStoreComponent.CanBuyGoods(goodsId);
		}

		// Token: 0x06007B3B RID: 31547 RVA: 0x0022A458 File Offset: 0x00228658
		public TimeSpan GetMonthCardLeftTime(int cardId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMonthCardLeftTimeInt32_hotfix != null)
			{
				return (TimeSpan)this.m_GetMonthCardLeftTimeInt32_hotfix.call(new object[]
				{
					this,
					cardId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			MonthCard monthCard = this.m_resourceComponent.FindMonthCardById(cardId);
			if (monthCard == null)
			{
				return default(TimeSpan);
			}
			return monthCard.ExpiredTime - this.m_playerBasicInfoComponent.GetCurrentTime();
		}

		// Token: 0x140000DB RID: 219
		// (add) Token: 0x06007B3C RID: 31548 RVA: 0x0022A508 File Offset: 0x00228708
		// (remove) Token: 0x06007B3D RID: 31549 RVA: 0x0022A5A4 File Offset: 0x002287A4
		public event Action<int, int> EventOnGiftStoreItemBuyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGiftStoreItemBuyAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGiftStoreItemBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnGiftStoreItemBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnGiftStoreItemBuyAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGiftStoreItemBuyAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGiftStoreItemBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnGiftStoreItemBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnGiftStoreItemBuyAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000DC RID: 220
		// (add) Token: 0x06007B3E RID: 31550 RVA: 0x0022A640 File Offset: 0x00228840
		// (remove) Token: 0x06007B3F RID: 31551 RVA: 0x0022A6DC File Offset: 0x002288DC
		public event Action<int, int> EventOnGiftStoreAppleSubscribeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGiftStoreAppleSubscribeAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGiftStoreAppleSubscribeAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnGiftStoreAppleSubscribeAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnGiftStoreAppleSubscribeAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGiftStoreAppleSubscribeAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGiftStoreAppleSubscribeAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnGiftStoreAppleSubscribeAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnGiftStoreAppleSubscribeAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000DD RID: 221
		// (add) Token: 0x06007B40 RID: 31552 RVA: 0x0022A778 File Offset: 0x00228978
		// (remove) Token: 0x06007B41 RID: 31553 RVA: 0x0022A814 File Offset: 0x00228A14
		public event Action<string> EventOnGiftStoreBuyGoodsNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGiftStoreBuyGoodsNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnGiftStoreBuyGoodsNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<string> action = this.EventOnGiftStoreBuyGoodsNtf;
				Action<string> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<string>>(ref this.EventOnGiftStoreBuyGoodsNtf, (Action<string>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGiftStoreBuyGoodsNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnGiftStoreBuyGoodsNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<string> action = this.EventOnGiftStoreBuyGoodsNtf;
				Action<string> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<string>>(ref this.EventOnGiftStoreBuyGoodsNtf, (Action<string>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000DE RID: 222
		// (add) Token: 0x06007B42 RID: 31554 RVA: 0x0022A8B0 File Offset: 0x00228AB0
		// (remove) Token: 0x06007B43 RID: 31555 RVA: 0x0022A94C File Offset: 0x00228B4C
		public event Action EventOnGiftStoreOperationalGoodsUpdateNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix != null)
				{
					this.m_add_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnGiftStoreOperationalGoodsUpdateNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnGiftStoreOperationalGoodsUpdateNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix != null)
				{
					this.m_remove_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnGiftStoreOperationalGoodsUpdateNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnGiftStoreOperationalGoodsUpdateNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000DF RID: 223
		// (add) Token: 0x06007B44 RID: 31556 RVA: 0x0022A9E8 File Offset: 0x00228BE8
		// (remove) Token: 0x06007B45 RID: 31557 RVA: 0x0022AA84 File Offset: 0x00228C84
		public event Action<int, int> EventOnGiftStoreItemCancelBuyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGiftStoreItemCancelBuyAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGiftStoreItemCancelBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnGiftStoreItemCancelBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnGiftStoreItemCancelBuyAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGiftStoreItemCancelBuyAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGiftStoreItemCancelBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnGiftStoreItemCancelBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnGiftStoreItemCancelBuyAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E0 RID: 224
		// (add) Token: 0x06007B46 RID: 31558 RVA: 0x0022AB20 File Offset: 0x00228D20
		// (remove) Token: 0x06007B47 RID: 31559 RVA: 0x0022ABBC File Offset: 0x00228DBC
		public event Action<int, string, OrderReward> EventOnPullOrderRewardAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnPullOrderRewardAckAction`3_hotfix != null)
				{
					this.m_add_EventOnPullOrderRewardAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, string, OrderReward> action = this.EventOnPullOrderRewardAck;
				Action<int, string, OrderReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, string, OrderReward>>(ref this.EventOnPullOrderRewardAck, (Action<int, string, OrderReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnPullOrderRewardAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnPullOrderRewardAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, string, OrderReward> action = this.EventOnPullOrderRewardAck;
				Action<int, string, OrderReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, string, OrderReward>>(ref this.EventOnPullOrderRewardAck, (Action<int, string, OrderReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007B48 RID: 31560 RVA: 0x0022AC58 File Offset: 0x00228E58
		public bool SendGmCommandReq(string cmd)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGmCommandReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGmCommandReqString_hotfix.call(new object[]
				{
					this,
					cmd
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log("SendGmCommandReq: " + cmd);
			return this.SendMessage(new GmCommandReq
			{
				Command = cmd
			});
		}

		// Token: 0x06007B49 RID: 31561 RVA: 0x0022ACF8 File Offset: 0x00228EF8
		public static string GenerateAddItemGmCommand(GoodsType goodsType, int id, int count)
		{
			return string.Concat(new object[]
			{
				"ADD_ITEM ",
				(int)goodsType,
				",",
				id,
				",",
				count
			});
		}

		// Token: 0x06007B4A RID: 31562 RVA: 0x0022AD38 File Offset: 0x00228F38
		public static string GenerateRemoveItemGmCommand(GoodsType goodsType, int id, int count)
		{
			return string.Concat(new object[]
			{
				"REMOVE_ITEM ",
				(int)goodsType,
				",",
				id,
				",",
				count
			});
		}

		// Token: 0x06007B4B RID: 31563 RVA: 0x0022AD78 File Offset: 0x00228F78
		private void OnMessage(GmCommandAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGmCommandAck_hotfix != null)
			{
				this.m_OnMessageGmCommandAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Ntf != null)
			{
				this.OnMessage(msg.Ntf);
			}
			if (this.EventOnGmCommandAck != null)
			{
				this.EventOnGmCommandAck(msg.Result);
			}
		}

		// Token: 0x140000E1 RID: 225
		// (add) Token: 0x06007B4C RID: 31564 RVA: 0x0022AE1C File Offset: 0x0022901C
		// (remove) Token: 0x06007B4D RID: 31565 RVA: 0x0022AEB8 File Offset: 0x002290B8
		public event Action<int> EventOnGmCommandAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGmCommandAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGmCommandAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGmCommandAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGmCommandAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGmCommandAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGmCommandAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGmCommandAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGmCommandAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007B4E RID: 31566 RVA: 0x0022AF54 File Offset: 0x00229154
		public bool GuildCreateReq(string guildName, string hiringDeclaration, string announcement, bool autoJoin, int joinLevel)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildCreateReqStringStringStringBooleanInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildCreateReqStringStringStringBooleanInt32_hotfix.call(new object[]
				{
					this,
					guildName,
					hiringDeclaration,
					announcement,
					autoJoin,
					joinLevel
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildCreateReq
			{
				Name = guildName,
				HiringDeclaration = hiringDeclaration,
				Announcement = announcement,
				AutoJoin = autoJoin,
				JoinLevel = joinLevel
			});
		}

		// Token: 0x06007B4F RID: 31567 RVA: 0x0022B044 File Offset: 0x00229244
		public bool GuildJoinApplyReq(string guildId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildJoinApplyReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildJoinApplyReqString_hotfix.call(new object[]
				{
					this,
					guildId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildJoinApplyReq
			{
				GuildId = guildId
			});
		}

		// Token: 0x06007B50 RID: 31568 RVA: 0x0022B0D4 File Offset: 0x002292D4
		public bool GuildJoinAdminConfirmReq(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildJoinAdminConfirmReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildJoinAdminConfirmReqString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildJoinApplyConfirmReq
			{
				UserId = userID
			});
		}

		// Token: 0x06007B51 RID: 31569 RVA: 0x0022B164 File Offset: 0x00229364
		public bool GuildJoinApplyRefuseReq(string userID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildJoinApplyRefuseReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildJoinApplyRefuseReqString_hotfix.call(new object[]
				{
					this,
					userID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildJoinApplyRefuseReq
			{
				UserId = userID
			});
		}

		// Token: 0x06007B52 RID: 31570 RVA: 0x0022B1F4 File Offset: 0x002293F4
		public bool GuildJoinPlayerConfirmReq(string guildID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildJoinPlayerConfirmReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildJoinPlayerConfirmReqString_hotfix.call(new object[]
				{
					this,
					guildID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildJoinInvitationConfirmReq
			{
				GuildId = guildID
			});
		}

		// Token: 0x06007B53 RID: 31571 RVA: 0x0022B284 File Offset: 0x00229484
		public bool GuildSearchReq(string searchText)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildSearchReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildSearchReqString_hotfix.call(new object[]
				{
					this,
					searchText
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildSearchReq
			{
				SearchText = searchText
			});
		}

		// Token: 0x06007B54 RID: 31572 RVA: 0x0022B314 File Offset: 0x00229514
		public bool GuildRandomListReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildRandomListReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildRandomListReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildRandomListReq msg = new GuildRandomListReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B55 RID: 31573 RVA: 0x0022B390 File Offset: 0x00229590
		public bool GuildQuitReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GuildQuitReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GuildQuitReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildQuitReq msg = new GuildQuitReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B56 RID: 31574 RVA: 0x0022B40C File Offset: 0x0022960C
		public bool SendGuildInvitePlayerListReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildInvitePlayerListReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildInvitePlayerListReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildInvitePlayerListReq msg = new GuildInvitePlayerListReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B57 RID: 31575 RVA: 0x0022B488 File Offset: 0x00229688
		public bool SendGuildHiringDeclarationSetReq(string hiringDeclaration)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildHiringDeclarationSetReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildHiringDeclarationSetReqString_hotfix.call(new object[]
				{
					this,
					hiringDeclaration
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildHiringDeclarationSetReq
			{
				HiringDeclaration = hiringDeclaration
			});
		}

		// Token: 0x06007B58 RID: 31576 RVA: 0x0022B518 File Offset: 0x00229718
		public bool SendGuildJoinInvitationGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildJoinInvitationGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildJoinInvitationGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildJoinInvitationGetReq msg = new GuildJoinInvitationGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B59 RID: 31577 RVA: 0x0022B594 File Offset: 0x00229794
		public bool SendGuildJoinInvitationRefuseReq(string guildID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildJoinInvitationRefuseReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildJoinInvitationRefuseReqString_hotfix.call(new object[]
				{
					this,
					guildID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildJoinInvitationRefuseReq
			{
				GuildId = guildID
			});
		}

		// Token: 0x06007B5A RID: 31578 RVA: 0x0022B624 File Offset: 0x00229824
		public bool SendAllGuildJoinInvitationRefuseReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendAllGuildJoinInvitationRefuseReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendAllGuildJoinInvitationRefuseReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			AllGuildJoinInvitationRefuseReq msg = new AllGuildJoinInvitationRefuseReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B5B RID: 31579 RVA: 0x0022B6A0 File Offset: 0x002298A0
		public bool SendGuildGetReq(string guildId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildGetReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildGetReqString_hotfix.call(new object[]
				{
					this,
					guildId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildGetReq guildGetReq = new GuildGetReq();
			guildGetReq.GuildId = guildId;
			if (guildId == this.GetGuildId())
			{
				guildGetReq.LastUpdateTime = this.m_guildComponent.GetGuildLastUpdateTime;
			}
			return this.SendMessage(guildGetReq);
		}

		// Token: 0x06007B5C RID: 31580 RVA: 0x0022B754 File Offset: 0x00229954
		public bool SendGuildBasicSetReq(bool autoJoin, int joinLevel, string hiringDeclaration)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildBasicSetReqBooleanInt32String_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildBasicSetReqBooleanInt32String_hotfix.call(new object[]
				{
					this,
					autoJoin,
					joinLevel,
					hiringDeclaration
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildBasicSetReq
			{
				AutoJoin = autoJoin,
				JoinLevel = joinLevel,
				HiringDeclaration = hiringDeclaration
			});
		}

		// Token: 0x06007B5D RID: 31581 RVA: 0x0022B814 File Offset: 0x00229A14
		public bool SendGuildAnnouncementSetReq(string announcement)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildAnnouncementSetReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildAnnouncementSetReqString_hotfix.call(new object[]
				{
					this,
					announcement
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildAnnouncementSetReq
			{
				Announcement = announcement
			});
		}

		// Token: 0x06007B5E RID: 31582 RVA: 0x0022B8A4 File Offset: 0x00229AA4
		public bool SendGuildJoinApplyGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildJoinApplyGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildJoinApplyGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildJoinApplyGetReq msg = new GuildJoinApplyGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B5F RID: 31583 RVA: 0x0022B920 File Offset: 0x00229B20
		public bool SendGuildNameChangeReq(string name)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildNameChangeReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildNameChangeReqString_hotfix.call(new object[]
				{
					this,
					name
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildNameChangeReq
			{
				Name = name
			});
		}

		// Token: 0x06007B60 RID: 31584 RVA: 0x0022B9B0 File Offset: 0x00229BB0
		public bool SendGuildLogGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildLogGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildLogGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildLogGetReq msg = new GuildLogGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B61 RID: 31585 RVA: 0x0022BA2C File Offset: 0x00229C2C
		public bool SendGuildJoinInviteReq(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildJoinInviteReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildJoinInviteReqString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildJoinInviteReq
			{
				UserId = userId
			});
		}

		// Token: 0x06007B62 RID: 31586 RVA: 0x0022BABC File Offset: 0x00229CBC
		public bool SendGuildVicePresidentAppointReq(string userId, bool appoint)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildVicePresidentAppointReqStringBoolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildVicePresidentAppointReqStringBoolean_hotfix.call(new object[]
				{
					this,
					userId,
					appoint
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildVicePresidentAppointReq
			{
				UserId = userId,
				Appoint = appoint
			});
		}

		// Token: 0x06007B63 RID: 31587 RVA: 0x0022BB64 File Offset: 0x00229D64
		public bool SendGuildKickOutReq(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildKickOutReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildKickOutReqString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildKickOutReq
			{
				UserId = userId
			});
		}

		// Token: 0x06007B64 RID: 31588 RVA: 0x0022BBF4 File Offset: 0x00229DF4
		public bool SendGuildPresidentRelieveReq(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildPresidentRelieveReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildPresidentRelieveReqString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildPresidentRelieveReq
			{
				UserId = userId
			});
		}

		// Token: 0x06007B65 RID: 31589 RVA: 0x0022BC84 File Offset: 0x00229E84
		public bool SendGuildPresidentAppointReq(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildPresidentAppointReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildPresidentAppointReqString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GuildPresidentAppointReq
			{
				UserId = userId
			});
		}

		// Token: 0x06007B66 RID: 31590 RVA: 0x0022BD14 File Offset: 0x00229F14
		public bool SendAllGuildJoinApplyRefuseReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendAllGuildJoinApplyRefuseReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendAllGuildJoinApplyRefuseReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			AllGuildJoinApplyRefuseReq msg = new AllGuildJoinApplyRefuseReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007B67 RID: 31591 RVA: 0x0022BD90 File Offset: 0x00229F90
		private void OnMessage(GuildUpdateAnnouncementNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildUpdateAnnouncementNtf_hotfix != null)
			{
				this.m_OnMessageGuildUpdateAnnouncementNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_guildComponent.RefreshGuild(msg.Guild);
			if (this.EventOnGuildUpdateInfo != null)
			{
				this.EventOnGuildUpdateInfo(GuildLog.FromPB(msg.Log));
			}
		}

		// Token: 0x06007B68 RID: 31592 RVA: 0x0022BE34 File Offset: 0x0022A034
		private void OnMessage(DSGuildNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSGuildNtf_hotfix != null)
			{
				this.m_OnMessageDSGuildNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_guildComponent.SetGuildDataSection(msg);
		}

		// Token: 0x06007B69 RID: 31593 RVA: 0x0022BEB0 File Offset: 0x0022A0B0
		private void OnMessage(GuildCreateAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildCreateAck_hotfix != null)
			{
				this.m_OnMessageGuildCreateAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.RefreshGuild(msg.Guild);
			}
			if (this.EventOnGuildCreateAck != null)
			{
				this.EventOnGuildCreateAck(msg.Result);
			}
		}

		// Token: 0x06007B6A RID: 31594 RVA: 0x0022BF58 File Offset: 0x0022A158
		private void OnMessage(GuildJoinApplyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinApplyAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinApplyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0 && msg.Guild != null)
			{
				this.m_guildComponent.RefreshGuild(msg.Guild);
				this.m_guildComponent.SetGuildId(msg.Guild.Id);
			}
			if (this.EventOnGuildJoinApplyAck != null)
			{
				this.EventOnGuildJoinApplyAck(msg.Result);
			}
		}

		// Token: 0x06007B6B RID: 31595 RVA: 0x0022C024 File Offset: 0x0022A224
		private void OnMessage(GuildJoinApplyConfirmAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinApplyConfirmAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinApplyConfirmAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				GuildMember member = GuildMember.FromPb(msg.Member);
				this.m_guildComponent.m_guild.AddMember(member);
			}
			this.RemoveGuildJoinApplyListById(msg.UserId);
			if (this.EventOnGuildJoinAdminConfirmAck != null)
			{
				this.EventOnGuildJoinAdminConfirmAck(msg.Result);
			}
		}

		// Token: 0x06007B6C RID: 31596 RVA: 0x0022C0E8 File Offset: 0x0022A2E8
		private void OnMessage(GuildJoinApplyRefuseAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinApplyRefuseAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinApplyRefuseAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.RemoveGuildJoinApplyListById(msg.UserId);
			if (this.EventOnGuildJoinApplyRefuseAck != null)
			{
				this.EventOnGuildJoinApplyRefuseAck(msg.Result);
			}
		}

		// Token: 0x06007B6D RID: 31597 RVA: 0x0022C180 File Offset: 0x0022A380
		private void OnMessage(GuildJoinInvitationConfirmAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinInvitationConfirmAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinInvitationConfirmAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.RefreshGuild(msg.Guild);
			}
			if (msg.Result != -5203)
			{
				this.m_guildComponent.PlayerRefuseGuild(msg.GuildId);
			}
			if (this.EventOnGuildJoinPlayerConfirmAck != null)
			{
				this.EventOnGuildJoinPlayerConfirmAck(msg.Result);
			}
		}

		// Token: 0x06007B6E RID: 31598 RVA: 0x0022C24C File Offset: 0x0022A44C
		private void OnMessage(GuildSearchAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildSearchAck_hotfix != null)
			{
				this.m_OnMessageGuildSearchAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnGuildSearchAck != null)
			{
				List<GuildSearchInfo> list = new List<GuildSearchInfo>();
				foreach (ProGuildSearchInfo proInfo in msg.GuildList)
				{
					GuildSearchInfo item = GuildSearchInfo.ToGuildSearchInfo(proInfo);
					list.Add(item);
				}
				this.m_guildComponent.m_guildSearchList = list;
				this.EventOnGuildSearchAck(msg.Result, list);
			}
		}

		// Token: 0x06007B6F RID: 31599 RVA: 0x0022C344 File Offset: 0x0022A544
		private void OnMessage(GuildRandomListAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildRandomListAck_hotfix != null)
			{
				this.m_OnMessageGuildRandomListAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnGuildRandomListAck != null)
			{
				List<GuildSearchInfo> list = new List<GuildSearchInfo>();
				foreach (ProGuildSearchInfo proInfo in msg.GuildList)
				{
					GuildSearchInfo item = GuildSearchInfo.ToGuildSearchInfo(proInfo);
					list.Add(item);
				}
				this.m_guildComponent.m_guildRecommendList = list;
				this.EventOnGuildRandomListAck(msg.Result, list);
			}
		}

		// Token: 0x06007B70 RID: 31600 RVA: 0x0022C43C File Offset: 0x0022A63C
		private void OnMessage(GuildQuitAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildQuitAck_hotfix != null)
			{
				this.m_OnMessageGuildQuitAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.QuitGuild(new DateTime(msg.NextJoinTime));
				this.ResetComponentGuildData();
			}
			if (this.EventOnGuildQuitAck != null)
			{
				this.EventOnGuildQuitAck(msg.Result);
			}
		}

		// Token: 0x06007B71 RID: 31601 RVA: 0x0022C4F0 File Offset: 0x0022A6F0
		private void OnMessage(GuildInvitePlayerListAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildInvitePlayerListAck_hotfix != null)
			{
				this.m_OnMessageGuildInvitePlayerListAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<UserSummary> list = new List<UserSummary>();
			if (msg.Result == 0)
			{
				foreach (ProUserSummary pro in msg.PlayerList)
				{
					list.Add(pro.ToUserSummary());
				}
			}
			if (this.EventOnGuildInvitePlayerListAck != null)
			{
				this.EventOnGuildInvitePlayerListAck(msg.Result, list);
			}
		}

		// Token: 0x06007B72 RID: 31602 RVA: 0x0022C5E4 File Offset: 0x0022A7E4
		private void OnMessage(GuildHiringDeclarationSetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildHiringDeclarationSetAck_hotfix != null)
			{
				this.m_OnMessageGuildHiringDeclarationSetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.m_guild.HiringDeclaration = msg.HiringDeclaration;
			}
			if (this.EventOnGuildHiringDeclarationSetAck != null)
			{
				this.EventOnGuildHiringDeclarationSetAck(msg.Result);
			}
		}

		// Token: 0x06007B73 RID: 31603 RVA: 0x0022C694 File Offset: 0x0022A894
		private void OnMessage(GuildJoinInvitationGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinInvitationGetAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinInvitationGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<GuildJoinInvitation> list = new List<GuildJoinInvitation>();
			foreach (ProGuildJoinInvitation pb in msg.Invitations)
			{
				list.Add(GuildJoinInvitation.FromPb(pb));
			}
			this.m_guildComponent.m_guildJoinInvitationList = list;
			if (this.EventOnGuildJoinInvitationGetAck != null)
			{
				this.EventOnGuildJoinInvitationGetAck(0, list);
			}
		}

		// Token: 0x06007B74 RID: 31604 RVA: 0x0022C784 File Offset: 0x0022A984
		private void OnMessage(GuildJoinInvitationRefuseAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinInvitationRefuseAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinInvitationRefuseAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_guildComponent.PlayerRefuseGuild(msg.GuildId);
			if (this.EventOnGuildJoinInvitationRefuseAck != null)
			{
				this.EventOnGuildJoinInvitationRefuseAck(0);
			}
		}

		// Token: 0x06007B75 RID: 31605 RVA: 0x0022C81C File Offset: 0x0022AA1C
		private void OnMessage(AllGuildJoinInvitationRefuseAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageAllGuildJoinInvitationRefuseAck_hotfix != null)
			{
				this.m_OnMessageAllGuildJoinInvitationRefuseAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_guildComponent.m_guildJoinInvitationList != null)
			{
				this.m_guildComponent.m_guildJoinInvitationList.Clear();
			}
			if (this.EventOnAllGuildJoinInvitationRefuseAck != null)
			{
				this.EventOnAllGuildJoinInvitationRefuseAck(msg.Result);
			}
		}

		// Token: 0x06007B76 RID: 31606 RVA: 0x0022C8C8 File Offset: 0x0022AAC8
		private void OnMessage(GuildGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildGetAck_hotfix != null)
			{
				this.m_OnMessageGuildGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Guild guild = null;
			if (msg.Guild != null)
			{
				guild = Guild.FromPb(msg.Guild);
				this.m_guildComponent.m_guild = guild;
				if (msg.Guild.Id == this.GetGuildId())
				{
					this.m_guildComponent.GetGuildLastUpdateTime = msg.LastUpdateTime;
				}
			}
			else if (msg.GuildId == this.GetGuildId())
			{
				guild = this.m_guildComponent.m_guild;
			}
			if (this.EventOnGuildGetAck != null)
			{
				this.EventOnGuildGetAck(msg.Result, guild);
			}
		}

		// Token: 0x06007B77 RID: 31607 RVA: 0x0022C9D0 File Offset: 0x0022ABD0
		private void OnMessage(GuildBasicSetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildBasicSetAck_hotfix != null)
			{
				this.m_OnMessageGuildBasicSetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.m_guild.AutoJoin = msg.AutoJoin;
				this.m_guildComponent.m_guild.JoinLevel = msg.JoinLevel;
				this.m_guildComponent.m_guild.HiringDeclaration = msg.HiringDeclaration;
			}
			if (this.EventOnGuildBasicSetAck != null)
			{
				this.EventOnGuildBasicSetAck(msg.Result);
			}
		}

		// Token: 0x06007B78 RID: 31608 RVA: 0x0022CAAC File Offset: 0x0022ACAC
		private void OnMessage(GuildAnnouncementSetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildAnnouncementSetAck_hotfix != null)
			{
				this.m_OnMessageGuildAnnouncementSetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.m_guild.Bulletin = msg.Announcement;
			}
			if (this.EventOnGuildAnnouncementSetAck != null)
			{
				this.EventOnGuildAnnouncementSetAck(msg.Result);
			}
		}

		// Token: 0x06007B79 RID: 31609 RVA: 0x0022CB5C File Offset: 0x0022AD5C
		private void OnMessage(GuildJoinApplyGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinApplyGetAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinApplyGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<UserSummary> list = new List<UserSummary>();
			if (msg.Result == 0)
			{
				foreach (ProUserSummary pro in msg.Players)
				{
					list.Add(pro.ToUserSummary());
				}
			}
			this.m_guildComponent.m_guildJoinApplyList.Clear();
			this.m_guildComponent.m_guildJoinApplyList.AddRange(list);
			if (this.EventOnGuildJoinApplyGetAck != null)
			{
				this.EventOnGuildJoinApplyGetAck(msg.Result, list);
			}
		}

		// Token: 0x06007B7A RID: 31610 RVA: 0x0022CC70 File Offset: 0x0022AE70
		private void OnMessage(GuildNameChangeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildNameChangeAck_hotfix != null)
			{
				this.m_OnMessageGuildNameChangeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.m_guild.Name = msg.Name;
				this.m_playerBasicInfoComponent.AddCrystal(-this.m_configDataLoader.ConfigableConstId_GuildChangeNameCrystalCost, GameFunctionType.GameFunctionType_None, null);
			}
			if (this.EventOnGuildNameChangeAck != null)
			{
				this.EventOnGuildNameChangeAck(msg.Result);
			}
		}

		// Token: 0x06007B7B RID: 31611 RVA: 0x0022CD38 File Offset: 0x0022AF38
		private void OnMessage(GuildLogGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildLogGetAck_hotfix != null)
			{
				this.m_OnMessageGuildLogGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<GuildLog> list = new List<GuildLog>();
			if (msg.Result == 0)
			{
				foreach (ProGuildLog pbLog in msg.Logs)
				{
					list.Add(GuildLog.FromPB(pbLog));
				}
			}
			if (this.EventOnGuildLogGetAck != null)
			{
				this.EventOnGuildLogGetAck(msg.Result, list);
			}
		}

		// Token: 0x06007B7C RID: 31612 RVA: 0x0022CE2C File Offset: 0x0022B02C
		private void OnMessage(GuildJoinInviteAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinInviteAck_hotfix != null)
			{
				this.m_OnMessageGuildJoinInviteAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
			}
			if (this.EventOnGuildJoinInviteAck != null)
			{
				this.EventOnGuildJoinInviteAck(msg.Result);
			}
		}

		// Token: 0x06007B7D RID: 31613 RVA: 0x0022CEC4 File Offset: 0x0022B0C4
		private void OnMessage(GuildVicePresidentAppointAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildVicePresidentAppointAck_hotfix != null)
			{
				this.m_OnMessageGuildVicePresidentAppointAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.RefreshGuild(msg.Guild);
			}
			if (this.EventOnGuildVicePresidentAppointAck != null)
			{
				this.EventOnGuildVicePresidentAppointAck(msg.Result);
			}
		}

		// Token: 0x06007B7E RID: 31614 RVA: 0x0022CF6C File Offset: 0x0022B16C
		private void OnMessage(GuildKickOutAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildKickOutAck_hotfix != null)
			{
				this.m_OnMessageGuildKickOutAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.RefreshGuild(msg.Guild);
			}
			if (this.EventOnGuildKickOutAck != null)
			{
				this.EventOnGuildKickOutAck(msg.Result);
			}
		}

		// Token: 0x06007B7F RID: 31615 RVA: 0x0022D014 File Offset: 0x0022B214
		private void OnMessage(GuildPresidentRelieveAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildPresidentRelieveAck_hotfix != null)
			{
				this.m_OnMessageGuildPresidentRelieveAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.RefreshGuild(msg.Guild);
			}
			if (this.EventOnGuildPresidentRelieveAck != null)
			{
				this.EventOnGuildPresidentRelieveAck(msg.Result);
			}
		}

		// Token: 0x06007B80 RID: 31616 RVA: 0x0022D0BC File Offset: 0x0022B2BC
		private void OnMessage(GuildPresidentAppointAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildPresidentAppointAck_hotfix != null)
			{
				this.m_OnMessageGuildPresidentAppointAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.RefreshGuild(msg.Guild);
			}
			if (this.EventOnGuildPresidentAppointAck != null)
			{
				this.EventOnGuildPresidentAppointAck(msg.Result);
			}
		}

		// Token: 0x06007B81 RID: 31617 RVA: 0x0022D164 File Offset: 0x0022B364
		private void OnMessage(AllGuildJoinApplyRefuseAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageAllGuildJoinApplyRefuseAck_hotfix != null)
			{
				this.m_OnMessageAllGuildJoinApplyRefuseAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_guildComponent.m_guildJoinApplyList.Clear();
			}
			if (this.EventOnAllGuildJoinApplyRefuseAck != null)
			{
				this.EventOnAllGuildJoinApplyRefuseAck(msg.Result);
			}
		}

		// Token: 0x06007B82 RID: 31618 RVA: 0x0022D20C File Offset: 0x0022B40C
		private void OnMessage(GuildJoinApplyAdminNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinApplyAdminNtf_hotfix != null)
			{
				this.m_OnMessageGuildJoinApplyAdminNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildJoinApplyGetReqNetTask guildJoinApplyGetReqNetTask = new GuildJoinApplyGetReqNetTask();
			guildJoinApplyGetReqNetTask.EventOnStop += delegate(Task task)
			{
			};
			guildJoinApplyGetReqNetTask.Start(null);
		}

		// Token: 0x06007B83 RID: 31619 RVA: 0x0022D2B0 File Offset: 0x0022B4B0
		private void OnMessage(GuildJoinInvitationNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildJoinInvitationNtf_hotfix != null)
			{
				this.m_OnMessageGuildJoinInvitationNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildJoinInvitationGetReqNetTask guildJoinInvitationGetReqNetTask = new GuildJoinInvitationGetReqNetTask();
			guildJoinInvitationGetReqNetTask.EventOnStop += delegate(Task task)
			{
			};
			guildJoinInvitationGetReqNetTask.Start(null);
		}

		// Token: 0x06007B84 RID: 31620 RVA: 0x0022D354 File Offset: 0x0022B554
		public int CheckGuildCreateCondition(string guildName, string hiringDeclaration, int joinLevel)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckGuildCreateConditionStringStringInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CheckGuildCreateConditionStringStringInt32_hotfix.call(new object[]
				{
					this,
					guildName,
					hiringDeclaration,
					joinLevel
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CanCreateGuild(guildName, hiringDeclaration, joinLevel);
		}

		// Token: 0x06007B85 RID: 31621 RVA: 0x0022D400 File Offset: 0x0022B600
		public Guild GetGuildInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildInfo_hotfix != null)
			{
				return (Guild)this.m_GetGuildInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.m_guild;
		}

		// Token: 0x06007B86 RID: 31622 RVA: 0x0022D478 File Offset: 0x0022B678
		public void RefreshGuildListJoinState(string guildID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_RefreshGuildListJoinStateString_hotfix != null)
			{
				this.m_RefreshGuildListJoinStateString_hotfix.call(new object[]
				{
					this,
					guildID
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_guildComponent.RefreshGuildListJoinState(guildID, true);
		}

		// Token: 0x06007B87 RID: 31623 RVA: 0x0022D4F8 File Offset: 0x0022B6F8
		public int CanQuitGuild()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanQuitGuild_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanQuitGuild_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CanQuitGuild();
		}

		// Token: 0x06007B88 RID: 31624 RVA: 0x0022D570 File Offset: 0x0022B770
		public int CanKickOutGuild()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanKickOutGuild_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanKickOutGuild_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CanKickOutGuild();
		}

		// Token: 0x06007B89 RID: 31625 RVA: 0x0022D5E8 File Offset: 0x0022B7E8
		public int CheckGuildName(string name)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckGuildNameString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CheckGuildNameString_hotfix.call(new object[]
				{
					this,
					name
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CheckGuildName(name);
		}

		// Token: 0x06007B8A RID: 31626 RVA: 0x0022D670 File Offset: 0x0022B870
		public int CanSetGuildHiringDeclaration(string hiringDeclaration)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanSetGuildHiringDeclarationString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanSetGuildHiringDeclarationString_hotfix.call(new object[]
				{
					this,
					hiringDeclaration
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CanSetGuildHiringDeclaration(hiringDeclaration);
		}

		// Token: 0x06007B8B RID: 31627 RVA: 0x0022D6F8 File Offset: 0x0022B8F8
		public int CanSetGuildAnnouncement(string announcement)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanSetGuildAnnouncementString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanSetGuildAnnouncementString_hotfix.call(new object[]
				{
					this,
					announcement
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CanSetGuildAnnouncement(announcement);
		}

		// Token: 0x06007B8C RID: 31628 RVA: 0x0022D780 File Offset: 0x0022B980
		public int CheckGuildInvitePlayerList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckGuildInvitePlayerList_hotfix != null)
			{
				return Convert.ToInt32(this.m_CheckGuildInvitePlayerList_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CheckGuildInvitePlayerList();
		}

		// Token: 0x06007B8D RID: 31629 RVA: 0x0022D7F8 File Offset: 0x0022B9F8
		public List<GuildJoinInvitation> GetGuildJoinInvitationList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildJoinInvitationList_hotfix != null)
			{
				return (List<GuildJoinInvitation>)this.m_GetGuildJoinInvitationList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.m_guildJoinInvitationList;
		}

		// Token: 0x06007B8E RID: 31630 RVA: 0x0022D870 File Offset: 0x0022BA70
		public List<UserSummary> GetGuildJoinApplyList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildJoinApplyList_hotfix != null)
			{
				return (List<UserSummary>)this.m_GetGuildJoinApplyList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.m_guildJoinApplyList;
		}

		// Token: 0x06007B8F RID: 31631 RVA: 0x0022D8E8 File Offset: 0x0022BAE8
		private void RemoveGuildJoinApplyListById(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_RemoveGuildJoinApplyListByIdString_hotfix != null)
			{
				this.m_RemoveGuildJoinApplyListByIdString_hotfix.call(new object[]
				{
					this,
					userId2
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			string userId = userId2;
			List<UserSummary> guildJoinApplyList = this.m_guildComponent.m_guildJoinApplyList;
			UserSummary userSummary = guildJoinApplyList.Find((UserSummary user) => user.UserId == userId);
			if (userSummary != null)
			{
				guildJoinApplyList.Remove(userSummary);
			}
		}

		// Token: 0x06007B90 RID: 31632 RVA: 0x0022D994 File Offset: 0x0022BB94
		public int CheckGuildSearch(string searchText)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckGuildSearchString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CheckGuildSearchString_hotfix.call(new object[]
				{
					this,
					searchText
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CheckGuildSearch(searchText);
		}

		// Token: 0x06007B91 RID: 31633 RVA: 0x0022DA1C File Offset: 0x0022BC1C
		public int CheckGuildRandomList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckGuildRandomList_hotfix != null)
			{
				return Convert.ToInt32(this.m_CheckGuildRandomList_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CheckGuildRandomList();
		}

		// Token: 0x06007B92 RID: 31634 RVA: 0x0022DA94 File Offset: 0x0022BC94
		public List<GuildSearchInfo> GetGuildRecommendList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildRecommendList_hotfix != null)
			{
				return (List<GuildSearchInfo>)this.m_GetGuildRecommendList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.m_guildRecommendList;
		}

		// Token: 0x06007B93 RID: 31635 RVA: 0x0022DB0C File Offset: 0x0022BD0C
		public string GetGuildId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildId_hotfix != null)
			{
				return (string)this.m_GetGuildId_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.GetGuildId();
		}

		// Token: 0x06007B94 RID: 31636 RVA: 0x0022DB84 File Offset: 0x0022BD84
		public string GetGuildLogContent(GuildLog log)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildLogContentGuildLog_hotfix != null)
			{
				return (string)this.m_GetGuildLogContentGuildLog_hotfix.call(new object[]
				{
					this,
					log
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.GetGuildLogContent(log);
		}

		// Token: 0x06007B95 RID: 31637 RVA: 0x0022DC0C File Offset: 0x0022BE0C
		public void AddUserIdToGuildInviteList(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_AddUserIdToGuildInviteListString_hotfix != null)
			{
				this.m_AddUserIdToGuildInviteListString_hotfix.call(new object[]
				{
					this,
					userId
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (!this.HasPlayerBeenInvitedByGuild(userId))
			{
				this.m_guildComponent.m_guildInviteUserIdList.Add(userId);
			}
		}

		// Token: 0x06007B96 RID: 31638 RVA: 0x0022DC9C File Offset: 0x0022BE9C
		public TimeSpan CanJoinGuildCDTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanJoinGuildCDTime_hotfix != null)
			{
				return (TimeSpan)this.m_CanJoinGuildCDTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.NextJoinTime - this.m_playerBasicInfoComponent.GetCurrentTime();
		}

		// Token: 0x06007B97 RID: 31639 RVA: 0x0022DD28 File Offset: 0x0022BF28
		public bool HasPlayerBeenInvitedByGuild(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasPlayerBeenInvitedByGuildString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasPlayerBeenInvitedByGuildString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.m_guildInviteUserIdList.Contains(userId);
		}

		// Token: 0x06007B98 RID: 31640 RVA: 0x0022DDB8 File Offset: 0x0022BFB8
		public void ResetComponentGuildData()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ResetComponentGuildData_hotfix != null)
			{
				this.m_ResetComponentGuildData_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_guildComponent.ResetGuild();
			this.m_chatComponent.m_guildChatMsgList.Clear();
		}

		// Token: 0x140000E2 RID: 226
		// (add) Token: 0x06007B99 RID: 31641 RVA: 0x0022DE34 File Offset: 0x0022C034
		// (remove) Token: 0x06007B9A RID: 31642 RVA: 0x0022DED0 File Offset: 0x0022C0D0
		public event Action<int> EventOnGuildCreateAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildCreateAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildCreateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildCreateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildCreateAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildCreateAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildCreateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildCreateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildCreateAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E3 RID: 227
		// (add) Token: 0x06007B9B RID: 31643 RVA: 0x0022DF6C File Offset: 0x0022C16C
		// (remove) Token: 0x06007B9C RID: 31644 RVA: 0x0022E008 File Offset: 0x0022C208
		public event Action<int> EventOnGuildJoinApplyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinApplyAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildJoinApplyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinApplyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinApplyAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinApplyAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinApplyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinApplyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinApplyAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E4 RID: 228
		// (add) Token: 0x06007B9D RID: 31645 RVA: 0x0022E0A4 File Offset: 0x0022C2A4
		// (remove) Token: 0x06007B9E RID: 31646 RVA: 0x0022E140 File Offset: 0x0022C340
		public event Action<int> EventOnGuildJoinAdminConfirmAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinAdminConfirmAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildJoinAdminConfirmAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinAdminConfirmAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinAdminConfirmAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinAdminConfirmAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinAdminConfirmAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinAdminConfirmAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinAdminConfirmAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E5 RID: 229
		// (add) Token: 0x06007B9F RID: 31647 RVA: 0x0022E1DC File Offset: 0x0022C3DC
		// (remove) Token: 0x06007BA0 RID: 31648 RVA: 0x0022E278 File Offset: 0x0022C478
		public event Action<int> EventOnGuildJoinApplyRefuseAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinApplyRefuseAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildJoinApplyRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinApplyRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinApplyRefuseAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinApplyRefuseAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinApplyRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinApplyRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinApplyRefuseAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E6 RID: 230
		// (add) Token: 0x06007BA1 RID: 31649 RVA: 0x0022E314 File Offset: 0x0022C514
		// (remove) Token: 0x06007BA2 RID: 31650 RVA: 0x0022E3B0 File Offset: 0x0022C5B0
		public event Action<int> EventOnGuildJoinPlayerConfirmAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinPlayerConfirmAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildJoinPlayerConfirmAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinPlayerConfirmAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinPlayerConfirmAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinPlayerConfirmAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinPlayerConfirmAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinPlayerConfirmAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinPlayerConfirmAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E7 RID: 231
		// (add) Token: 0x06007BA3 RID: 31651 RVA: 0x0022E44C File Offset: 0x0022C64C
		// (remove) Token: 0x06007BA4 RID: 31652 RVA: 0x0022E4E8 File Offset: 0x0022C6E8
		public event Action<int, List<GuildSearchInfo>> EventOnGuildSearchAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildSearchAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildSearchAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildSearchInfo>> action = this.EventOnGuildSearchAck;
				Action<int, List<GuildSearchInfo>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildSearchInfo>>>(ref this.EventOnGuildSearchAck, (Action<int, List<GuildSearchInfo>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildSearchAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildSearchAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildSearchInfo>> action = this.EventOnGuildSearchAck;
				Action<int, List<GuildSearchInfo>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildSearchInfo>>>(ref this.EventOnGuildSearchAck, (Action<int, List<GuildSearchInfo>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E8 RID: 232
		// (add) Token: 0x06007BA5 RID: 31653 RVA: 0x0022E584 File Offset: 0x0022C784
		// (remove) Token: 0x06007BA6 RID: 31654 RVA: 0x0022E620 File Offset: 0x0022C820
		public event Action<int, List<GuildSearchInfo>> EventOnGuildRandomListAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildRandomListAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildRandomListAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildSearchInfo>> action = this.EventOnGuildRandomListAck;
				Action<int, List<GuildSearchInfo>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildSearchInfo>>>(ref this.EventOnGuildRandomListAck, (Action<int, List<GuildSearchInfo>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildRandomListAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildRandomListAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildSearchInfo>> action = this.EventOnGuildRandomListAck;
				Action<int, List<GuildSearchInfo>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildSearchInfo>>>(ref this.EventOnGuildRandomListAck, (Action<int, List<GuildSearchInfo>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000E9 RID: 233
		// (add) Token: 0x06007BA7 RID: 31655 RVA: 0x0022E6BC File Offset: 0x0022C8BC
		// (remove) Token: 0x06007BA8 RID: 31656 RVA: 0x0022E758 File Offset: 0x0022C958
		public event Action<int> EventOnGuildQuitAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildQuitAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildQuitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildQuitAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildQuitAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildQuitAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildQuitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildQuitAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildQuitAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000EA RID: 234
		// (add) Token: 0x06007BA9 RID: 31657 RVA: 0x0022E7F4 File Offset: 0x0022C9F4
		// (remove) Token: 0x06007BAA RID: 31658 RVA: 0x0022E890 File Offset: 0x0022CA90
		public event Action<int, List<UserSummary>> EventOnGuildInvitePlayerListAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildInvitePlayerListAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildInvitePlayerListAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<UserSummary>> action = this.EventOnGuildInvitePlayerListAck;
				Action<int, List<UserSummary>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<UserSummary>>>(ref this.EventOnGuildInvitePlayerListAck, (Action<int, List<UserSummary>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildInvitePlayerListAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildInvitePlayerListAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<UserSummary>> action = this.EventOnGuildInvitePlayerListAck;
				Action<int, List<UserSummary>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<UserSummary>>>(ref this.EventOnGuildInvitePlayerListAck, (Action<int, List<UserSummary>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000EB RID: 235
		// (add) Token: 0x06007BAB RID: 31659 RVA: 0x0022E92C File Offset: 0x0022CB2C
		// (remove) Token: 0x06007BAC RID: 31660 RVA: 0x0022E9C8 File Offset: 0x0022CBC8
		public event Action<int> EventOnGuildHiringDeclarationSetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildHiringDeclarationSetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildHiringDeclarationSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildHiringDeclarationSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildHiringDeclarationSetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildHiringDeclarationSetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildHiringDeclarationSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildHiringDeclarationSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildHiringDeclarationSetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000EC RID: 236
		// (add) Token: 0x06007BAD RID: 31661 RVA: 0x0022EA64 File Offset: 0x0022CC64
		// (remove) Token: 0x06007BAE RID: 31662 RVA: 0x0022EB00 File Offset: 0x0022CD00
		public event Action<int, List<GuildJoinInvitation>> EventOnGuildJoinInvitationGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinInvitationGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildJoinInvitationGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildJoinInvitation>> action = this.EventOnGuildJoinInvitationGetAck;
				Action<int, List<GuildJoinInvitation>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildJoinInvitation>>>(ref this.EventOnGuildJoinInvitationGetAck, (Action<int, List<GuildJoinInvitation>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinInvitationGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinInvitationGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildJoinInvitation>> action = this.EventOnGuildJoinInvitationGetAck;
				Action<int, List<GuildJoinInvitation>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildJoinInvitation>>>(ref this.EventOnGuildJoinInvitationGetAck, (Action<int, List<GuildJoinInvitation>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000ED RID: 237
		// (add) Token: 0x06007BAF RID: 31663 RVA: 0x0022EB9C File Offset: 0x0022CD9C
		// (remove) Token: 0x06007BB0 RID: 31664 RVA: 0x0022EC38 File Offset: 0x0022CE38
		public event Action<int> EventOnGuildJoinInvitationRefuseAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinInvitationRefuseAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildJoinInvitationRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinInvitationRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinInvitationRefuseAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinInvitationRefuseAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinInvitationRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinInvitationRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinInvitationRefuseAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000EE RID: 238
		// (add) Token: 0x06007BB1 RID: 31665 RVA: 0x0022ECD4 File Offset: 0x0022CED4
		// (remove) Token: 0x06007BB2 RID: 31666 RVA: 0x0022ED70 File Offset: 0x0022CF70
		public event Action<int> EventOnAllGuildJoinInvitationRefuseAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnAllGuildJoinInvitationRefuseAckAction`1_hotfix != null)
				{
					this.m_add_EventOnAllGuildJoinInvitationRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAllGuildJoinInvitationRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAllGuildJoinInvitationRefuseAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnAllGuildJoinInvitationRefuseAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnAllGuildJoinInvitationRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAllGuildJoinInvitationRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAllGuildJoinInvitationRefuseAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000EF RID: 239
		// (add) Token: 0x06007BB3 RID: 31667 RVA: 0x0022EE0C File Offset: 0x0022D00C
		// (remove) Token: 0x06007BB4 RID: 31668 RVA: 0x0022EEA8 File Offset: 0x0022D0A8
		public event Action<int, Guild> EventOnGuildGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, Guild> action = this.EventOnGuildGetAck;
				Action<int, Guild> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, Guild>>(ref this.EventOnGuildGetAck, (Action<int, Guild>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, Guild> action = this.EventOnGuildGetAck;
				Action<int, Guild> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, Guild>>(ref this.EventOnGuildGetAck, (Action<int, Guild>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F0 RID: 240
		// (add) Token: 0x06007BB5 RID: 31669 RVA: 0x0022EF44 File Offset: 0x0022D144
		// (remove) Token: 0x06007BB6 RID: 31670 RVA: 0x0022EFE0 File Offset: 0x0022D1E0
		public event Action<int> EventOnGuildBasicSetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildBasicSetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildBasicSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildBasicSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildBasicSetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildBasicSetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildBasicSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildBasicSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildBasicSetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F1 RID: 241
		// (add) Token: 0x06007BB7 RID: 31671 RVA: 0x0022F07C File Offset: 0x0022D27C
		// (remove) Token: 0x06007BB8 RID: 31672 RVA: 0x0022F118 File Offset: 0x0022D318
		public event Action<int> EventOnGuildAnnouncementSetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildAnnouncementSetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildAnnouncementSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildAnnouncementSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildAnnouncementSetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildAnnouncementSetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildAnnouncementSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildAnnouncementSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildAnnouncementSetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F2 RID: 242
		// (add) Token: 0x06007BB9 RID: 31673 RVA: 0x0022F1B4 File Offset: 0x0022D3B4
		// (remove) Token: 0x06007BBA RID: 31674 RVA: 0x0022F250 File Offset: 0x0022D450
		public event Action<int, List<UserSummary>> EventOnGuildJoinApplyGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinApplyGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildJoinApplyGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<UserSummary>> action = this.EventOnGuildJoinApplyGetAck;
				Action<int, List<UserSummary>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<UserSummary>>>(ref this.EventOnGuildJoinApplyGetAck, (Action<int, List<UserSummary>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinApplyGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinApplyGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<UserSummary>> action = this.EventOnGuildJoinApplyGetAck;
				Action<int, List<UserSummary>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<UserSummary>>>(ref this.EventOnGuildJoinApplyGetAck, (Action<int, List<UserSummary>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F3 RID: 243
		// (add) Token: 0x06007BBB RID: 31675 RVA: 0x0022F2EC File Offset: 0x0022D4EC
		// (remove) Token: 0x06007BBC RID: 31676 RVA: 0x0022F388 File Offset: 0x0022D588
		public event Action<int> EventOnGuildNameChangeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildNameChangeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildNameChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildNameChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildNameChangeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildNameChangeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildNameChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildNameChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildNameChangeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F4 RID: 244
		// (add) Token: 0x06007BBD RID: 31677 RVA: 0x0022F424 File Offset: 0x0022D624
		// (remove) Token: 0x06007BBE RID: 31678 RVA: 0x0022F4C0 File Offset: 0x0022D6C0
		public event Action<int, List<GuildLog>> EventOnGuildLogGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildLogGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildLogGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildLog>> action = this.EventOnGuildLogGetAck;
				Action<int, List<GuildLog>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildLog>>>(ref this.EventOnGuildLogGetAck, (Action<int, List<GuildLog>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildLogGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildLogGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<GuildLog>> action = this.EventOnGuildLogGetAck;
				Action<int, List<GuildLog>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<GuildLog>>>(ref this.EventOnGuildLogGetAck, (Action<int, List<GuildLog>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F5 RID: 245
		// (add) Token: 0x06007BBF RID: 31679 RVA: 0x0022F55C File Offset: 0x0022D75C
		// (remove) Token: 0x06007BC0 RID: 31680 RVA: 0x0022F5F8 File Offset: 0x0022D7F8
		public event Action<int> EventOnGuildJoinInviteAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildJoinInviteAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildJoinInviteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinInviteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinInviteAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildJoinInviteAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildJoinInviteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildJoinInviteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildJoinInviteAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F6 RID: 246
		// (add) Token: 0x06007BC1 RID: 31681 RVA: 0x0022F694 File Offset: 0x0022D894
		// (remove) Token: 0x06007BC2 RID: 31682 RVA: 0x0022F730 File Offset: 0x0022D930
		public event Action<int> EventOnGuildVicePresidentAppointAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildVicePresidentAppointAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildVicePresidentAppointAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildVicePresidentAppointAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildVicePresidentAppointAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildVicePresidentAppointAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildVicePresidentAppointAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildVicePresidentAppointAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildVicePresidentAppointAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F7 RID: 247
		// (add) Token: 0x06007BC3 RID: 31683 RVA: 0x0022F7CC File Offset: 0x0022D9CC
		// (remove) Token: 0x06007BC4 RID: 31684 RVA: 0x0022F868 File Offset: 0x0022DA68
		public event Action<int> EventOnGuildKickOutAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildKickOutAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildKickOutAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildKickOutAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildKickOutAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildKickOutAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildKickOutAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildKickOutAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildKickOutAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F8 RID: 248
		// (add) Token: 0x06007BC5 RID: 31685 RVA: 0x0022F904 File Offset: 0x0022DB04
		// (remove) Token: 0x06007BC6 RID: 31686 RVA: 0x0022F9A0 File Offset: 0x0022DBA0
		public event Action<int> EventOnGuildPresidentRelieveAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildPresidentRelieveAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildPresidentRelieveAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildPresidentRelieveAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildPresidentRelieveAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildPresidentRelieveAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildPresidentRelieveAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildPresidentRelieveAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildPresidentRelieveAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000F9 RID: 249
		// (add) Token: 0x06007BC7 RID: 31687 RVA: 0x0022FA3C File Offset: 0x0022DC3C
		// (remove) Token: 0x06007BC8 RID: 31688 RVA: 0x0022FAD8 File Offset: 0x0022DCD8
		public event Action<int> EventOnGuildPresidentAppointAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildPresidentAppointAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildPresidentAppointAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildPresidentAppointAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildPresidentAppointAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildPresidentAppointAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildPresidentAppointAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildPresidentAppointAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildPresidentAppointAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000FA RID: 250
		// (add) Token: 0x06007BC9 RID: 31689 RVA: 0x0022FB74 File Offset: 0x0022DD74
		// (remove) Token: 0x06007BCA RID: 31690 RVA: 0x0022FC10 File Offset: 0x0022DE10
		public event Action<int> EventOnAllGuildJoinApplyRefuseAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnAllGuildJoinApplyRefuseAckAction`1_hotfix != null)
				{
					this.m_add_EventOnAllGuildJoinApplyRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAllGuildJoinApplyRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAllGuildJoinApplyRefuseAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnAllGuildJoinApplyRefuseAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnAllGuildJoinApplyRefuseAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAllGuildJoinApplyRefuseAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAllGuildJoinApplyRefuseAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000FB RID: 251
		// (add) Token: 0x06007BCB RID: 31691 RVA: 0x0022FCAC File Offset: 0x0022DEAC
		// (remove) Token: 0x06007BCC RID: 31692 RVA: 0x0022FD48 File Offset: 0x0022DF48
		public event Action<GuildLog> EventOnGuildUpdateInfo
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildUpdateInfoAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildUpdateInfoAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<GuildLog> action = this.EventOnGuildUpdateInfo;
				Action<GuildLog> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<GuildLog>>(ref this.EventOnGuildUpdateInfo, (Action<GuildLog>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildUpdateInfoAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildUpdateInfoAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<GuildLog> action = this.EventOnGuildUpdateInfo;
				Action<GuildLog> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<GuildLog>>(ref this.EventOnGuildUpdateInfo, (Action<GuildLog>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007BCD RID: 31693 RVA: 0x0022FDE4 File Offset: 0x0022DFE4
		public bool SendGuildMassiveCombatDataReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildMassiveCombatDataReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildMassiveCombatDataReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildMassiveCombatDataReq msg = new GuildMassiveCombatDataReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007BCE RID: 31694 RVA: 0x0022FE60 File Offset: 0x0022E060
		public bool SendGuildMassiveCombatStartReq(int difficulty)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildMassiveCombatStartReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildMassiveCombatStartReqInt32_hotfix.call(new object[]
				{
					this,
					difficulty
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildMassiveCombatStartReq msg = new GuildMassiveCombatStartReq
			{
				Difficulty = difficulty
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007BCF RID: 31695 RVA: 0x0022FEF4 File Offset: 0x0022E0F4
		public bool SendGuildMassiveCombatSurrenderReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildMassiveCombatSurrenderReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildMassiveCombatSurrenderReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildMassiveCombatSurrenderReq msg = new GuildMassiveCombatSurrenderReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007BD0 RID: 31696 RVA: 0x0022FF70 File Offset: 0x0022E170
		public bool SendGuildMassiveCombatAttackReq(int levelId, List<int> heroIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildMassiveCombatAttackReqInt32List`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildMassiveCombatAttackReqInt32List`1_hotfix.call(new object[]
				{
					this,
					levelId,
					heroIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildMassiveCombatAttackReq guildMassiveCombatAttackReq = new GuildMassiveCombatAttackReq
			{
				LevelId = levelId
			};
			guildMassiveCombatAttackReq.HeroIds.AddRange(heroIds);
			return this.SendMessage(guildMassiveCombatAttackReq);
		}

		// Token: 0x06007BD1 RID: 31697 RVA: 0x00230020 File Offset: 0x0022E220
		public bool SendGuildMassiveCombatAttackFinishedReq(int levelId, ProBattleReport report)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGuildMassiveCombatAttackFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGuildMassiveCombatAttackFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					levelId,
					report
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildMassiveCombatAttackFinishedReq msg = new GuildMassiveCombatAttackFinishedReq
			{
				LevelId = levelId,
				Report = report
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007BD2 RID: 31698 RVA: 0x002300CC File Offset: 0x0022E2CC
		private void OnMessage(GuildMassiveCombatDataAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildMassiveCombatDataAck_hotfix != null)
			{
				this.m_OnMessageGuildMassiveCombatDataAck_hotfix.call(new object[]
				{
					this,
					msg2
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GuildMassiveCombatDataAck msg = msg2;
			ProjectLPlayerContext $this = this;
			this.m_guildComponent.m_guild.MassiveCombat = msg.GeneralInfo.ToMemory();
			this.FillGuildMassiveCombatMemberSummary(this.m_guildComponent.m_guild.MassiveCombat, delegate(FriendGetUserSummaryAck s)
			{
				$this.OnFillGuildMassiveGetDataSummary(msg.Result, s);
			});
		}

		// Token: 0x06007BD3 RID: 31699 RVA: 0x00230194 File Offset: 0x0022E394
		private void OnMessage(GuildMassiveCombatNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildMassiveCombatNtf_hotfix != null)
			{
				this.m_OnMessageGuildMassiveCombatNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.GeneralInfo != null)
			{
				this.m_guildComponent.m_guild.MassiveCombat = msg.GeneralInfo.ToMemory();
				if (this.EventOnGuildMassiveCombatNtf != null)
				{
					this.EventOnGuildMassiveCombatNtf(this.m_guildComponent.m_guild.MassiveCombat);
				}
				this.FillGuildMassiveCombatMemberSummary(this.m_guildComponent.m_guild.MassiveCombat, new Action<FriendGetUserSummaryAck>(this.OnFillGuildMassiveCombatNtfSummary));
			}
		}

		// Token: 0x06007BD4 RID: 31700 RVA: 0x00230274 File Offset: 0x0022E474
		private void OnMessage(GuildMassiveCombatPlayerNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildMassiveCombatPlayerNtf_hotfix != null)
			{
				this.m_OnMessageGuildMassiveCombatPlayerNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Info != null)
			{
				this.m_guildComponent.GuildDS.MassiveCombat = msg.Info.ToMemory();
				if (this.EventOnGuildMassiveCombatPlayerNtf != null)
				{
					this.EventOnGuildMassiveCombatPlayerNtf(this.m_guildComponent.GuildDS.MassiveCombat);
				}
			}
		}

		// Token: 0x06007BD5 RID: 31701 RVA: 0x00230330 File Offset: 0x0022E530
		private void OnMessage(GuildMassiveCombatStartAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildMassiveCombatStartAck_hotfix != null)
			{
				this.m_OnMessageGuildMassiveCombatStartAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnGuildMassiveCombatStartAck != null)
			{
				this.EventOnGuildMassiveCombatStartAck(msg.Result);
			}
		}

		// Token: 0x06007BD6 RID: 31702 RVA: 0x002303BC File Offset: 0x0022E5BC
		private void OnMessage(GuildMassiveCombatSurrenderAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildMassiveCombatSurrenderAck_hotfix != null)
			{
				this.m_OnMessageGuildMassiveCombatSurrenderAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnGuildMassiveCombatSurrenderAck != null)
			{
				this.EventOnGuildMassiveCombatSurrenderAck(msg.Result);
			}
		}

		// Token: 0x06007BD7 RID: 31703 RVA: 0x00230448 File Offset: 0x0022E648
		private void OnMessage(GuildMassiveCombatAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildMassiveCombatAttackAck_hotfix != null)
			{
				this.m_OnMessageGuildMassiveCombatAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				if (msg.BeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BeginInfo.RandomSeed);
				}
				this.m_battleComponent.SetProcessingBattleInfo(BattleType.GuildMassiveCombat, msg.Req.LevelId);
				this.m_battleComponent.SetBattleArmyRandomSeed(msg.ArmyRandomSeed);
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnGuildMassiveCombatAttackAck != null)
			{
				this.EventOnGuildMassiveCombatAttackAck(msg.Result);
			}
		}

		// Token: 0x06007BD8 RID: 31704 RVA: 0x0023054C File Offset: 0x0022E74C
		private void OnMessage(GuildMassiveCombatAttackFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGuildMassiveCombatAttackFinishedAck_hotfix != null)
			{
				this.m_OnMessageGuildMassiveCombatAttackFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf.Ntf);
				}
				battleReward.ScoreGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.Ntf.PointslRewards));
				battleReward.Score = msg.Ntf.Points;
				this.m_guildComponent.GuildDS.MassiveCombat.Points = msg.Ntf.TotalPoints;
				this.m_battleComponent.FightFinished(GameFunctionStatus.End, msg.Win, true);
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnGuildMassiveCombatAttackFinishedAck != null)
			{
				this.EventOnGuildMassiveCombatAttackFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007BD9 RID: 31705 RVA: 0x00230690 File Offset: 0x0022E890
		public int GetGuildMassiveCombatStrongholdEliminateRate(GuildMassiveCombatStronghold stronghold)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildMassiveCombatStrongholdEliminateRateGuildMassiveCombatStronghold_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGuildMassiveCombatStrongholdEliminateRateGuildMassiveCombatStronghold_hotfix.call(new object[]
				{
					this,
					stronghold
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.GetStrongholdEliminateRate(stronghold) / 100;
		}

		// Token: 0x06007BDA RID: 31706 RVA: 0x0023071C File Offset: 0x0022E91C
		public int GetFinishedGuildMassiveCombatThisWeek()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFinishedGuildMassiveCombatThisWeek_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetFinishedGuildMassiveCombatThisWeek_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Guild guildInfo = this.GetGuildInfo();
			return this.m_guildComponent.GetStartedCombatThisWeek(guildInfo.MassiveCombat);
		}

		// Token: 0x06007BDB RID: 31707 RVA: 0x002307A0 File Offset: 0x0022E9A0
		public int CanStartGuildMassiveCombat()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanStartGuildMassiveCombat_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanStartGuildMassiveCombat_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CanStartMassiveCombat();
		}

		// Token: 0x06007BDC RID: 31708 RVA: 0x00230818 File Offset: 0x0022EA18
		public int CanAttackGuildMassiveCombatSinglePVELevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackGuildMassiveCombatSinglePVELevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackGuildMassiveCombatSinglePVELevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.CanAttackStronghold(levelId);
		}

		// Token: 0x06007BDD RID: 31709 RVA: 0x002308A0 File Offset: 0x0022EAA0
		public GuildPlayerMassiveCombatInfo GetGuildPlayerMassiveCombatInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildPlayerMassiveCombatInfo_hotfix != null)
			{
				return (GuildPlayerMassiveCombatInfo)this.m_GetGuildPlayerMassiveCombatInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.GuildDS.MassiveCombat;
		}

		// Token: 0x06007BDE RID: 31710 RVA: 0x0023091C File Offset: 0x0022EB1C
		public GuildMassiveCombatStronghold GetGuildMassiveCombatStronghold(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildMassiveCombatStrongholdInt32_hotfix != null)
			{
				return (GuildMassiveCombatStronghold)this.m_GetGuildMassiveCombatStrongholdInt32_hotfix.call(new object[]
				{
					this,
					levelId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_configDataLoader.GetConfigDataGuildMassiveCombatLevelInfo(levelId) == null)
			{
				return null;
			}
			Guild guildInfo = this.GetGuildInfo();
			if (guildInfo == null)
			{
				return null;
			}
			if (guildInfo.MassiveCombat.RecentCombat == null)
			{
				return null;
			}
			return guildInfo.MassiveCombat.RecentCombat.GetStronghold(levelId);
		}

		// Token: 0x06007BDF RID: 31711 RVA: 0x002309E0 File Offset: 0x0022EBE0
		public void FillGuildMassiveCombatMemberSummary(GuildMassiveCombatGeneral Info, Action<FriendGetUserSummaryAck> action)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_FillGuildMassiveCombatMemberSummaryGuildMassiveCombatGeneralAction`1_hotfix != null)
			{
				this.m_FillGuildMassiveCombatMemberSummaryGuildMassiveCombatGeneralAction`1_hotfix.call(new object[]
				{
					this,
					Info,
					action
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<string> list = new List<string>();
			if (Info.RecentCombat != null)
			{
				foreach (GuildMassiveCombatMemberInfo guildMassiveCombatMemberInfo in Info.RecentCombat.Members)
				{
					list.Add(guildMassiveCombatMemberInfo.UserId);
				}
			}
			foreach (GuildMassiveCombatInfo guildMassiveCombatInfo in Info.FinishedCombats)
			{
				foreach (GuildMassiveCombatMemberInfo guildMassiveCombatMemberInfo2 in guildMassiveCombatInfo.Members)
				{
					list.Add(guildMassiveCombatMemberInfo2.UserId);
				}
			}
			this.SendGetUserSummaryReq(list, action);
		}

		// Token: 0x06007BE0 RID: 31712 RVA: 0x00230B6C File Offset: 0x0022ED6C
		public void OnFillGuildMassiveCombatNtfSummary(FriendGetUserSummaryAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnFillGuildMassiveCombatNtfSummaryFriendGetUserSummaryAck_hotfix != null)
			{
				this.m_OnFillGuildMassiveCombatNtfSummaryFriendGetUserSummaryAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Guild guildInfo = this.GetGuildInfo();
			if (guildInfo == null)
			{
				return;
			}
			if (guildInfo.MassiveCombat.RecentCombat != null)
			{
				using (List<GuildMassiveCombatMemberInfo>.Enumerator enumerator = guildInfo.MassiveCombat.RecentCombat.Members.GetEnumerator())
				{
					while (enumerator.MoveNext())
					{
						GuildMassiveCombatMemberInfo member = enumerator.Current;
						ProUserSummary proUserSummary = msg.Users.Find((ProUserSummary user) => user.UserId == member.UserId);
						if (proUserSummary != null)
						{
							member.Summary = proUserSummary.ToUserSummary();
						}
					}
				}
			}
			foreach (GuildMassiveCombatInfo guildMassiveCombatInfo in guildInfo.MassiveCombat.FinishedCombats)
			{
				using (List<GuildMassiveCombatMemberInfo>.Enumerator enumerator3 = guildMassiveCombatInfo.Members.GetEnumerator())
				{
					while (enumerator3.MoveNext())
					{
						GuildMassiveCombatMemberInfo member = enumerator3.Current;
						ProUserSummary proUserSummary2 = msg.Users.Find((ProUserSummary user) => user.UserId == member.UserId);
						if (proUserSummary2 != null)
						{
							member.Summary = proUserSummary2.ToUserSummary();
						}
					}
				}
			}
			if (this.EventOnGuildMassiveCombatNtf != null)
			{
				this.EventOnGuildMassiveCombatNtf(this.m_guildComponent.m_guild.MassiveCombat);
			}
		}

		// Token: 0x06007BE1 RID: 31713 RVA: 0x00230D80 File Offset: 0x0022EF80
		public void OnFillGuildMassiveGetDataSummary(int result, FriendGetUserSummaryAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnFillGuildMassiveGetDataSummaryInt32FriendGetUserSummaryAck_hotfix != null)
			{
				this.m_OnFillGuildMassiveGetDataSummaryInt32FriendGetUserSummaryAck_hotfix.call(new object[]
				{
					this,
					result,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Guild guildInfo = this.GetGuildInfo();
			if (guildInfo == null)
			{
				return;
			}
			if (guildInfo.MassiveCombat.RecentCombat != null)
			{
				using (List<GuildMassiveCombatMemberInfo>.Enumerator enumerator = guildInfo.MassiveCombat.RecentCombat.Members.GetEnumerator())
				{
					while (enumerator.MoveNext())
					{
						GuildMassiveCombatMemberInfo member = enumerator.Current;
						ProUserSummary proUserSummary = msg.Users.Find((ProUserSummary user) => user.UserId == member.UserId);
						if (proUserSummary != null)
						{
							member.Summary = proUserSummary.ToUserSummary();
						}
					}
				}
			}
			foreach (GuildMassiveCombatInfo guildMassiveCombatInfo in guildInfo.MassiveCombat.FinishedCombats)
			{
				using (List<GuildMassiveCombatMemberInfo>.Enumerator enumerator3 = guildMassiveCombatInfo.Members.GetEnumerator())
				{
					while (enumerator3.MoveNext())
					{
						GuildMassiveCombatMemberInfo member = enumerator3.Current;
						ProUserSummary proUserSummary2 = msg.Users.Find((ProUserSummary user) => user.UserId == member.UserId);
						if (proUserSummary2 != null)
						{
							member.Summary = proUserSummary2.ToUserSummary();
						}
					}
				}
			}
			if (this.EventOnGuildMassiveCombatDataAck != null)
			{
				this.EventOnGuildMassiveCombatDataAck(result, this.m_guildComponent.m_guild.MassiveCombat);
			}
		}

		// Token: 0x06007BE2 RID: 31714 RVA: 0x00230FA4 File Offset: 0x0022F1A4
		public GuildMassiveCombatInfo GetCurrentGuildMassiveCombatInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentGuildMassiveCombatInfo_hotfix != null)
			{
				return (GuildMassiveCombatInfo)this.m_GetCurrentGuildMassiveCombatInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_guildComponent.m_guild.MassiveCombat.RecentCombat;
		}

		// Token: 0x06007BE3 RID: 31715 RVA: 0x00231028 File Offset: 0x0022F228
		public int GetGuildMassiveCombatEliminateRate()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildMassiveCombatEliminateRate_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGuildMassiveCombatEliminateRate_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Guild guildInfo = this.GetGuildInfo();
			if (guildInfo == null)
			{
				return 0;
			}
			if (guildInfo.MassiveCombat.RecentCombat == null)
			{
				return 0;
			}
			return this.m_guildComponent.GetEliminateRate(guildInfo.MassiveCombat.RecentCombat) / 100;
		}

		// Token: 0x140000FC RID: 252
		// (add) Token: 0x06007BE4 RID: 31716 RVA: 0x002310D0 File Offset: 0x0022F2D0
		// (remove) Token: 0x06007BE5 RID: 31717 RVA: 0x0023116C File Offset: 0x0022F36C
		public event Action<int> EventOnGuildMassiveCombatAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildMassiveCombatAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildMassiveCombatAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildMassiveCombatAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildMassiveCombatAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildMassiveCombatAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildMassiveCombatAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildMassiveCombatAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildMassiveCombatAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000FD RID: 253
		// (add) Token: 0x06007BE6 RID: 31718 RVA: 0x00231208 File Offset: 0x0022F408
		// (remove) Token: 0x06007BE7 RID: 31719 RVA: 0x002312A4 File Offset: 0x0022F4A4
		public event Action<int, bool, BattleReward> EventOnGuildMassiveCombatAttackFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildMassiveCombatAttackFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnGuildMassiveCombatAttackFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnGuildMassiveCombatAttackFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnGuildMassiveCombatAttackFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildMassiveCombatAttackFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnGuildMassiveCombatAttackFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnGuildMassiveCombatAttackFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnGuildMassiveCombatAttackFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000FE RID: 254
		// (add) Token: 0x06007BE8 RID: 31720 RVA: 0x00231340 File Offset: 0x0022F540
		// (remove) Token: 0x06007BE9 RID: 31721 RVA: 0x002313DC File Offset: 0x0022F5DC
		public event Action<int, GuildMassiveCombatGeneral> EventOnGuildMassiveCombatDataAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildMassiveCombatDataAckAction`2_hotfix != null)
				{
					this.m_add_EventOnGuildMassiveCombatDataAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, GuildMassiveCombatGeneral> action = this.EventOnGuildMassiveCombatDataAck;
				Action<int, GuildMassiveCombatGeneral> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, GuildMassiveCombatGeneral>>(ref this.EventOnGuildMassiveCombatDataAck, (Action<int, GuildMassiveCombatGeneral>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildMassiveCombatDataAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnGuildMassiveCombatDataAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, GuildMassiveCombatGeneral> action = this.EventOnGuildMassiveCombatDataAck;
				Action<int, GuildMassiveCombatGeneral> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, GuildMassiveCombatGeneral>>(ref this.EventOnGuildMassiveCombatDataAck, (Action<int, GuildMassiveCombatGeneral>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x140000FF RID: 255
		// (add) Token: 0x06007BEA RID: 31722 RVA: 0x00231478 File Offset: 0x0022F678
		// (remove) Token: 0x06007BEB RID: 31723 RVA: 0x00231514 File Offset: 0x0022F714
		public event Action<GuildMassiveCombatGeneral> EventOnGuildMassiveCombatNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildMassiveCombatNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildMassiveCombatNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<GuildMassiveCombatGeneral> action = this.EventOnGuildMassiveCombatNtf;
				Action<GuildMassiveCombatGeneral> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<GuildMassiveCombatGeneral>>(ref this.EventOnGuildMassiveCombatNtf, (Action<GuildMassiveCombatGeneral>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildMassiveCombatNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildMassiveCombatNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<GuildMassiveCombatGeneral> action = this.EventOnGuildMassiveCombatNtf;
				Action<GuildMassiveCombatGeneral> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<GuildMassiveCombatGeneral>>(ref this.EventOnGuildMassiveCombatNtf, (Action<GuildMassiveCombatGeneral>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000100 RID: 256
		// (add) Token: 0x06007BEC RID: 31724 RVA: 0x002315B0 File Offset: 0x0022F7B0
		// (remove) Token: 0x06007BED RID: 31725 RVA: 0x0023164C File Offset: 0x0022F84C
		public event Action<GuildPlayerMassiveCombatInfo> EventOnGuildMassiveCombatPlayerNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildMassiveCombatPlayerNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildMassiveCombatPlayerNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<GuildPlayerMassiveCombatInfo> action = this.EventOnGuildMassiveCombatPlayerNtf;
				Action<GuildPlayerMassiveCombatInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<GuildPlayerMassiveCombatInfo>>(ref this.EventOnGuildMassiveCombatPlayerNtf, (Action<GuildPlayerMassiveCombatInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildMassiveCombatPlayerNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildMassiveCombatPlayerNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<GuildPlayerMassiveCombatInfo> action = this.EventOnGuildMassiveCombatPlayerNtf;
				Action<GuildPlayerMassiveCombatInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<GuildPlayerMassiveCombatInfo>>(ref this.EventOnGuildMassiveCombatPlayerNtf, (Action<GuildPlayerMassiveCombatInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000101 RID: 257
		// (add) Token: 0x06007BEE RID: 31726 RVA: 0x002316E8 File Offset: 0x0022F8E8
		// (remove) Token: 0x06007BEF RID: 31727 RVA: 0x00231784 File Offset: 0x0022F984
		public event Action<int> EventOnGuildMassiveCombatStartAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildMassiveCombatStartAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildMassiveCombatStartAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildMassiveCombatStartAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildMassiveCombatStartAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildMassiveCombatStartAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildMassiveCombatStartAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildMassiveCombatStartAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildMassiveCombatStartAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000102 RID: 258
		// (add) Token: 0x06007BF0 RID: 31728 RVA: 0x00231820 File Offset: 0x0022FA20
		// (remove) Token: 0x06007BF1 RID: 31729 RVA: 0x002318BC File Offset: 0x0022FABC
		public event Action<int> EventOnGuildMassiveCombatSurrenderAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGuildMassiveCombatSurrenderAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGuildMassiveCombatSurrenderAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildMassiveCombatSurrenderAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildMassiveCombatSurrenderAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGuildMassiveCombatSurrenderAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGuildMassiveCombatSurrenderAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGuildMassiveCombatSurrenderAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGuildMassiveCombatSurrenderAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007BF2 RID: 31730 RVA: 0x00231958 File Offset: 0x0022FB58
		public bool SendAutoTakeOffEquipmentsReq(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendAutoTakeOffEquipmentsReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendAutoTakeOffEquipmentsReqInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			AutoTakeOffEquipmentsReq msg = new AutoTakeOffEquipmentsReq
			{
				HeroId = heroId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007BF3 RID: 31731 RVA: 0x002319EC File Offset: 0x0022FBEC
		public bool SendExchangeHeroFragmentReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendExchangeHeroFragmentReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendExchangeHeroFragmentReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ExchangeHeroFragmentReq msg = new ExchangeHeroFragmentReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007BF4 RID: 31732 RVA: 0x00231A68 File Offset: 0x0022FC68
		public bool SendHeroFavorabilityExpAddReq(int heroId, GoodsType goodsType, int goodId, int nums)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroFavorabilityExpAddReqInt32GoodsTypeInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroFavorabilityExpAddReqInt32GoodsTypeInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					goodsType,
					goodId,
					nums
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroFavorabilityExpAddReq msg = new HeroFavorabilityExpAddReq
			{
				HeroId = heroId,
				GoodsTypeId = (int)goodsType,
				ContentId = goodId,
				Nums = nums
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007BF5 RID: 31733 RVA: 0x00231B40 File Offset: 0x0022FD40
		public bool SendHeroInteractReq(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroInteractReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroInteractReqInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroInteractReq msg = new HeroInteractReq
			{
				HeroId = heroId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007BF6 RID: 31734 RVA: 0x00231BD4 File Offset: 0x0022FDD4
		public bool SendHeroConfessReq(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroConfessReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroConfessReqInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroConfessReq msg = new HeroConfessReq
			{
				HeroId = heroId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007BF7 RID: 31735 RVA: 0x00231C68 File Offset: 0x0022FE68
		public bool SendSetProtagonistReq(int protagonistId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendSetProtagonistReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendSetProtagonistReqInt32_hotfix.call(new object[]
				{
					this,
					protagonistId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new SetProtagonistReq
			{
				ProtagonistId = protagonistId
			});
		}

		// Token: 0x06007BF8 RID: 31736 RVA: 0x00231CF8 File Offset: 0x0022FEF8
		public bool SendHeroJobTransferReq(int heroId, int jobConnectionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroJobTransferReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroJobTransferReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobConnectionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroJobTransferReq
			{
				HeroId = heroId,
				JobRelatedId = jobConnectionId
			});
		}

		// Token: 0x06007BF9 RID: 31737 RVA: 0x00231DA0 File Offset: 0x0022FFA0
		public bool SendHeroStarLevelUpReq(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroStarLevelUpReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroStarLevelUpReqInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroStarLevelLevelUpReq
			{
				HeroId = heroId
			});
		}

		// Token: 0x06007BFA RID: 31738 RVA: 0x00231E30 File Offset: 0x00230030
		public bool SendHeroJobLevelUpReq(int heroId, int jobConnectionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroJobLevelUpReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroJobLevelUpReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobConnectionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroJobLevelUpReq
			{
				HeroId = heroId,
				JobRelatedId = jobConnectionId
			});
		}

		// Token: 0x06007BFB RID: 31739 RVA: 0x00231ED8 File Offset: 0x002300D8
		public bool SendHeroSkillsSelectReq(int heroId, List<int> skillsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroSkillsSelectReqInt32List`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroSkillsSelectReqInt32List`1_hotfix.call(new object[]
				{
					this,
					heroId,
					skillsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroSkillsSelectReq heroSkillsSelectReq = new HeroSkillsSelectReq();
			heroSkillsSelectReq.HeroId = heroId;
			heroSkillsSelectReq.SkillsId.AddRange(skillsId);
			return this.SendMessage(heroSkillsSelectReq);
		}

		// Token: 0x06007BFC RID: 31740 RVA: 0x00231F84 File Offset: 0x00230184
		public bool SendHeroSoldierSelectReq(int heroId, int soldierId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroSoldierSelectReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroSoldierSelectReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					soldierId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroSoldierSelectReq
			{
				HeroId = heroId,
				SoldierId = soldierId
			});
		}

		// Token: 0x06007BFD RID: 31741 RVA: 0x0023202C File Offset: 0x0023022C
		public bool SendHeroComposeReqq(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroComposeReqqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroComposeReqqInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroComposeReq
			{
				HeroId = heroId
			});
		}

		// Token: 0x06007BFE RID: 31742 RVA: 0x002320BC File Offset: 0x002302BC
		public bool SendHeroExpAddReq(int heroId, GoodsType goodsType, int itemId, int count)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroExpAddReqInt32GoodsTypeInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroExpAddReqInt32GoodsTypeInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					goodsType,
					itemId,
					count
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroExpAddReq
			{
				HeroId = heroId,
				GoodsTypeId = (int)goodsType,
				ContentId = itemId,
				Nums = count
			});
		}

		// Token: 0x06007BFF RID: 31743 RVA: 0x00232194 File Offset: 0x00230394
		public bool SendHeroJobUnlockReq(int heroId, int jobRelateId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroJobUnlockReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroJobUnlockReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobRelateId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroJobUnlockReq
			{
				HeroId = heroId,
				JobRelateId = jobRelateId
			});
		}

		// Token: 0x06007C00 RID: 31744 RVA: 0x0023223C File Offset: 0x0023043C
		public bool SendEquipmentWearReq(int heroId, ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendEquipmentWearReqInt32UInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendEquipmentWearReqInt32UInt64_hotfix.call(new object[]
				{
					this,
					heroId,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentWearReq msg = new EquipmentWearReq
			{
				HeroId = heroId,
				InstanceId = instanceId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C01 RID: 31745 RVA: 0x002322E8 File Offset: 0x002304E8
		public bool SendEquipmentTakeOffReq(int heroId, int slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendEquipmentTakeOffReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendEquipmentTakeOffReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentTakeOffReq msg = new EquipmentTakeOffReq
			{
				HeroId = heroId,
				Slot = slot
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C02 RID: 31746 RVA: 0x00232394 File Offset: 0x00230594
		public bool SendAutoEquipReq(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendAutoEquipReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendAutoEquipReqInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EquipmentAutoReq msg = new EquipmentAutoReq
			{
				HeroId = heroId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C03 RID: 31747 RVA: 0x00232428 File Offset: 0x00230628
		public bool SendHeroFetterUnlockReq(int heroId, int fetterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroFetterUnlockReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroFetterUnlockReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					fetterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroFetterUnlockReq msg = new HeroFetterUnlockReq
			{
				HeroId = heroId,
				FetterId = fetterId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C04 RID: 31748 RVA: 0x002324D4 File Offset: 0x002306D4
		public bool SendHeroFetterLevelUp(int heroId, int fetterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroFetterLevelUpInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroFetterLevelUpInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					fetterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroFetterLevelUpReq msg = new HeroFetterLevelUpReq
			{
				HeroId = heroId,
				FetterId = fetterId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C05 RID: 31749 RVA: 0x00232580 File Offset: 0x00230780
		public bool SendCharSkinWear(int heroId, int charSkinId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendCharSkinWearInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendCharSkinWearInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					charSkinId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			CharSkinWearReq msg = new CharSkinWearReq
			{
				HeroId = heroId,
				CharSkinId = charSkinId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C06 RID: 31750 RVA: 0x0023262C File Offset: 0x0023082C
		public bool SendCharSkinTakeOff(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendCharSkinTakeOffInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendCharSkinTakeOffInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			CharSkinTakeOffReq msg = new CharSkinTakeOffReq
			{
				HeroId = heroId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C07 RID: 31751 RVA: 0x002326C0 File Offset: 0x002308C0
		public bool SendModelSkinWear(int heroId, int jobRelatedId, int modelSkinId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendModelSkinWearInt32Int32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendModelSkinWearInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobRelatedId,
					modelSkinId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ModelSkinWearReq msg = new ModelSkinWearReq
			{
				HeroId = heroId,
				JobRelatedId = jobRelatedId,
				ModelSkinId = modelSkinId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C08 RID: 31752 RVA: 0x00232780 File Offset: 0x00230980
		public bool SendModelSkinTakeOff(int heroId, int jobRelatedId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendModelSkinTakeOffInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendModelSkinTakeOffInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobRelatedId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ModelSkinTakeOffReq msg = new ModelSkinTakeOffReq
			{
				HeroId = heroId,
				JobRelatedId = jobRelatedId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C09 RID: 31753 RVA: 0x0023282C File Offset: 0x00230A2C
		public bool SendSoldierSkinWearReq(int heroId, int soldierId, int soldierSkinId, bool isSetToAll)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendSoldierSkinWearReqInt32Int32Int32Boolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendSoldierSkinWearReqInt32Int32Int32Boolean_hotfix.call(new object[]
				{
					this,
					heroId,
					soldierId,
					soldierSkinId,
					isSetToAll
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			SoldierSkinWearReq msg = new SoldierSkinWearReq
			{
				HeroId = heroId,
				SoldierId = soldierId,
				SoldierSkinId = soldierSkinId,
				All = isSetToAll
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C0A RID: 31754 RVA: 0x00232904 File Offset: 0x00230B04
		public bool SendSoldierSkinTakeOffReq(int heroId, int soldierId, bool isAll)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendSoldierSkinTakeOffReqInt32Int32Boolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendSoldierSkinTakeOffReqInt32Int32Boolean_hotfix.call(new object[]
				{
					this,
					heroId,
					soldierId,
					isAll
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			SoldierSkinTakeOffReq msg = new SoldierSkinTakeOffReq
			{
				HeroId = heroId,
				SoldierId = soldierId,
				All = isAll
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C0B RID: 31755 RVA: 0x002329C4 File Offset: 0x00230BC4
		private void OnMessage(AutoTakeOffEquipmentsAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageAutoTakeOffEquipmentsAck_hotfix != null)
			{
				this.m_OnMessageAutoTakeOffEquipmentsAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_heroComponent.AutoTakeOffEquipments(msg.HeroId);
			}
			if (this.EventOnAutoTakeOffEquipmentsAck != null)
			{
				this.EventOnAutoTakeOffEquipmentsAck(msg.Result);
			}
		}

		// Token: 0x06007C0C RID: 31756 RVA: 0x00232A70 File Offset: 0x00230C70
		private void OnMessage(ExchangeHeroFragmentAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageExchangeHeroFragmentAck_hotfix != null)
			{
				this.m_OnMessageExchangeHeroFragmentAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0 && msg.Ntf != null)
			{
				this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
				this.OnMessage(msg.Ntf);
			}
			if (this.EventOnExchangeHeroFragementAck != null)
			{
				this.EventOnExchangeHeroFragementAck(msg.Result, list);
			}
		}

		// Token: 0x06007C0D RID: 31757 RVA: 0x00232B38 File Offset: 0x00230D38
		private void OnMessage(DSHeroNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSHeroNtf_hotfix != null)
			{
				this.m_OnMessageDSHeroNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_heroComponent.DeSerialize(msg);
		}

		// Token: 0x06007C0E RID: 31758 RVA: 0x00232BB4 File Offset: 0x00230DB4
		private void OnMessage(HeroConfessAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroConfessAck_hotfix != null)
			{
				this.m_OnMessageHeroConfessAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_heroComponent.ConfessHero(msg.HeroId, false);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroConfessAck != null)
			{
				this.EventOnHeroConfessAck(msg.Result, list);
			}
		}

		// Token: 0x06007C0F RID: 31759 RVA: 0x00232C9C File Offset: 0x00230E9C
		private void OnMessage(HeroInteractAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroInteractAck_hotfix != null)
			{
				this.m_OnMessageHeroInteractAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int arg = 0;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				arg = this.GetHeroInteractHeroPerformanceId(msg.HeroId, (HeroInteractionResultType)msg.HeroInteractResult);
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				this.m_heroComponent.InteractHero(msg.HeroId, msg.AddFavorabilityExp);
			}
			if (this.EventOnHeroInteractAck != null)
			{
				this.EventOnHeroInteractAck(msg, list, arg);
			}
		}

		// Token: 0x06007C10 RID: 31760 RVA: 0x00232D8C File Offset: 0x00230F8C
		private void OnMessage(HeroFavorabilityExpAddAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroFavorabilityExpAddAck_hotfix != null)
			{
				this.m_OnMessageHeroFavorabilityExpAddAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_heroComponent.AddHeroFavorabilityExpByUseableBagItem(msg.HeroId, (GoodsType)msg.GoodsTypeId, msg.ContentId, msg.ReqNums);
				if (num < 0 && num != msg.Nums)
				{
					this.DataError(int.MinValue);
				}
			}
			if (this.EventOnHeroFavorabilityExpAddAck != null)
			{
				this.EventOnHeroFavorabilityExpAddAck(msg.Result, list);
			}
		}

		// Token: 0x06007C11 RID: 31761 RVA: 0x00232E98 File Offset: 0x00231098
		private void OnMessage(SetProtagonistAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageSetProtagonistAck_hotfix != null)
			{
				this.m_OnMessageSetProtagonistAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.SetProtagonist(msg.ProtagonistId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnSetProtagonistAck != null)
			{
				this.EventOnSetProtagonistAck(msg.Result);
			}
		}

		// Token: 0x06007C12 RID: 31762 RVA: 0x00232F50 File Offset: 0x00231150
		private void OnMessage(HeroJobTransferAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroJobTransferAck_hotfix != null)
			{
				this.m_OnMessageHeroJobTransferAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.TransferHeroJob(msg.HeroId, msg.JobRelatedId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroJobTransferAck != null)
			{
				this.EventOnHeroJobTransferAck(msg.Result);
			}
		}

		// Token: 0x06007C13 RID: 31763 RVA: 0x0023300C File Offset: 0x0023120C
		private void OnMessage(HeroStarLevelLevelUpAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroStarLevelLevelUpAck_hotfix != null)
			{
				this.m_OnMessageHeroStarLevelLevelUpAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.LevelUpHeroStarLevel(msg.HeroId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroStarLevelUpAck != null)
			{
				this.EventOnHeroStarLevelUpAck(msg.Result);
			}
		}

		// Token: 0x06007C14 RID: 31764 RVA: 0x002330C4 File Offset: 0x002312C4
		private void OnMessage(HeroJobLevelUpAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroJobLevelUpAck_hotfix != null)
			{
				this.m_OnMessageHeroJobLevelUpAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.LevelUpHeroJobLevel(msg.HeroId, msg.JobRelatedId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroJobLevelUpAck != null)
			{
				this.EventOnHeroJobLevelUpAck(msg.Result);
			}
		}

		// Token: 0x06007C15 RID: 31765 RVA: 0x00233180 File Offset: 0x00231380
		private void OnMessage(HeroSkillsSelectAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroSkillsSelectAck_hotfix != null)
			{
				this.m_OnMessageHeroSkillsSelectAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.SelectSkills(msg.HeroId, msg.SkillsId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroSkillsSelectAck != null)
			{
				this.EventOnHeroSkillsSelectAck(msg.Result);
			}
		}

		// Token: 0x06007C16 RID: 31766 RVA: 0x0023323C File Offset: 0x0023143C
		private void OnMessage(HeroSoldierSelectAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroSoldierSelectAck_hotfix != null)
			{
				this.m_OnMessageHeroSoldierSelectAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.SelectSoldier(msg.HeroId, msg.SoldierId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroSoldierSelectAck != null)
			{
				this.EventOnHeroSoldierSelectAck(msg.Result);
			}
		}

		// Token: 0x06007C17 RID: 31767 RVA: 0x002332F8 File Offset: 0x002314F8
		private void OnMessage(HeroComposeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroComposeAck_hotfix != null)
			{
				this.m_OnMessageHeroComposeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.ComposeHero(msg.HeroId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroComposeAck != null)
			{
				this.EventOnHeroComposeAck(msg.Result);
			}
		}

		// Token: 0x06007C18 RID: 31768 RVA: 0x002333B0 File Offset: 0x002315B0
		private void OnMessage(HeroExpAddAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroExpAddAck_hotfix != null)
			{
				this.m_OnMessageHeroExpAddAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.AddHeroExpByUseableBagItem(msg.HeroId, (GoodsType)msg.GoodsTypeId, msg.ContentId, msg.ReqNums);
				if (num < 0 || num != msg.Nums)
				{
					this.DataError(int.MinValue);
				}
			}
			if (this.EventOnHeroExpAddAck != null)
			{
				this.EventOnHeroExpAddAck(msg.Result);
			}
		}

		// Token: 0x06007C19 RID: 31769 RVA: 0x0023348C File Offset: 0x0023168C
		private void OnMessage(HeroJobUnlockAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroJobUnlockAck_hotfix != null)
			{
				this.m_OnMessageHeroJobUnlockAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.UnlockedHeroJob(msg.HeroId, msg.JobRelateId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroJobUnlockAck != null)
			{
				this.EventOnHeroJobUnlockAck(msg.Result);
			}
		}

		// Token: 0x06007C1A RID: 31770 RVA: 0x00233548 File Offset: 0x00231748
		private void OnMessage(EquipmentWearAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentWearAck_hotfix != null)
			{
				this.m_OnMessageEquipmentWearAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.WearEquipment(msg.HeroId, msg.InstanceId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnEquipmentWearAck != null)
			{
				this.EventOnEquipmentWearAck(msg.Result);
			}
		}

		// Token: 0x06007C1B RID: 31771 RVA: 0x00233604 File Offset: 0x00231804
		private void OnMessage(EquipmentTakeOffAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentTakeOffAck_hotfix != null)
			{
				this.m_OnMessageEquipmentTakeOffAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.TakeOffEquipment(msg.HeroId, msg.Slot);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnEquipmentTakeOffAck != null)
			{
				this.EventOnEquipmentTakeOffAck(msg.Result);
			}
		}

		// Token: 0x06007C1C RID: 31772 RVA: 0x002336C0 File Offset: 0x002318C0
		private void OnMessage(EquipmentAutoAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEquipmentAutoAck_hotfix != null)
			{
				this.m_OnMessageEquipmentAutoAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.AutoEquipment(msg.HeroId, msg.EquipmentInstanceIds);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnAutoEquipAck != null)
			{
				this.EventOnAutoEquipAck(msg.Result);
			}
		}

		// Token: 0x06007C1D RID: 31773 RVA: 0x0023377C File Offset: 0x0023197C
		private void OnMessage(HeroFetterLevelUpAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroFetterLevelUpAck_hotfix != null)
			{
				this.m_OnMessageHeroFetterLevelUpAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.LevelUpHeroFetter(msg.HeroId, msg.FetterId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroFetterLevelUpAck != null)
			{
				this.EventOnHeroFetterLevelUpAck(msg.Result);
			}
		}

		// Token: 0x06007C1E RID: 31774 RVA: 0x00233838 File Offset: 0x00231A38
		private void OnMessage(HeroFetterUnlockAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroFetterUnlockAck_hotfix != null)
			{
				this.m_OnMessageHeroFetterUnlockAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_heroComponent.UnlockHeroFetter(msg.HeroId, msg.FetterId, false);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnFetterUnlockAck != null)
			{
				this.EventOnFetterUnlockAck(msg.Result, list);
			}
		}

		// Token: 0x06007C1F RID: 31775 RVA: 0x00233928 File Offset: 0x00231B28
		private void OnMessage(CharSkinWearAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageCharSkinWearAck_hotfix != null)
			{
				this.m_OnMessageCharSkinWearAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.WearCharSkin(msg.HeroId, msg.CharSkinId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnCharSkinWearAck != null)
			{
				this.EventOnCharSkinWearAck(msg.Result);
			}
		}

		// Token: 0x06007C20 RID: 31776 RVA: 0x002339E4 File Offset: 0x00231BE4
		private void OnMessage(CharSkinTakeOffAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageCharSkinTakeOffAck_hotfix != null)
			{
				this.m_OnMessageCharSkinTakeOffAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.TakeOffCharSkin(msg.HeroId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnCharSkinTakeOffAck != null)
			{
				this.EventOnCharSkinTakeOffAck(msg.Result);
			}
		}

		// Token: 0x06007C21 RID: 31777 RVA: 0x00233A9C File Offset: 0x00231C9C
		private void OnMessage(ModelSkinWearAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageModelSkinWearAck_hotfix != null)
			{
				this.m_OnMessageModelSkinWearAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.WearModelSkin(msg.HeroId, msg.JobRelatedId, msg.ModelSkinId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnModelSkinWearAck != null)
			{
				this.EventOnModelSkinWearAck(msg.Result);
			}
		}

		// Token: 0x06007C22 RID: 31778 RVA: 0x00233B60 File Offset: 0x00231D60
		private void OnMessage(ModelSkinTakeOffAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageModelSkinTakeOffAck_hotfix != null)
			{
				this.m_OnMessageModelSkinTakeOffAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.TakeOffModelSkin(msg.HeroId, msg.JobRelatedId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnModelSkinTakeOffAck != null)
			{
				this.EventOnModelSkinTakeOffAck(msg.Result);
			}
		}

		// Token: 0x06007C23 RID: 31779 RVA: 0x00233C1C File Offset: 0x00231E1C
		private void OnMessage(SoldierSkinWearAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageSoldierSkinWearAck_hotfix != null)
			{
				this.m_OnMessageSoldierSkinWearAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.WearSoldierSkin(msg.HeroId, msg.SoldierId, msg.SoldierSkinId, msg.All);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnSoldierSkinWearAck != null)
			{
				this.EventOnSoldierSkinWearAck(msg.Result);
			}
		}

		// Token: 0x06007C24 RID: 31780 RVA: 0x00233CE4 File Offset: 0x00231EE4
		private void OnMessage(SoldierSkinTakeOffAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageSoldierSkinTakeOffAck_hotfix != null)
			{
				this.m_OnMessageSoldierSkinTakeOffAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroComponent.TakeOffSoldierSkin(msg.HeroId, msg.SoldierId, msg.All);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnSoldierSkinTakeOffAck != null)
			{
				this.EventOnSoldierSkinTakeOffAck(msg.Result);
			}
		}

		// Token: 0x06007C25 RID: 31781 RVA: 0x00233DA8 File Offset: 0x00231FA8
		public int GmResetHeroJob(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GmResetHeroJobInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GmResetHeroJobInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GmResetHeroJob(heroId);
		}

		// Token: 0x06007C26 RID: 31782 RVA: 0x00233E30 File Offset: 0x00232030
		public int GmLevelUpHeroFetter2SpecificLevel(int heroId, int fetterId, int reachLevel)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GmLevelUpHeroFetter2SpecificLevelInt32Int32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GmLevelUpHeroFetter2SpecificLevelInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					fetterId,
					reachLevel
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GmLevelUpHeroFetter2SpecificLevel(heroId, fetterId, reachLevel);
		}

		// Token: 0x06007C27 RID: 31783 RVA: 0x00233EDC File Offset: 0x002320DC
		public int GetAdditiveHeroAddExp(int addExp)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAdditiveHeroAddExpInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetAdditiveHeroAddExpInt32_hotfix.call(new object[]
				{
					this,
					addExp
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetAdditiveHeroAddExp(addExp);
		}

		// Token: 0x06007C28 RID: 31784 RVA: 0x00233F64 File Offset: 0x00232164
		public int GetAdditiveHeroFavourabilityAddExp(int addExp)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAdditiveHeroFavourabilityAddExpInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetAdditiveHeroFavourabilityAddExpInt32_hotfix.call(new object[]
				{
					this,
					addExp
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetAdditiveHeroFavourabilityAddExp(addExp);
		}

		// Token: 0x06007C29 RID: 31785 RVA: 0x00233FEC File Offset: 0x002321EC
		public int GetHeroFavorabilityUpLevel(Hero hero, ConfigDataHeroInformationInfo heroInformationInfo, int addExp)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroFavorabilityUpLevelHeroConfigDataHeroInformationInfoInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroFavorabilityUpLevelHeroConfigDataHeroInformationInfoInt32_hotfix.call(new object[]
				{
					this,
					hero,
					heroInformationInfo,
					addExp
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetHeroFavorabilityUpLevel(hero, heroInformationInfo, addExp);
		}

		// Token: 0x06007C2A RID: 31786 RVA: 0x00234098 File Offset: 0x00232298
		public ConfigDataHeroInteractionInfo GetHeroInteractionInfo(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroInteractionInfoInt32_hotfix != null)
			{
				return (ConfigDataHeroInteractionInfo)this.m_GetHeroInteractionInfoInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetHeroInteractionInfo(heroId);
		}

		// Token: 0x06007C2B RID: 31787 RVA: 0x00234120 File Offset: 0x00232320
		public int GetHeroInteractHeroPerformanceId(int heroId, HeroInteractionResultType resultType)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroInteractHeroPerformanceIdInt32HeroInteractionResultType_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroInteractHeroPerformanceIdInt32HeroInteractionResultType_hotfix.call(new object[]
				{
					this,
					heroId,
					resultType
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetHeroInteractHeroPerformanceId(heroId, resultType);
		}

		// Token: 0x06007C2C RID: 31788 RVA: 0x002341BC File Offset: 0x002323BC
		private void InitAllDefaultConfigHeros()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_InitAllDefaultConfigHeros_hotfix != null)
			{
				this.m_InitAllDefaultConfigHeros_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_allDefaultHeros != null)
			{
				return;
			}
			this.m_allDefaultHeros = new Dictionary<int, Hero>();
			foreach (KeyValuePair<int, ConfigDataHeroInfo> keyValuePair in this.m_configDataLoader.GetAllConfigDataHeroInfo())
			{
				Hero hero = HeroComponentCommon.CreateDefaultConfigHero(keyValuePair.Value);
				this.m_allDefaultHeros.Add(hero.HeroId, hero);
			}
		}

		// Token: 0x06007C2D RID: 31789 RVA: 0x0023429C File Offset: 0x0023249C
		public Hero GetHero(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroInt32_hotfix != null)
			{
				return (Hero)this.m_GetHeroInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.FindHero(heroId);
		}

		// Token: 0x06007C2E RID: 31790 RVA: 0x00234324 File Offset: 0x00232524
		public List<Hero> GetHeros()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeros_hotfix != null)
			{
				return (List<Hero>)this.m_GetHeros_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetAllHeros();
		}

		// Token: 0x06007C2F RID: 31791 RVA: 0x0023439C File Offset: 0x0023259C
		public Dictionary<int, Hero> GetAllDefaultHeros()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllDefaultHeros_hotfix != null)
			{
				return (Dictionary<int, Hero>)this.m_GetAllDefaultHeros_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_allDefaultHeros;
		}

		// Token: 0x06007C30 RID: 31792 RVA: 0x00234410 File Offset: 0x00232610
		public List<int> GetUseableJobConnectionInfos(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUseableJobConnectionInfosInt32_hotfix != null)
			{
				return (List<int>)this.m_GetUseableJobConnectionInfosInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_heroComponent.IsProtagonistHero(heroId))
			{
				ConfigDataProtagonistInfo configDataProtagonistInfo = this.m_configDataLoader.GetConfigDataProtagonistInfo(this.m_heroComponent.GetProtagonistID());
				if (configDataProtagonistInfo != null)
				{
					return configDataProtagonistInfo.UseableJobConnections_ID;
				}
			}
			else
			{
				ConfigDataHeroInfo configDataHeroInfo = this.m_configDataLoader.GetConfigDataHeroInfo(heroId);
				if (configDataHeroInfo != null)
				{
					return configDataHeroInfo.UseableJobConnections_ID;
				}
			}
			return null;
		}

		// Token: 0x06007C31 RID: 31793 RVA: 0x002344E4 File Offset: 0x002326E4
		public Hero GetDefaultHero(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDefaultHeroInt32_hotfix != null)
			{
				return (Hero)this.m_GetDefaultHeroInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Hero result;
			if (this.m_allDefaultHeros.TryGetValue(heroId, out result))
			{
				return result;
			}
			return null;
		}

		// Token: 0x06007C32 RID: 31794 RVA: 0x00234578 File Offset: 0x00232778
		public int GetHeroNextLevelExp(int level)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroNextLevelExpInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroNextLevelExpInt32_hotfix.call(new object[]
				{
					this,
					level
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroLevelInfo configDataHeroLevelInfo = this.m_configDataLoader.GetConfigDataHeroLevelInfo(level);
			if (configDataHeroLevelInfo == null)
			{
				return 0;
			}
			return configDataHeroLevelInfo.Exp;
		}

		// Token: 0x06007C33 RID: 31795 RVA: 0x00234610 File Offset: 0x00232810
		public int GetHeroSkillPointMax(int heroLevel)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroSkillPointMaxInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroSkillPointMaxInt32_hotfix.call(new object[]
				{
					this,
					heroLevel
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetSkillEnergyFromConfig(heroLevel);
		}

		// Token: 0x06007C34 RID: 31796 RVA: 0x00234698 File Offset: 0x00232898
		public int GetHeroLevelMax()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroLevelMax_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroLevelMax_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.GetPlayerLevel() + this.m_configDataLoader.ConfigableConstId_HeroLevelUpCeiling;
		}

		// Token: 0x06007C35 RID: 31797 RVA: 0x00234718 File Offset: 0x00232918
		public bool IsHeroShowRedMark(int heroId, int jobConnectionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroShowRedMarkInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroShowRedMarkInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobConnectionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.CanLevelUpHeroStarLevel(heroId) == 0)
			{
				return true;
			}
			if (this.CanLevelUpHeroJobLevel(heroId, jobConnectionId) == 0)
			{
				return true;
			}
			if (this.IsHeroHaveNewJobCanTransfer(heroId))
			{
				return true;
			}
			bool flag = this.IsGameFunctionOpened(GameFunctionType.GameFunctionType_Equipment);
			if (flag)
			{
				Hero hero = this.GetHero(heroId);
				if (hero != null && hero.Level > 1 && this.m_heroComponent.HasBetterEquipmentByHero(heroId))
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007C36 RID: 31798 RVA: 0x0023480C File Offset: 0x00232A0C
		public int CanLevelUpHeroStarLevel(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanLevelUpHeroStarLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanLevelUpHeroStarLevelInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanLevelUpHeroStarLevel(heroId);
		}

		// Token: 0x06007C37 RID: 31799 RVA: 0x00234894 File Offset: 0x00232A94
		public bool IfWasteAddExp(Hero hero, int addExp)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IfWasteAddExpHeroInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IfWasteAddExpHeroInt32_hotfix.call(new object[]
				{
					this,
					hero,
					addExp
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.IsWastefulAddExp(hero, addExp);
		}

		// Token: 0x06007C38 RID: 31800 RVA: 0x00234930 File Offset: 0x00232B30
		public int CanLevelUpHeroJobLevel(int heroId, int jobConnectionid)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanLevelUpHeroJobLevelInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanLevelUpHeroJobLevelInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobConnectionid
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanLevelUpHeroJobLevel(heroId, jobConnectionid);
		}

		// Token: 0x06007C39 RID: 31801 RVA: 0x002349CC File Offset: 0x00232BCC
		public int CanHeroJobTransfer(int heroId, int jobConnectionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanHeroJobTransferInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanHeroJobTransferInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobConnectionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanTransferHeroJob(heroId, jobConnectionId);
		}

		// Token: 0x06007C3A RID: 31802 RVA: 0x00234A68 File Offset: 0x00232C68
		public bool IsWorldHeroTabShowRedIcon()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsWorldHeroTabShowRedIcon_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsWorldHeroTabShowRedIcon_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Hero> heros = this.GetHeros();
			foreach (Hero hero in heros)
			{
				if (this.IsHeroShowRedMark(hero.HeroId, hero.GetActiveJob().JobConnectionInfo.ID))
				{
					return true;
				}
			}
			Dictionary<int, Hero>.ValueCollection values = this.GetAllDefaultHeros().Values;
			using (Dictionary<int, Hero>.ValueCollection.Enumerator enumerator2 = values.GetEnumerator())
			{
				while (enumerator2.MoveNext())
				{
					Hero item = enumerator2.Current;
					if (heros.Find((Hero h) => h.HeroId == item.HeroId) == null)
					{
						if (item.HeroInfo.FragmentItem_ID != 0)
						{
							int bagItemCountByType = this.GetBagItemCountByType(GoodsType.GoodsType_Item, item.HeroInfo.FragmentItem_ID);
							if (bagItemCountByType != 0 && bagItemCountByType >= this.m_configDataLoader.GetConfigDataHeroStarInfo(item.StarLevel).Fragment)
							{
								return true;
							}
						}
					}
				}
			}
			return false;
		}

		// Token: 0x06007C3B RID: 31803 RVA: 0x00234C24 File Offset: 0x00232E24
		public bool IsHeroHaveNewJobCanTransfer(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroHaveNewJobCanTransferInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroHaveNewJobCanTransferInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ProjectLPlayerContext projectLPlayerContext = GameManager.Instance.PlayerContext as ProjectLPlayerContext;
			Hero hero = projectLPlayerContext.GetHero(heroId);
			List<int> useableJobConnectionInfos = projectLPlayerContext.GetUseableJobConnectionInfos(heroId);
			if (useableJobConnectionInfos == null)
			{
				return false;
			}
			using (List<int>.Enumerator enumerator = useableJobConnectionInfos.GetEnumerator())
			{
				while (enumerator.MoveNext())
				{
					int jci = enumerator.Current;
					if (hero.Jobs.Find((HeroJob job) => job.JobRelatedId == jci) == null && this.m_heroComponent.CanTransferHeroJob(heroId, jci) == 0 && !this.IsHeroJobNeedMagicStone(heroId, jci))
					{
						return true;
					}
				}
			}
			return false;
		}

		// Token: 0x06007C3C RID: 31804 RVA: 0x00234D6C File Offset: 0x00232F6C
		public bool IsHeroJobNeedMagicStone(int heroId, int jobConnectionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroJobNeedMagicStoneInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroJobNeedMagicStoneInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobConnectionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Hero hero = this.GetHero(heroId);
			ConfigDataJobConnectionInfo configDataJobConnectionInfo = this.m_configDataLoader.GetConfigDataJobConnectionInfo(jobConnectionId);
			List<HeroJob> list = new List<HeroJob>();
			list.AddRange(hero.Jobs);
			list.Sort((HeroJob a, HeroJob b) => a.JobConnectionInfo.m_jobInfo.Rank - b.JobConnectionInfo.m_jobInfo.Rank);
			if (list[list.Count - 1].JobConnectionInfo.m_jobInfo.Rank < configDataJobConnectionInfo.m_jobInfo.Rank)
			{
				return false;
			}
			foreach (HeroJob heroJob in list)
			{
				if (heroJob.JobConnectionInfo.m_jobInfo.Rank == configDataJobConnectionInfo.m_jobInfo.Rank && heroJob.JobConnectionInfo == configDataJobConnectionInfo)
				{
					return false;
				}
			}
			return true;
		}

		// Token: 0x06007C3D RID: 31805 RVA: 0x00234EF0 File Offset: 0x002330F0
		public int CanComposeHero(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanComposeHeroInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanComposeHeroInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanComposeHero(heroId);
		}

		// Token: 0x06007C3E RID: 31806 RVA: 0x00234F78 File Offset: 0x00233178
		public bool IsSkillLimitToHeroJob(int jobRelatedId, int skillId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsSkillLimitToHeroJobInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsSkillLimitToHeroJobInt32Int32_hotfix.call(new object[]
				{
					this,
					jobRelatedId,
					skillId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanHeroJobEquipSkill(jobRelatedId, skillId) != 0;
		}

		// Token: 0x06007C3F RID: 31807 RVA: 0x00235018 File Offset: 0x00233218
		public int GetProtagonistId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetProtagonistId_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetProtagonistId_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetProtagonistID();
		}

		// Token: 0x06007C40 RID: 31808 RVA: 0x00235090 File Offset: 0x00233290
		public bool IsProtagonistHero(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsProtagonistHeroInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsProtagonistHeroInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.IsProtagonistHero(heroId);
		}

		// Token: 0x06007C41 RID: 31809 RVA: 0x00235118 File Offset: 0x00233318
		public bool IsProtagonistExist()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsProtagonistExist_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsProtagonistExist_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.IsProtagonistExist();
		}

		// Token: 0x06007C42 RID: 31810 RVA: 0x00235190 File Offset: 0x00233390
		public bool IsCurrentLevelMaxHeroLevel(int level)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsCurrentLevelMaxHeroLevelInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsCurrentLevelMaxHeroLevelInt32_hotfix.call(new object[]
				{
					this,
					level
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.IsCurrentLevelMaxHeroLevel(level);
		}

		// Token: 0x06007C43 RID: 31811 RVA: 0x00235218 File Offset: 0x00233418
		public int CanHeroSelectSolider(Hero hero, int soliderId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanHeroSelectSoliderHeroInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanHeroSelectSoliderHeroInt32_hotfix.call(new object[]
				{
					this,
					hero,
					soliderId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanHeroSelectSolider(hero, soliderId);
		}

		// Token: 0x06007C44 RID: 31812 RVA: 0x002352B4 File Offset: 0x002334B4
		public int GetHeroInteractNums()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroInteractNums_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroInteractNums_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetHeroInteractNums();
		}

		// Token: 0x06007C45 RID: 31813 RVA: 0x0023532C File Offset: 0x0023352C
		public DateTime GetHeroInteractNumsFlushTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroInteractNumsFlushTime_hotfix != null)
			{
				return (DateTime)this.m_GetHeroInteractNumsFlushTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetHeroInteractNumsFlushTime();
		}

		// Token: 0x06007C46 RID: 31814 RVA: 0x002353A4 File Offset: 0x002335A4
		public bool IsHeroCanComposed(int heroID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroCanComposedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroCanComposedInt32_hotfix.call(new object[]
				{
					this,
					heroID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HashSet<int> gainHeroIds = this.m_heroComponent.GetGainHeroIds();
			foreach (KeyValuePair<int, ConfigDataHeroInfo> keyValuePair in this.m_configDataLoader.GetAllConfigDataHeroInfo())
			{
				if (keyValuePair.Value.ID == heroID && keyValuePair.Value.m_fragmentItemInfo != null && !gainHeroIds.Contains(keyValuePair.Value.ID))
				{
					ConfigDataHeroStarInfo configDataHeroStarInfo = this.m_configDataLoader.GetConfigDataHeroStarInfo(keyValuePair.Value.Star);
					if (configDataHeroStarInfo != null && this.m_bagComponent.IsBagItemEnough(GoodsType.GoodsType_Item, keyValuePair.Value.FragmentItem_ID, configDataHeroStarInfo.Fragment))
					{
						return true;
					}
				}
			}
			return false;
		}

		// Token: 0x06007C47 RID: 31815 RVA: 0x00235504 File Offset: 0x00233704
		public bool IsExistSoliderId(int soliderId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsExistSoliderIdInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsExistSoliderIdInt32_hotfix.call(new object[]
				{
					this,
					soliderId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.IsExistSoliderId(soliderId);
		}

		// Token: 0x06007C48 RID: 31816 RVA: 0x0023558C File Offset: 0x0023378C
		public bool IsHeroAssigned(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroAssignedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroAssignedInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.IsHeroAssigned(heroId);
		}

		// Token: 0x06007C49 RID: 31817 RVA: 0x00235614 File Offset: 0x00233814
		public List<HeroFragmentBagItem> GetAllStarLvlMaxHeroFragements()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllStarLvlMaxHeroFragements_hotfix != null)
			{
				return (List<HeroFragmentBagItem>)this.m_GetAllStarLvlMaxHeroFragements_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetAllStarLvlMaxHeroFragments();
		}

		// Token: 0x06007C4A RID: 31818 RVA: 0x0023568C File Offset: 0x0023388C
		public bool IsShowJobLevelCanUpTip(Hero hero)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsShowJobLevelCanUpTipHero_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsShowJobLevelCanUpTipHero_hotfix.call(new object[]
				{
					this,
					hero
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			bool flag = this.CanLevelUpHeroJobLevel(hero.HeroId, hero.ActiveHeroJobRelatedId) == 0;
			if (flag)
			{
				return false;
			}
			int scenarioId = this.m_configDataLoader.UtilityGetConfigableConst(ConfigableConstId.ConfigableConstId_UnLockJobUpTipScenarioId);
			if (!this.IsScenarioFinished(scenarioId))
			{
				return false;
			}
			int jobLevel = hero.GetActiveJob().JobLevel;
			ConfigDataJobLevelInfo[] jobLevelInfos = hero.GetActiveJob().JobConnectionInfo.m_jobLevelInfos;
			ConfigDataJobLevelInfo configDataJobLevelInfo = jobLevelInfos[jobLevel];
			return !hero.GetActiveJob().IsLevelMax() && hero.Level >= configDataJobLevelInfo.JobLevelUpHeroLevel;
		}

		// Token: 0x06007C4B RID: 31819 RVA: 0x0023578C File Offset: 0x0023398C
		public bool IsEquipmentWeared(ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsEquipmentWearedUInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsEquipmentWearedUInt64_hotfix.call(new object[]
				{
					this,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.IsEquipmentWeared(instanceId);
		}

		// Token: 0x06007C4C RID: 31820 RVA: 0x00235814 File Offset: 0x00233A14
		public int GetWearedEquipmentHeroIdByEquipmentId(ulong equipmentId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetWearedEquipmentHeroIdByEquipmentIdUInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetWearedEquipmentHeroIdByEquipmentIdUInt64_hotfix.call(new object[]
				{
					this,
					equipmentId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.GetWearedEquipmentHeroIdByEquipmentId(equipmentId);
		}

		// Token: 0x06007C4D RID: 31821 RVA: 0x0023589C File Offset: 0x00233A9C
		public int CanWearEquipment(int heroId, ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanWearEquipmentInt32UInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanWearEquipmentInt32UInt64_hotfix.call(new object[]
				{
					this,
					heroId,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanWearEquipment(heroId, instanceId);
		}

		// Token: 0x06007C4E RID: 31822 RVA: 0x00235938 File Offset: 0x00233B38
		public bool HasBetterEquipmentByHero(Hero hero)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasBetterEquipmentByHeroHero_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasBetterEquipmentByHeroHero_hotfix.call(new object[]
				{
					this,
					hero
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return hero.Level > 1 && this.m_heroComponent.HasBetterEquipmentByHero(hero.HeroId);
		}

		// Token: 0x06007C4F RID: 31823 RVA: 0x002359D4 File Offset: 0x00233BD4
		public bool HasBetterEquipmentBySlotId(int heroId, int slotId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasBetterEquipmentBySlotIdInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasBetterEquipmentBySlotIdInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					slotId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.HasBetterEquipmentBySlotId(heroId, slotId);
		}

		// Token: 0x06007C50 RID: 31824 RVA: 0x00235A70 File Offset: 0x00233C70
		public int CanAutoEquipment(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAutoEquipmentInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAutoEquipmentInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanAutoEquipmentByClient(heroId);
		}

		// Token: 0x06007C51 RID: 31825 RVA: 0x00235AF8 File Offset: 0x00233CF8
		public int CanTakeOffEquipment(int heroId, int slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanTakeOffEquipmentInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanTakeOffEquipmentInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanTakeOffEquipment(heroId, slot);
		}

		// Token: 0x06007C52 RID: 31826 RVA: 0x00235B94 File Offset: 0x00233D94
		public int CanUnlockHeroPerformance(int heroPerformanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnlockHeroPerformanceInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnlockHeroPerformanceInt32_hotfix.call(new object[]
				{
					this,
					heroPerformanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanUnlockHeroPerformance(heroPerformanceId);
		}

		// Token: 0x06007C53 RID: 31827 RVA: 0x00235C1C File Offset: 0x00233E1C
		public int CanUnlockHeroBiography(int biographyId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnlockHeroBiographyInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnlockHeroBiographyInt32_hotfix.call(new object[]
				{
					this,
					biographyId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanUnlockHeroBiography(biographyId);
		}

		// Token: 0x06007C54 RID: 31828 RVA: 0x00235CA4 File Offset: 0x00233EA4
		public bool CanReachFetterUnlockCondition(HeroFetterCompletionCondition condition)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanReachFetterUnlockConditionHeroFetterCompletionCondition_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanReachFetterUnlockConditionHeroFetterCompletionCondition_hotfix.call(new object[]
				{
					this,
					condition
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanReachFetterUnlockCondition(condition) == 0;
		}

		// Token: 0x06007C55 RID: 31829 RVA: 0x00235D30 File Offset: 0x00233F30
		public int CanInteractHero(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanInteractHeroInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanInteractHeroInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanInteractHero(heroId);
		}

		// Token: 0x06007C56 RID: 31830 RVA: 0x00235DB8 File Offset: 0x00233FB8
		public int CanConfessHero(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanConfessHeroInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanConfessHeroInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanConfessHero(heroId);
		}

		// Token: 0x06007C57 RID: 31831 RVA: 0x00235E40 File Offset: 0x00234040
		public int CanLevelUpHeroFetter(int heroId, int fetterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanLevelUpHeroFetterInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanLevelUpHeroFetterInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					fetterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanLevelUpHeroFetter(heroId, fetterId);
		}

		// Token: 0x06007C58 RID: 31832 RVA: 0x00235EDC File Offset: 0x002340DC
		public int CanUnlockHeroFetter(int heroId, int fetterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnlockHeroFetterInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnlockHeroFetterInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					fetterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanUnlockHeroFetter(heroId, fetterId);
		}

		// Token: 0x06007C59 RID: 31833 RVA: 0x00235F78 File Offset: 0x00234178
		public int ImitateUseHeroFavorabilityExpItem(int heroId, int itemId, int nums, GoodsType goodsType = GoodsType.GoodsType_Item)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ImitateUseHeroFavorabilityExpItemInt32Int32Int32GoodsType_hotfix != null)
			{
				return Convert.ToInt32(this.m_ImitateUseHeroFavorabilityExpItemInt32Int32Int32GoodsType_hotfix.call(new object[]
				{
					this,
					heroId,
					itemId,
					nums,
					goodsType
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.ImitateUseHeroFavorabilityExpItem(heroId, itemId, nums, goodsType);
		}

		// Token: 0x06007C5A RID: 31834 RVA: 0x00236034 File Offset: 0x00234234
		public bool IsFullFavorabilityExp(Hero hero)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsFullFavorabilityExpHero_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsFullFavorabilityExpHero_hotfix.call(new object[]
				{
					this,
					hero
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.IsFullFavorabilityExp(hero, hero.HeroInfo.m_informationInfo);
		}

		// Token: 0x06007C5B RID: 31835 RVA: 0x002360C8 File Offset: 0x002342C8
		public bool IsShowFetterRedMark()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsShowFetterRedMark_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsShowFetterRedMark_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Hero> heros = this.GetHeros();
			foreach (Hero hero in heros)
			{
				if (this.IsHeroFetterHasNewOrLevelUp(hero))
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007C5C RID: 31836 RVA: 0x00236194 File Offset: 0x00234394
		public bool IsHeroFetterHasNewOrLevelUp(Hero hero)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroFetterHasNewOrLevelUpHero_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroFetterHasNewOrLevelUpHero_hotfix.call(new object[]
				{
					this,
					hero
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroInformationInfo informationInfo = hero.HeroInfo.m_informationInfo;
			if (informationInfo == null)
			{
				global::Debug.Log("HeroInfomationInfo is null, HeroId:" + hero.HeroId);
				return false;
			}
			List<int> heroFetters_ID = informationInfo.HeroFetters_ID;
			List<int> list = new List<int>(hero.Fetters.Keys);
			foreach (int num in heroFetters_ID)
			{
				if (!list.Contains(num))
				{
					if (hero.HeroId != 1)
					{
						if (this.CanUnlockHeroFetter(hero.HeroId, num) == 0)
						{
							return true;
						}
					}
				}
				else if (this.CanLevelUpHeroFetter(hero.HeroId, num) == 0)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007C5D RID: 31837 RVA: 0x002362FC File Offset: 0x002344FC
		public int CanWearCharSkin(int heroId, int charSkinId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanWearCharSkinInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanWearCharSkinInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					charSkinId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanWearCharSkin(heroId, charSkinId);
		}

		// Token: 0x06007C5E RID: 31838 RVA: 0x00236398 File Offset: 0x00234598
		public int CanTakeOffCharSkin(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanTakeOffCharSkinInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanTakeOffCharSkinInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanTakeOffCharSkin(heroId);
		}

		// Token: 0x06007C5F RID: 31839 RVA: 0x00236420 File Offset: 0x00234620
		public int CanWearModelSkin(int heroId, int jobRelatedId, int modelSkinId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanWearModelSkinInt32Int32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanWearModelSkinInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobRelatedId,
					modelSkinId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanWearModelSkin(heroId, jobRelatedId, modelSkinId);
		}

		// Token: 0x06007C60 RID: 31840 RVA: 0x002364CC File Offset: 0x002346CC
		public int CanTakeOffModelSkin(int heroId, int jobRelatedId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanTakeOffModelSkinInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanTakeOffModelSkinInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					jobRelatedId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanTakeOffModelSkin(heroId, jobRelatedId);
		}

		// Token: 0x06007C61 RID: 31841 RVA: 0x00236568 File Offset: 0x00234768
		public int CanWearSoldierSkin(int heroId, int soldierId, int soldierSkinId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanWearSoldierSkinInt32Int32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanWearSoldierSkinInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					soldierId,
					soldierSkinId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanWearSoldierSkin(heroId, soldierId, soldierSkinId);
		}

		// Token: 0x06007C62 RID: 31842 RVA: 0x00236614 File Offset: 0x00234814
		public int CanTakeOffSoldierSkin(int heroId, int soldierId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanTakeOffSoldierSkinInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanTakeOffSoldierSkinInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					soldierId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroComponent.CanTakeOffSoldierSkin(heroId, soldierId);
		}

		// Token: 0x06007C63 RID: 31843 RVA: 0x002366B0 File Offset: 0x002348B0
		public bool IsShowSkinBeforeOnSale(int fixedStoreItemId, bool isHeroSkin)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsShowSkinBeforeOnSaleInt32Boolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsShowSkinBeforeOnSaleInt32Boolean_hotfix.call(new object[]
				{
					this,
					fixedStoreItemId,
					isHeroSkin
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataFixedStoreItemInfo configDataFixedStoreItemInfo = this.m_configDataLoader.GetConfigDataFixedStoreItemInfo(fixedStoreItemId);
			if (configDataFixedStoreItemInfo != null)
			{
				if (this.HasOwn((!isHeroSkin) ? GoodsType.GoodsType_SoldierSkin : GoodsType.GoodsType_HeroSkin, configDataFixedStoreItemInfo.ItemId))
				{
					return true;
				}
				DateTime t = DateTime.Parse(configDataFixedStoreItemInfo.ShowEndTime);
				if (t < this.GetServerTime())
				{
					return true;
				}
				if (configDataFixedStoreItemInfo.IsFirstOnSale)
				{
					DateTime t2 = DateTime.Parse(configDataFixedStoreItemInfo.ShowStartTime);
					if (t2 >= this.GetServerTime())
					{
						return false;
					}
				}
			}
			return true;
		}

		// Token: 0x14000103 RID: 259
		// (add) Token: 0x06007C64 RID: 31844 RVA: 0x002367BC File Offset: 0x002349BC
		// (remove) Token: 0x06007C65 RID: 31845 RVA: 0x00236858 File Offset: 0x00234A58
		public event Action<int> EventOnSetProtagonistAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnSetProtagonistAckAction`1_hotfix != null)
				{
					this.m_add_EventOnSetProtagonistAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSetProtagonistAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSetProtagonistAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnSetProtagonistAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnSetProtagonistAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSetProtagonistAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSetProtagonistAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000104 RID: 260
		// (add) Token: 0x06007C66 RID: 31846 RVA: 0x002368F4 File Offset: 0x00234AF4
		// (remove) Token: 0x06007C67 RID: 31847 RVA: 0x00236990 File Offset: 0x00234B90
		public event Action<int> EventOnHeroJobTransferAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroJobTransferAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroJobTransferAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroJobTransferAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroJobTransferAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroJobTransferAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroJobTransferAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroJobTransferAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroJobTransferAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000105 RID: 261
		// (add) Token: 0x06007C68 RID: 31848 RVA: 0x00236A2C File Offset: 0x00234C2C
		// (remove) Token: 0x06007C69 RID: 31849 RVA: 0x00236AC8 File Offset: 0x00234CC8
		public event Action<int> EventOnHeroStarLevelUpAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroStarLevelUpAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroStarLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroStarLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroStarLevelUpAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroStarLevelUpAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroStarLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroStarLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroStarLevelUpAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000106 RID: 262
		// (add) Token: 0x06007C6A RID: 31850 RVA: 0x00236B64 File Offset: 0x00234D64
		// (remove) Token: 0x06007C6B RID: 31851 RVA: 0x00236C00 File Offset: 0x00234E00
		public event Action<int> EventOnHeroJobLevelUpAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroJobLevelUpAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroJobLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroJobLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroJobLevelUpAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroJobLevelUpAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroJobLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroJobLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroJobLevelUpAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000107 RID: 263
		// (add) Token: 0x06007C6C RID: 31852 RVA: 0x00236C9C File Offset: 0x00234E9C
		// (remove) Token: 0x06007C6D RID: 31853 RVA: 0x00236D38 File Offset: 0x00234F38
		public event Action<int> EventOnHeroSkillsSelectAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroSkillsSelectAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroSkillsSelectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroSkillsSelectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroSkillsSelectAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroSkillsSelectAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroSkillsSelectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroSkillsSelectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroSkillsSelectAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000108 RID: 264
		// (add) Token: 0x06007C6E RID: 31854 RVA: 0x00236DD4 File Offset: 0x00234FD4
		// (remove) Token: 0x06007C6F RID: 31855 RVA: 0x00236E70 File Offset: 0x00235070
		public event Action<int> EventOnHeroSoldierSelectAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroSoldierSelectAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroSoldierSelectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroSoldierSelectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroSoldierSelectAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroSoldierSelectAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroSoldierSelectAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroSoldierSelectAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroSoldierSelectAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000109 RID: 265
		// (add) Token: 0x06007C70 RID: 31856 RVA: 0x00236F0C File Offset: 0x0023510C
		// (remove) Token: 0x06007C71 RID: 31857 RVA: 0x00236FA8 File Offset: 0x002351A8
		public event Action<int> EventOnHeroComposeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroComposeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroComposeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroComposeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroComposeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroComposeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroComposeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroComposeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroComposeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400010A RID: 266
		// (add) Token: 0x06007C72 RID: 31858 RVA: 0x00237044 File Offset: 0x00235244
		// (remove) Token: 0x06007C73 RID: 31859 RVA: 0x002370E0 File Offset: 0x002352E0
		public event Action<int> EventOnHeroExpAddAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroExpAddAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroExpAddAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroExpAddAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroExpAddAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroExpAddAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroExpAddAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroExpAddAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroExpAddAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400010B RID: 267
		// (add) Token: 0x06007C74 RID: 31860 RVA: 0x0023717C File Offset: 0x0023537C
		// (remove) Token: 0x06007C75 RID: 31861 RVA: 0x00237218 File Offset: 0x00235418
		public event Action<int> EventOnHeroJobUnlockAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroJobUnlockAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroJobUnlockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroJobUnlockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroJobUnlockAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroJobUnlockAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroJobUnlockAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroJobUnlockAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroJobUnlockAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400010C RID: 268
		// (add) Token: 0x06007C76 RID: 31862 RVA: 0x002372B4 File Offset: 0x002354B4
		// (remove) Token: 0x06007C77 RID: 31863 RVA: 0x00237350 File Offset: 0x00235550
		public event Action<int> EventOnEquipmentWearAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEquipmentWearAckAction`1_hotfix != null)
				{
					this.m_add_EventOnEquipmentWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentWearAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEquipmentWearAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnEquipmentWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentWearAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400010D RID: 269
		// (add) Token: 0x06007C78 RID: 31864 RVA: 0x002373EC File Offset: 0x002355EC
		// (remove) Token: 0x06007C79 RID: 31865 RVA: 0x00237488 File Offset: 0x00235688
		public event Action<int> EventOnEquipmentTakeOffAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEquipmentTakeOffAckAction`1_hotfix != null)
				{
					this.m_add_EventOnEquipmentTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentTakeOffAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEquipmentTakeOffAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnEquipmentTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnEquipmentTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnEquipmentTakeOffAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400010E RID: 270
		// (add) Token: 0x06007C7A RID: 31866 RVA: 0x00237524 File Offset: 0x00235724
		// (remove) Token: 0x06007C7B RID: 31867 RVA: 0x002375C0 File Offset: 0x002357C0
		public event Action<int> EventOnAutoEquipAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnAutoEquipAckAction`1_hotfix != null)
				{
					this.m_add_EventOnAutoEquipAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAutoEquipAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAutoEquipAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnAutoEquipAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnAutoEquipAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAutoEquipAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAutoEquipAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400010F RID: 271
		// (add) Token: 0x06007C7C RID: 31868 RVA: 0x0023765C File Offset: 0x0023585C
		// (remove) Token: 0x06007C7D RID: 31869 RVA: 0x002376F8 File Offset: 0x002358F8
		public event Action<int> EventOnHeroFetterLevelUpAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroFetterLevelUpAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroFetterLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroFetterLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroFetterLevelUpAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroFetterLevelUpAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroFetterLevelUpAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroFetterLevelUpAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroFetterLevelUpAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000110 RID: 272
		// (add) Token: 0x06007C7E RID: 31870 RVA: 0x00237794 File Offset: 0x00235994
		// (remove) Token: 0x06007C7F RID: 31871 RVA: 0x00237830 File Offset: 0x00235A30
		public event Action<int, List<Goods>> EventOnHeroConfessAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroConfessAckAction`2_hotfix != null)
				{
					this.m_add_EventOnHeroConfessAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnHeroConfessAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnHeroConfessAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroConfessAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnHeroConfessAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnHeroConfessAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnHeroConfessAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000111 RID: 273
		// (add) Token: 0x06007C80 RID: 31872 RVA: 0x002378CC File Offset: 0x00235ACC
		// (remove) Token: 0x06007C81 RID: 31873 RVA: 0x00237968 File Offset: 0x00235B68
		public event Action<int, List<Goods>> EventOnHeroFavorabilityExpAddAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroFavorabilityExpAddAckAction`2_hotfix != null)
				{
					this.m_add_EventOnHeroFavorabilityExpAddAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnHeroFavorabilityExpAddAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnHeroFavorabilityExpAddAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroFavorabilityExpAddAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnHeroFavorabilityExpAddAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnHeroFavorabilityExpAddAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnHeroFavorabilityExpAddAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000112 RID: 274
		// (add) Token: 0x06007C82 RID: 31874 RVA: 0x00237A04 File Offset: 0x00235C04
		// (remove) Token: 0x06007C83 RID: 31875 RVA: 0x00237AA0 File Offset: 0x00235CA0
		public event Action<int, List<Goods>> EventOnFetterUnlockAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFetterUnlockAckAction`2_hotfix != null)
				{
					this.m_add_EventOnFetterUnlockAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnFetterUnlockAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnFetterUnlockAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFetterUnlockAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnFetterUnlockAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnFetterUnlockAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnFetterUnlockAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000113 RID: 275
		// (add) Token: 0x06007C84 RID: 31876 RVA: 0x00237B3C File Offset: 0x00235D3C
		// (remove) Token: 0x06007C85 RID: 31877 RVA: 0x00237BD8 File Offset: 0x00235DD8
		public event Action<HeroInteractAck, List<Goods>, int> EventOnHeroInteractAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroInteractAckAction`3_hotfix != null)
				{
					this.m_add_EventOnHeroInteractAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<HeroInteractAck, List<Goods>, int> action = this.EventOnHeroInteractAck;
				Action<HeroInteractAck, List<Goods>, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<HeroInteractAck, List<Goods>, int>>(ref this.EventOnHeroInteractAck, (Action<HeroInteractAck, List<Goods>, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroInteractAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnHeroInteractAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<HeroInteractAck, List<Goods>, int> action = this.EventOnHeroInteractAck;
				Action<HeroInteractAck, List<Goods>, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<HeroInteractAck, List<Goods>, int>>(ref this.EventOnHeroInteractAck, (Action<HeroInteractAck, List<Goods>, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000114 RID: 276
		// (add) Token: 0x06007C86 RID: 31878 RVA: 0x00237C74 File Offset: 0x00235E74
		// (remove) Token: 0x06007C87 RID: 31879 RVA: 0x00237D10 File Offset: 0x00235F10
		public event Action<int> EventOnCharSkinWearAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnCharSkinWearAckAction`1_hotfix != null)
				{
					this.m_add_EventOnCharSkinWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnCharSkinWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnCharSkinWearAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnCharSkinWearAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnCharSkinWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnCharSkinWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnCharSkinWearAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000115 RID: 277
		// (add) Token: 0x06007C88 RID: 31880 RVA: 0x00237DAC File Offset: 0x00235FAC
		// (remove) Token: 0x06007C89 RID: 31881 RVA: 0x00237E48 File Offset: 0x00236048
		public event Action<int> EventOnCharSkinTakeOffAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnCharSkinTakeOffAckAction`1_hotfix != null)
				{
					this.m_add_EventOnCharSkinTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnCharSkinTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnCharSkinTakeOffAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnCharSkinTakeOffAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnCharSkinTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnCharSkinTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnCharSkinTakeOffAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000116 RID: 278
		// (add) Token: 0x06007C8A RID: 31882 RVA: 0x00237EE4 File Offset: 0x002360E4
		// (remove) Token: 0x06007C8B RID: 31883 RVA: 0x00237F80 File Offset: 0x00236180
		public event Action<int> EventOnModelSkinWearAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnModelSkinWearAckAction`1_hotfix != null)
				{
					this.m_add_EventOnModelSkinWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnModelSkinWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnModelSkinWearAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnModelSkinWearAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnModelSkinWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnModelSkinWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnModelSkinWearAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000117 RID: 279
		// (add) Token: 0x06007C8C RID: 31884 RVA: 0x0023801C File Offset: 0x0023621C
		// (remove) Token: 0x06007C8D RID: 31885 RVA: 0x002380B8 File Offset: 0x002362B8
		public event Action<int> EventOnModelSkinTakeOffAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnModelSkinTakeOffAckAction`1_hotfix != null)
				{
					this.m_add_EventOnModelSkinTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnModelSkinTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnModelSkinTakeOffAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnModelSkinTakeOffAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnModelSkinTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnModelSkinTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnModelSkinTakeOffAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000118 RID: 280
		// (add) Token: 0x06007C8E RID: 31886 RVA: 0x00238154 File Offset: 0x00236354
		// (remove) Token: 0x06007C8F RID: 31887 RVA: 0x002381F0 File Offset: 0x002363F0
		public event Action<int> EventOnSoldierSkinWearAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnSoldierSkinWearAckAction`1_hotfix != null)
				{
					this.m_add_EventOnSoldierSkinWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSoldierSkinWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSoldierSkinWearAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnSoldierSkinWearAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnSoldierSkinWearAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSoldierSkinWearAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSoldierSkinWearAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000119 RID: 281
		// (add) Token: 0x06007C90 RID: 31888 RVA: 0x0023828C File Offset: 0x0023648C
		// (remove) Token: 0x06007C91 RID: 31889 RVA: 0x00238328 File Offset: 0x00236528
		public event Action<int> EventOnSoldierSkinTakeOffAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnSoldierSkinTakeOffAckAction`1_hotfix != null)
				{
					this.m_add_EventOnSoldierSkinTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSoldierSkinTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSoldierSkinTakeOffAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnSoldierSkinTakeOffAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnSoldierSkinTakeOffAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnSoldierSkinTakeOffAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnSoldierSkinTakeOffAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400011A RID: 282
		// (add) Token: 0x06007C92 RID: 31890 RVA: 0x002383C4 File Offset: 0x002365C4
		// (remove) Token: 0x06007C93 RID: 31891 RVA: 0x00238460 File Offset: 0x00236660
		public event Action<int, List<Goods>> EventOnExchangeHeroFragementAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnExchangeHeroFragementAckAction`2_hotfix != null)
				{
					this.m_add_EventOnExchangeHeroFragementAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnExchangeHeroFragementAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnExchangeHeroFragementAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnExchangeHeroFragementAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnExchangeHeroFragementAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnExchangeHeroFragementAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnExchangeHeroFragementAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400011B RID: 283
		// (add) Token: 0x06007C94 RID: 31892 RVA: 0x002384FC File Offset: 0x002366FC
		// (remove) Token: 0x06007C95 RID: 31893 RVA: 0x00238598 File Offset: 0x00236798
		public event Action<int> EventOnAutoTakeOffEquipmentsAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnAutoTakeOffEquipmentsAckAction`1_hotfix != null)
				{
					this.m_add_EventOnAutoTakeOffEquipmentsAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAutoTakeOffEquipmentsAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAutoTakeOffEquipmentsAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnAutoTakeOffEquipmentsAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnAutoTakeOffEquipmentsAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnAutoTakeOffEquipmentsAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnAutoTakeOffEquipmentsAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400011C RID: 284
		// (add) Token: 0x06007C96 RID: 31894 RVA: 0x00238634 File Offset: 0x00236834
		// (remove) Token: 0x06007C97 RID: 31895 RVA: 0x002386D0 File Offset: 0x002368D0
		public event Action EventOnHeroChangeNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroChangeNtfAction_hotfix != null)
				{
					this.m_add_EventOnHeroChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnHeroChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnHeroChangeNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroChangeNtfAction_hotfix != null)
				{
					this.m_remove_EventOnHeroChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnHeroChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnHeroChangeNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007C98 RID: 31896 RVA: 0x0023876C File Offset: 0x0023696C
		public bool SendHeroAssistantAssignToTaskReq(int TaskId, int Slot, List<int> HeroIds, int WorkSeconds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroAssistantAssignToTaskReqInt32Int32List`1Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroAssistantAssignToTaskReqInt32Int32List`1Int32_hotfix.call(new object[]
				{
					this,
					TaskId,
					Slot,
					HeroIds,
					WorkSeconds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroAssistantAssignToTaskReq heroAssistantAssignToTaskReq = new HeroAssistantAssignToTaskReq
			{
				TaskId = TaskId,
				WorkSeconds = WorkSeconds,
				Slot = Slot
			};
			heroAssistantAssignToTaskReq.HeroIds.AddRange(HeroIds);
			return this.SendMessage(heroAssistantAssignToTaskReq);
		}

		// Token: 0x06007C99 RID: 31897 RVA: 0x0023884C File Offset: 0x00236A4C
		public bool SendHeroAssistantCancelTaskReq(int TaskId, int Slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroAssistantCancelTaskReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroAssistantCancelTaskReqInt32Int32_hotfix.call(new object[]
				{
					this,
					TaskId,
					Slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroAssistantCancelTaskReq msg = new HeroAssistantCancelTaskReq
			{
				TaskId = TaskId,
				Slot = Slot
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C9A RID: 31898 RVA: 0x002388F8 File Offset: 0x00236AF8
		public bool SendHeroAssistantClaimRewardReq(int TaskId, int Slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroAssistantClaimRewardReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroAssistantClaimRewardReqInt32Int32_hotfix.call(new object[]
				{
					this,
					TaskId,
					Slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroAssistantClaimRewardReq msg = new HeroAssistantClaimRewardReq
			{
				TaskId = TaskId,
				Slot = Slot
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007C9B RID: 31899 RVA: 0x002389A4 File Offset: 0x00236BA4
		private void OnMessage(DSHeroAssistantNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSHeroAssistantNtf_hotfix != null)
			{
				this.m_OnMessageDSHeroAssistantNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_heroAssistantsComponent.DeSerialize(ntf);
		}

		// Token: 0x06007C9C RID: 31900 RVA: 0x00238A20 File Offset: 0x00236C20
		private void OnMessage(HeroAssistantAssignToTaskAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroAssistantAssignToTaskAck_hotfix != null)
			{
				this.m_OnMessageHeroAssistantAssignToTaskAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_heroAssistantsComponent.AssignHero(msg.Req.HeroIds, msg.Req.TaskId, msg.Req.Slot, msg.Req.WorkSeconds, true);
			}
			if (this.EventOnHeroAssistantAssignToTaskAck != null)
			{
				this.EventOnHeroAssistantAssignToTaskAck(msg.Result);
			}
		}

		// Token: 0x06007C9D RID: 31901 RVA: 0x00238AF0 File Offset: 0x00236CF0
		private void OnMessage(HeroAssistantCancelTaskAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroAssistantCancelTaskAck_hotfix != null)
			{
				this.m_OnMessageHeroAssistantCancelTaskAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_heroAssistantsComponent.CancelTask(msg.Req.TaskId, msg.Req.Slot, true);
			}
			if (this.EventOnHeroAssistantCancelTaskAck != null)
			{
				this.EventOnHeroAssistantCancelTaskAck(msg.Result);
			}
		}

		// Token: 0x06007C9E RID: 31902 RVA: 0x00238BAC File Offset: 0x00236DAC
		private void OnMessage(HeroAssistantClaimRewardAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroAssistantClaimRewardAck_hotfix != null)
			{
				this.m_OnMessageHeroAssistantClaimRewardAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Changed != null)
				{
					this.AppendChangedGoodsToRewards(msg.Changed.Changed, list);
					this.OnMessage(msg.Changed);
				}
				this.m_heroAssistantsComponent.ClaimRewards(msg.Req.TaskId, msg.Req.Slot, true);
			}
			if (this.EventOnHeroAssistantClaimRewardAck != null)
			{
				this.EventOnHeroAssistantClaimRewardAck(msg.Result, list);
			}
		}

		// Token: 0x06007C9F RID: 31903 RVA: 0x00238C98 File Offset: 0x00236E98
		public List<HeroAssistantsTask> GetAllTodayHeroAssistantsTask()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllTodayHeroAssistantsTask_hotfix != null)
			{
				return (List<HeroAssistantsTask>)this.m_GetAllTodayHeroAssistantsTask_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.GetTodayHeroAssistantsTask();
		}

		// Token: 0x06007CA0 RID: 31904 RVA: 0x00238D10 File Offset: 0x00236F10
		public List<HeroAssistantsTask> GetHeroAssistantsTasksByWeekDay(int weekDay)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroAssistantsTasksByWeekDayInt32_hotfix != null)
			{
				return (List<HeroAssistantsTask>)this.m_GetHeroAssistantsTasksByWeekDayInt32_hotfix.call(new object[]
				{
					this,
					weekDay
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.GetHeroAssistantsTaskByWeekDay(weekDay);
		}

		// Token: 0x06007CA1 RID: 31905 RVA: 0x00238D98 File Offset: 0x00236F98
		public List<HeroAssistantsTaskAssignment> GetAssignedHeroAssistantsTask()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAssignedHeroAssistantsTask_hotfix != null)
			{
				return (List<HeroAssistantsTaskAssignment>)this.m_GetAssignedHeroAssistantsTask_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.GetAssignedHeroAssistantsTask();
		}

		// Token: 0x06007CA2 RID: 31906 RVA: 0x00238E10 File Offset: 0x00237010
		public bool HaveFinishedAssistantTask()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HaveFinishedAssistantTask_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HaveFinishedAssistantTask_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<HeroAssistantsTaskAssignment> assignedHeroAssistantsTask = this.GetAssignedHeroAssistantsTask();
			foreach (HeroAssistantsTaskAssignment heroAssistantsTaskAssignment in assignedHeroAssistantsTask)
			{
				if (heroAssistantsTaskAssignment.EndTime <= this.GetServerTime())
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007CA3 RID: 31907 RVA: 0x00238EE8 File Offset: 0x002370E8
		public int GetDropIdByTaskCompleteRate(int taskId, int completeRate)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDropIdByTaskCompleteRateInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetDropIdByTaskCompleteRateInt32Int32_hotfix.call(new object[]
				{
					this,
					taskId,
					completeRate
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.GetDropIdByTaskCompleteRate(taskId, completeRate);
		}

		// Token: 0x06007CA4 RID: 31908 RVA: 0x00238F84 File Offset: 0x00237184
		public int GetDropCountByTaskWorkSeconds(int taskId, int workSeconds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDropCountByTaskWorkSecondsInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetDropCountByTaskWorkSecondsInt32Int32_hotfix.call(new object[]
				{
					this,
					taskId,
					workSeconds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.GetDropCountByTaskWorkSeconds(taskId, workSeconds);
		}

		// Token: 0x06007CA5 RID: 31909 RVA: 0x00239020 File Offset: 0x00237220
		public int CanAssignHero(List<int> canAssignHero, int taskId, int slot, int workSeconds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAssignHeroList`1Int32Int32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAssignHeroList`1Int32Int32Int32_hotfix.call(new object[]
				{
					this,
					canAssignHero,
					taskId,
					slot,
					workSeconds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.CanAssignHero(canAssignHero, taskId, slot, workSeconds);
		}

		// Token: 0x06007CA6 RID: 31910 RVA: 0x002390DC File Offset: 0x002372DC
		public int CanCancelTask(int taskId, int slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanCancelTaskInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanCancelTaskInt32Int32_hotfix.call(new object[]
				{
					this,
					taskId,
					slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.CanCancelTask(taskId, slot);
		}

		// Token: 0x06007CA7 RID: 31911 RVA: 0x00239178 File Offset: 0x00237378
		public int CanClaimRewards(int taskId, int slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanClaimRewardsInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanClaimRewardsInt32Int32_hotfix.call(new object[]
				{
					this,
					taskId,
					slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.CanClaimRewards(taskId, slot);
		}

		// Token: 0x06007CA8 RID: 31912 RVA: 0x00239214 File Offset: 0x00237414
		public TimeSpan GetTaskRemainingTime(int taskId, int slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTaskRemainingTimeInt32Int32_hotfix != null)
			{
				return (TimeSpan)this.m_GetTaskRemainingTimeInt32Int32_hotfix.call(new object[]
				{
					this,
					taskId,
					slot
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroAssistantsComponent.GetTaskRemainingTime(taskId, slot);
		}

		// Token: 0x1400011D RID: 285
		// (add) Token: 0x06007CA9 RID: 31913 RVA: 0x002392B0 File Offset: 0x002374B0
		// (remove) Token: 0x06007CAA RID: 31914 RVA: 0x0023934C File Offset: 0x0023754C
		public event Action<int> EventOnHeroAssistantAssignToTaskAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroAssistantAssignToTaskAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroAssistantAssignToTaskAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroAssistantAssignToTaskAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroAssistantAssignToTaskAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroAssistantAssignToTaskAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroAssistantAssignToTaskAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroAssistantAssignToTaskAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroAssistantAssignToTaskAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400011E RID: 286
		// (add) Token: 0x06007CAB RID: 31915 RVA: 0x002393E8 File Offset: 0x002375E8
		// (remove) Token: 0x06007CAC RID: 31916 RVA: 0x00239484 File Offset: 0x00237684
		public event Action<int> EventOnHeroAssistantCancelTaskAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroAssistantCancelTaskAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroAssistantCancelTaskAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroAssistantCancelTaskAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroAssistantCancelTaskAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroAssistantCancelTaskAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroAssistantCancelTaskAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroAssistantCancelTaskAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroAssistantCancelTaskAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400011F RID: 287
		// (add) Token: 0x06007CAD RID: 31917 RVA: 0x00239520 File Offset: 0x00237720
		// (remove) Token: 0x06007CAE RID: 31918 RVA: 0x002395BC File Offset: 0x002377BC
		public event Action<int, List<Goods>> EventOnHeroAssistantClaimRewardAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroAssistantClaimRewardAckAction`2_hotfix != null)
				{
					this.m_add_EventOnHeroAssistantClaimRewardAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnHeroAssistantClaimRewardAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnHeroAssistantClaimRewardAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroAssistantClaimRewardAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnHeroAssistantClaimRewardAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnHeroAssistantClaimRewardAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnHeroAssistantClaimRewardAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007CAF RID: 31919 RVA: 0x00239658 File Offset: 0x00237858
		public bool SendHeroDungeonLevelAttackReq(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroDungeonLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroDungeonLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroDungeonLevelAttackReq
			{
				LevelId = levelId
			});
		}

		// Token: 0x06007CB0 RID: 31920 RVA: 0x002396E8 File Offset: 0x002378E8
		public bool SendHeroDungeonLevelBattleFinishedReq(int HeroDungeonLevelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroDungeonLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroDungeonLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					HeroDungeonLevelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroDungeonLevelBattleFinishedReq
			{
				HeroDungeonLevelId = HeroDungeonLevelId,
				BattleReport = battleReport
			});
		}

		// Token: 0x06007CB1 RID: 31921 RVA: 0x00239790 File Offset: 0x00237990
		public bool SendHeroDungeonLevelRaidReq(int levelId, int count)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroDungeonLevelRaidReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroDungeonLevelRaidReqInt32Int32_hotfix.call(new object[]
				{
					this,
					levelId,
					count
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroDungeonLevelRaidReq
			{
				LevelId = levelId,
				Nums = count
			});
		}

		// Token: 0x06007CB2 RID: 31922 RVA: 0x00239838 File Offset: 0x00237A38
		public bool SendHeroDungeonChapterStarRewardGainReq(int chapterId, int index)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroDungeonChapterStarRewardGainReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroDungeonChapterStarRewardGainReqInt32Int32_hotfix.call(new object[]
				{
					this,
					chapterId,
					index
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroDungeonChapterStarRewardGainReq
			{
				ChapterId = chapterId,
				Index = index
			});
		}

		// Token: 0x06007CB3 RID: 31923 RVA: 0x002398E0 File Offset: 0x00237AE0
		private void OnMessage(DSHeroDungeonNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSHeroDungeonNtf_hotfix != null)
			{
				this.m_OnMessageDSHeroDungeonNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_heroDungeonComponent.DeSerialize(msg);
		}

		// Token: 0x06007CB4 RID: 31924 RVA: 0x0023995C File Offset: 0x00237B5C
		private void OnMessage(HeroDungeonLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroDungeonLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageHeroDungeonLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroDungeonComponent.AttackHeroDungeonLevel(msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnHeroDungeonLevelAttackAck != null)
			{
				this.EventOnHeroDungeonLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007CB5 RID: 31925 RVA: 0x00239A54 File Offset: 0x00237C54
		private void OnMessage(HeroDungeonLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroDungeonLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageHeroDungeonLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			bool isFirstWin = this.m_heroDungeonComponent.IsLevelFirstPass(msg.HeroDungeonLevelId);
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_heroDungeonComponent.FinishBattleHeroDungeonLevel(msg.HeroDungeonLevelId, msg.AchievementIds, msg.GainStars, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnHeroDungeonLevelBattleFinishedAck != null)
			{
				this.EventOnHeroDungeonLevelBattleFinishedAck(msg.Result, msg.GainStars, battleReward, isFirstWin, msg.AchievementIds);
			}
		}

		// Token: 0x06007CB6 RID: 31926 RVA: 0x00239BAC File Offset: 0x00237DAC
		private void OnMessage(HeroDungeonLevelRaidAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroDungeonLevelRaidAck_hotfix != null)
			{
				this.m_OnMessageHeroDungeonLevelRaidAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				list.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.RaidRewards));
				int num = this.m_heroDungeonComponent.RaidHeroDungeonLevel(msg.LevelId, msg.Nums);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroDungeonLevelRaidAck != null)
			{
				this.EventOnHeroDungeonLevelRaidAck(msg.Result, battleReward, list);
			}
		}

		// Token: 0x06007CB7 RID: 31927 RVA: 0x00239CC8 File Offset: 0x00237EC8
		private void OnMessage(HeroDungeonChapterStarRewardGainAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroDungeonChapterStarRewardGainAck_hotfix != null)
			{
				this.m_OnMessageHeroDungeonChapterStarRewardGainAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_heroDungeonComponent.GainHeroDungeonChapterStarRewards(msg.ChapterId, msg.Index, false);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeroDungeonRewardGainAck != null)
			{
				this.EventOnHeroDungeonRewardGainAck(msg.Result, battleReward);
			}
		}

		// Token: 0x06007CB8 RID: 31928 RVA: 0x00239DC8 File Offset: 0x00237FC8
		public int CanUnLockHeroDungeonLevel(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnLockHeroDungeonLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnLockHeroDungeonLevelInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroDungeonComponent.CanUnlockHeroDungeonLevel(levelID);
		}

		// Token: 0x06007CB9 RID: 31929 RVA: 0x00239E50 File Offset: 0x00238050
		public int IsHeroDungeonLevelAttachUnlockLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroDungeonLevelAttachUnlockLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_IsHeroDungeonLevelAttachUnlockLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroDungeonLevelInfo configDataHeroDungeonLevelInfo = this.m_configDataLoader.GetConfigDataHeroDungeonLevelInfo(levelId);
			if (configDataHeroDungeonLevelInfo == null)
			{
				return -2900;
			}
			foreach (HeroDungeonLevelUnlcokCondition heroDungeonLevelUnlcokCondition in configDataHeroDungeonLevelInfo.UnlockConditions)
			{
				HeroDungeonLevellUnlockConditionType conditionType = heroDungeonLevelUnlcokCondition.ConditionType;
				if (conditionType != HeroDungeonLevellUnlockConditionType.HeroDungeonLevellUnlockConditionType_HeroFavorabilityLevel)
				{
					return -2902;
				}
				Hero hero = this.m_heroComponent.FindHero(heroDungeonLevelUnlcokCondition.Param1);
				if (hero == null || hero.FavorabilityLevel < heroDungeonLevelUnlcokCondition.Param2)
				{
					return -2903;
				}
			}
			return 0;
		}

		// Token: 0x06007CBA RID: 31930 RVA: 0x00239F90 File Offset: 0x00238190
		public int CanAttackHeroDungeonLevel(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackHeroDungeonLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackHeroDungeonLevelInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroDungeonComponent.CanAttackHeroDungeonLevel(levelID);
		}

		// Token: 0x06007CBB RID: 31931 RVA: 0x0023A018 File Offset: 0x00238218
		public int GetHeroDungeonLevelChallengeNum(ConfigDataHeroDungeonLevelInfo levelInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonLevelChallengeNumConfigDataHeroDungeonLevelInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonLevelChallengeNumConfigDataHeroDungeonLevelInfo_hotfix.call(new object[]
				{
					this,
					levelInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (levelInfo == null)
			{
				return 0;
			}
			HeroDungeonLevel heroDungeonLevel = this.m_heroDungeonComponent.FindLevel(levelInfo.m_chapterId, levelInfo.ID);
			if (heroDungeonLevel == null)
			{
				return 0;
			}
			return heroDungeonLevel.Nums;
		}

		// Token: 0x06007CBC RID: 31932 RVA: 0x0023A0C4 File Offset: 0x002382C4
		public int GetHeroDungeonLevelCanChallengeNum(ConfigDataHeroDungeonLevelInfo levelInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonLevelCanChallengeNumConfigDataHeroDungeonLevelInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonLevelCanChallengeNumConfigDataHeroDungeonLevelInfo_hotfix.call(new object[]
				{
					this,
					levelInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (levelInfo == null)
			{
				return 0;
			}
			return this.m_heroDungeonComponent.GetLevelCanChallengeMaxNums(levelInfo) - this.GetHeroDungeonLevelChallengeNum(levelInfo);
		}

		// Token: 0x06007CBD RID: 31933 RVA: 0x0023A15C File Offset: 0x0023835C
		public int GetHeroDungeonLevelCanChallengeMaxNum(ConfigDataHeroDungeonLevelInfo levelInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonLevelCanChallengeMaxNumConfigDataHeroDungeonLevelInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonLevelCanChallengeMaxNumConfigDataHeroDungeonLevelInfo_hotfix.call(new object[]
				{
					this,
					levelInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (levelInfo == null)
			{
				return 0;
			}
			return this.m_heroDungeonComponent.GetLevelCanChallengeMaxNums(levelInfo);
		}

		// Token: 0x06007CBE RID: 31934 RVA: 0x0023A1EC File Offset: 0x002383EC
		public int CanRaidHeroDungeonLevel(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanRaidHeroDungeonLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanRaidHeroDungeonLevelInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_configDataLoader.GetConfigDataHeroDungeonLevelInfo(levelID) == null)
			{
				return -916;
			}
			return this.m_heroDungeonComponent.CanRaidHeroDungeonLevel(levelID);
		}

		// Token: 0x06007CBF RID: 31935 RVA: 0x0023A290 File Offset: 0x00238490
		public int GetHeroDungeonLevelStars(ConfigDataHeroDungeonLevelInfo levelInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonLevelStarsConfigDataHeroDungeonLevelInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonLevelStarsConfigDataHeroDungeonLevelInfo_hotfix.call(new object[]
				{
					this,
					levelInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (levelInfo == null)
			{
				return 0;
			}
			HeroDungeonLevel heroDungeonLevel = this.m_heroDungeonComponent.FindLevel(levelInfo.m_chapterId, levelInfo.ID);
			if (heroDungeonLevel == null)
			{
				return 0;
			}
			return heroDungeonLevel.Stars;
		}

		// Token: 0x06007CC0 RID: 31936 RVA: 0x0023A33C File Offset: 0x0023853C
		public int GetHeroDungeonLevelAchievementCount(ConfigDataHeroDungeonLevelInfo levelInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonLevelAchievementCountConfigDataHeroDungeonLevelInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonLevelAchievementCountConfigDataHeroDungeonLevelInfo_hotfix.call(new object[]
				{
					this,
					levelInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (levelInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (BattleLevelAchievement battleLevelAchievement in levelInfo.m_achievements)
			{
				if (this.HasHeroDungeonLevelAchievement(battleLevelAchievement.m_achievementRelatedInfo.ID))
				{
					num++;
				}
			}
			return num;
		}

		// Token: 0x06007CC1 RID: 31937 RVA: 0x0023A3FC File Offset: 0x002385FC
		public bool HasHeroDungeonLevelAchievement(int achievementID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasHeroDungeonLevelAchievementInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasHeroDungeonLevelAchievementInt32_hotfix.call(new object[]
				{
					this,
					achievementID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroDungeonComponent.HasGotAchievementRelationId(achievementID);
		}

		// Token: 0x06007CC2 RID: 31938 RVA: 0x0023A484 File Offset: 0x00238684
		public int GetHeroDungeonChapterGainStars(int chapterID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonChapterGainStarsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonChapterGainStarsInt32_hotfix.call(new object[]
				{
					this,
					chapterID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroDungeonComponent.GetHeroDungeonChapterStar(chapterID);
		}

		// Token: 0x06007CC3 RID: 31939 RVA: 0x0023A50C File Offset: 0x0023870C
		public int GetHeroDungeonChapterAllStars(int chapterID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonChapterAllStarsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonChapterAllStarsInt32_hotfix.call(new object[]
				{
					this,
					chapterID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroInformationInfo configDataHeroInformationInfo = this.m_configDataLoader.GetConfigDataHeroInformationInfo(chapterID);
			if (configDataHeroInformationInfo == null)
			{
				return 0;
			}
			return configDataHeroInformationInfo.DungeonLevels_ID.Count * 3;
		}

		// Token: 0x06007CC4 RID: 31940 RVA: 0x0023A5AC File Offset: 0x002387AC
		public GainRewardStatus GetHeroDungeonStarRewardStatus(int chapterID, int index)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonStarRewardStatusInt32Int32_hotfix != null)
			{
				return (GainRewardStatus)this.m_GetHeroDungeonStarRewardStatusInt32Int32_hotfix.call(new object[]
				{
					this,
					chapterID,
					index
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = this.CanGainHeroDungeonStarReward(chapterID, index);
			if (num == -2912)
			{
				return GainRewardStatus.Got;
			}
			if (num == 0)
			{
				return GainRewardStatus.CanGet;
			}
			return GainRewardStatus.CanNotGet;
		}

		// Token: 0x06007CC5 RID: 31941 RVA: 0x0023A658 File Offset: 0x00238858
		public int CanGainHeroDungeonStarReward(int chapterID, int index)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGainHeroDungeonStarRewardInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanGainHeroDungeonStarRewardInt32Int32_hotfix.call(new object[]
				{
					this,
					chapterID,
					index
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroDungeonComponent.CanGainHeroDungeonChapterStarRewards(chapterID, index);
		}

		// Token: 0x06007CC6 RID: 31942 RVA: 0x0023A6F4 File Offset: 0x002388F4
		public bool IsLevelChallenged(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsLevelChallengedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsLevelChallengedInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroDungeonComponent.IsLevelChallenged(levelID);
		}

		// Token: 0x06007CC7 RID: 31943 RVA: 0x0023A77C File Offset: 0x0023897C
		public bool IsHeroDungeonNewMarkShow(int heroDungeonChapterID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroDungeonNewMarkShowInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroDungeonNewMarkShowInt32_hotfix.call(new object[]
				{
					this,
					heroDungeonChapterID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroInformationInfo configDataHeroInformationInfo = this.m_configDataLoader.GetConfigDataHeroInformationInfo(heroDungeonChapterID);
			if (configDataHeroInformationInfo == null)
			{
				return false;
			}
			foreach (int levelID in configDataHeroInformationInfo.DungeonLevels_ID)
			{
				if (this.CanUnLockHeroDungeonLevel(levelID) == 0 && !this.IsLevelChallenged(levelID))
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007CC8 RID: 31944 RVA: 0x0023A878 File Offset: 0x00238A78
		public int HeroDungeonProgress(int heroDungeonChapterID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HeroDungeonProgressInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_HeroDungeonProgressInt32_hotfix.call(new object[]
				{
					this,
					heroDungeonChapterID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroInformationInfo configDataHeroInformationInfo = this.m_configDataLoader.GetConfigDataHeroInformationInfo(heroDungeonChapterID);
			if (configDataHeroInformationInfo == null || this.GetHeroDungeonChapterAllStars(heroDungeonChapterID) == 0)
			{
				return 0;
			}
			return this.GetHeroDungeonChapterGainStars(heroDungeonChapterID) * 100 / this.GetHeroDungeonChapterAllStars(heroDungeonChapterID);
		}

		// Token: 0x06007CC9 RID: 31945 RVA: 0x0023A928 File Offset: 0x00238B28
		public int GetHeroDungeonDailyChallengeMaxNums()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroDungeonDailyChallengeMaxNums_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroDungeonDailyChallengeMaxNums_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroDungeonComponent.GetDailyChallengeMaxNums();
		}

		// Token: 0x14000120 RID: 288
		// (add) Token: 0x06007CCA RID: 31946 RVA: 0x0023A9A0 File Offset: 0x00238BA0
		// (remove) Token: 0x06007CCB RID: 31947 RVA: 0x0023AA3C File Offset: 0x00238C3C
		public event Action<int> EventOnHeroDungeonLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroDungeonLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroDungeonLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroDungeonLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroDungeonLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroDungeonLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroDungeonLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroDungeonLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroDungeonLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000121 RID: 289
		// (add) Token: 0x06007CCC RID: 31948 RVA: 0x0023AAD8 File Offset: 0x00238CD8
		// (remove) Token: 0x06007CCD RID: 31949 RVA: 0x0023AB74 File Offset: 0x00238D74
		public event Action<int, BattleReward, List<Goods>> EventOnHeroDungeonLevelRaidAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroDungeonLevelRaidAckAction`3_hotfix != null)
				{
					this.m_add_EventOnHeroDungeonLevelRaidAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward, List<Goods>> action = this.EventOnHeroDungeonLevelRaidAck;
				Action<int, BattleReward, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward, List<Goods>>>(ref this.EventOnHeroDungeonLevelRaidAck, (Action<int, BattleReward, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroDungeonLevelRaidAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnHeroDungeonLevelRaidAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward, List<Goods>> action = this.EventOnHeroDungeonLevelRaidAck;
				Action<int, BattleReward, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward, List<Goods>>>(ref this.EventOnHeroDungeonLevelRaidAck, (Action<int, BattleReward, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000122 RID: 290
		// (add) Token: 0x06007CCE RID: 31950 RVA: 0x0023AC10 File Offset: 0x00238E10
		// (remove) Token: 0x06007CCF RID: 31951 RVA: 0x0023ACAC File Offset: 0x00238EAC
		public event Action<int, BattleReward> EventOnHeroDungeonRewardGainAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroDungeonRewardGainAckAction`2_hotfix != null)
				{
					this.m_add_EventOnHeroDungeonRewardGainAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnHeroDungeonRewardGainAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnHeroDungeonRewardGainAck, (Action<int, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroDungeonRewardGainAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnHeroDungeonRewardGainAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnHeroDungeonRewardGainAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnHeroDungeonRewardGainAck, (Action<int, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000123 RID: 291
		// (add) Token: 0x06007CD0 RID: 31952 RVA: 0x0023AD48 File Offset: 0x00238F48
		// (remove) Token: 0x06007CD1 RID: 31953 RVA: 0x0023ADE4 File Offset: 0x00238FE4
		public event ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback EventOnHeroDungeonLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix != null)
				{
					this.m_add_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback heroDungeonLevelBattleFinishedAckCallback = this.EventOnHeroDungeonLevelBattleFinishedAck;
				ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback heroDungeonLevelBattleFinishedAckCallback2;
				do
				{
					heroDungeonLevelBattleFinishedAckCallback2 = heroDungeonLevelBattleFinishedAckCallback;
					heroDungeonLevelBattleFinishedAckCallback = Interlocked.CompareExchange<ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback>(ref this.EventOnHeroDungeonLevelBattleFinishedAck, (ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback)Delegate.Combine(heroDungeonLevelBattleFinishedAckCallback2, value), heroDungeonLevelBattleFinishedAckCallback);
				}
				while (heroDungeonLevelBattleFinishedAckCallback != heroDungeonLevelBattleFinishedAckCallback2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix != null)
				{
					this.m_remove_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback heroDungeonLevelBattleFinishedAckCallback = this.EventOnHeroDungeonLevelBattleFinishedAck;
				ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback heroDungeonLevelBattleFinishedAckCallback2;
				do
				{
					heroDungeonLevelBattleFinishedAckCallback2 = heroDungeonLevelBattleFinishedAckCallback;
					heroDungeonLevelBattleFinishedAckCallback = Interlocked.CompareExchange<ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback>(ref this.EventOnHeroDungeonLevelBattleFinishedAck, (ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback)Delegate.Remove(heroDungeonLevelBattleFinishedAckCallback2, value), heroDungeonLevelBattleFinishedAckCallback);
				}
				while (heroDungeonLevelBattleFinishedAckCallback != heroDungeonLevelBattleFinishedAckCallback2);
			}
		}

		// Token: 0x06007CD2 RID: 31954 RVA: 0x0023AE80 File Offset: 0x00239080
		public bool SendHeroPhantomAttackReq(int LevelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroPhantomAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroPhantomAttackReqInt32_hotfix.call(new object[]
				{
					this,
					LevelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantomAttackReq msg = new HeroPhantomAttackReq
			{
				LevelId = LevelId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007CD3 RID: 31955 RVA: 0x0023AF14 File Offset: 0x00239114
		public bool SendHeroPhantomBattleFinishedReq(int LevelId, ProBattleReport Report)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroPhantomBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroPhantomBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					LevelId,
					Report
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantomBattleFinishedReq msg = new HeroPhantomBattleFinishedReq
			{
				LevelId = LevelId,
				BattleReport = Report
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007CD4 RID: 31956 RVA: 0x0023AFC0 File Offset: 0x002391C0
		private void OnMessage(DSHeroPhantomNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSHeroPhantomNtf_hotfix != null)
			{
				this.m_OnMessageDSHeroPhantomNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_heroPhantomComponent.DeSerialize(ntf);
		}

		// Token: 0x06007CD5 RID: 31957 RVA: 0x0023B03C File Offset: 0x0023923C
		private void OnMessage(HeroPhantomAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroPhantomAttackAck_hotfix != null)
			{
				this.m_OnMessageHeroPhantomAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroPhantomComponent.ChallengeHeroPhantomLevel(msg.Req.LevelId, true);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnHeroPhantomAttackAck != null)
			{
				this.EventOnHeroPhantomAttackAck(msg.Result);
			}
		}

		// Token: 0x06007CD6 RID: 31958 RVA: 0x0023B13C File Offset: 0x0023933C
		private void OnMessage(HeroPhantomBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroPhantomBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageHeroPhantomBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			bool isFirstWin = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				HeroPhantomLevel heroPhantomLevel = this.m_heroPhantomComponent.GetHeroPhantomLevel(msg.Req.LevelId);
				isFirstWin = (msg.Win && !heroPhantomLevel.Cleared);
				this.m_heroPhantomComponent.FinishedHeroPhantomLevel(heroPhantomLevel, msg.Win, this.m_battleComponent.GetPveTeam(), msg.BattleTreasures, msg.Achievements);
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnHeroPhantomBattleFinishedAck != null)
			{
				this.EventOnHeroPhantomBattleFinishedAck(msg.Result, msg.Win, battleReward, isFirstWin, msg.Achievements);
			}
		}

		// Token: 0x06007CD7 RID: 31959 RVA: 0x0023B294 File Offset: 0x00239494
		public bool IsHeroPhantomDisplay(int heroPhantomID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroPhantomDisplayInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroPhantomDisplayInt32_hotfix.call(new object[]
				{
					this,
					heroPhantomID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantom heroPhantom = this.m_heroPhantomComponent.GetHeroPhantom(heroPhantomID);
			return heroPhantom != null && heroPhantom.IsAvailableForShow;
		}

		// Token: 0x06007CD8 RID: 31960 RVA: 0x0023B330 File Offset: 0x00239530
		public bool IsHeroPhantomOpened(int heroPhantomID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroPhantomOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroPhantomOpenedInt32_hotfix.call(new object[]
				{
					this,
					heroPhantomID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantom heroPhantom = this.m_heroPhantomComponent.GetHeroPhantom(heroPhantomID);
			return heroPhantom != null && heroPhantom.IsAvailableForChallenge;
		}

		// Token: 0x06007CD9 RID: 31961 RVA: 0x0023B3CC File Offset: 0x002395CC
		public bool IsHeroPhantomLevelOpened(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroPhantomLevelOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroPhantomLevelOpenedInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantomLevel heroPhantomLevel = this.m_heroPhantomComponent.GetHeroPhantomLevel(levelID);
			return heroPhantomLevel != null && heroPhantomLevel.IsAvailableForChallenge;
		}

		// Token: 0x06007CDA RID: 31962 RVA: 0x0023B468 File Offset: 0x00239668
		public int CanAttackHeroPhantomLevel(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackHeroPhantomLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackHeroPhantomLevelInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroPhantomComponent.CheckChallengeHeroPhantomLevel(levelID);
		}

		// Token: 0x06007CDB RID: 31963 RVA: 0x0023B4F0 File Offset: 0x002396F0
		public bool IsHeroPhantomLevelFinihed(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroPhantomLevelFinihedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroPhantomLevelFinihedInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantomLevel heroPhantomLevel = this.m_heroPhantomComponent.GetHeroPhantomLevel(levelID);
			return heroPhantomLevel != null && heroPhantomLevel.Cleared;
		}

		// Token: 0x06007CDC RID: 31964 RVA: 0x0023B58C File Offset: 0x0023978C
		public bool IsCompleteHeroPhantomLevelAchievement(int achievementRelatedInfoID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsCompleteHeroPhantomLevelAchievementInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsCompleteHeroPhantomLevelAchievementInt32_hotfix.call(new object[]
				{
					this,
					achievementRelatedInfoID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroPhantomComponent.IsCompleteHeroPhantomLevelAchievement(achievementRelatedInfoID);
		}

		// Token: 0x06007CDD RID: 31965 RVA: 0x0023B614 File Offset: 0x00239814
		public int GetHeroPhantomCompleteAchievementCount(int heroPhantomID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroPhantomCompleteAchievementCountInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroPhantomCompleteAchievementCountInt32_hotfix.call(new object[]
				{
					this,
					heroPhantomID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeroPhantomInfo configDataHeroPhantomInfo = this.m_configDataLoader.GetConfigDataHeroPhantomInfo(heroPhantomID);
			if (configDataHeroPhantomInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (int levelID in configDataHeroPhantomInfo.LevelList)
			{
				num += this.GetHeroPhantomLevelCompleteAchievementCount(levelID);
			}
			return num;
		}

		// Token: 0x06007CDE RID: 31966 RVA: 0x0023B6FC File Offset: 0x002398FC
		public int GetHeroPhantomLevelCompleteAchievementCount(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroPhantomLevelCompleteAchievementCountInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroPhantomLevelCompleteAchievementCountInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantomLevel heroPhantomLevel = this.m_heroPhantomComponent.GetHeroPhantomLevel(levelID);
			return (heroPhantomLevel == null) ? 0 : heroPhantomLevel.AchievementIdsFinished.Count;
		}

		// Token: 0x06007CDF RID: 31967 RVA: 0x0023B79C File Offset: 0x0023999C
		public bool IsHeroPhantomLevelFirstCleanComplete(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroPhantomLevelFirstCleanCompleteInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroPhantomLevelFirstCleanCompleteInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			HeroPhantomLevel heroPhantomLevel = this.m_heroPhantomComponent.GetHeroPhantomLevel(levelID);
			return heroPhantomLevel != null && heroPhantomLevel.FirstClear < this.GetServerTime();
		}

		// Token: 0x14000124 RID: 292
		// (add) Token: 0x06007CE0 RID: 31968 RVA: 0x0023B844 File Offset: 0x00239A44
		// (remove) Token: 0x06007CE1 RID: 31969 RVA: 0x0023B8E0 File Offset: 0x00239AE0
		public event Action<int> EventOnHeroPhantomAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroPhantomAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroPhantomAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroPhantomAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroPhantomAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroPhantomAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroPhantomAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroPhantomAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroPhantomAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000125 RID: 293
		// (add) Token: 0x06007CE2 RID: 31970 RVA: 0x0023B97C File Offset: 0x00239B7C
		// (remove) Token: 0x06007CE3 RID: 31971 RVA: 0x0023BA18 File Offset: 0x00239C18
		public event ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback EventOnHeroPhantomBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix != null)
				{
					this.m_add_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback heroPhantomBattleFinishedAckCallback = this.EventOnHeroPhantomBattleFinishedAck;
				ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback heroPhantomBattleFinishedAckCallback2;
				do
				{
					heroPhantomBattleFinishedAckCallback2 = heroPhantomBattleFinishedAckCallback;
					heroPhantomBattleFinishedAckCallback = Interlocked.CompareExchange<ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback>(ref this.EventOnHeroPhantomBattleFinishedAck, (ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback)Delegate.Combine(heroPhantomBattleFinishedAckCallback2, value), heroPhantomBattleFinishedAckCallback);
				}
				while (heroPhantomBattleFinishedAckCallback != heroPhantomBattleFinishedAckCallback2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix != null)
				{
					this.m_remove_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback heroPhantomBattleFinishedAckCallback = this.EventOnHeroPhantomBattleFinishedAck;
				ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback heroPhantomBattleFinishedAckCallback2;
				do
				{
					heroPhantomBattleFinishedAckCallback2 = heroPhantomBattleFinishedAckCallback;
					heroPhantomBattleFinishedAckCallback = Interlocked.CompareExchange<ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback>(ref this.EventOnHeroPhantomBattleFinishedAck, (ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback)Delegate.Remove(heroPhantomBattleFinishedAckCallback2, value), heroPhantomBattleFinishedAckCallback);
				}
				while (heroPhantomBattleFinishedAckCallback != heroPhantomBattleFinishedAckCallback2);
			}
		}

		// Token: 0x06007CE4 RID: 31972 RVA: 0x0023BAB4 File Offset: 0x00239CB4
		public bool SendHeroTrainningLevelAttackReq(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroTrainningLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroTrainningLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroTrainningLevelAttackReq
			{
				LevelId = levelId
			});
		}

		// Token: 0x06007CE5 RID: 31973 RVA: 0x0023BB44 File Offset: 0x00239D44
		public bool SendHeroTrainningLevelBattleFinishedReq(int levelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeroTrainningLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeroTrainningLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					levelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeroTrainningLevelBattleFinishedReq
			{
				LevelId = levelId,
				BattleReport = battleReport
			});
		}

		// Token: 0x06007CE6 RID: 31974 RVA: 0x0023BBEC File Offset: 0x00239DEC
		private void OnMessage(DSHeroTrainningNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSHeroTrainningNtf_hotfix != null)
			{
				this.m_OnMessageDSHeroTrainningNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_heroTrainningComponent.DeSerialize(msg);
		}

		// Token: 0x06007CE7 RID: 31975 RVA: 0x0023BC68 File Offset: 0x00239E68
		private void OnMessage(HeroTrainningLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroTrainningLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageHeroTrainningLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_heroTrainningComponent.AttackHeroTrainningLevel(msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnHeroTrainningLevelAttackAck != null)
			{
				this.EventOnHeroTrainningLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007CE8 RID: 31976 RVA: 0x0023BD60 File Offset: 0x00239F60
		private void OnMessage(HeroTrainningLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeroTrainningLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageHeroTrainningLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.DailyGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.DailyRewards));
				int num = this.m_heroTrainningComponent.FinishedHeroTrainningLevel(msg.LevelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnHeroTrainningLevelBattleFinishedAck != null)
			{
				this.EventOnHeroTrainningLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007CE9 RID: 31977 RVA: 0x0023BEAC File Offset: 0x0023A0AC
		public bool IsHeroTrainningOpened(int heroTrainningId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroTrainningOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroTrainningOpenedInt32_hotfix.call(new object[]
				{
					this,
					heroTrainningId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroTrainningComponent.IsHeroTrainningOpened(heroTrainningId);
		}

		// Token: 0x06007CEA RID: 31978 RVA: 0x0023BF34 File Offset: 0x0023A134
		public bool IsHeroTrainningLevelOpened(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroTrainningLevelOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroTrainningLevelOpenedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroTrainningComponent.IsHeroTrainningLevelOpened(levelId);
		}

		// Token: 0x06007CEB RID: 31979 RVA: 0x0023BFBC File Offset: 0x0023A1BC
		public int CanAttackHeroTrainningLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackHeroTrainningLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackHeroTrainningLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroTrainningComponent.CanAttackHeroTrainningLevel(levelId, false);
		}

		// Token: 0x06007CEC RID: 31980 RVA: 0x0023C048 File Offset: 0x0023A248
		public int GetHeroTrainningTicketCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroTrainningTicketCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroTrainningTicketCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroTrainningComponent.GetCurrentTicketNums();
		}

		// Token: 0x06007CED RID: 31981 RVA: 0x0023C0C0 File Offset: 0x0023A2C0
		public bool IsHeroTrainningLevelFinished(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsHeroTrainningLevelFinishedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsHeroTrainningLevelFinishedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroTrainningComponent.IsLevelFinished(levelId);
		}

		// Token: 0x06007CEE RID: 31982 RVA: 0x0023C148 File Offset: 0x0023A348
		public int GetHeroTrainingDailyRewardRestCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeroTrainingDailyRewardRestCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetHeroTrainingDailyRewardRestCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_heroTrainningComponent.GetDailyChallengNums();
		}

		// Token: 0x14000126 RID: 294
		// (add) Token: 0x06007CEF RID: 31983 RVA: 0x0023C1C0 File Offset: 0x0023A3C0
		// (remove) Token: 0x06007CF0 RID: 31984 RVA: 0x0023C25C File Offset: 0x0023A45C
		public event Action<int> EventOnHeroTrainningLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroTrainningLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeroTrainningLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroTrainningLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroTrainningLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroTrainningLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeroTrainningLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeroTrainningLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeroTrainningLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000127 RID: 295
		// (add) Token: 0x06007CF1 RID: 31985 RVA: 0x0023C2F8 File Offset: 0x0023A4F8
		// (remove) Token: 0x06007CF2 RID: 31986 RVA: 0x0023C394 File Offset: 0x0023A594
		public event Action<int, bool, BattleReward> EventOnHeroTrainningLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeroTrainningLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnHeroTrainningLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnHeroTrainningLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnHeroTrainningLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeroTrainningLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnHeroTrainningLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnHeroTrainningLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnHeroTrainningLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007CF3 RID: 31987 RVA: 0x0023C430 File Offset: 0x0023A630
		public bool SendLevelWayPointMoveReq(int waypointId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLevelWayPointMoveReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLevelWayPointMoveReqInt32_hotfix.call(new object[]
				{
					this,
					waypointId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new LevelWayPointMoveReq
			{
				WayPointId = waypointId
			});
		}

		// Token: 0x06007CF4 RID: 31988 RVA: 0x0023C4C0 File Offset: 0x0023A6C0
		public bool SendLevelScenarioHandleReq(int scenarioId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLevelScenarioHandleReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLevelScenarioHandleReqInt32_hotfix.call(new object[]
				{
					this,
					scenarioId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			LevelScenarioHandleReq msg = new LevelScenarioHandleReq
			{
				ScenarioId = scenarioId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007CF5 RID: 31989 RVA: 0x0023C554 File Offset: 0x0023A754
		public bool SendLevelWayPointBattleFinishReq(int waypointId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendLevelWayPointBattleFinishReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendLevelWayPointBattleFinishReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					waypointId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new LevelWayPointBattleFinishReq
			{
				WayPointId = waypointId,
				BattleReport = battleReport
			});
		}

		// Token: 0x06007CF6 RID: 31990 RVA: 0x0023C5FC File Offset: 0x0023A7FC
		private void OnMessage(DSLevelNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSLevelNtf_hotfix != null)
			{
				this.m_OnMessageDSLevelNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_levelComponent.DeSerialize(msg);
		}

		// Token: 0x06007CF7 RID: 31991 RVA: 0x0023C678 File Offset: 0x0023A878
		private void OnMessage(LevelWayPointMoveAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageLevelWayPointMoveAck_hotfix != null)
			{
				this.m_OnMessageLevelWayPointMoveAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_levelComponent.MoveToWayPoint(msg.WayPointId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnLevelWayPointMoveAck != null)
			{
				this.EventOnLevelWayPointMoveAck(msg.Result, battleReward);
			}
		}

		// Token: 0x06007CF8 RID: 31992 RVA: 0x0023C7B0 File Offset: 0x0023A9B0
		private void OnMessage(LevelScenarioHandleAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageLevelScenarioHandleAck_hotfix != null)
			{
				this.m_OnMessageLevelScenarioHandleAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_levelComponent.HandleScenario(msg.ScenarioId, false);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnLevelScenarioHandleAck != null)
			{
				this.EventOnLevelScenarioHandleAck(msg.Result, battleReward);
			}
		}

		// Token: 0x06007CF9 RID: 31993 RVA: 0x0023C8E8 File Offset: 0x0023AAE8
		private void OnMessage(LevelWayPointBattleFinishAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageLevelWayPointBattleFinishAck_hotfix != null)
			{
				this.m_OnMessageLevelWayPointBattleFinishAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int lastFinishedScenarioId = this.m_levelComponent.GetLastFinishedScenarioId();
				int num = this.m_levelComponent.FinishBattleWayPoint(msg.WayPointId, msg.Win, msg.Result, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (lastFinishedScenarioId != this.m_levelComponent.GetLastFinishedScenarioId())
				{
					LoginUITask.SetLocalPushNotifications();
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnLevelWayPointBattleFinishAck != null)
			{
				this.EventOnLevelWayPointBattleFinishAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007CFA RID: 31994 RVA: 0x0023CA48 File Offset: 0x0023AC48
		private void OnMessage(RandomEventNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRandomEventNtf_hotfix != null)
			{
				this.m_OnMessageRandomEventNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_levelComponent.AddRandomEvent(RandomEvent.PBRandomEventToRandomEvent(msg.RandomEventInfo));
			if (this.EventOnRandomEventNtf != null)
			{
				this.EventOnRandomEventNtf();
			}
		}

		// Token: 0x06007CFB RID: 31995 RVA: 0x0023CAE4 File Offset: 0x0023ACE4
		private void AppendChangedGoodsToRewards(List<ProGoods> changedGoods, List<Goods> rewards)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_AppendChangedGoodsToRewardsList`1List`1_hotfix != null)
			{
				this.m_AppendChangedGoodsToRewardsList`1List`1_hotfix.call(new object[]
				{
					this,
					changedGoods,
					rewards
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			foreach (ProGoods proGoods in changedGoods)
			{
				int num;
				if (BagItemBase.IsBagItem((GoodsType)proGoods.GoodsType))
				{
					num = this.GetBagItemCount((GoodsType)proGoods.GoodsType, proGoods.Id, proGoods.InstanceId);
				}
				else
				{
					num = this.GetNotBagItemCount(BagItemBase.PBGoodsToGoods(proGoods));
				}
				ProjectLPlayerContext.AppendGoodsToRewards((GoodsType)proGoods.GoodsType, proGoods.Id, proGoods.Nums - num, rewards);
			}
		}

		// Token: 0x06007CFC RID: 31996 RVA: 0x0023CC00 File Offset: 0x0023AE00
		private static void AppendGoodsToRewards(GoodsType goodsType, int id, int count, List<Goods> rewards)
		{
			if (count <= 0)
			{
				return;
			}
			rewards.Add(new Goods
			{
				GoodsType = goodsType,
				Id = id,
				Count = count
			});
		}

		// Token: 0x06007CFD RID: 31997 RVA: 0x0023CC38 File Offset: 0x0023AE38
		private int GetNotBagItemCount(Goods goods)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNotBagItemCountGoods_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetNotBagItemCountGoods_hotfix.call(new object[]
				{
					this,
					goods
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			switch (goods.GoodsType)
			{
			case GoodsType.GoodsType_Gold:
				return this.GetGold();
			case GoodsType.GoodsType_Crystal:
				return this.GetCrystal();
			case GoodsType.GoodsType_Energy:
				return this.GetEnergy();
			case GoodsType.GoodsType_Hero:
				return (this.GetHero(goods.Id) == null) ? 0 : 1;
			case GoodsType.GoodsType_ArenaTicket:
				return this.GetArenaTicketCount();
			case GoodsType.GoodsType_ArenaHonour:
				return this.GetArenaHonour();
			case GoodsType.GoodsType_PlayerExp:
				return 0;
			case GoodsType.GoodsType_FriendshipPoints:
				return this.GetFriendShipPoints();
			case GoodsType.GoodsType_SkinTicket:
				return this.GetSkinTicket();
			case GoodsType.GoodsType_MemoryEssence:
				return this.GetMemoryEssence();
			case GoodsType.GoodsType_MithralStone:
				return this.GetMithralStone();
			case GoodsType.GoodsType_BrillianceMithralStone:
				return this.GetBrillianceMithralStone();
			case GoodsType.GoodsType_GuildMedal:
				return this.GetGuildMedal();
			}
			return 0;
		}

		// Token: 0x06007CFE RID: 31998 RVA: 0x0023CD90 File Offset: 0x0023AF90
		public bool IsRegionOpen(int regionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRegionOpenInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRegionOpenInt32_hotfix.call(new object[]
				{
					this,
					regionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_levelComponent.IsRegionOpen(regionId);
		}

		// Token: 0x06007CFF RID: 31999 RVA: 0x0023CE18 File Offset: 0x0023B018
		public ConfigDataWorldMapInfo GetCurrentWorldMapInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentWorldMapInfo_hotfix != null)
			{
				return (ConfigDataWorldMapInfo)this.m_GetCurrentWorldMapInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_configDataLoader.GetConfigDataWorldMapInfo(1);
		}

		// Token: 0x06007D00 RID: 32000 RVA: 0x0023CE90 File Offset: 0x0023B090
		public ConfigDataWaypointInfo GetPlayerCurrentWaypointInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerCurrentWaypointInfo_hotfix != null)
			{
				return (ConfigDataWaypointInfo)this.m_GetPlayerCurrentWaypointInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataWaypointInfo playerCurrentWaypointInfo = this.m_levelComponent.GetPlayerCurrentWaypointInfo();
			if (playerCurrentWaypointInfo != null)
			{
				return playerCurrentWaypointInfo;
			}
			return this.GetCurrentWorldMapInfo().m_startWaypointInfo;
		}

		// Token: 0x06007D01 RID: 32001 RVA: 0x0023CF1C File Offset: 0x0023B11C
		public WayPointStatus GetWaypointStatus(int waypointId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetWaypointStatusInt32_hotfix != null)
			{
				return (WayPointStatus)this.m_GetWaypointStatusInt32_hotfix.call(new object[]
				{
					this,
					waypointId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_levelComponent.GetWaypointStatus(waypointId);
		}

		// Token: 0x06007D02 RID: 32002 RVA: 0x0023CFA4 File Offset: 0x0023B1A4
		private void GetWaypointEvent(int waypointId, out ConfigDataEventInfo eventInfo, out RandomEvent randomEvent)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetWaypointEventInt32ConfigDataEventInfo_RandomEvent__hotfix != null)
			{
				LuaDelegation.Lua_BlackJack_ProjectL_PlayerContext_ProjectLPlayerContext_GetWaypointEvent_Int32_ConfigDataEventInfo_RandomEvent(this, this.m_GetWaypointEventInt32ConfigDataEventInfo_RandomEvent__hotfix, waypointId, out eventInfo, out randomEvent);
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			eventInfo = null;
			randomEvent = null;
			WayPointStatus waypointStatus = this.GetWaypointStatus(waypointId);
			if (waypointStatus == WayPointStatus.Public)
			{
				ConfigDataWaypointInfo configDataWaypointInfo = this.m_configDataLoader.GetConfigDataWaypointInfo(waypointId);
				if (configDataWaypointInfo.FuncType == WaypointFuncType.WaypointFuncType_Event)
				{
					eventInfo = this.m_configDataLoader.GetConfigDataEventInfo(configDataWaypointInfo.FuncTypeParam1);
				}
			}
			else if (waypointStatus == WayPointStatus.Arrived)
			{
				randomEvent = this.m_levelComponent.GetRandomEvent(waypointId);
				if (randomEvent != null)
				{
					eventInfo = this.m_configDataLoader.GetConfigDataEventInfo(randomEvent.EventId);
				}
			}
		}

		// Token: 0x06007D03 RID: 32003 RVA: 0x0023D070 File Offset: 0x0023B270
		public int CanAttackEventWaypoint(int waypointId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackEventWaypointInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackEventWaypointInt32_hotfix.call(new object[]
				{
					this,
					waypointId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataWaypointInfo configDataWaypointInfo = this.m_configDataLoader.GetConfigDataWaypointInfo(waypointId);
			if (configDataWaypointInfo == null)
			{
				return -705;
			}
			return this.m_levelComponent.CanAttackEventWayPoint(configDataWaypointInfo);
		}

		// Token: 0x06007D04 RID: 32004 RVA: 0x0023D114 File Offset: 0x0023B314
		public int CanAttackScenario(int scenarioId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackScenarioInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackScenarioInt32_hotfix.call(new object[]
				{
					this,
					scenarioId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataScenarioInfo configDataScenarioInfo = this.m_configDataLoader.GetConfigDataScenarioInfo(scenarioId);
			if (configDataScenarioInfo == null)
			{
				return -700;
			}
			return this.m_levelComponent.CanAttackScenario(configDataScenarioInfo);
		}

		// Token: 0x06007D05 RID: 32005 RVA: 0x0023D1B8 File Offset: 0x0023B3B8
		private ConfigDataScenarioInfo GetLastFinishedScenarioInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetLastFinishedScenarioInfo_hotfix != null)
			{
				return (ConfigDataScenarioInfo)this.m_GetLastFinishedScenarioInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_levelComponent.GetLastFinishedScenarioInfo();
		}

		// Token: 0x06007D06 RID: 32006 RVA: 0x0023D230 File Offset: 0x0023B430
		private ConfigDataScenarioInfo GetNextScenarioInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNextScenarioInfo_hotfix != null)
			{
				return (ConfigDataScenarioInfo)this.m_GetNextScenarioInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataScenarioInfo lastFinishedScenarioInfo = this.GetLastFinishedScenarioInfo();
			if (lastFinishedScenarioInfo == null)
			{
				return this.m_configDataLoader.GetConfigDataScenarioInfo(this.m_configDataLoader.ConfigableConstId_FirstScenarioId);
			}
			ConfigDataScenarioInfo nextScenarioInfo = lastFinishedScenarioInfo.m_nextScenarioInfo;
			if (nextScenarioInfo != null && !nextScenarioInfo.IsOpened)
			{
				return null;
			}
			return nextScenarioInfo;
		}

		// Token: 0x06007D07 RID: 32007 RVA: 0x0023D2DC File Offset: 0x0023B4DC
		public bool IsScenarioFinished(int scenarioId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsScenarioFinishedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsScenarioFinishedInt32_hotfix.call(new object[]
				{
					this,
					scenarioId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataScenarioInfo configDataScenarioInfo = this.m_configDataLoader.GetConfigDataScenarioInfo(scenarioId);
			if (configDataScenarioInfo == null)
			{
				return false;
			}
			ConfigDataScenarioInfo lastFinishedScenarioInfo = this.GetLastFinishedScenarioInfo();
			return lastFinishedScenarioInfo != null && lastFinishedScenarioInfo.m_scenarioDepth >= configDataScenarioInfo.m_scenarioDepth;
		}

		// Token: 0x06007D08 RID: 32008 RVA: 0x0023D390 File Offset: 0x0023B590
		public int CanUnlockScenario(int scenarioId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnlockScenarioInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnlockScenarioInt32_hotfix.call(new object[]
				{
					this,
					scenarioId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataScenarioInfo configDataScenarioInfo = this.m_configDataLoader.GetConfigDataScenarioInfo(scenarioId);
			if (configDataScenarioInfo == null)
			{
				return -700;
			}
			return this.m_levelComponent.CanUnLockScenario(configDataScenarioInfo);
		}

		// Token: 0x06007D09 RID: 32009 RVA: 0x0023D434 File Offset: 0x0023B634
		private void InitCurrentScenarioInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_InitCurrentScenarioInfo_hotfix != null)
			{
				this.m_InitCurrentScenarioInfo_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentScenarioInfo = this.GetNextScenarioInfo();
		}

		// Token: 0x06007D0A RID: 32010 RVA: 0x0023D4A0 File Offset: 0x0023B6A0
		public bool CheckChangeCurrentScenario()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckChangeCurrentScenario_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CheckChangeCurrentScenario_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataScenarioInfo nextScenarioInfo = this.GetNextScenarioInfo();
			if (nextScenarioInfo != this.m_currentScenarioInfo)
			{
				this.m_currentScenarioInfo = nextScenarioInfo;
				return true;
			}
			return false;
		}

		// Token: 0x06007D0B RID: 32011 RVA: 0x0023D52C File Offset: 0x0023B72C
		public ConfigDataScenarioInfo GetCurrentScenarioInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentScenarioInfo_hotfix != null)
			{
				return (ConfigDataScenarioInfo)this.m_GetCurrentScenarioInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_currentScenarioInfo;
		}

		// Token: 0x06007D0C RID: 32012 RVA: 0x0023D5A0 File Offset: 0x0023B7A0
		public void UpdateCurrentWaypointEvents()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_UpdateCurrentWaypointEvents_hotfix != null)
			{
				this.m_UpdateCurrentWaypointEvents_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_currentWaypointEvents.Clear();
			ConfigDataWorldMapInfo currentWorldMapInfo = this.GetCurrentWorldMapInfo();
			foreach (ConfigDataRegionInfo configDataRegionInfo in currentWorldMapInfo.m_regionInfos)
			{
				foreach (int num in configDataRegionInfo.Waypoints_ID)
				{
					ConfigDataEventInfo configDataEventInfo = null;
					RandomEvent randomEvent = null;
					this.GetWaypointEvent(num, out configDataEventInfo, out randomEvent);
					if (configDataEventInfo != null)
					{
						ProjectLPlayerContext.CurrentWaypointEvent currentWaypointEvent = new ProjectLPlayerContext.CurrentWaypointEvent();
						currentWaypointEvent.WaypointId = num;
						currentWaypointEvent.EventInfo = configDataEventInfo;
						currentWaypointEvent.RandomEvent = randomEvent;
						this.m_currentWaypointEvents[num] = currentWaypointEvent;
					}
				}
			}
		}

		// Token: 0x06007D0D RID: 32013 RVA: 0x0023D6C8 File Offset: 0x0023B8C8
		public Dictionary<int, ProjectLPlayerContext.CurrentWaypointEvent> GetCurrentWaypointEvents()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentWaypointEvents_hotfix != null)
			{
				return (Dictionary<int, ProjectLPlayerContext.CurrentWaypointEvent>)this.m_GetCurrentWaypointEvents_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_currentWaypointEvents;
		}

		// Token: 0x06007D0E RID: 32014 RVA: 0x0023D73C File Offset: 0x0023B93C
		public ConfigDataEventInfo GetCurrentWaypointEventInfo(int waypointId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentWaypointEventInfoInt32_hotfix != null)
			{
				return (ConfigDataEventInfo)this.m_GetCurrentWaypointEventInfoInt32_hotfix.call(new object[]
				{
					this,
					waypointId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ProjectLPlayerContext.CurrentWaypointEvent currentWaypointEvent;
			if (this.m_currentWaypointEvents.TryGetValue(waypointId, out currentWaypointEvent))
			{
				return currentWaypointEvent.EventInfo;
			}
			return null;
		}

		// Token: 0x06007D0F RID: 32015 RVA: 0x0023D7D4 File Offset: 0x0023B9D4
		public RandomEvent GetCurrentWaypointRandomEvent(int waypointId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentWaypointRandomEventInt32_hotfix != null)
			{
				return (RandomEvent)this.m_GetCurrentWaypointRandomEventInt32_hotfix.call(new object[]
				{
					this,
					waypointId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ProjectLPlayerContext.CurrentWaypointEvent currentWaypointEvent;
			if (this.m_currentWaypointEvents.TryGetValue(waypointId, out currentWaypointEvent))
			{
				return currentWaypointEvent.RandomEvent;
			}
			return null;
		}

		// Token: 0x14000128 RID: 296
		// (add) Token: 0x06007D10 RID: 32016 RVA: 0x0023D86C File Offset: 0x0023BA6C
		// (remove) Token: 0x06007D11 RID: 32017 RVA: 0x0023D908 File Offset: 0x0023BB08
		public event Action<int, BattleReward> EventOnLevelWayPointMoveAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnLevelWayPointMoveAckAction`2_hotfix != null)
				{
					this.m_add_EventOnLevelWayPointMoveAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnLevelWayPointMoveAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnLevelWayPointMoveAck, (Action<int, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnLevelWayPointMoveAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnLevelWayPointMoveAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnLevelWayPointMoveAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnLevelWayPointMoveAck, (Action<int, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000129 RID: 297
		// (add) Token: 0x06007D12 RID: 32018 RVA: 0x0023D9A4 File Offset: 0x0023BBA4
		// (remove) Token: 0x06007D13 RID: 32019 RVA: 0x0023DA40 File Offset: 0x0023BC40
		public event Action<int, BattleReward> EventOnLevelScenarioHandleAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnLevelScenarioHandleAckAction`2_hotfix != null)
				{
					this.m_add_EventOnLevelScenarioHandleAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnLevelScenarioHandleAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnLevelScenarioHandleAck, (Action<int, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnLevelScenarioHandleAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnLevelScenarioHandleAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnLevelScenarioHandleAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnLevelScenarioHandleAck, (Action<int, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400012A RID: 298
		// (add) Token: 0x06007D14 RID: 32020 RVA: 0x0023DADC File Offset: 0x0023BCDC
		// (remove) Token: 0x06007D15 RID: 32021 RVA: 0x0023DB78 File Offset: 0x0023BD78
		public event Action<int, bool, BattleReward> EventOnLevelWayPointBattleFinishAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnLevelWayPointBattleFinishAckAction`3_hotfix != null)
				{
					this.m_add_EventOnLevelWayPointBattleFinishAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnLevelWayPointBattleFinishAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnLevelWayPointBattleFinishAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnLevelWayPointBattleFinishAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnLevelWayPointBattleFinishAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnLevelWayPointBattleFinishAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnLevelWayPointBattleFinishAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400012B RID: 299
		// (add) Token: 0x06007D16 RID: 32022 RVA: 0x0023DC14 File Offset: 0x0023BE14
		// (remove) Token: 0x06007D17 RID: 32023 RVA: 0x0023DCB0 File Offset: 0x0023BEB0
		public event Action EventOnRandomEventNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRandomEventNtfAction_hotfix != null)
				{
					this.m_add_EventOnRandomEventNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnRandomEventNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnRandomEventNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRandomEventNtfAction_hotfix != null)
				{
					this.m_remove_EventOnRandomEventNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnRandomEventNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnRandomEventNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007D18 RID: 32024 RVA: 0x0023DD4C File Offset: 0x0023BF4C
		public bool SendMailsGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendMailsGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendMailsGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			MailsGetReq msg = new MailsGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D19 RID: 32025 RVA: 0x0023DDC8 File Offset: 0x0023BFC8
		public bool SendMailReadReq(ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendMailReadReqUInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendMailReadReqUInt64_hotfix.call(new object[]
				{
					this,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new MailReadReq
			{
				InstanceId = instanceId
			});
		}

		// Token: 0x06007D1A RID: 32026 RVA: 0x0023DE58 File Offset: 0x0023C058
		public bool SendMailAttachmentsGetReq(ulong instanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendMailAttachmentsGetReqUInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendMailAttachmentsGetReqUInt64_hotfix.call(new object[]
				{
					this,
					instanceId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new MailAttachmentsGetReq
			{
				InstanceId = instanceId
			});
		}

		// Token: 0x06007D1B RID: 32027 RVA: 0x0023DEE8 File Offset: 0x0023C0E8
		public bool SendMailAttachmentAutoGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendMailAttachmentAutoGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendMailAttachmentAutoGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			MailAttachmentAutoGetReq msg = new MailAttachmentAutoGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D1C RID: 32028 RVA: 0x0023DF64 File Offset: 0x0023C164
		private void OnMessage(DSMailNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSMailNtf_hotfix != null)
			{
				this.m_OnMessageDSMailNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_mailComponent.DeSerialize(msg);
		}

		// Token: 0x06007D1D RID: 32029 RVA: 0x0023DFE0 File Offset: 0x0023C1E0
		private void OnMessage(MailsGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMailsGetAck_hotfix != null)
			{
				this.m_OnMessageMailsGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_mailComponent.InitMails(msg.Mails);
			this.IsHaveMailList = true;
			if (this.EventOnMailsGetAck != null)
			{
				this.EventOnMailsGetAck();
			}
		}

		// Token: 0x06007D1E RID: 32030 RVA: 0x0023E080 File Offset: 0x0023C280
		private void OnMessage(MailsChangedNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMailsChangedNtf_hotfix != null)
			{
				this.m_OnMessageMailsChangedNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			foreach (ProMail pbMail in msg.Mails)
			{
				this.m_mailComponent.AddMail(Mail.PBMailToMail(pbMail));
			}
			this.m_mailComponent.UnReadMailNums = 0;
			if (this.EventOnMailsChangedNtf != null)
			{
				this.EventOnMailsChangedNtf();
			}
		}

		// Token: 0x06007D1F RID: 32031 RVA: 0x0023E16C File Offset: 0x0023C36C
		private void OnMessage(MailReadAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMailReadAck_hotfix != null)
			{
				this.m_OnMessageMailReadAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_mailComponent.ReadMail(msg.InstanceId);
				if (num != 0)
				{
					this.DataError(num);
				}
				else
				{
					this.m_mailComponent.UnReadMailNums = 0;
				}
			}
			if (this.EventOnMailReadAck != null)
			{
				this.EventOnMailReadAck(msg.Result);
			}
		}

		// Token: 0x06007D20 RID: 32032 RVA: 0x0023E234 File Offset: 0x0023C434
		private void OnMessage(MailAttachmentsGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMailAttachmentsGetAck_hotfix != null)
			{
				this.m_OnMessageMailAttachmentsGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int mailAttachments = this.m_mailComponent.GetMailAttachments(msg.InstanceId, false);
				if (mailAttachments != 0)
				{
					this.DataError(mailAttachments);
				}
			}
			if (this.EventOnMailAttachmentsGetAck != null)
			{
				this.EventOnMailAttachmentsGetAck(msg.Result, list);
			}
		}

		// Token: 0x06007D21 RID: 32033 RVA: 0x0023E31C File Offset: 0x0023C51C
		private void OnMessage(MailAttachmentAutoGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMailAttachmentAutoGetAck_hotfix != null)
			{
				this.m_OnMessageMailAttachmentAutoGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_mailComponent.AutoGetMailAttachment(false);
				if (num != 0)
				{
					this.DataError(num);
				}
				this.m_mailComponent.UnReadMailNums = 0;
			}
			if (this.EventOnMailAttachmentsAutoGetAck != null)
			{
				this.EventOnMailAttachmentsAutoGetAck(msg.Result, list);
			}
		}

		// Token: 0x06007D22 RID: 32034 RVA: 0x0023E40C File Offset: 0x0023C60C
		public List<Mail> GetMails()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMails_hotfix != null)
			{
				return (List<Mail>)this.m_GetMails_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_mailComponent.GetMails();
		}

		// Token: 0x06007D23 RID: 32035 RVA: 0x0023E484 File Offset: 0x0023C684
		public bool IsMailReaded(Mail mail)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsMailReadedMail_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsMailReadedMail_hotfix.call(new object[]
				{
					this,
					mail
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_mailComponent.IsMailReaded(mail);
		}

		// Token: 0x06007D24 RID: 32036 RVA: 0x0023E50C File Offset: 0x0023C70C
		public bool IsExistMailAttacments(Mail mail)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsExistMailAttacmentsMail_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsExistMailAttacmentsMail_hotfix.call(new object[]
				{
					this,
					mail
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_mailComponent.IsExistMailAttacments(mail);
		}

		// Token: 0x06007D25 RID: 32037 RVA: 0x0023E594 File Offset: 0x0023C794
		public bool HasGotMailAttachments(Mail mail)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasGotMailAttachmentsMail_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasGotMailAttachmentsMail_hotfix.call(new object[]
				{
					this,
					mail
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_mailComponent.HasGotMailAttachments(mail);
		}

		// Token: 0x06007D26 RID: 32038 RVA: 0x0023E61C File Offset: 0x0023C81C
		public double GetMailExpiredTime(Mail mail)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMailExpiredTimeMail_hotfix != null)
			{
				return Convert.ToDouble(this.m_GetMailExpiredTimeMail_hotfix.call(new object[]
				{
					this,
					mail
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return -this.m_mailComponent.GetMailExpiredTimeSpan(mail).TotalSeconds;
		}

		// Token: 0x06007D27 RID: 32039 RVA: 0x0023E6B0 File Offset: 0x0023C8B0
		public int GetUnReadMailCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUnReadMailCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetUnReadMailCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Mail> mails = this.GetMails();
			int num = mails.FindAll((Mail mail) => !this.m_mailComponent.IsMailReaded(mail)).Count;
			if (num == 0)
			{
				num = this.m_mailComponent.UnReadMailNums;
			}
			return num;
		}

		// Token: 0x06007D28 RID: 32040 RVA: 0x0023E750 File Offset: 0x0023C950
		public int CanGetMailAttachment(ulong mailId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGetMailAttachmentUInt64_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanGetMailAttachmentUInt64_hotfix.call(new object[]
				{
					this,
					mailId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_mailComponent.CanGetMailAttachment(mailId, true);
		}

		// Token: 0x06007D29 RID: 32041 RVA: 0x0023E7DC File Offset: 0x0023C9DC
		public int CanAutoGetMailAttachment()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAutoGetMailAttachment_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAutoGetMailAttachment_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_mailComponent.CanAutoGetMailAttachment();
		}

		// Token: 0x06007D2A RID: 32042 RVA: 0x0023E854 File Offset: 0x0023CA54
		public bool IsOfficialMail(Mail mail)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsOfficialMailMail_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsOfficialMailMail_hotfix.call(new object[]
				{
					this,
					mail
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_mailComponent.IsOfficialMail(mail);
		}

		// Token: 0x17001BEF RID: 7151
		// (get) Token: 0x06007D2B RID: 32043 RVA: 0x0023E8DC File Offset: 0x0023CADC
		// (set) Token: 0x06007D2C RID: 32044 RVA: 0x0023E950 File Offset: 0x0023CB50
		public bool IsHaveMailList
		{
			[CompilerGenerated]
			get
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_get_IsHaveMailList_hotfix != null)
				{
					return Convert.ToBoolean(this.m_get_IsHaveMailList_hotfix.call(new object[]
					{
						this
					}));
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				return this.<IsHaveMailList>k__BackingField;
			}
			[CompilerGenerated]
			set
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_set_IsHaveMailListBoolean_hotfix != null)
				{
					this.m_set_IsHaveMailListBoolean_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				this.<IsHaveMailList>k__BackingField = value;
			}
		}

		// Token: 0x1400012C RID: 300
		// (add) Token: 0x06007D2D RID: 32045 RVA: 0x0023E9C8 File Offset: 0x0023CBC8
		// (remove) Token: 0x06007D2E RID: 32046 RVA: 0x0023EA64 File Offset: 0x0023CC64
		public event Action EventOnMailsGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMailsGetAckAction_hotfix != null)
				{
					this.m_add_EventOnMailsGetAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnMailsGetAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnMailsGetAck, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMailsGetAckAction_hotfix != null)
				{
					this.m_remove_EventOnMailsGetAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnMailsGetAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnMailsGetAck, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400012D RID: 301
		// (add) Token: 0x06007D2F RID: 32047 RVA: 0x0023EB00 File Offset: 0x0023CD00
		// (remove) Token: 0x06007D30 RID: 32048 RVA: 0x0023EB9C File Offset: 0x0023CD9C
		public event Action EventOnMailsChangedNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMailsChangedNtfAction_hotfix != null)
				{
					this.m_add_EventOnMailsChangedNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnMailsChangedNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnMailsChangedNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMailsChangedNtfAction_hotfix != null)
				{
					this.m_remove_EventOnMailsChangedNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnMailsChangedNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnMailsChangedNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400012E RID: 302
		// (add) Token: 0x06007D31 RID: 32049 RVA: 0x0023EC38 File Offset: 0x0023CE38
		// (remove) Token: 0x06007D32 RID: 32050 RVA: 0x0023ECD4 File Offset: 0x0023CED4
		public event Action<int> EventOnMailReadAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMailReadAckAction`1_hotfix != null)
				{
					this.m_add_EventOnMailReadAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnMailReadAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnMailReadAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMailReadAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnMailReadAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnMailReadAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnMailReadAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400012F RID: 303
		// (add) Token: 0x06007D33 RID: 32051 RVA: 0x0023ED70 File Offset: 0x0023CF70
		// (remove) Token: 0x06007D34 RID: 32052 RVA: 0x0023EE0C File Offset: 0x0023D00C
		public event Action<int, List<Goods>> EventOnMailAttachmentsGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMailAttachmentsGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnMailAttachmentsGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnMailAttachmentsGetAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnMailAttachmentsGetAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMailAttachmentsGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnMailAttachmentsGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnMailAttachmentsGetAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnMailAttachmentsGetAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000130 RID: 304
		// (add) Token: 0x06007D35 RID: 32053 RVA: 0x0023EEA8 File Offset: 0x0023D0A8
		// (remove) Token: 0x06007D36 RID: 32054 RVA: 0x0023EF44 File Offset: 0x0023D144
		public event Action<int, List<Goods>> EventOnMailAttachmentsAutoGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMailAttachmentsAutoGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnMailAttachmentsAutoGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnMailAttachmentsAutoGetAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnMailAttachmentsAutoGetAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMailAttachmentsAutoGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnMailAttachmentsAutoGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnMailAttachmentsAutoGetAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnMailAttachmentsAutoGetAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007D37 RID: 32055 RVA: 0x0023EFE0 File Offset: 0x0023D1E0
		public bool SendMemoryCorridorLevelAttackReq(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendMemoryCorridorLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendMemoryCorridorLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new MemoryCorridorLevelAttackReq
			{
				LevelId = levelId
			});
		}

		// Token: 0x06007D38 RID: 32056 RVA: 0x0023F070 File Offset: 0x0023D270
		public bool SendMemoryCorridorLevelBattleFinishedReq(int levelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendMemoryCorridorLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendMemoryCorridorLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					levelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new MemoryCorridorLevelBattleFinishedReq
			{
				LevelId = levelId,
				BattleReport = battleReport
			});
		}

		// Token: 0x06007D39 RID: 32057 RVA: 0x0023F118 File Offset: 0x0023D318
		private void OnMessage(DSMemoryCorridorNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSMemoryCorridorNtf_hotfix != null)
			{
				this.m_OnMessageDSMemoryCorridorNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_memoryCorridorComponent.DeSerialize(msg);
		}

		// Token: 0x06007D3A RID: 32058 RVA: 0x0023F194 File Offset: 0x0023D394
		private void OnMessage(MemoryCorridorLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMemoryCorridorLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageMemoryCorridorLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_memoryCorridorComponent.AttackMemoryCorridorLevel(msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnMemoryCorridorLevelAttackAck != null)
			{
				this.EventOnMemoryCorridorLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007D3B RID: 32059 RVA: 0x0023F28C File Offset: 0x0023D48C
		private void OnMessage(MemoryCorridorLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMemoryCorridorLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageMemoryCorridorLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.DailyGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.DailyRewards));
				int num = this.m_memoryCorridorComponent.FinishedMemoryCorridorLevel(msg.LevelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnMemoryCorridorLevelBattleFinishedAck != null)
			{
				this.EventOnMemoryCorridorLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007D3C RID: 32060 RVA: 0x0023F3D8 File Offset: 0x0023D5D8
		public bool IsMemoryCorridorOpened(int MemoryCorridorId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsMemoryCorridorOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsMemoryCorridorOpenedInt32_hotfix.call(new object[]
				{
					this,
					MemoryCorridorId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_memoryCorridorComponent.IsMemoryCorridorOpened(MemoryCorridorId);
		}

		// Token: 0x06007D3D RID: 32061 RVA: 0x0023F460 File Offset: 0x0023D660
		public bool IsMemoryCorridorLevelOpened(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsMemoryCorridorLevelOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsMemoryCorridorLevelOpenedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_memoryCorridorComponent.IsMemoryCorridorLevelOpened(levelId);
		}

		// Token: 0x06007D3E RID: 32062 RVA: 0x0023F4E8 File Offset: 0x0023D6E8
		public int CanAttackMemoryCorridorLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackMemoryCorridorLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackMemoryCorridorLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_memoryCorridorComponent.CanAttackMemoryCorridorLevel(levelId, false);
		}

		// Token: 0x06007D3F RID: 32063 RVA: 0x0023F574 File Offset: 0x0023D774
		public int GetMemoryCorridorTicketCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMemoryCorridorTicketCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetMemoryCorridorTicketCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_memoryCorridorComponent.GetCurrentTicketNums();
		}

		// Token: 0x06007D40 RID: 32064 RVA: 0x0023F5EC File Offset: 0x0023D7EC
		public bool IsMemoryCorridorLevelFinished(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsMemoryCorridorLevelFinishedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsMemoryCorridorLevelFinishedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_memoryCorridorComponent.IsLevelFinished(levelId);
		}

		// Token: 0x06007D41 RID: 32065 RVA: 0x0023F674 File Offset: 0x0023D874
		public int GetMemoryCorridorDailyRewardRestCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMemoryCorridorDailyRewardRestCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetMemoryCorridorDailyRewardRestCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_memoryCorridorComponent.GetDailyChallengNums();
		}

		// Token: 0x14000131 RID: 305
		// (add) Token: 0x06007D42 RID: 32066 RVA: 0x0023F6EC File Offset: 0x0023D8EC
		// (remove) Token: 0x06007D43 RID: 32067 RVA: 0x0023F788 File Offset: 0x0023D988
		public event Action<int> EventOnMemoryCorridorLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMemoryCorridorLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnMemoryCorridorLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnMemoryCorridorLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnMemoryCorridorLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMemoryCorridorLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnMemoryCorridorLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnMemoryCorridorLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnMemoryCorridorLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000132 RID: 306
		// (add) Token: 0x06007D44 RID: 32068 RVA: 0x0023F824 File Offset: 0x0023DA24
		// (remove) Token: 0x06007D45 RID: 32069 RVA: 0x0023F8C0 File Offset: 0x0023DAC0
		public event Action<int, bool, BattleReward> EventOnMemoryCorridorLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMemoryCorridorLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnMemoryCorridorLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnMemoryCorridorLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnMemoryCorridorLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMemoryCorridorLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnMemoryCorridorLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnMemoryCorridorLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnMemoryCorridorLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007D46 RID: 32070 RVA: 0x0023F95C File Offset: 0x0023DB5C
		public bool SendGetMissionRewardReq(int missionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetMissionRewardReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetMissionRewardReqInt32_hotfix.call(new object[]
				{
					this,
					missionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GetMissionRewardReq
			{
				MissionId = missionId
			});
		}

		// Token: 0x06007D47 RID: 32071 RVA: 0x0023F9EC File Offset: 0x0023DBEC
		private void OnMessage(DirectelyActivitedMissionUpdateNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDirectelyActivitedMissionUpdateNtf_hotfix != null)
			{
				this.m_OnMessageDirectelyActivitedMissionUpdateNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Format("update mission {0} excute add operaction = {1}", msg.MissionId, msg.Add));
			if (msg.Add)
			{
				this.m_missionComponent.AddMissionById(msg.MissionId);
			}
			else
			{
				this.m_missionComponent.RemoveProcessingMissionById(msg.MissionId);
			}
		}

		// Token: 0x06007D48 RID: 32072 RVA: 0x0023FAB4 File Offset: 0x0023DCB4
		private void OnMessage(DSMissionNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSMissionNtf_hotfix != null)
			{
				this.m_OnMessageDSMissionNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_missionComponent.DeSerialize(msg);
		}

		// Token: 0x06007D49 RID: 32073 RVA: 0x0023FB30 File Offset: 0x0023DD30
		private void OnMessage(GetMissionRewardAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGetMissionRewardAck_hotfix != null)
			{
				this.m_OnMessageGetMissionRewardAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				int missionReward = this.m_missionComponent.GetMissionReward(msg.MissionId);
				if (missionReward < 0)
				{
					this.DataError(missionReward);
				}
			}
			if (this.EventOnMissionRewardGetAck != null)
			{
				this.EventOnMissionRewardGetAck(msg.Result, list);
			}
		}

		// Token: 0x14000133 RID: 307
		// (add) Token: 0x06007D4A RID: 32074 RVA: 0x0023FC18 File Offset: 0x0023DE18
		// (remove) Token: 0x06007D4B RID: 32075 RVA: 0x0023FCB4 File Offset: 0x0023DEB4
		public event Action<int, List<Goods>> EventOnMissionRewardGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnMissionRewardGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnMissionRewardGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnMissionRewardGetAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnMissionRewardGetAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnMissionRewardGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnMissionRewardGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnMissionRewardGetAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnMissionRewardGetAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007D4C RID: 32076 RVA: 0x0023FD50 File Offset: 0x0023DF50
		public List<Mission> GetAllProcessingMissionList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllProcessingMissionList_hotfix != null)
			{
				return (List<Mission>)this.m_GetAllProcessingMissionList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_missionComponent.GetAllProcessingMissionList();
		}

		// Token: 0x06007D4D RID: 32077 RVA: 0x0023FDC8 File Offset: 0x0023DFC8
		public List<Mission> GetAllCompletedMissionList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllCompletedMissionList_hotfix != null)
			{
				return (List<Mission>)this.m_GetAllCompletedMissionList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_missionComponent.GetAllCompletedMissionList();
		}

		// Token: 0x06007D4E RID: 32078 RVA: 0x0023FE40 File Offset: 0x0023E040
		public List<Mission> GetAllFinishedMissionList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllFinishedMissionList_hotfix != null)
			{
				return (List<Mission>)this.m_GetAllFinishedMissionList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_missionComponent.GetAllFinishedMissionList();
		}

		// Token: 0x06007D4F RID: 32079 RVA: 0x0023FEB8 File Offset: 0x0023E0B8
		public int GetMissionMaxProcess(Mission mission)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMissionMaxProcessMission_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetMissionMaxProcessMission_hotfix.call(new object[]
				{
					this,
					mission
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_missionComponent.GetMissionMaxProcess(mission);
		}

		// Token: 0x06007D50 RID: 32080 RVA: 0x0023FF40 File Offset: 0x0023E140
		public long GetMissionCompleteProcess(Mission mission)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMissionCompleteProcessMission_hotfix != null)
			{
				return Convert.ToInt64(this.m_GetMissionCompleteProcessMission_hotfix.call(new object[]
				{
					this,
					mission
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_missionComponent.GetMissionCompletedProcess(mission);
		}

		// Token: 0x06007D51 RID: 32081 RVA: 0x0023FFC8 File Offset: 0x0023E1C8
		public bool IsExistMissionCompleted()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsExistMissionCompleted_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsExistMissionCompleted_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Mission> allCompletedMissionList = this.m_missionComponent.GetAllCompletedMissionList();
			foreach (Mission mission in allCompletedMissionList)
			{
				if (mission.Config.MissionColumn == MissionColumnType.MissionColumnType_Achievements || mission.Config.MissionColumn == MissionColumnType.MissionColumnType_Challenge || mission.Config.MissionColumn == MissionColumnType.MissionColumnType_Everyday)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007D52 RID: 32082 RVA: 0x002400C0 File Offset: 0x0023E2C0
		public int CanGainMissionReward(int missionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGainMissionRewardInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanGainMissionRewardInt32_hotfix.call(new object[]
				{
					this,
					missionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_missionComponent.CanGainMissionReward(missionId);
		}

		// Token: 0x06007D53 RID: 32083 RVA: 0x00240148 File Offset: 0x0023E348
		public bool CanGetMissionRewarding(Mission mission)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGetMissionRewardingMission_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanGetMissionRewardingMission_hotfix.call(new object[]
				{
					this,
					mission
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_missionComponent.CanGetRewarding(mission);
		}

		// Token: 0x06007D54 RID: 32084 RVA: 0x002401D0 File Offset: 0x0023E3D0
		public bool SendNoviceClaimRewardReq(int Slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendNoviceClaimRewardReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendNoviceClaimRewardReqInt32_hotfix.call(new object[]
				{
					this,
					Slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			NoviceClaimRewardReq msg = new NoviceClaimRewardReq
			{
				Slot = Slot
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007D55 RID: 32085 RVA: 0x00240264 File Offset: 0x0023E464
		private void OnMessage(DSNoviceNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSNoviceNtf_hotfix != null)
			{
				this.m_OnMessageDSNoviceNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_noviceComponent.DeSerialize(msg);
		}

		// Token: 0x06007D56 RID: 32086 RVA: 0x002402E0 File Offset: 0x0023E4E0
		private void OnMessage(NoviceClaimRewardAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageNoviceClaimRewardAck_hotfix != null)
			{
				this.m_OnMessageNoviceClaimRewardAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, list);
					this.OnMessage(msg.Ntf);
				}
				this.m_noviceComponent.ClaimReward(msg.Req.Slot, true);
			}
			if (this.EventOnNoviceClaimRewardAck != null)
			{
				this.EventOnNoviceClaimRewardAck(msg.Result, list);
			}
		}

		// Token: 0x06007D57 RID: 32087 RVA: 0x002403C0 File Offset: 0x0023E5C0
		public int GetDaysAfterCreation()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDaysAfterCreation_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetDaysAfterCreation_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.GetDaysAfterCreation();
		}

		// Token: 0x06007D58 RID: 32088 RVA: 0x00240438 File Offset: 0x0023E638
		public Dictionary<int, List<int>> GetNoviceMissions()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNoviceMissions_hotfix != null)
			{
				return (Dictionary<int, List<int>>)this.m_GetNoviceMissions_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.GetMissions();
		}

		// Token: 0x06007D59 RID: 32089 RVA: 0x002404B0 File Offset: 0x0023E6B0
		public List<Mission> GetNoviceProcessingMissions()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNoviceProcessingMissions_hotfix != null)
			{
				return (List<Mission>)this.m_GetNoviceProcessingMissions_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.GetProcessingMissions();
		}

		// Token: 0x06007D5A RID: 32090 RVA: 0x00240528 File Offset: 0x0023E728
		public bool IsShowRedMarkOnOpenServiceButton()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsShowRedMarkOnOpenServiceButton_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsShowRedMarkOnOpenServiceButton_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<ConfigDataNoviceRewardInfo> novicePointsRewardsConfig = this.GetNovicePointsRewardsConfig();
			for (int i = 0; i < novicePointsRewardsConfig.Count; i++)
			{
				if (this.CanClaimNoviceReward(i) == 0)
				{
					return true;
				}
			}
			return this.HaveFinishedNotGetNoviceMissions();
		}

		// Token: 0x06007D5B RID: 32091 RVA: 0x002405C8 File Offset: 0x0023E7C8
		public bool HaveFinishedNotGetNoviceMissions()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HaveFinishedNotGetNoviceMissions_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HaveFinishedNotGetNoviceMissions_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int daysAfterCreation = this.GetDaysAfterCreation();
			for (int i = 1; i <= daysAfterCreation; i++)
			{
				bool flag = this.HaveFinishedNotGetNoiviceMissionsByDay(i);
				if (flag)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007D5C RID: 32092 RVA: 0x00240660 File Offset: 0x0023E860
		public bool HaveFinishedNotGetNoiviceMissionsByDay(int day)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HaveFinishedNotGetNoiviceMissionsByDayInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HaveFinishedNotGetNoiviceMissionsByDayInt32_hotfix.call(new object[]
				{
					this,
					day
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Dictionary<int, List<int>> noviceMissions = this.GetNoviceMissions();
			if (!noviceMissions.ContainsKey(day))
			{
				return false;
			}
			List<int> list = noviceMissions[day];
			List<Mission> noviceProcessingMissions = this.GetNoviceProcessingMissions();
			foreach (Mission mission in noviceProcessingMissions)
			{
				if (list.Contains(mission.MissionId))
				{
					if (this.CanGetMissionRewarding(mission))
					{
						return true;
					}
				}
			}
			return false;
		}

		// Token: 0x06007D5D RID: 32093 RVA: 0x00240774 File Offset: 0x0023E974
		public List<Mission> GetFinishedAndGetRewardNoviceMissions()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetFinishedAndGetRewardNoviceMissions_hotfix != null)
			{
				return (List<Mission>)this.m_GetFinishedAndGetRewardNoviceMissions_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.GetFinishedMissions();
		}

		// Token: 0x06007D5E RID: 32094 RVA: 0x002407EC File Offset: 0x0023E9EC
		public int GetNoviceMissionPoints()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNoviceMissionPoints_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetNoviceMissionPoints_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.GetMissionPoints();
		}

		// Token: 0x06007D5F RID: 32095 RVA: 0x00240864 File Offset: 0x0023EA64
		public List<ConfigDataNoviceRewardInfo> GetNovicePointsRewardsConfig()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNovicePointsRewardsConfig_hotfix != null)
			{
				return (List<ConfigDataNoviceRewardInfo>)this.m_GetNovicePointsRewardsConfig_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.GetNovicePointsRewardsConfig();
		}

		// Token: 0x06007D60 RID: 32096 RVA: 0x002408DC File Offset: 0x0023EADC
		public int CanClaimNoviceReward(int slot)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanClaimNoviceRewardInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanClaimNoviceRewardInt32_hotfix.call(new object[]
				{
					this,
					slot
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.CanClaimReward(slot);
		}

		// Token: 0x06007D61 RID: 32097 RVA: 0x00240964 File Offset: 0x0023EB64
		public TimeSpan GetNoviceMissionsEndTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNoviceMissionsEndTime_hotfix != null)
			{
				return (TimeSpan)this.m_GetNoviceMissionsEndTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_noviceComponent.GetMissionsEndTime();
		}

		// Token: 0x14000134 RID: 308
		// (add) Token: 0x06007D62 RID: 32098 RVA: 0x002409DC File Offset: 0x0023EBDC
		// (remove) Token: 0x06007D63 RID: 32099 RVA: 0x00240A78 File Offset: 0x0023EC78
		public event Action<int, List<Goods>> EventOnNoviceClaimRewardAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnNoviceClaimRewardAckAction`2_hotfix != null)
				{
					this.m_add_EventOnNoviceClaimRewardAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnNoviceClaimRewardAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnNoviceClaimRewardAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnNoviceClaimRewardAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnNoviceClaimRewardAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnNoviceClaimRewardAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnNoviceClaimRewardAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007D64 RID: 32100 RVA: 0x00240B14 File Offset: 0x0023ED14
		public bool SendOperationalActivityGainRewardReq(ulong operationalActivityInstanceId, int rewardIndex)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendOperationalActivityGainRewardReqUInt64Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendOperationalActivityGainRewardReqUInt64Int32_hotfix.call(new object[]
				{
					this,
					operationalActivityInstanceId,
					rewardIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new OperationalActivityGainRewardReq
			{
				OperationalActivityInstanceId = operationalActivityInstanceId,
				RewardIndex = rewardIndex
			});
		}

		// Token: 0x06007D65 RID: 32101 RVA: 0x00240BBC File Offset: 0x0023EDBC
		public bool SendOperationalActivityExchangeItemGroupReq(ulong operationalActivityInstanceId, int itemGroupIndex)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendOperationalActivityExchangeItemGroupReqUInt64Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendOperationalActivityExchangeItemGroupReqUInt64Int32_hotfix.call(new object[]
				{
					this,
					operationalActivityInstanceId,
					itemGroupIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new OperationalActivityExchangeItemGroupReq
			{
				OperationalActivityInstanceId = operationalActivityInstanceId,
				ExchangeItemGroupIndex = itemGroupIndex
			});
		}

		// Token: 0x06007D66 RID: 32102 RVA: 0x00240C64 File Offset: 0x0023EE64
		public bool SendRedeemInfoReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRedeemInfoReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRedeemInfoReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RedeemInfoReq msg = new RedeemInfoReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D67 RID: 32103 RVA: 0x00240CE0 File Offset: 0x0023EEE0
		public bool SendRedeemClaimReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRedeemClaimReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRedeemClaimReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RedeemClaimReq msg = new RedeemClaimReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D68 RID: 32104 RVA: 0x00240D5C File Offset: 0x0023EF5C
		public bool SendFansRewardsFromPBTCBTInfoReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFansRewardsFromPBTCBTInfoReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFansRewardsFromPBTCBTInfoReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FansRewardsFromPBTCBTInfoReq msg = new FansRewardsFromPBTCBTInfoReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D69 RID: 32105 RVA: 0x00240DD8 File Offset: 0x0023EFD8
		public bool SendFansRewardsFromPBTCBTClaimReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFansRewardsFromPBTCBTClaimReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFansRewardsFromPBTCBTClaimReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			FansRewardsFromPBTCBTClaimReq msg = new FansRewardsFromPBTCBTClaimReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D6A RID: 32106 RVA: 0x00240E54 File Offset: 0x0023F054
		private void OnMessage(OperationalActivityGainRewardAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageOperationalActivityGainRewardAck_hotfix != null)
			{
				this.m_OnMessageOperationalActivityGainRewardAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> rewards = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, rewards);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_operationalActivityComponent.GainReward(msg.OperationalActivityInstanceId, msg.RewardIndex);
				if (num < 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnActivityGainRewardAck != null)
			{
				this.EventOnActivityGainRewardAck(msg.Result);
			}
		}

		// Token: 0x06007D6B RID: 32107 RVA: 0x00240F40 File Offset: 0x0023F140
		private void OnMessage(OperationalActivityExchangeItemGroupAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageOperationalActivityExchangeItemGroupAck_hotfix != null)
			{
				this.m_OnMessageOperationalActivityExchangeItemGroupAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> rewards = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.AppendChangedGoodsToRewards(msg.Ntf.Changed, rewards);
					this.OnMessage(msg.Ntf);
				}
				int num = this.m_operationalActivityComponent.ExchangeItemGroup(msg.OperationalActivityInstanceId, msg.ExchangeItemGroupIndex);
				if (num < 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnActivityExchangeItemGroupAck != null)
			{
				this.EventOnActivityExchangeItemGroupAck(msg.Result);
			}
		}

		// Token: 0x06007D6C RID: 32108 RVA: 0x0024102C File Offset: 0x0023F22C
		private void OnMessage(AdvertisementFlowLayoutUpdateNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageAdvertisementFlowLayoutUpdateNtf_hotfix != null)
			{
				this.m_OnMessageAdvertisementFlowLayoutUpdateNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_operationalActivityComponent.Deserialize(msg);
		}

		// Token: 0x06007D6D RID: 32109 RVA: 0x002410A8 File Offset: 0x0023F2A8
		private void OnMessage(DSOperationalActivityNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSOperationalActivityNtf_hotfix != null)
			{
				this.m_OnMessageDSOperationalActivityNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_operationalActivityComponent.Deserialize(msg);
		}

		// Token: 0x06007D6E RID: 32110 RVA: 0x00241124 File Offset: 0x0023F324
		private void OnMessage(RemoveAnnouncementNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRemoveAnnouncementNtf_hotfix != null)
			{
				this.m_OnMessageRemoveAnnouncementNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_operationalActivityComponent.RemoveGlobalAnnouncement(msg.RemoveInstanceId);
		}

		// Token: 0x06007D6F RID: 32111 RVA: 0x002411A8 File Offset: 0x0023F3A8
		private void OnMessage(DSAnnouncementNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSAnnouncementNtf_hotfix != null)
			{
				this.m_OnMessageDSAnnouncementNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_operationalActivityComponent.Deserialize(msg);
		}

		// Token: 0x06007D70 RID: 32112 RVA: 0x00241224 File Offset: 0x0023F424
		private void OnMessage(NewOperationalActivityNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageNewOperationalActivityNtf_hotfix != null)
			{
				this.m_OnMessageNewOperationalActivityNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_operationalActivityComponent.AddNewOperationalActivity(msg.OperationalActivityInfo);
			global::Debug.Log(string.Format("add activity InstanceId  = {0} ActivityId = {1} OperateStartTime = {2} OperateEndTime = {3} GainRewardEndTime = {4}", new object[]
			{
				msg.OperationalActivityInfo.InstanceId,
				msg.OperationalActivityInfo.ActivityId,
				new DateTime(msg.OperationalActivityInfo.OperationStartTime),
				new DateTime(msg.OperationalActivityInfo.OperationEndTime),
				new DateTime(msg.OperationalActivityInfo.GainRewardEndTime)
			}));
		}

		// Token: 0x06007D71 RID: 32113 RVA: 0x0024132C File Offset: 0x0023F52C
		private void OnMessage(NewAnnouncementNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageNewAnnouncementNtf_hotfix != null)
			{
				this.m_OnMessageNewAnnouncementNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_operationalActivityComponent.AddAnnouncement(ntf.AnnouncementInfo);
		}

		// Token: 0x06007D72 RID: 32114 RVA: 0x002413B0 File Offset: 0x0023F5B0
		private void OnMessage(UpdateOperationalActivityNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUpdateOperationalActivityNtf_hotfix != null)
			{
				this.m_OnMessageUpdateOperationalActivityNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_operationalActivityComponent.UpdateOperationalActivity(msg.OperationalActivityInfo);
			global::Debug.Log(string.Format("update activity InstanceId  = {0} ActivityId = {1} OperateStartTime = {2} OperateEndTime = {3} GainRewardEndTime = {4}", new object[]
			{
				msg.OperationalActivityInfo.InstanceId,
				msg.OperationalActivityInfo.ActivityId,
				new DateTime(msg.OperationalActivityInfo.OperationStartTime),
				new DateTime(msg.OperationalActivityInfo.OperationEndTime),
				new DateTime(msg.OperationalActivityInfo.GainRewardEndTime)
			}));
		}

		// Token: 0x06007D73 RID: 32115 RVA: 0x002414B4 File Offset: 0x0023F6B4
		private void OnMessage(NewMarqueeNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageNewMarqueeNtf_hotfix != null)
			{
				this.m_OnMessageNewMarqueeNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnNewMarqueeNtf != null)
			{
				this.EventOnNewMarqueeNtf(Marquee.PBToMarquee(ntf.MarqueueInfo));
			}
		}

		// Token: 0x06007D74 RID: 32116 RVA: 0x00241548 File Offset: 0x0023F748
		private void OnMessage(RedeemInfoAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRedeemInfoAck_hotfix != null)
			{
				this.m_OnMessageRedeemInfoAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Concat(new object[]
			{
				"OnMessage RedeemInfoAck totalRecharge=",
				msg.TotalRecharge,
				" claimed=",
				msg.Claimed,
				" crystals.Count=",
				msg.Crystals.Count,
				" bundle.Count=",
				msg.Bundle.Counts.Count
			}));
			if (msg.Claimed)
			{
				return;
			}
			this.SetRedeemInfo(msg);
		}

		// Token: 0x06007D75 RID: 32117 RVA: 0x00241644 File Offset: 0x0023F844
		private void OnMessage(RedeemClaimAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRedeemClaimAck_hotfix != null)
			{
				this.m_OnMessageRedeemClaimAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.SetRedeemClaimed();
			if (this.EventOnActivityRedeemClaimAck != null)
			{
				this.EventOnActivityRedeemClaimAck(msg.Crystals);
				if (msg.Crystals > 0)
				{
					this.m_playerBasicInfoComponent.AddCrystal(msg.Crystals, GameFunctionType.GameFunctionType_None, null);
				}
			}
		}

		// Token: 0x06007D76 RID: 32118 RVA: 0x002416F8 File Offset: 0x0023F8F8
		private void OnMessage(FansRewardsFromPBTCBTInfoAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFansRewardsFromPBTCBTInfoAck_hotfix != null)
			{
				this.m_OnMessageFansRewardsFromPBTCBTInfoAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Format("OnMessage FansRewardsFromPBTCBTInfoAck HeadFrameId= {0}, SkinId = {1}, claimed = {2}", msg.HeadFrameId, msg.SkinId, msg.Claimed));
			if (msg.Claimed)
			{
				return;
			}
			this.m_operationalActivityComponent.AddFansRewardFromPBTCBTActivity(30, msg.StartDate, msg.EndDate, msg.Claimed);
		}

		// Token: 0x06007D77 RID: 32119 RVA: 0x002417C4 File Offset: 0x0023F9C4
		private void OnMessage(FansRewardsFromPBTCBTClaimAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFansRewardsFromPBTCBTClaimAck_hotfix != null)
			{
				this.m_OnMessageFansRewardsFromPBTCBTClaimAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				List<OperationalActivityBase> list = this.m_operationalActivityComponent.FindOperationalActivitiesByType(OperationalActivityType.OperationalActivityType_PBTCBTFansRewards);
				if (list.Count > 0)
				{
					FansRewardsFromPBTCBTActivity fansRewardsFromPBTCBTActivity = (FansRewardsFromPBTCBTActivity)list[0];
					fansRewardsFromPBTCBTActivity.claimed = true;
				}
				List<Goods> list2 = new List<Goods>();
				if (msg.SkinId > 0)
				{
					this.m_resourceComponent.AddSoldierSkin(msg.SkinId, GameFunctionType.GameFunctionType_None, null);
					Goods item = new Goods
					{
						GoodsType = GoodsType.GoodsType_SoldierSkin,
						Id = msg.SkinId,
						Count = 1
					};
					list2.Add(item);
				}
				if (msg.HeadFrameId > 0)
				{
					this.m_resourceComponent.AddHeadFrame(msg.HeadFrameId, GameFunctionType.GameFunctionType_None, null);
					Goods item2 = new Goods
					{
						GoodsType = GoodsType.GoodsType_HeadFrame,
						Id = msg.HeadFrameId,
						Count = 1
					};
					list2.Add(item2);
				}
				if (this.EventOnActivityFansRewardsFromPBTCBT != null)
				{
					this.EventOnActivityFansRewardsFromPBTCBT(msg.Result, list2);
				}
			}
		}

		// Token: 0x06007D78 RID: 32120 RVA: 0x00241930 File Offset: 0x0023FB30
		public List<Announcement> GetAllCurrentAnnouncements()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllCurrentAnnouncements_hotfix != null)
			{
				return (List<Announcement>)this.m_GetAllCurrentAnnouncements_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_operationalActivityComponent.GetValidAnnouncements();
		}

		// Token: 0x06007D79 RID: 32121 RVA: 0x002419A8 File Offset: 0x0023FBA8
		public void SetRedeemInfo(RedeemInfoAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetRedeemInfoRedeemInfoAck_hotfix != null)
			{
				this.m_SetRedeemInfoRedeemInfoAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_RedeemInfo = msg;
			this.m_operationalActivityComponent.AddRedeemActivity(17, msg);
		}

		// Token: 0x06007D7A RID: 32122 RVA: 0x00241A30 File Offset: 0x0023FC30
		public void SetRedeemClaimed()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetRedeemClaimed_hotfix != null)
			{
				this.m_SetRedeemClaimed_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.m_RedeemInfo != null)
			{
				this.m_RedeemInfo.Claimed = true;
			}
		}

		// Token: 0x06007D7B RID: 32123 RVA: 0x00241AA8 File Offset: 0x0023FCA8
		public RedeemInfoAck GetRedeemInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRedeemInfo_hotfix != null)
			{
				return (RedeemInfoAck)this.m_GetRedeemInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_RedeemInfo;
		}

		// Token: 0x06007D7C RID: 32124 RVA: 0x00241B1C File Offset: 0x0023FD1C
		public bool IsRedeemClaimed()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRedeemClaimed_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRedeemClaimed_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_RedeemInfo == null || this.m_RedeemInfo.Claimed;
		}

		// Token: 0x06007D7D RID: 32125 RVA: 0x00241BA0 File Offset: 0x0023FDA0
		public List<OperationalActivityBase> GetAllCurrentActivity()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllCurrentActivity_hotfix != null)
			{
				return (List<OperationalActivityBase>)this.m_GetAllCurrentActivity_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<OperationalActivityBase> allValidOperationalActivities = this.m_operationalActivityComponent.GetAllValidOperationalActivities();
			allValidOperationalActivities.RemoveAll((OperationalActivityBase t) => !this.CanShowActivity(t));
			return allValidOperationalActivities;
		}

		// Token: 0x06007D7E RID: 32126 RVA: 0x00241C2C File Offset: 0x0023FE2C
		private bool CanShowActivity(OperationalActivityBase activity)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanShowActivityOperationalActivityBase_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanShowActivityOperationalActivityBase_hotfix.call(new object[]
				{
					this,
					activity
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (activity.Config == null)
			{
				return false;
			}
			if (activity.Config.ActivityType != OperationalActivityType.OperationalActivityType_BuyItemGuide)
			{
				return true;
			}
			if (activity.Config.OperationalActivityParms.Count != 0)
			{
				int parm = activity.Config.OperationalActivityParms[0].Parm3;
				if (this.m_playerBasicInfoComponent.GetLevel() >= parm)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007D7F RID: 32127 RVA: 0x00241D0C File Offset: 0x0023FF0C
		public bool CanActivityGainReward(OperationalActivityBase operationalActivityBase, int rewardIndex)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanActivityGainRewardOperationalActivityBaseInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanActivityGainRewardOperationalActivityBaseInt32_hotfix.call(new object[]
				{
					this,
					operationalActivityBase,
					rewardIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_operationalActivityComponent.CanGainOperactionalActivityReward(operationalActivityBase, rewardIndex) == 0;
		}

		// Token: 0x06007D80 RID: 32128 RVA: 0x00241DA8 File Offset: 0x0023FFA8
		public int CanActivityGainRewardResult(OperationalActivityBase operationalActivityBase, int rewardIndex)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanActivityGainRewardResultOperationalActivityBaseInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanActivityGainRewardResultOperationalActivityBaseInt32_hotfix.call(new object[]
				{
					this,
					operationalActivityBase,
					rewardIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_operationalActivityComponent.CanGainOperactionalActivityReward(operationalActivityBase, rewardIndex);
		}

		// Token: 0x06007D81 RID: 32129 RVA: 0x00241E44 File Offset: 0x00240044
		public OperationalActivityBase FindOperationalActivityById(ulong operationalActivityInstanceId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_FindOperationalActivityByIdUInt64_hotfix != null)
			{
				return (OperationalActivityBase)this.m_FindOperationalActivityByIdUInt64_hotfix.call(new object[]
				{
					this,
					operationalActivityInstanceId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_operationalActivityComponent.FindOperationalActivityById(operationalActivityInstanceId);
		}

		// Token: 0x06007D82 RID: 32130 RVA: 0x00241ECC File Offset: 0x002400CC
		public int CanExchangeGoodsResult(OperationalActivityBase operationalActivityBase, int itemGroupIndex)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanExchangeGoodsResultOperationalActivityBaseInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanExchangeGoodsResultOperationalActivityBaseInt32_hotfix.call(new object[]
				{
					this,
					operationalActivityBase,
					itemGroupIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			LimitedTimeExchangeOperationActivity limitedTimeExchangeOperationalActivity = operationalActivityBase as LimitedTimeExchangeOperationActivity;
			return this.m_operationalActivityComponent.CanExchangeItemGroup(limitedTimeExchangeOperationalActivity, itemGroupIndex);
		}

		// Token: 0x06007D83 RID: 32131 RVA: 0x00241F6C File Offset: 0x0024016C
		public bool IsTabRedPointShow(OperationalActivityBase activity)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsTabRedPointShowOperationalActivityBase_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsTabRedPointShowOperationalActivityBase_hotfix.call(new object[]
				{
					this,
					activity
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (activity.ActivityType == OperationalActivityType.OperationalActivityType_PlayerLevelUp || activity.ActivityType == OperationalActivityType.OperationalActivityType_AccumulateDaysLogin || activity.ActivityType == OperationalActivityType.OperationalActivityType_SpecificDaysLogin || activity.ActivityType == OperationalActivityType.OperationalActivityType_AccumulateRecharge || activity.ActivityType == OperationalActivityType.OperationalActivityType_AccumulateConsumeCrystal)
			{
				if (activity.Config.OperationalActivityParms != null && activity.Config.OperationalActivityParms.Count > 0)
				{
					AwardOperationalActivityBase awardOperationalActivityBase = activity as AwardOperationalActivityBase;
					for (int i = 0; i < activity.Config.OperationalActivityParms.Count; i++)
					{
						if (this.CanActivityGainReward(activity, i) && !awardOperationalActivityBase.GainedRewardIndexs.Contains(i))
						{
							return true;
						}
					}
				}
			}
			else if (activity.ActivityType == OperationalActivityType.OperationalActivityType_Redeem)
			{
				if (!this.IsRedeemClaimed())
				{
					return true;
				}
			}
			else if (activity.ActivityType == OperationalActivityType.OperationalActivityType_BuyItemGuide && !this.m_isBuyGuideActivityViewed)
			{
				return true;
			}
			return false;
		}

		// Token: 0x06007D84 RID: 32132 RVA: 0x002420D4 File Offset: 0x002402D4
		public bool IsActivityRedPointShow()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsActivityRedPointShow_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsActivityRedPointShow_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			LocalAccountConfigData data = LocalAccountConfig.Instance.Data;
			this.ReadAnnounceActivityList.Clear();
			if (data.HaveReadAnnounceActivities != null)
			{
				foreach (string s in data.HaveReadAnnounceActivities)
				{
					this.ReadAnnounceActivityList.Add(ulong.Parse(s));
				}
			}
			DateTime serverTime = this.GetServerTime();
			foreach (Announcement announcement in this.GetAllCurrentAnnouncements())
			{
				if (announcement.ShowStartTime.Year == serverTime.Year && announcement.ShowStartTime.DayOfYear == serverTime.DayOfYear && !this.ReadAnnounceActivityList.Contains(announcement.InstanceId))
				{
					return true;
				}
			}
			foreach (OperationalActivityBase operationalActivityBase in this.GetAllCurrentActivity())
			{
				if (operationalActivityBase.OperationStartTime.Year == serverTime.Year && operationalActivityBase.OperationStartTime.DayOfYear == serverTime.DayOfYear && !this.ReadAnnounceActivityList.Contains(operationalActivityBase.InstanceId))
				{
					return true;
				}
				if (this.IsTabRedPointShow(operationalActivityBase))
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007D85 RID: 32133 RVA: 0x002422F0 File Offset: 0x002404F0
		public List<AdvertisementFlowLayout> GetAllAdvertisementFlowLayouts()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllAdvertisementFlowLayouts_hotfix != null)
			{
				return (List<AdvertisementFlowLayout>)this.m_GetAllAdvertisementFlowLayouts_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_operationalActivityComponent.GetAllAdvertisementFlowLayouts();
		}

		// Token: 0x06007D86 RID: 32134 RVA: 0x00242368 File Offset: 0x00240568
		public bool IsFirstTryToOpenActivityNoticeUI()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsFirstTryToOpenActivityNoticeUI_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsFirstTryToOpenActivityNoticeUI_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = (!PlayerPrefs.HasKey("OpenActivityNoticeUIFlag")) ? -1 : PlayerPrefs.GetInt("OpenActivityNoticeUIFlag");
			if (num != DateTime.Now.DayOfYear)
			{
				PlayerPrefs.SetInt("OpenActivityNoticeUIFlag", DateTime.Now.DayOfYear);
				PlayerPrefs.Save();
				return true;
			}
			return false;
		}

		// Token: 0x06007D87 RID: 32135 RVA: 0x00242428 File Offset: 0x00240628
		public bool HaveActivityNotice()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HaveActivityNotice_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HaveActivityNotice_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.GetAllAdvertisementFlowLayouts() != null && this.GetAllAdvertisementFlowLayouts().Count > 0;
		}

		// Token: 0x06007D88 RID: 32136 RVA: 0x002424B0 File Offset: 0x002406B0
		public void SetBuyGuideActivityViewed()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetBuyGuideActivityViewed_hotfix != null)
			{
				this.m_SetBuyGuideActivityViewed_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isBuyGuideActivityViewed = true;
		}

		// Token: 0x14000135 RID: 309
		// (add) Token: 0x06007D89 RID: 32137 RVA: 0x00242518 File Offset: 0x00240718
		// (remove) Token: 0x06007D8A RID: 32138 RVA: 0x002425B4 File Offset: 0x002407B4
		public event Action<int> EventOnActivityGainRewardAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnActivityGainRewardAckAction`1_hotfix != null)
				{
					this.m_add_EventOnActivityGainRewardAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnActivityGainRewardAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnActivityGainRewardAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnActivityGainRewardAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnActivityGainRewardAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnActivityGainRewardAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnActivityGainRewardAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000136 RID: 310
		// (add) Token: 0x06007D8B RID: 32139 RVA: 0x00242650 File Offset: 0x00240850
		// (remove) Token: 0x06007D8C RID: 32140 RVA: 0x002426EC File Offset: 0x002408EC
		public event Action<int> EventOnActivityExchangeItemGroupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnActivityExchangeItemGroupAckAction`1_hotfix != null)
				{
					this.m_add_EventOnActivityExchangeItemGroupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnActivityExchangeItemGroupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnActivityExchangeItemGroupAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnActivityExchangeItemGroupAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnActivityExchangeItemGroupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnActivityExchangeItemGroupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnActivityExchangeItemGroupAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000137 RID: 311
		// (add) Token: 0x06007D8D RID: 32141 RVA: 0x00242788 File Offset: 0x00240988
		// (remove) Token: 0x06007D8E RID: 32142 RVA: 0x00242824 File Offset: 0x00240A24
		public event Action<Marquee> EventOnNewMarqueeNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnNewMarqueeNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnNewMarqueeNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<Marquee> action = this.EventOnNewMarqueeNtf;
				Action<Marquee> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<Marquee>>(ref this.EventOnNewMarqueeNtf, (Action<Marquee>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnNewMarqueeNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnNewMarqueeNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<Marquee> action = this.EventOnNewMarqueeNtf;
				Action<Marquee> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<Marquee>>(ref this.EventOnNewMarqueeNtf, (Action<Marquee>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000138 RID: 312
		// (add) Token: 0x06007D8F RID: 32143 RVA: 0x002428C0 File Offset: 0x00240AC0
		// (remove) Token: 0x06007D90 RID: 32144 RVA: 0x0024295C File Offset: 0x00240B5C
		public event Action<int> EventOnActivityRedeemClaimAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnActivityRedeemClaimAckAction`1_hotfix != null)
				{
					this.m_add_EventOnActivityRedeemClaimAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnActivityRedeemClaimAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnActivityRedeemClaimAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnActivityRedeemClaimAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnActivityRedeemClaimAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnActivityRedeemClaimAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnActivityRedeemClaimAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000139 RID: 313
		// (add) Token: 0x06007D91 RID: 32145 RVA: 0x002429F8 File Offset: 0x00240BF8
		// (remove) Token: 0x06007D92 RID: 32146 RVA: 0x00242A94 File Offset: 0x00240C94
		public event Action<int, List<Goods>> EventOnActivityFansRewardsFromPBTCBT
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnActivityFansRewardsFromPBTCBTAction`2_hotfix != null)
				{
					this.m_add_EventOnActivityFansRewardsFromPBTCBTAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnActivityFansRewardsFromPBTCBT;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnActivityFansRewardsFromPBTCBT, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnActivityFansRewardsFromPBTCBTAction`2_hotfix != null)
				{
					this.m_remove_EventOnActivityFansRewardsFromPBTCBTAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnActivityFansRewardsFromPBTCBT;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnActivityFansRewardsFromPBTCBT, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007D93 RID: 32147 RVA: 0x00242B30 File Offset: 0x00240D30
		public bool SendOpenMemoryStoreReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendOpenMemoryStoreReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendOpenMemoryStoreReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			OpenMemoryStoreReq msg = new OpenMemoryStoreReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D94 RID: 32148 RVA: 0x00242BAC File Offset: 0x00240DAC
		public bool SendShareReq(int heroId, int archiveId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendShareReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendShareReqInt32Int32_hotfix.call(new object[]
				{
					this,
					heroId,
					archiveId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ShareReq
			{
				HeroId = heroId,
				ArchiveId = archiveId
			});
		}

		// Token: 0x06007D95 RID: 32149 RVA: 0x00242C54 File Offset: 0x00240E54
		public bool SendCheckOnlineReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendCheckOnlineReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendCheckOnlineReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			CheckOnlineReq msg = new CheckOnlineReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D96 RID: 32150 RVA: 0x00242CD0 File Offset: 0x00240ED0
		public override bool SendPlayerInfoInitReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendPlayerInfoInitReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendPlayerInfoInitReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isPlayerInfoInitEnd = false;
			PlayerInfoInitReq msg = this.BuildPlayerInfoInitReq(false);
			return this.SendMessage(msg);
		}

		// Token: 0x06007D97 RID: 32151 RVA: 0x00242D54 File Offset: 0x00240F54
		public override bool SendPlayerInfoReqOnReloginBySession(bool isOnlyCheck)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendPlayerInfoReqOnReloginBySessionBoolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendPlayerInfoReqOnReloginBySessionBoolean_hotfix.call(new object[]
				{
					this,
					isOnlyCheck
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isPlayerInfoInitEnd = false;
			PlayerInfoInitReq msg = this.BuildPlayerInfoInitReq(true);
			return this.SendMessage(msg);
		}

		// Token: 0x06007D98 RID: 32152 RVA: 0x00242DE8 File Offset: 0x00240FE8
		private PlayerInfoInitReq BuildPlayerInfoInitReq(bool sendDSVersion)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_BuildPlayerInfoInitReqBoolean_hotfix != null)
			{
				return (PlayerInfoInitReq)this.m_BuildPlayerInfoInitReqBoolean_hotfix.call(new object[]
				{
					this,
					sendDSVersion
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			PlayerInfoInitReq playerInfoInitReq = new PlayerInfoInitReq();
			if (sendDSVersion && !this.m_isDataError)
			{
				playerInfoInitReq.DSBasicInfoVersion = (uint)this.m_playerBasicInfoComponent.GetDSVersion();
				playerInfoInitReq.DSBagVersion = (uint)this.m_bagComponent.GetDSVersion();
				playerInfoInitReq.DSHeroVersion = (uint)this.m_heroComponent.GetDSVersion();
				playerInfoInitReq.DSLevelVersion = (uint)this.m_levelComponent.GetDSVersion();
				playerInfoInitReq.DSRiftVersion = (uint)this.m_riftComponent.GetDSVersion();
				playerInfoInitReq.DSBattleVersion = (uint)this.m_battleComponent.GetDSVersion();
				playerInfoInitReq.DSMailVersion = (uint)this.m_mailComponent.GetDSVersion();
				playerInfoInitReq.DSChatVersion = (uint)this.m_chatComponent.GetDSVersion();
				playerInfoInitReq.DSSelectCardVersion = (uint)this.m_selectCardComponent.GetDSVersion();
				playerInfoInitReq.DSRaffleVersion = (uint)this.m_raffleComponent.GetDSVersion();
				playerInfoInitReq.DSMissionVersion = (uint)this.m_missionComponent.GetDSVersion();
				playerInfoInitReq.DSThearchyTrialVersion = (uint)this.m_thearchyTrialComponent.GetDSVersion();
				playerInfoInitReq.DSAnikiGymVersion = (uint)this.m_anikiGymComponent.GetDSVersion();
				playerInfoInitReq.DSTrainingGroundVersion = (uint)this.m_trainingGroundComponent.GetDSVersion();
				playerInfoInitReq.DSOperationalActivityVersion = (uint)this.m_operationalActivityComponent.GetDSVersion();
				playerInfoInitReq.ClientAnnouncementVersion = (uint)this.m_operationalActivityComponent.GetAnnouncementDSVersion();
				playerInfoInitReq.DSSurveyVersion = (uint)this.m_surveyComponent.GetDSVersion();
				playerInfoInitReq.DSTreasureMapVersion = (uint)this.m_treasureMapComponent.GetDSVersion();
				playerInfoInitReq.DSMemoryCorridorVersion = (uint)this.m_memoryCorridorComponent.GetDSVersion();
				playerInfoInitReq.DSHeroDungeonVersion = (uint)this.m_heroDungeonComponent.GetDSVersion();
				playerInfoInitReq.DSHerotrainningVersion = (uint)this.m_heroTrainningComponent.GetDSVersion();
				playerInfoInitReq.DSHeroAssistantsVersion = (uint)this.m_heroAssistantsComponent.GetDSVersion();
				playerInfoInitReq.DSFriendVersion = (uint)this.m_friendComponent.GetDSVersion();
				playerInfoInitReq.DSHeroPhantomVersion = (uint)this.m_heroPhantomComponent.GetDSVersion();
				playerInfoInitReq.DSCooperateBattleVersion = (uint)this.m_cooperateBattleComponent.GetDSVersion();
				playerInfoInitReq.DSNoviceVersion = (uint)this.m_noviceComponent.GetDSVersion();
				playerInfoInitReq.DSRechargeStoreVersion = (uint)this.m_rechargeStoreComponent.GetDSVersion();
				playerInfoInitReq.DSResourceVersion = (uint)this.m_resourceComponent.GetDSVersion();
				playerInfoInitReq.DSRealTimePVPVersion = (uint)this.m_realTimePVPComponent.GetDSVersion();
				playerInfoInitReq.DSFixedStoreVersion = (uint)this.m_fixedStoreComponent.GetDSVersion();
				playerInfoInitReq.DSUnchartedScoreVersion = (uint)this.m_unchartedScoreComponent.GetDSVersion();
				playerInfoInitReq.DSClimbTowerVersion = (uint)this.m_climbTowerComponent.GetDSVersion();
				if (!this.m_arenaComponent.IsEmptyArenaPlayerInfo())
				{
					playerInfoInitReq.DSArenaVersion = (uint)this.m_arenaComponent.GetDSVersion();
				}
				if (!this.m_randomStoreComponent.IsStoreInfoEmpty())
				{
					playerInfoInitReq.DSRandomStoreVersion = (uint)this.m_randomStoreComponent.GetDSVersion();
				}
			}
			else
			{
				if (!this.m_arenaComponent.IsEmptyArenaPlayerInfo())
				{
					playerInfoInitReq.DSArenaVersion = 65535u;
				}
				if (!this.m_randomStoreComponent.IsStoreInfoEmpty())
				{
					playerInfoInitReq.DSRandomStoreVersion = 65535u;
				}
			}
			return playerInfoInitReq;
		}

		// Token: 0x06007D99 RID: 32153 RVA: 0x0024311C File Offset: 0x0024131C
		public bool SendCreateCharactorReq(string nickName)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendCreateCharactorReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendCreateCharactorReqString_hotfix.call(new object[]
				{
					this,
					nickName
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new CreateCharactorReq
			{
				CharactorNickName = nickName
			});
		}

		// Token: 0x06007D9A RID: 32154 RVA: 0x002431AC File Offset: 0x002413AC
		public bool SendBuyEnergyReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBuyEnergyReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBuyEnergyReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BuyEnergyReq msg = new BuyEnergyReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D9B RID: 32155 RVA: 0x00243228 File Offset: 0x00241428
		public bool SendBuyArenaTicketsReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBuyArenaTicketsReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBuyArenaTicketsReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ArenaTicketsBuyReq msg = new ArenaTicketsBuyReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007D9C RID: 32156 RVA: 0x002432A4 File Offset: 0x002414A4
		public bool SendHeadPortraitSetReq(int headPortraitId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeadPortraitSetReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeadPortraitSetReqInt32_hotfix.call(new object[]
				{
					this,
					headPortraitId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeadPortraitSetReq
			{
				HeadPortrait = headPortraitId
			});
		}

		// Token: 0x06007D9D RID: 32157 RVA: 0x00243334 File Offset: 0x00241534
		public bool SendHeadFrameSetReq(int headFrameId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeadFrameSetReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeadFrameSetReqInt32_hotfix.call(new object[]
				{
					this,
					headFrameId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeadFrameSetReq
			{
				HeadFrame = headFrameId
			});
		}

		// Token: 0x06007D9E RID: 32158 RVA: 0x002433C4 File Offset: 0x002415C4
		public bool SendHeadPortraitAndHeadFrameSetReq(int headPortraitId, int headFrameId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendHeadPortraitAndHeadFrameSetReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendHeadPortraitAndHeadFrameSetReqInt32Int32_hotfix.call(new object[]
				{
					this,
					headPortraitId,
					headFrameId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new HeadPortraitAndHeadFrameSetReq
			{
				HeadPortraitId = headPortraitId,
				HeadFrameId = headFrameId
			});
		}

		// Token: 0x06007D9F RID: 32159 RVA: 0x0024346C File Offset: 0x0024166C
		public bool SendChangePlayerNameReq(string name)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendChangePlayerNameReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendChangePlayerNameReqString_hotfix.call(new object[]
				{
					this,
					name
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new PlayerNameChangeReq
			{
				NewPlayerName = name
			});
		}

		// Token: 0x06007DA0 RID: 32160 RVA: 0x002434FC File Offset: 0x002416FC
		public bool SendExchangeGiftCDKeyReq(string key)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendExchangeGiftCDKeyReqString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendExchangeGiftCDKeyReqString_hotfix.call(new object[]
				{
					this,
					key
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ExchangeGiftCDKeyReq
			{
				GiftCDkey = key
			});
		}

		// Token: 0x06007DA1 RID: 32161 RVA: 0x0024358C File Offset: 0x0024178C
		public bool SendClientHeartBeatNtf()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendClientHeartBeatNtf_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendClientHeartBeatNtf_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ClientHeartBeatNtf msg = new ClientHeartBeatNtf();
			if (!this.SendMessage(msg))
			{
				if (this.EventOnSendClientHeartBeatNtfFail != null)
				{
					this.EventOnSendClientHeartBeatNtfFail();
				}
				return false;
			}
			return true;
		}

		// Token: 0x06007DA2 RID: 32162 RVA: 0x00243624 File Offset: 0x00241824
		public bool SendClientAppPauseNtf()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendClientAppPauseNtf_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendClientAppPauseNtf_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ClientAppPauseNtf());
		}

		// Token: 0x06007DA3 RID: 32163 RVA: 0x0024369C File Offset: 0x0024189C
		public bool SendClientAppResumeNtf()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendClientAppResumeNtf_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendClientAppResumeNtf_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ClientAppResumeNtf msg = new ClientAppResumeNtf();
			if (!this.SendMessage(msg))
			{
				if (this.EventOnSendClientAppResumeNtfFail != null)
				{
					this.EventOnSendClientAppResumeNtfFail();
				}
				return false;
			}
			return true;
		}

		// Token: 0x06007DA4 RID: 32164 RVA: 0x00243734 File Offset: 0x00241934
		public bool SendOpenGameRatingReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendOpenGameRatingReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendOpenGameRatingReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new GameRatingOpenReq());
		}

		// Token: 0x06007DA5 RID: 32165 RVA: 0x002437AC File Offset: 0x002419AC
		private void OnMessage(OpenMemoryStoreAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageOpenMemoryStoreAck_hotfix != null)
			{
				this.m_OnMessageOpenMemoryStoreAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_playerBasicInfoComponent.SetMemoryStoreOpenStatus(true);
			if (this.EventOpenMemoryStoreAck != null)
			{
				this.EventOpenMemoryStoreAck();
			}
		}

		// Token: 0x06007DA6 RID: 32166 RVA: 0x00243840 File Offset: 0x00241A40
		private void OnMessage(DailyFlushNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDailyFlushNtf_hotfix != null)
			{
				this.m_OnMessageDailyFlushNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_playerBasicInfoComponent.FlushPlayerAction();
		}

		// Token: 0x06007DA7 RID: 32167 RVA: 0x002438BC File Offset: 0x00241ABC
		private void OnMessage(ShareAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageShareAck_hotfix != null)
			{
				this.m_OnMessageShareAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_playerBasicInfoComponent.DoShare();
			if (this.EventOnShareAck != null)
			{
				this.EventOnShareAck();
			}
		}

		// Token: 0x06007DA8 RID: 32168 RVA: 0x00243950 File Offset: 0x00241B50
		private void OnMessage(HeadPortraitAndHeadFrameSetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageHeadPortraitAndHeadFrameSetAck_hotfix != null)
			{
				this.m_OnMessageHeadPortraitAndHeadFrameSetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_playerBasicInfoComponent.SetHeadPortraitAndHeadFrame(msg.HeadPortraitId, msg.HeadFrameId);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnHeadPortraitAndHeadFrameSetAck != null)
			{
				this.EventOnHeadPortraitAndHeadFrameSetAck(msg.Result);
			}
		}

		// Token: 0x06007DA9 RID: 32169 RVA: 0x00243A0C File Offset: 0x00241C0C
		private void OnMessage(RMBUpdateNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRMBUpdateNtf_hotfix != null)
			{
				this.m_OnMessageRMBUpdateNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			long rechargeRMB = this.m_playerBasicInfoComponent.GetRechargeRMB();
			int nums = (int)(msg.RMBNums - rechargeRMB);
			this.m_playerBasicInfoComponent.AddRechargeRMB(nums, new DateTime(msg.RechargeTime), false);
		}

		// Token: 0x06007DAA RID: 32170 RVA: 0x00243AAC File Offset: 0x00241CAC
		private void OnMessage(FlushConfigNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageFlushConfigNtf_hotfix != null)
			{
				this.m_OnMessageFlushConfigNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			Console.WriteLine("need flush config");
		}

		// Token: 0x06007DAB RID: 32171 RVA: 0x00243B28 File Offset: 0x00241D28
		private void OnMessage(ExchangeGiftCDKeyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageExchangeGiftCDKeyAck_hotfix != null)
			{
				this.m_OnMessageExchangeGiftCDKeyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnExchangeGiftCDKeyAck != null)
			{
				this.EventOnExchangeGiftCDKeyAck(msg.Result, msg.ResultDetail);
			}
		}

		// Token: 0x06007DAC RID: 32172 RVA: 0x00243BBC File Offset: 0x00241DBC
		private void OnMessage(PlayerInfoInitAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessagePlayerInfoInitAck_hotfix != null)
			{
				this.m_OnMessagePlayerInfoInitAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (!msg.NeedCreateCharactor)
			{
				this.InitPlayerInfo(msg);
			}
			if (this.EventOnPlayerInfoInitAck != null)
			{
				this.EventOnPlayerInfoInitAck(msg);
			}
		}

		// Token: 0x06007DAD RID: 32173 RVA: 0x00243C58 File Offset: 0x00241E58
		private void OnMessage(CreateCharactorAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageCreateCharactorAck_hotfix != null)
			{
				this.m_OnMessageCreateCharactorAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnCreateCharactorAck != null)
			{
				this.EventOnCreateCharactorAck(msg.Result);
			}
		}

		// Token: 0x06007DAE RID: 32174 RVA: 0x00243CE4 File Offset: 0x00241EE4
		private void OnMessage(DSPlayerBasicNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSPlayerBasicNtf_hotfix != null)
			{
				this.m_OnMessageDSPlayerBasicNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.InitPlayerBasic(msg);
		}

		// Token: 0x06007DAF RID: 32175 RVA: 0x00243D5C File Offset: 0x00241F5C
		private void OnMessage(PlayerInfoInitEndNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessagePlayerInfoInitEndNtf_hotfix != null)
			{
				this.m_OnMessagePlayerInfoInitEndNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isPlayerInfoInitEnd = true;
			this.m_needGetFriendSocialRelation = true;
			this.m_isNeedGetArenaPlayerInfo = true;
			this.m_isDataError = false;
			this.m_chatComponent.LoadChatHistoryData(this.GetServerTime());
			if (this.m_initOpenStates)
			{
				this.m_initOpenStates = false;
				this.InitCurrentScenarioInfo();
				this.InitOpenedRiftChapters();
			}
			if (this.EventOnPlayerInfoInitEnd != null)
			{
				this.EventOnPlayerInfoInitEnd();
			}
		}

		// Token: 0x06007DB0 RID: 32176 RVA: 0x00243E30 File Offset: 0x00242030
		private void OnMessage(ProChangedGoodsNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageProChangedGoodsNtf_hotfix != null)
			{
				this.m_OnMessageProChangedGoodsNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.SetChangedGoodsListStatus(msg.Changed);
		}

		// Token: 0x06007DB1 RID: 32177 RVA: 0x00243EAC File Offset: 0x002420AC
		private void OnMessage(BuyEnergyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBuyEnergyAck_hotfix != null)
			{
				this.m_OnMessageBuyEnergyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_playerBasicInfoComponent.BuyEnergy();
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnBuyEnergyAck != null)
			{
				this.EventOnBuyEnergyAck(msg.Result);
			}
			if (this.EventOnPlayerInfoChangeNtf != null)
			{
				this.EventOnPlayerInfoChangeNtf();
			}
		}

		// Token: 0x06007DB2 RID: 32178 RVA: 0x00243F74 File Offset: 0x00242174
		private void OnMessage(ArenaTicketsBuyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageArenaTicketsBuyAck_hotfix != null)
			{
				this.m_OnMessageArenaTicketsBuyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_playerBasicInfoComponent.BuyArenaTickets();
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnArenaTicketsBuyAck != null)
			{
				this.EventOnArenaTicketsBuyAck(msg.Result);
			}
		}

		// Token: 0x06007DB3 RID: 32179 RVA: 0x00244024 File Offset: 0x00242224
		private void OnMessage(PlayerNameChangeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessagePlayerNameChangeAck_hotfix != null)
			{
				this.m_OnMessagePlayerNameChangeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_playerBasicInfoComponent.ChangePlayerName(msg.NewPlayerName);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnPlayerNameChangeAck != null)
			{
				this.EventOnPlayerNameChangeAck(msg.Result);
			}
		}

		// Token: 0x06007DB4 RID: 32180 RVA: 0x002440DC File Offset: 0x002422DC
		private void OnMessage(GameRatingOpenAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGameRatingOpenAck_hotfix != null)
			{
				this.m_OnMessageGameRatingOpenAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_playerBasicInfoComponent.OpenGameRating();
			if (this.EventOnOpenGameRatingAck != null)
			{
				this.EventOnOpenGameRatingAck();
			}
		}

		// Token: 0x06007DB5 RID: 32181 RVA: 0x00244170 File Offset: 0x00242370
		public void OnMessage(CheckOnlineAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageCheckOnlineAck_hotfix != null)
			{
				this.m_OnMessageCheckOnlineAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnCheckOnlineAck != null)
			{
				this.EventOnCheckOnlineAck();
			}
		}

		// Token: 0x06007DB6 RID: 32182 RVA: 0x002441F8 File Offset: 0x002423F8
		private void SetChangedGoodsListStatus(List<ProGoods> goodsList)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetChangedGoodsListStatusList`1_hotfix != null)
			{
				this.m_SetChangedGoodsListStatusList`1_hotfix.call(new object[]
				{
					this,
					goodsList
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			foreach (ProGoods goods in goodsList)
			{
				this.SetChangedGoodsStatus(goods, ref flag2, ref flag, ref flag3);
			}
			if (flag && this.EventOnPlayerInfoChangeNtf != null)
			{
				this.EventOnPlayerInfoChangeNtf();
			}
			if (flag2 && this.EventOnBagItemChangeNtf != null)
			{
				this.EventOnBagItemChangeNtf();
			}
			if (flag3 && this.EventOnHeroChangeNtf != null)
			{
				this.EventOnHeroChangeNtf();
			}
		}

		// Token: 0x06007DB7 RID: 32183 RVA: 0x00244314 File Offset: 0x00242514
		private void SetChangedGoodsStatus(ProGoods goods, ref bool bagChange, ref bool playerInfoChange, ref bool heroChange)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetChangedGoodsStatusProGoodsBoolean_Boolean_Boolean__hotfix != null)
			{
				LuaDelegation.Lua_BlackJack_ProjectL_PlayerContext_ProjectLPlayerContext_SetChangedGoodsStatus_ProGoods_Boolean_Boolean_Boolean(this, this.m_SetChangedGoodsStatusProGoodsBoolean_Boolean_Boolean__hotfix, goods, ref bagChange, ref playerInfoChange, ref heroChange);
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GoodsType goodsType = (GoodsType)goods.GoodsType;
			if (BagItemBase.IsBagItem(goodsType))
			{
				this.m_bagComponent.ChangeBagItem(goods);
				bagChange = true;
			}
			else if (goodsType == GoodsType.GoodsType_Gold)
			{
				this.m_playerBasicInfoComponent.GetPlayerBasicInfo().AddGold(goods.Nums - this.GetGold());
				playerInfoChange = true;
			}
			else if (goodsType == GoodsType.GoodsType_Crystal)
			{
				this.m_playerBasicInfoComponent.GetPlayerBasicInfo().AddCrystal(goods.Nums - this.GetCrystal());
				playerInfoChange = true;
			}
			else if (goodsType == GoodsType.GoodsType_Energy)
			{
				this.m_playerBasicInfoComponent.GetPlayerBasicInfo().SetEnergy(goods.Nums);
				playerInfoChange = true;
			}
			else if (goodsType == GoodsType.GoodsType_ArenaTicket)
			{
				this.m_playerBasicInfoComponent.AddArenaTickets(goods.Nums - this.GetArenaTicketCount(), false, GameFunctionType.GameFunctionType_None, null);
				playerInfoChange = true;
			}
			else if (goodsType == GoodsType.GoodsType_Hero)
			{
				if (goods.Nums > 0)
				{
					this.m_heroComponent.AddHero(goods.Id);
				}
				else
				{
					this.m_heroComponent.RemoveHero(goods.Id);
				}
				heroChange = true;
			}
			else if (goodsType == GoodsType.GoodsType_PlayerExp)
			{
				this.m_playerBasicInfoComponent.AddPlayerExp(goods.Nums);
				if (goods.Nums != 0)
				{
					playerInfoChange = true;
				}
			}
			else if (goodsType == GoodsType.GoodsType_ArenaHonour)
			{
				this.m_playerBasicInfoComponent.AddArenaHonour(goods.Nums - this.GetArenaHonour(), GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType == GoodsType.GoodsType_FriendshipPoints)
			{
				this.m_playerBasicInfoComponent.AddFriendshipPoints(goods.Nums - this.GetFriendShipPoints(), GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType == GoodsType.GoodsType_HeadFrame)
			{
				this.m_resourceComponent.AddHeadFrame(goods.Id, GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType == GoodsType.GoodsType_SkinTicket)
			{
				this.m_playerBasicInfoComponent.AddSkinTickets(goods.Nums - this.GetSkinTicket(), GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType == GoodsType.GoodsType_HeroSkin)
			{
				this.m_resourceComponent.AddHeroSkin(goods.Id, GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType == GoodsType.GoodsType_SoldierSkin)
			{
				this.m_resourceComponent.AddSoldierSkin(goods.Id, GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType == GoodsType.GoodsType_MemoryEssence)
			{
				this.m_playerBasicInfoComponent.AddMemoryEssence(goods.Nums - this.GetMemoryEssence(), GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType == GoodsType.GoodsType_BrillianceMithralStone)
			{
				this.m_playerBasicInfoComponent.AddBrillianceMithralStone(goods.Nums - this.GetBrillianceMithralStone());
			}
			else if (goodsType == GoodsType.GoodsType_MithralStone)
			{
				this.m_playerBasicInfoComponent.AddMithralStone(goods.Nums - this.GetMithralStone());
			}
			else if (goodsType == GoodsType.GoodsType_GuildMedal)
			{
				this.m_playerBasicInfoComponent.AddGuildMedal(goods.Nums - this.GetGuildMedal(), GameFunctionType.GameFunctionType_None, null);
			}
			else if (goodsType != GoodsType.GoodsType_MonthCard)
			{
				global::Debug.LogWarning("ProChangedGoodsNtf " + goodsType + " not handled");
			}
		}

		// Token: 0x06007DB8 RID: 32184 RVA: 0x00244648 File Offset: 0x00242848
		public BagItemBase SetBagItemPropertyChanges(ProGoods bagItem)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetBagItemPropertyChangesProGoods_hotfix != null)
			{
				return (BagItemBase)this.m_SetBagItemPropertyChangesProGoods_hotfix.call(new object[]
				{
					this,
					bagItem
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GoodsType goodsType = (GoodsType)bagItem.GoodsType;
			if (goodsType != GoodsType.GoodsType_Equipment)
			{
				global::Debug.LogWarning("SetBagItemPropertyChanges " + goodsType + " not handled");
				return null;
			}
			ProEquipment equipment = bagItem.Equipment;
			ulong instanceId = bagItem.InstanceId;
			EquipmentBagItem equipmentBagItem = this.m_bagComponent.FindBagItemByInstanceId(instanceId) as EquipmentBagItem;
			equipmentBagItem.ResonanceId = equipment.ResonanceId;
			equipmentBagItem.EnchantProperties.Clear();
			foreach (ProCommonBattleProperty pbProperty in equipment.EnchantProperties)
			{
				equipmentBagItem.EnchantProperties.Add(CommonBattleProperty.PBCommonBattlePropertyToCommonBattleProperty(pbProperty));
			}
			this.m_bagComponent.SetBagItemDirty(equipmentBagItem);
			Hero wearedEquipmentHero = this.m_heroComponent.GetWearedEquipmentHero(instanceId);
			if (wearedEquipmentHero != null)
			{
				this.m_heroComponent.OnHeroBattlePowerChange(wearedEquipmentHero);
			}
			return equipmentBagItem;
		}

		// Token: 0x06007DB9 RID: 32185 RVA: 0x002447B8 File Offset: 0x002429B8
		public bool IsMemoryStoreOpen()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsMemoryStoreOpen_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsMemoryStoreOpen_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.IsMemoryStoreOpen();
		}

		// Token: 0x06007DBA RID: 32186 RVA: 0x00244830 File Offset: 0x00242A30
		public DateTime GetEnergyReachMaxTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetEnergyReachMaxTime_hotfix != null)
			{
				return (DateTime)this.m_GetEnergyReachMaxTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetEnergyReachMaxTime();
		}

		// Token: 0x06007DBB RID: 32187 RVA: 0x002448A8 File Offset: 0x00242AA8
		public DateTime GetArenaTicketNextGivenTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetArenaTicketNextGivenTime_hotfix != null)
			{
				return (DateTime)this.m_GetArenaTicketNextGivenTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_arenaComponent.GetArenaTicketNextGivenTime();
		}

		// Token: 0x06007DBC RID: 32188 RVA: 0x00244920 File Offset: 0x00242B20
		public DateTime GetBlackMarketNextFlushTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBlackMarketNextFlushTime_hotfix != null)
			{
				return (DateTime)this.m_GetBlackMarketNextFlushTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_randomStoreComponent.GetStoreNextFlushTime(1);
		}

		// Token: 0x06007DBD RID: 32189 RVA: 0x00244998 File Offset: 0x00242B98
		private void OnMessage(UpdateServerTimeNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUpdateServerTimeNtf_hotfix != null)
			{
				this.m_OnMessageUpdateServerTimeNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.UpdateServerTime(msg.ServerTime);
		}

		// Token: 0x06007DBE RID: 32190 RVA: 0x00244A14 File Offset: 0x00242C14
		private void InitPlayerInfo(PlayerInfoInitAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_InitPlayerInfoPlayerInfoInitAck_hotfix != null)
			{
				this.m_InitPlayerInfoPlayerInfoInitAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_playerBasicInfoComponent.DeSerialize(msg);
			this.UpdateServerTime(msg.ServerCurrTime);
		}

		// Token: 0x06007DBF RID: 32191 RVA: 0x00244A9C File Offset: 0x00242C9C
		private void UpdateServerTime(long serverTimeTicks)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_UpdateServerTimeInt64_hotfix != null)
			{
				this.m_UpdateServerTimeInt64_hotfix.call(new object[]
				{
					this,
					serverTimeTicks
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			DateTime dateTime = new DateTime(serverTimeTicks);
			this.m_diffToServerTime = dateTime - DateTime.Now;
			this.m_serverTimeSynced = new DateTime?(dateTime);
			this.m_realtimeSinceStartupAtServerTimeSynced = Time.realtimeSinceStartup;
		}

		// Token: 0x06007DC0 RID: 32192 RVA: 0x00244B3C File Offset: 0x00242D3C
		private void InitPlayerBasic(DSPlayerBasicNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_InitPlayerBasicDSPlayerBasicNtf_hotfix != null)
			{
				this.m_InitPlayerBasicDSPlayerBasicNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_playerBasicInfoComponent.DeSerialize(msg);
		}

		// Token: 0x06007DC1 RID: 32193 RVA: 0x00244BB8 File Offset: 0x00242DB8
		public int GetGold()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGold_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGold_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().Gold;
		}

		// Token: 0x06007DC2 RID: 32194 RVA: 0x00244C34 File Offset: 0x00242E34
		public long GetRechargeRMB()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRechargeRMB_hotfix != null)
			{
				return Convert.ToInt64(this.m_GetRechargeRMB_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetRechargeRMB();
		}

		// Token: 0x06007DC3 RID: 32195 RVA: 0x00244CAC File Offset: 0x00242EAC
		public int GetCrystal()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCrystal_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetCrystal_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().Crystal;
		}

		// Token: 0x06007DC4 RID: 32196 RVA: 0x00244D28 File Offset: 0x00242F28
		public int GetGuildMedal()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetGuildMedal_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetGuildMedal_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().GuildMedal;
		}

		// Token: 0x06007DC5 RID: 32197 RVA: 0x00244DA4 File Offset: 0x00242FA4
		public int GetMithralStone()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMithralStone_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetMithralStone_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().MithralStone;
		}

		// Token: 0x06007DC6 RID: 32198 RVA: 0x00244E20 File Offset: 0x00243020
		public int GetBrillianceMithralStone()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBrillianceMithralStone_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBrillianceMithralStone_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().BrillianceMithralStone;
		}

		// Token: 0x06007DC7 RID: 32199 RVA: 0x00244E9C File Offset: 0x0024309C
		public int GetEnergy()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetEnergy_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetEnergy_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().Energy;
		}

		// Token: 0x06007DC8 RID: 32200 RVA: 0x00244F18 File Offset: 0x00243118
		public int GetEnergyMax()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetEnergyMax_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetEnergyMax_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_configDataLoader.ConfigableConstId_EnergyMax;
		}

		// Token: 0x06007DC9 RID: 32201 RVA: 0x00244F90 File Offset: 0x00243190
		public DateTime GetCreateTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCreateTime_hotfix != null)
			{
				return (DateTime)this.m_GetCreateTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetCreateTime();
		}

		// Token: 0x06007DCA RID: 32202 RVA: 0x00245008 File Offset: 0x00243208
		public DateTime GetCreateTimeUtc()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCreateTimeUtc_hotfix != null)
			{
				return (DateTime)this.m_GetCreateTimeUtc_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetCreateTimeUtc();
		}

		// Token: 0x06007DCB RID: 32203 RVA: 0x00245080 File Offset: 0x00243280
		public int CanBuyEnergy()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanBuyEnergy_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanBuyEnergy_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.CanBuyEnergy();
		}

		// Token: 0x06007DCC RID: 32204 RVA: 0x002450F8 File Offset: 0x002432F8
		public int GetBuyEnergyNums()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBuyEnergyNums_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBuyEnergyNums_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().BuyEngryNums;
		}

		// Token: 0x06007DCD RID: 32205 RVA: 0x00245174 File Offset: 0x00243374
		public DateTime GetEnergyFlushTime()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetEnergyFlushTime_hotfix != null)
			{
				return (DateTime)this.m_GetEnergyFlushTime_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().EnergyFlushTime;
		}

		// Token: 0x06007DCE RID: 32206 RVA: 0x002451F0 File Offset: 0x002433F0
		public int CanBuyArenaTickets()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanBuyArenaTickets_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanBuyArenaTickets_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.CanBuyArenaTickets();
		}

		// Token: 0x06007DCF RID: 32207 RVA: 0x00245268 File Offset: 0x00243468
		public int GetBuyArenaTicketsNums()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetBuyArenaTicketsNums_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetBuyArenaTicketsNums_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().BuyArenaTicketsNums;
		}

		// Token: 0x06007DD0 RID: 32208 RVA: 0x002452E4 File Offset: 0x002434E4
		public int GetPlayerLevel()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerLevel_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerLevel_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().PlayerLevel;
		}

		// Token: 0x06007DD1 RID: 32209 RVA: 0x00245360 File Offset: 0x00243560
		public int GetPlayerExp()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerExp_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerExp_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().Exp;
		}

		// Token: 0x06007DD2 RID: 32210 RVA: 0x002453DC File Offset: 0x002435DC
		public int GetPlayerNextLevelExp()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerNextLevelExp_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerNextLevelExp_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetNextLevelExpFromConfig();
		}

		// Token: 0x06007DD3 RID: 32211 RVA: 0x00245454 File Offset: 0x00243654
		public int GetPlayerVip()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerVip_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerVip_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.m_vipLevel;
		}

		// Token: 0x06007DD4 RID: 32212 RVA: 0x002454CC File Offset: 0x002436CC
		public int GetPlayerHeadIcon()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerHeadIcon_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerHeadIcon_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = this.m_playerBasicInfoComponent.GetHeadIcon();
			if (num == 0)
			{
				num = this.m_playerBasicInfoComponent.GetDefaultHeadIcon();
			}
			return num;
		}

		// Token: 0x06007DD5 RID: 32213 RVA: 0x00245558 File Offset: 0x00243758
		public int GetPlayerHeadPortrait()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerHeadPortrait_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerHeadPortrait_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return HeadIconTools.GetHeadPortrait(this.GetPlayerHeadIcon());
		}

		// Token: 0x06007DD6 RID: 32214 RVA: 0x002455D0 File Offset: 0x002437D0
		public int GetPlayerHeadFrame()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerHeadFrame_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerHeadFrame_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return HeadIconTools.GetHeadFrame(this.GetPlayerHeadIcon());
		}

		// Token: 0x06007DD7 RID: 32215 RVA: 0x00245648 File Offset: 0x00243848
		public int SetUserGuide(List<int> completeStepIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetUserGuideList`1_hotfix != null)
			{
				return Convert.ToInt32(this.m_SetUserGuideList`1_hotfix.call(new object[]
				{
					this,
					completeStepIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.SetUserGuide(completeStepIds);
		}

		// Token: 0x06007DD8 RID: 32216 RVA: 0x002456D0 File Offset: 0x002438D0
		public string GetPlayerName()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerName_hotfix != null)
			{
				return (string)this.m_GetPlayerName_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().PlayerName;
		}

		// Token: 0x06007DD9 RID: 32217 RVA: 0x0024574C File Offset: 0x0024394C
		public int CheckPlayerName(string name)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckPlayerNameString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CheckPlayerNameString_hotfix.call(new object[]
				{
					this,
					name
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.CheckPlayerName(name);
		}

		// Token: 0x06007DDA RID: 32218 RVA: 0x002457D4 File Offset: 0x002439D4
		public int CanChangePlayerName(string name)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanChangePlayerNameString_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanChangePlayerNameString_hotfix.call(new object[]
				{
					this,
					name
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.CanChangePlayerName(name);
		}

		// Token: 0x06007DDB RID: 32219 RVA: 0x0024585C File Offset: 0x00243A5C
		public string GetUserId()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUserId_hotfix != null)
			{
				return (string)this.m_GetUserId_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().UserId;
		}

		// Token: 0x06007DDC RID: 32220 RVA: 0x002458D8 File Offset: 0x00243AD8
		public bool IsMe(string userId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsMeString_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsMeString_hotfix.call(new object[]
				{
					this,
					userId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.IsMe(userId);
		}

		// Token: 0x06007DDD RID: 32221 RVA: 0x00245960 File Offset: 0x00243B60
		public void SetNeedBattleReportLog(bool isNeed)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetNeedBattleReportLogBoolean_hotfix != null)
			{
				this.m_SetNeedBattleReportLogBoolean_hotfix.call(new object[]
				{
					this,
					isNeed
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.IsNeedBattleReportLog = isNeed;
		}

		// Token: 0x06007DDE RID: 32222 RVA: 0x002459D8 File Offset: 0x00243BD8
		public bool HasHeadFrameId(int headFameId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasHeadFrameIdInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasHeadFrameIdInt32_hotfix.call(new object[]
				{
					this,
					headFameId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_resourceComponent.HasHeadFrameId(headFameId);
		}

		// Token: 0x06007DDF RID: 32223 RVA: 0x00245A60 File Offset: 0x00243C60
		public string GetHeadFrameSource(int headFrameId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetHeadFrameSourceInt32_hotfix != null)
			{
				return (string)this.m_GetHeadFrameSourceInt32_hotfix.call(new object[]
				{
					this,
					headFrameId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataHeadFrameInfo configDataHeadFrameInfo = this.m_configDataLoader.GetConfigDataHeadFrameInfo(headFrameId);
			if (configDataHeadFrameInfo == null)
			{
				return string.Empty;
			}
			return configDataHeadFrameInfo.Source;
		}

		// Token: 0x06007DE0 RID: 32224 RVA: 0x00245AFC File Offset: 0x00243CFC
		public List<MonthCard> GetAllValidMonthCards()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetAllValidMonthCards_hotfix != null)
			{
				return (List<MonthCard>)this.m_GetAllValidMonthCards_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_resourceComponent.GetAllValidMonthCards();
		}

		// Token: 0x06007DE1 RID: 32225 RVA: 0x00245B74 File Offset: 0x00243D74
		public bool HasValidMonthCards()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasValidMonthCards_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasValidMonthCards_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.GetAllValidMonthCards() != null && this.GetAllValidMonthCards().Count > 0;
		}

		// Token: 0x17001BF0 RID: 7152
		// (get) Token: 0x06007DE2 RID: 32226 RVA: 0x00245BFC File Offset: 0x00243DFC
		// (set) Token: 0x06007DE3 RID: 32227 RVA: 0x00245C70 File Offset: 0x00243E70
		public bool IsNeedBattleReportLog
		{
			[CompilerGenerated]
			get
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_get_IsNeedBattleReportLog_hotfix != null)
				{
					return Convert.ToBoolean(this.m_get_IsNeedBattleReportLog_hotfix.call(new object[]
					{
						this
					}));
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				return this.<IsNeedBattleReportLog>k__BackingField;
			}
			[CompilerGenerated]
			private set
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_set_IsNeedBattleReportLogBoolean_hotfix != null)
				{
					this.m_set_IsNeedBattleReportLogBoolean_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				this.<IsNeedBattleReportLog>k__BackingField = value;
			}
		}

		// Token: 0x06007DE4 RID: 32228 RVA: 0x00245CE8 File Offset: 0x00243EE8
		public void ResetPushNotification()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_ResetPushNotification_hotfix != null)
			{
				this.m_ResetPushNotification_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnResetPushNotification != null)
			{
				this.EventOnResetPushNotification();
			}
		}

		// Token: 0x1400013A RID: 314
		// (add) Token: 0x06007DE5 RID: 32229 RVA: 0x00245D60 File Offset: 0x00243F60
		// (remove) Token: 0x06007DE6 RID: 32230 RVA: 0x00245DFC File Offset: 0x00243FFC
		public event Action<int, int> EventOnExchangeGiftCDKeyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnExchangeGiftCDKeyAckAction`2_hotfix != null)
				{
					this.m_add_EventOnExchangeGiftCDKeyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnExchangeGiftCDKeyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnExchangeGiftCDKeyAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnExchangeGiftCDKeyAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnExchangeGiftCDKeyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnExchangeGiftCDKeyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnExchangeGiftCDKeyAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400013B RID: 315
		// (add) Token: 0x06007DE7 RID: 32231 RVA: 0x00245E98 File Offset: 0x00244098
		// (remove) Token: 0x06007DE8 RID: 32232 RVA: 0x00245F34 File Offset: 0x00244134
		public override event Action<object> EventOnPlayerInfoInitAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnPlayerInfoInitAckAction`1_hotfix != null)
				{
					this.m_add_EventOnPlayerInfoInitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<object> action = this.EventOnPlayerInfoInitAck;
				Action<object> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<object>>(ref this.EventOnPlayerInfoInitAck, (Action<object>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnPlayerInfoInitAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnPlayerInfoInitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<object> action = this.EventOnPlayerInfoInitAck;
				Action<object> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<object>>(ref this.EventOnPlayerInfoInitAck, (Action<object>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400013C RID: 316
		// (add) Token: 0x06007DE9 RID: 32233 RVA: 0x00245FD0 File Offset: 0x002441D0
		// (remove) Token: 0x06007DEA RID: 32234 RVA: 0x0024606C File Offset: 0x0024426C
		public override event Action EventOnPlayerInfoInitEnd
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnPlayerInfoInitEndAction_hotfix != null)
				{
					this.m_add_EventOnPlayerInfoInitEndAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnPlayerInfoInitEnd;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnPlayerInfoInitEnd, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnPlayerInfoInitEndAction_hotfix != null)
				{
					this.m_remove_EventOnPlayerInfoInitEndAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnPlayerInfoInitEnd;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnPlayerInfoInitEnd, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400013D RID: 317
		// (add) Token: 0x06007DEB RID: 32235 RVA: 0x00246108 File Offset: 0x00244308
		// (remove) Token: 0x06007DEC RID: 32236 RVA: 0x002461A4 File Offset: 0x002443A4
		public event Action<int> EventOnCreateCharactorAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnCreateCharactorAckAction`1_hotfix != null)
				{
					this.m_add_EventOnCreateCharactorAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnCreateCharactorAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnCreateCharactorAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnCreateCharactorAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnCreateCharactorAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnCreateCharactorAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnCreateCharactorAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400013E RID: 318
		// (add) Token: 0x06007DED RID: 32237 RVA: 0x00246240 File Offset: 0x00244440
		// (remove) Token: 0x06007DEE RID: 32238 RVA: 0x002462DC File Offset: 0x002444DC
		public event Action<int> EventOnBuyEnergyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnBuyEnergyAckAction`1_hotfix != null)
				{
					this.m_add_EventOnBuyEnergyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBuyEnergyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBuyEnergyAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnBuyEnergyAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnBuyEnergyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnBuyEnergyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnBuyEnergyAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400013F RID: 319
		// (add) Token: 0x06007DEF RID: 32239 RVA: 0x00246378 File Offset: 0x00244578
		// (remove) Token: 0x06007DF0 RID: 32240 RVA: 0x00246414 File Offset: 0x00244614
		public event Action<int> EventOnHeadPortraitAndHeadFrameSetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnHeadPortraitAndHeadFrameSetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnHeadPortraitAndHeadFrameSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeadPortraitAndHeadFrameSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeadPortraitAndHeadFrameSetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnHeadPortraitAndHeadFrameSetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnHeadPortraitAndHeadFrameSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnHeadPortraitAndHeadFrameSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnHeadPortraitAndHeadFrameSetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000140 RID: 320
		// (add) Token: 0x06007DF1 RID: 32241 RVA: 0x002464B0 File Offset: 0x002446B0
		// (remove) Token: 0x06007DF2 RID: 32242 RVA: 0x0024654C File Offset: 0x0024474C
		public event Action<int> EventOnPlayerNameChangeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnPlayerNameChangeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnPlayerNameChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnPlayerNameChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnPlayerNameChangeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnPlayerNameChangeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnPlayerNameChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnPlayerNameChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnPlayerNameChangeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000141 RID: 321
		// (add) Token: 0x06007DF3 RID: 32243 RVA: 0x002465E8 File Offset: 0x002447E8
		// (remove) Token: 0x06007DF4 RID: 32244 RVA: 0x00246684 File Offset: 0x00244884
		public event Action EventOnPlayerInfoChangeNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnPlayerInfoChangeNtfAction_hotfix != null)
				{
					this.m_add_EventOnPlayerInfoChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnPlayerInfoChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnPlayerInfoChangeNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnPlayerInfoChangeNtfAction_hotfix != null)
				{
					this.m_remove_EventOnPlayerInfoChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnPlayerInfoChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnPlayerInfoChangeNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000142 RID: 322
		// (add) Token: 0x06007DF5 RID: 32245 RVA: 0x00246720 File Offset: 0x00244920
		// (remove) Token: 0x06007DF6 RID: 32246 RVA: 0x002467BC File Offset: 0x002449BC
		public event Action<int> EventOnArenaTicketsBuyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnArenaTicketsBuyAckAction`1_hotfix != null)
				{
					this.m_add_EventOnArenaTicketsBuyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaTicketsBuyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaTicketsBuyAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnArenaTicketsBuyAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnArenaTicketsBuyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnArenaTicketsBuyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnArenaTicketsBuyAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000143 RID: 323
		// (add) Token: 0x06007DF7 RID: 32247 RVA: 0x00246858 File Offset: 0x00244A58
		// (remove) Token: 0x06007DF8 RID: 32248 RVA: 0x002468F4 File Offset: 0x00244AF4
		public event Action EventOnOpenGameRatingAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnOpenGameRatingAckAction_hotfix != null)
				{
					this.m_add_EventOnOpenGameRatingAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnOpenGameRatingAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnOpenGameRatingAck, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnOpenGameRatingAckAction_hotfix != null)
				{
					this.m_remove_EventOnOpenGameRatingAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnOpenGameRatingAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnOpenGameRatingAck, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000144 RID: 324
		// (add) Token: 0x06007DF9 RID: 32249 RVA: 0x00246990 File Offset: 0x00244B90
		// (remove) Token: 0x06007DFA RID: 32250 RVA: 0x00246A2C File Offset: 0x00244C2C
		public event Action EventOnShareAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnShareAckAction_hotfix != null)
				{
					this.m_add_EventOnShareAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnShareAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnShareAck, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnShareAckAction_hotfix != null)
				{
					this.m_remove_EventOnShareAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnShareAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnShareAck, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000145 RID: 325
		// (add) Token: 0x06007DFB RID: 32251 RVA: 0x00246AC8 File Offset: 0x00244CC8
		// (remove) Token: 0x06007DFC RID: 32252 RVA: 0x00246B64 File Offset: 0x00244D64
		public event Action EventOnCheckOnlineAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnCheckOnlineAckAction_hotfix != null)
				{
					this.m_add_EventOnCheckOnlineAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnCheckOnlineAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnCheckOnlineAck, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnCheckOnlineAckAction_hotfix != null)
				{
					this.m_remove_EventOnCheckOnlineAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnCheckOnlineAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnCheckOnlineAck, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000146 RID: 326
		// (add) Token: 0x06007DFD RID: 32253 RVA: 0x00246C00 File Offset: 0x00244E00
		// (remove) Token: 0x06007DFE RID: 32254 RVA: 0x00246C9C File Offset: 0x00244E9C
		public event Action EventOnSendClientHeartBeatNtfFail
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnSendClientHeartBeatNtfFailAction_hotfix != null)
				{
					this.m_add_EventOnSendClientHeartBeatNtfFailAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnSendClientHeartBeatNtfFail;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnSendClientHeartBeatNtfFail, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnSendClientHeartBeatNtfFailAction_hotfix != null)
				{
					this.m_remove_EventOnSendClientHeartBeatNtfFailAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnSendClientHeartBeatNtfFail;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnSendClientHeartBeatNtfFail, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000147 RID: 327
		// (add) Token: 0x06007DFF RID: 32255 RVA: 0x00246D38 File Offset: 0x00244F38
		// (remove) Token: 0x06007E00 RID: 32256 RVA: 0x00246DD4 File Offset: 0x00244FD4
		public event Action EventOnSendClientAppResumeNtfFail
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnSendClientAppResumeNtfFailAction_hotfix != null)
				{
					this.m_add_EventOnSendClientAppResumeNtfFailAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnSendClientAppResumeNtfFail;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnSendClientAppResumeNtfFail, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnSendClientAppResumeNtfFailAction_hotfix != null)
				{
					this.m_remove_EventOnSendClientAppResumeNtfFailAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnSendClientAppResumeNtfFail;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnSendClientAppResumeNtfFail, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000148 RID: 328
		// (add) Token: 0x06007E01 RID: 32257 RVA: 0x00246E70 File Offset: 0x00245070
		// (remove) Token: 0x06007E02 RID: 32258 RVA: 0x00246F0C File Offset: 0x0024510C
		public event Action EventOpenMemoryStoreAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOpenMemoryStoreAckAction_hotfix != null)
				{
					this.m_add_EventOpenMemoryStoreAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOpenMemoryStoreAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOpenMemoryStoreAck, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOpenMemoryStoreAckAction_hotfix != null)
				{
					this.m_remove_EventOpenMemoryStoreAckAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOpenMemoryStoreAck;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOpenMemoryStoreAck, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000149 RID: 329
		// (add) Token: 0x06007E03 RID: 32259 RVA: 0x00246FA8 File Offset: 0x002451A8
		// (remove) Token: 0x06007E04 RID: 32260 RVA: 0x00247044 File Offset: 0x00245244
		public event Action EventOnResetPushNotification
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnResetPushNotificationAction_hotfix != null)
				{
					this.m_add_EventOnResetPushNotificationAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnResetPushNotification;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnResetPushNotification, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnResetPushNotificationAction_hotfix != null)
				{
					this.m_remove_EventOnResetPushNotificationAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnResetPushNotification;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnResetPushNotification, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007E05 RID: 32261 RVA: 0x002470E0 File Offset: 0x002452E0
		public bool SendRaffleDrawReq(int cardPoolId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRaffleDrawReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRaffleDrawReqInt32_hotfix.call(new object[]
				{
					this,
					cardPoolId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RaffleDrawReq msg = new RaffleDrawReq
			{
				PoolId = cardPoolId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007E06 RID: 32262 RVA: 0x00247174 File Offset: 0x00245374
		private void OnMessage(DSRaffleNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSRaffleNtf_hotfix != null)
			{
				this.m_OnMessageDSRaffleNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_raffleComponent.DeSerialize(msg);
		}

		// Token: 0x06007E07 RID: 32263 RVA: 0x002471F0 File Offset: 0x002453F0
		private void OnMessage(RaffleDrawAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRaffleDrawAck_hotfix != null)
			{
				this.m_OnMessageRaffleDrawAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0 && msg.Ntf != null)
			{
				this.OnMessage(msg.Ntf);
				this.m_raffleComponent.Drawed(msg.PoolId, msg.DrawedRaffleId);
			}
			if (this.EventOnRaffleDrawAck != null)
			{
				this.EventOnRaffleDrawAck(msg.Result, msg.DrawedRaffleId, BagItemBase.PBGoodsToGoods(msg.DrawedGoods));
			}
		}

		// Token: 0x06007E08 RID: 32264 RVA: 0x002472C8 File Offset: 0x002454C8
		public RafflePool GetRafflePool(int poolId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRafflePoolInt32_hotfix != null)
			{
				return (RafflePool)this.m_GetRafflePoolInt32_hotfix.call(new object[]
				{
					this,
					poolId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_raffleComponent.GetRafflePool(poolId);
		}

		// Token: 0x06007E09 RID: 32265 RVA: 0x00247350 File Offset: 0x00245550
		public RaffleItem GetRaffleItem(RafflePool pool, int raffleId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRaffleItemRafflePoolInt32_hotfix != null)
			{
				return (RaffleItem)this.m_GetRaffleItemRafflePoolInt32_hotfix.call(new object[]
				{
					this,
					pool,
					raffleId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_raffleComponent.GetRaffleItem(pool, raffleId);
		}

		// Token: 0x06007E0A RID: 32266 RVA: 0x002473EC File Offset: 0x002455EC
		public int GetDrawItemCost(RafflePool pool)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetDrawItemCostRafflePool_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetDrawItemCostRafflePool_hotfix.call(new object[]
				{
					this,
					pool
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_raffleComponent.GetDrawItemCost(pool);
		}

		// Token: 0x06007E0B RID: 32267 RVA: 0x00247474 File Offset: 0x00245674
		public int CanDraw(int poolId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanDrawInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanDrawInt32_hotfix.call(new object[]
				{
					this,
					poolId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_raffleComponent.CanDraw(poolId);
		}

		// Token: 0x06007E0C RID: 32268 RVA: 0x002474FC File Offset: 0x002456FC
		public bool IsRafflePoolOnActivityTime(int poolId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRafflePoolOnActivityTimeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRafflePoolOnActivityTimeInt32_hotfix.call(new object[]
				{
					this,
					poolId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_raffleComponent.IsRafflePoolOnActivityTime(poolId) == 0;
		}

		// Token: 0x1400014A RID: 330
		// (add) Token: 0x06007E0D RID: 32269 RVA: 0x00247588 File Offset: 0x00245788
		// (remove) Token: 0x06007E0E RID: 32270 RVA: 0x00247624 File Offset: 0x00245824
		public event Action<int, int, Goods> EventOnRaffleDrawAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRaffleDrawAckAction`3_hotfix != null)
				{
					this.m_add_EventOnRaffleDrawAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int, Goods> action = this.EventOnRaffleDrawAck;
				Action<int, int, Goods> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int, Goods>>(ref this.EventOnRaffleDrawAck, (Action<int, int, Goods>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRaffleDrawAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnRaffleDrawAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int, Goods> action = this.EventOnRaffleDrawAck;
				Action<int, int, Goods> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int, Goods>>(ref this.EventOnRaffleDrawAck, (Action<int, int, Goods>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007E0F RID: 32271 RVA: 0x002476C0 File Offset: 0x002458C0
		public bool SendGetRandomStoreReq(int storeId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetRandomStoreReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetRandomStoreReqInt32_hotfix.call(new object[]
				{
					this,
					storeId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RandomStoreGetReq
			{
				StoreId = storeId
			});
		}

		// Token: 0x06007E10 RID: 32272 RVA: 0x00247750 File Offset: 0x00245950
		public bool SendFlushRandomStoreReq(int storeId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendFlushRandomStoreReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendFlushRandomStoreReqInt32_hotfix.call(new object[]
				{
					this,
					storeId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RandomStoreFlushReq
			{
				StoreId = storeId
			});
		}

		// Token: 0x06007E11 RID: 32273 RVA: 0x002477E0 File Offset: 0x002459E0
		public bool SendBuyRandomStoreItemReq(int storeId, int index, int selectedIndex = -1)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendBuyRandomStoreItemReqInt32Int32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendBuyRandomStoreItemReqInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					storeId,
					index,
					selectedIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RandomStoreBuyStoreItemReq
			{
				StoreId = storeId,
				Index = index,
				SelectedIndex = selectedIndex
			});
		}

		// Token: 0x06007E12 RID: 32274 RVA: 0x002478A0 File Offset: 0x00245AA0
		private void OnMessage(DSRandomStoreNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSRandomStoreNtf_hotfix != null)
			{
				this.m_OnMessageDSRandomStoreNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_randomStoreComponent.DeSerialize(msg);
		}

		// Token: 0x06007E13 RID: 32275 RVA: 0x0024791C File Offset: 0x00245B1C
		public void OnMessage(RandomStoreGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRandomStoreGetAck_hotfix != null)
			{
				this.m_OnMessageRandomStoreGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_randomStoreComponent.SetStore(RandomStore.PBStoreToStore(msg.Store));
				if (msg.Store.StoreId == 1)
				{
					this.ResetPushNotification();
				}
			}
			if (this.EventOnGetRandomStoreListAck != null)
			{
				this.EventOnGetRandomStoreListAck(msg.Result);
			}
		}

		// Token: 0x06007E14 RID: 32276 RVA: 0x002479E0 File Offset: 0x00245BE0
		public void OnMessage(RandomStoreFlushAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRandomStoreFlushAck_hotfix != null)
			{
				this.m_OnMessageRandomStoreFlushAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_randomStoreComponent.ManualFlushRandomStore(RandomStore.PBStoreToStore(msg.Store));
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnFlushRandomStoreAck != null)
			{
				this.EventOnFlushRandomStoreAck(msg.Result);
			}
		}

		// Token: 0x06007E15 RID: 32277 RVA: 0x00247A9C File Offset: 0x00245C9C
		public void OnMessage(RandomStoreBuyStoreItemAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRandomStoreBuyStoreItemAck_hotfix != null)
			{
				this.m_OnMessageRandomStoreBuyStoreItemAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> rewards = new List<Goods>();
			if (msg.Result == 0)
			{
				this.m_randomStoreComponent.BuyStoreItem(msg.StoreId, msg.Index);
			}
			else if (msg.Result == -1104)
			{
				this.SendGetRandomStoreReq(msg.StoreId);
			}
			if (msg.Ntf != null)
			{
				this.AppendChangedGoodsToRewards(msg.Ntf.Changed, rewards);
				this.OnMessage(msg.Ntf);
			}
			if (this.EventOnRandomStoreBuyStoreItemAck != null)
			{
				this.EventOnRandomStoreBuyStoreItemAck(msg.Result);
			}
		}

		// Token: 0x06007E16 RID: 32278 RVA: 0x00247B9C File Offset: 0x00245D9C
		public List<RandomStoreItem> GetRandomStoreList(int storeID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRandomStoreListInt32_hotfix != null)
			{
				return (List<RandomStoreItem>)this.m_GetRandomStoreListInt32_hotfix.call(new object[]
				{
					this,
					storeID
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<RandomStoreItem> result = new List<RandomStoreItem>();
			RandomStore store = this.m_randomStoreComponent.GetStore(storeID);
			if (store != null)
			{
				result = store.Items;
			}
			return result;
		}

		// Token: 0x06007E17 RID: 32279 RVA: 0x00247C3C File Offset: 0x00245E3C
		public DateTime GetNextFlushTime(int storeID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetNextFlushTimeInt32_hotfix != null)
			{
				return (DateTime)this.m_GetNextFlushTimeInt32_hotfix.call(new object[]
				{
					this,
					storeID
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RandomStore store = this.m_randomStoreComponent.GetStore(storeID);
			return store.NextFlushTime;
		}

		// Token: 0x06007E18 RID: 32280 RVA: 0x00247CCC File Offset: 0x00245ECC
		public int CanManualRefreshRandomStore(int storeID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanManualRefreshRandomStoreInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanManualRefreshRandomStoreInt32_hotfix.call(new object[]
				{
					this,
					storeID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RandomStore store = this.m_randomStoreComponent.GetStore(storeID);
			return this.m_randomStoreComponent.CanManualFlushRandomStore(store);
		}

		// Token: 0x06007E19 RID: 32281 RVA: 0x00247D64 File Offset: 0x00245F64
		public RandomStore FindRandomStoreByID(int storeID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_FindRandomStoreByIDInt32_hotfix != null)
			{
				return (RandomStore)this.m_FindRandomStoreByIDInt32_hotfix.call(new object[]
				{
					this,
					storeID
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_randomStoreComponent.GetStore(storeID);
		}

		// Token: 0x06007E1A RID: 32282 RVA: 0x00247DEC File Offset: 0x00245FEC
		public int CanBuyRandomStoreGoods(int randomStoreID, int index, int selectedIndex = -1)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanBuyRandomStoreGoodsInt32Int32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanBuyRandomStoreGoodsInt32Int32Int32_hotfix.call(new object[]
				{
					this,
					randomStoreID,
					index,
					selectedIndex
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_randomStoreComponent.CanBuyRandomStoreItem(randomStoreID, index, selectedIndex);
		}

		// Token: 0x06007E1B RID: 32283 RVA: 0x00247E98 File Offset: 0x00246098
		public int GetManualFlushNums(int storeId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetManualFlushNumsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetManualFlushNumsInt32_hotfix.call(new object[]
				{
					this,
					storeId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_randomStoreComponent.GetManualFlushNums(storeId);
		}

		// Token: 0x1400014B RID: 331
		// (add) Token: 0x06007E1C RID: 32284 RVA: 0x00247F20 File Offset: 0x00246120
		// (remove) Token: 0x06007E1D RID: 32285 RVA: 0x00247FBC File Offset: 0x002461BC
		public event Action<int> EventOnGetRandomStoreListAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGetRandomStoreListAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGetRandomStoreListAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGetRandomStoreListAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGetRandomStoreListAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGetRandomStoreListAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGetRandomStoreListAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGetRandomStoreListAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGetRandomStoreListAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400014C RID: 332
		// (add) Token: 0x06007E1E RID: 32286 RVA: 0x00248058 File Offset: 0x00246258
		// (remove) Token: 0x06007E1F RID: 32287 RVA: 0x002480F4 File Offset: 0x002462F4
		public event Action<int> EventOnFlushRandomStoreAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnFlushRandomStoreAckAction`1_hotfix != null)
				{
					this.m_add_EventOnFlushRandomStoreAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFlushRandomStoreAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFlushRandomStoreAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnFlushRandomStoreAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnFlushRandomStoreAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnFlushRandomStoreAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnFlushRandomStoreAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400014D RID: 333
		// (add) Token: 0x06007E20 RID: 32288 RVA: 0x00248190 File Offset: 0x00246390
		// (remove) Token: 0x06007E21 RID: 32289 RVA: 0x0024822C File Offset: 0x0024642C
		public event Action<int> EventOnRandomStoreBuyStoreItemAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRandomStoreBuyStoreItemAckAction`1_hotfix != null)
				{
					this.m_add_EventOnRandomStoreBuyStoreItemAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRandomStoreBuyStoreItemAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRandomStoreBuyStoreItemAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRandomStoreBuyStoreItemAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnRandomStoreBuyStoreItemAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRandomStoreBuyStoreItemAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRandomStoreBuyStoreItemAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007E22 RID: 32290 RVA: 0x002482C8 File Offset: 0x002464C8
		public bool SendRankingListInfoQueryReq(RankingListType type, int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRankingListInfoQueryReqRankingListTypeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRankingListInfoQueryReqRankingListTypeInt32_hotfix.call(new object[]
				{
					this,
					type,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RankingListInfoQueryReq
			{
				RankingListType = (int)type,
				HeroId = heroId
			});
		}

		// Token: 0x06007E23 RID: 32291 RVA: 0x00248370 File Offset: 0x00246570
		public void OnMessage(RankingListInfoQueryAck ack)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRankingListInfoQueryAck_hotfix != null)
			{
				this.m_OnMessageRankingListInfoQueryAck_hotfix.call(new object[]
				{
					this,
					ack
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (ack.Result != 0)
			{
				global::Debug.LogError("OnRankingListInfoQueryAck error: errorCode = " + ack.Result.ToString());
			}
			else
			{
				RankingListInfo rankingListInfo = RankingListInfo.PBRankingListToRankingList(ack.ListInfo);
				if (ack.RankingListType == 5)
				{
					this.m_globalRankingListComponent.AddSingleHeroRankingListInfoToCache(ack.HeroId, rankingListInfo);
				}
				else
				{
					this.m_globalRankingListComponent.AddRankingListInfoToCache((RankingListType)ack.RankingListType, rankingListInfo);
				}
			}
			if (this.EventOnRankingListInfoQueryAck != null)
			{
				this.EventOnRankingListInfoQueryAck(ack.Result);
			}
		}

		// Token: 0x06007E24 RID: 32292 RVA: 0x00248470 File Offset: 0x00246670
		public bool IsAbleQueryRankingListInfo(RankingListType rankingListType, out int errorCode)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsAbleQueryRankingListInfoRankingListTypeInt32__hotfix != null)
			{
				return LuaDelegation.Lua_BlackJack_ProjectL_PlayerContext_ProjectLPlayerContext_IsAbleQueryRankingListInfo_RankingListType_Int32(this, this.m_IsAbleQueryRankingListInfoRankingListTypeInt32__hotfix, rankingListType, out errorCode);
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_globalRankingListComponent.IsAbleQueryRankingListInfo(rankingListType, out errorCode);
		}

		// Token: 0x06007E25 RID: 32293 RVA: 0x002484DC File Offset: 0x002466DC
		public RankingListInfo GetRankingListInfoByType(RankingListType rankingType)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRankingListInfoByTypeRankingListType_hotfix != null)
			{
				return (RankingListInfo)this.m_GetRankingListInfoByTypeRankingListType_hotfix.call(new object[]
				{
					this,
					rankingType
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_globalRankingListComponent.GetRankingListInfoByType(rankingType);
		}

		// Token: 0x06007E26 RID: 32294 RVA: 0x00248564 File Offset: 0x00246764
		public bool IsRankingListInfoValid(RankingListType rankingListType)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRankingListInfoValidRankingListType_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRankingListInfoValidRankingListType_hotfix.call(new object[]
				{
					this,
					rankingListType
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_globalRankingListComponent.IsRankingListInfoValid(rankingListType);
		}

		// Token: 0x06007E27 RID: 32295 RVA: 0x002485EC File Offset: 0x002467EC
		public bool IsSingleHeroRankingListInfoValid(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsSingleHeroRankingListInfoValidInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsSingleHeroRankingListInfoValidInt32_hotfix.call(new object[]
				{
					this,
					heroId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_globalRankingListComponent.IsSingleHeroRankingListInfoValid(heroId);
		}

		// Token: 0x06007E28 RID: 32296 RVA: 0x00248674 File Offset: 0x00246874
		public RankingListInfo GetSingleHeroRankingListInfoByHeroId(int heroId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetSingleHeroRankingListInfoByHeroIdInt32_hotfix != null)
			{
				return (RankingListInfo)this.m_GetSingleHeroRankingListInfoByHeroIdInt32_hotfix.call(new object[]
				{
					this,
					heroId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_globalRankingListComponent.GetSingleHeroRankingListInfoByHeroId(heroId);
		}

		// Token: 0x1400014E RID: 334
		// (add) Token: 0x06007E29 RID: 32297 RVA: 0x002486FC File Offset: 0x002468FC
		// (remove) Token: 0x06007E2A RID: 32298 RVA: 0x00248798 File Offset: 0x00246998
		public event Action<int> EventOnRankingListInfoQueryAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRankingListInfoQueryAckAction`1_hotfix != null)
				{
					this.m_add_EventOnRankingListInfoQueryAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRankingListInfoQueryAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRankingListInfoQueryAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRankingListInfoQueryAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnRankingListInfoQueryAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRankingListInfoQueryAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRankingListInfoQueryAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007E2B RID: 32299 RVA: 0x00248834 File Offset: 0x00246A34
		public bool SendRealTimePVPWaitingForOpponentReq(BattleMode Mode)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRealTimePVPWaitingForOpponentReqBattleMode_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRealTimePVPWaitingForOpponentReqBattleMode_hotfix.call(new object[]
				{
					this,
					Mode
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RealTimePVPWaitingForOpponentReq msg = new RealTimePVPWaitingForOpponentReq
			{
				Mode = (int)Mode
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007E2C RID: 32300 RVA: 0x002488C8 File Offset: 0x00246AC8
		public bool SendRealTimePVPCancelWaitingForOpponentReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRealTimePVPCancelWaitingForOpponentReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRealTimePVPCancelWaitingForOpponentReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RealTimePVPCancelWaitingForOpponentReq msg = new RealTimePVPCancelWaitingForOpponentReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007E2D RID: 32301 RVA: 0x00248944 File Offset: 0x00246B44
		public bool SendRealTimePVPGetInfoReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRealTimePVPGetInfoReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRealTimePVPGetInfoReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RealTimePVPGetInfoReq msg = new RealTimePVPGetInfoReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007E2E RID: 32302 RVA: 0x002489C0 File Offset: 0x00246BC0
		public bool SendRealTimePVPGetTopPlayersReq(int topN, bool isGlobal)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRealTimePVPGetTopPlayersReqInt32Boolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRealTimePVPGetTopPlayersReqInt32Boolean_hotfix.call(new object[]
				{
					this,
					topN,
					isGlobal
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isRealTimePVPGetTopPlayersReqGlobal = isGlobal;
			RealTimePVPGetTopPlayersReq msg = new RealTimePVPGetTopPlayersReq
			{
				TopN = topN,
				IsGlobal = isGlobal
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007E2F RID: 32303 RVA: 0x00248A70 File Offset: 0x00246C70
		public bool SendRealTimePVPAcquireWinsBonusReq(int bonusId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRealTimePVPAcquireWinsBonusReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRealTimePVPAcquireWinsBonusReqInt32_hotfix.call(new object[]
				{
					this,
					bonusId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RealTimePVPAcquireWinsBonusReq msg = new RealTimePVPAcquireWinsBonusReq
			{
				BonusId = bonusId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007E30 RID: 32304 RVA: 0x00248B04 File Offset: 0x00246D04
		private void OnMessage(DSRealTimePVPNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSRealTimePVPNtf_hotfix != null)
			{
				this.m_OnMessageDSRealTimePVPNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_realTimePVPComponent.DeSerialize(msg);
		}

		// Token: 0x06007E31 RID: 32305 RVA: 0x00248B80 File Offset: 0x00246D80
		private void OnMessage(DSRealTimePVPPromotionBattleReportNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSRealTimePVPPromotionBattleReportNtf_hotfix != null)
			{
				this.m_OnMessageDSRealTimePVPPromotionBattleReportNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_realTimePVPComponent.SavePromotionReport(msg.PromotionReport.ToMemory());
		}

		// Token: 0x06007E32 RID: 32306 RVA: 0x00248C08 File Offset: 0x00246E08
		private void OnMessage(DSRealTimePVPBattleReportNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSRealTimePVPBattleReportNtf_hotfix != null)
			{
				this.m_OnMessageDSRealTimePVPBattleReportNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RealTimePVPMatchStats friendlyCareerMatchStats = this.m_realTimePVPComponent.m_realTimePVP.FriendlyCareerMatchStats.DeepDuplicate();
			RealTimePVPMatchStats friendlyMatchStats = this.m_realTimePVPComponent.m_realTimePVP.FriendlyMatchStats.DeepDuplicate();
			RealTimePVPMatchStats ladderCareerMatchStats = this.m_realTimePVPComponent.m_realTimePVP.LadderCareerMatchStats.DeepDuplicate();
			RealTimePVPMatchStats ladderMatchStats = this.m_realTimePVPComponent.m_realTimePVP.LadderMatchStats.DeepDuplicate();
			this.m_realTimePVPComponent.SaveReport(msg.Report.ToMemory());
			this.m_realTimePVPComponent.m_realTimePVP.FriendlyCareerMatchStats = friendlyCareerMatchStats;
			this.m_realTimePVPComponent.m_realTimePVP.FriendlyMatchStats = friendlyMatchStats;
			this.m_realTimePVPComponent.m_realTimePVP.LadderCareerMatchStats = ladderCareerMatchStats;
			this.m_realTimePVPComponent.m_realTimePVP.LadderMatchStats = ladderMatchStats;
		}

		// Token: 0x06007E33 RID: 32307 RVA: 0x00248D2C File Offset: 0x00246F2C
		private void OnMessage(RealTimePVPWaitingForOpponentAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRealTimePVPWaitingForOpponentAck_hotfix != null)
			{
				this.m_OnMessageRealTimePVPWaitingForOpponentAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnRealTimePVPWaitingForOpponentAck != null)
			{
				this.EventOnRealTimePVPWaitingForOpponentAck(msg.Result, msg.ExpectedWaitingTime);
			}
		}

		// Token: 0x06007E34 RID: 32308 RVA: 0x00248DC0 File Offset: 0x00246FC0
		private void OnMessage(RealTimePVPMatchupNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRealTimePVPMatchupNtf_hotfix != null)
			{
				this.m_OnMessageRealTimePVPMatchupNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_realtimePVPOpponentPlayerInfo = msg.Opponent;
			}
			if (this.EventOnRealTimePVPMatchupNtf != null)
			{
				this.EventOnRealTimePVPMatchupNtf(msg.Result);
			}
		}

		// Token: 0x06007E35 RID: 32309 RVA: 0x00248E64 File Offset: 0x00247064
		private void OnMessage(RealTimePVPCancelWaitingForOpponentAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRealTimePVPCancelWaitingForOpponentAck_hotfix != null)
			{
				this.m_OnMessageRealTimePVPCancelWaitingForOpponentAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnRealTimePVPCancelWaitingForOpponentAck != null)
			{
				this.EventOnRealTimePVPCancelWaitingForOpponentAck(msg.Result);
			}
		}

		// Token: 0x06007E36 RID: 32310 RVA: 0x00248EF0 File Offset: 0x002470F0
		private void OnMessage(RealTimePVPGetInfoAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRealTimePVPGetInfoAck_hotfix != null)
			{
				this.m_OnMessageRealTimePVPGetInfoAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_realtimePVPPlayerInfo = msg.Info;
			}
			if (this.EventOnRealTimePVPGetInfoAck != null)
			{
				this.EventOnRealTimePVPGetInfoAck(msg.Result);
			}
		}

		// Token: 0x06007E37 RID: 32311 RVA: 0x00248F94 File Offset: 0x00247194
		private void OnMessage(RealTimePVPGetTopPlayersAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRealTimePVPGetTopPlayersAck_hotfix != null)
			{
				this.m_OnMessageRealTimePVPGetTopPlayersAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				if (this.m_isRealTimePVPGetTopPlayersReqGlobal)
				{
					this.m_realtimePVPGlobalLeaderboardPlayerInfos.Clear();
					this.m_realtimePVPGlobalLeaderboardPlayerInfos.AddRange(msg.Infos);
					this.m_realtimePVPGlobalLeaderboardUserSummarys.Clear();
					this.m_realtimePVPGlobalLeaderboardUserSummarys.AddRange(msg.Summaries);
				}
				else
				{
					this.m_realtimePVPLocalLeaderboardPlayerInfos.Clear();
					this.m_realtimePVPLocalLeaderboardPlayerInfos.AddRange(msg.Infos);
					this.m_realtimePVPLocalLeaderboardUserSummarys.Clear();
					this.m_realtimePVPLocalLeaderboardUserSummarys.AddRange(msg.Summaries);
				}
			}
			if (this.EventOnRealTimePVPGetTopPlayersAck != null)
			{
				this.EventOnRealTimePVPGetTopPlayersAck(msg.Result);
			}
		}

		// Token: 0x06007E38 RID: 32312 RVA: 0x002490AC File Offset: 0x002472AC
		private void OnMessage(RealTimePVPAcquireWinsBonusAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRealTimePVPAcquireWinsBonusAck_hotfix != null)
			{
				this.m_OnMessageRealTimePVPAcquireWinsBonusAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				this.m_realTimePVPComponent.AcquireWinsBonus(msg.Req.BonusId);
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
			}
			if (this.EventOnRealTimePVPAcquireWinsBonusAck != null)
			{
				this.EventOnRealTimePVPAcquireWinsBonusAck(msg.Result, battleReward);
			}
		}

		// Token: 0x06007E39 RID: 32313 RVA: 0x0024919C File Offset: 0x0024739C
		private void OnMessage(RealTimePVPLeaderboardInfoNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRealTimePVPLeaderboardInfoNtf_hotfix != null)
			{
				this.m_OnMessageRealTimePVPLeaderboardInfoNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_realTimePVPComponent.Dan = msg.Info.Dan;
			this.m_realTimePVPComponent.Score = msg.Info.Score;
			this.m_realTimePVPComponent.RealTimeArenaDanUpdate(msg.Info.Dan);
			if (this.EventOnRealTimePVPLeaderboardInfoNtf != null)
			{
				this.EventOnRealTimePVPLeaderboardInfoNtf(msg.Info);
			}
		}

		// Token: 0x06007E3A RID: 32314 RVA: 0x0024926C File Offset: 0x0024746C
		private bool IsEmptyRealTimePVPPlayerInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsEmptyRealTimePVPPlayerInfo_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsEmptyRealTimePVPPlayerInfo_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realtimePVPPlayerInfo == null;
		}

		// Token: 0x06007E3B RID: 32315 RVA: 0x002492E4 File Offset: 0x002474E4
		public bool IsNeedGetRealTimePVPPlayerInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsNeedGetRealTimePVPPlayerInfo_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsNeedGetRealTimePVPPlayerInfo_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realtimePVPPlayerInfo == null;
		}

		// Token: 0x06007E3C RID: 32316 RVA: 0x0024935C File Offset: 0x0024755C
		public int GetPlayerRealTimePVPScore()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerRealTimePVPScore_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerRealTimePVPScore_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyRealTimePVPPlayerInfo())
			{
				return 0;
			}
			return this.m_realtimePVPPlayerInfo.Score;
		}

		// Token: 0x06007E3D RID: 32317 RVA: 0x002493E0 File Offset: 0x002475E0
		public int GetPlayerRealTimePVPDan()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerRealTimePVPDan_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerRealTimePVPDan_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyRealTimePVPPlayerInfo())
			{
				return 0;
			}
			return this.m_realtimePVPPlayerInfo.Dan;
		}

		// Token: 0x06007E3E RID: 32318 RVA: 0x00249464 File Offset: 0x00247664
		public int GetPlayerRealTimePVPRank(bool isGlobal)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetPlayerRealTimePVPRankBoolean_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetPlayerRealTimePVPRankBoolean_hotfix.call(new object[]
				{
					this,
					isGlobal
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.IsEmptyRealTimePVPPlayerInfo())
			{
				return 0;
			}
			if (isGlobal)
			{
				return this.m_realtimePVPPlayerInfo.GlobalRank;
			}
			return this.m_realtimePVPPlayerInfo.LocalRank;
		}

		// Token: 0x06007E3F RID: 32319 RVA: 0x0024950C File Offset: 0x0024770C
		public List<ProRealTimePVPLeaderboardPlayerInfo> GetRealTimePVPLeaderboardPlayerInfos(bool isGlobal)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPLeaderboardPlayerInfosBoolean_hotfix != null)
			{
				return (List<ProRealTimePVPLeaderboardPlayerInfo>)this.m_GetRealTimePVPLeaderboardPlayerInfosBoolean_hotfix.call(new object[]
				{
					this,
					isGlobal
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (isGlobal)
			{
				return this.m_realtimePVPGlobalLeaderboardPlayerInfos;
			}
			return this.m_realtimePVPLocalLeaderboardPlayerInfos;
		}

		// Token: 0x06007E40 RID: 32320 RVA: 0x0024959C File Offset: 0x0024779C
		public List<ProUserSummary> GetRealTimePVPLeaderboardUserSummarys(bool isGlobal)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPLeaderboardUserSummarysBoolean_hotfix != null)
			{
				return (List<ProUserSummary>)this.m_GetRealTimePVPLeaderboardUserSummarysBoolean_hotfix.call(new object[]
				{
					this,
					isGlobal
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (isGlobal)
			{
				return this.m_realtimePVPGlobalLeaderboardUserSummarys;
			}
			return this.m_realtimePVPLocalLeaderboardUserSummarys;
		}

		// Token: 0x06007E41 RID: 32321 RVA: 0x0024962C File Offset: 0x0024782C
		public LinkedList<RealTimePVPBattleReport> GetRealTimePVPBattleReports()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPBattleReports_hotfix != null)
			{
				return (LinkedList<RealTimePVPBattleReport>)this.m_GetRealTimePVPBattleReports_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.GetBattleReports();
		}

		// Token: 0x06007E42 RID: 32322 RVA: 0x002496A4 File Offset: 0x002478A4
		public LinkedList<RealTimePVPBattleReport> GetRealTimePVPPromotionBattleReports()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPPromotionBattleReports_hotfix != null)
			{
				return (LinkedList<RealTimePVPBattleReport>)this.m_GetRealTimePVPPromotionBattleReports_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.GetPromotionBattleReports();
		}

		// Token: 0x06007E43 RID: 32323 RVA: 0x0024971C File Offset: 0x0024791C
		public bool IsRealTimePVPPromotion()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRealTimePVPPromotion_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRealTimePVPPromotion_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.IsPromotion();
		}

		// Token: 0x06007E44 RID: 32324 RVA: 0x00249794 File Offset: 0x00247994
		public int GetRealTimePVPConsecutiveWins(BattleMode mode)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPConsecutiveWinsBattleMode_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRealTimePVPConsecutiveWinsBattleMode_hotfix.call(new object[]
				{
					this,
					mode
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.GetConsecutiveWins(mode);
		}

		// Token: 0x06007E45 RID: 32325 RVA: 0x0024981C File Offset: 0x00247A1C
		public int CheckRealTimePVPAcquireWinsBonus(int bonusId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckRealTimePVPAcquireWinsBonusInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CheckRealTimePVPAcquireWinsBonusInt32_hotfix.call(new object[]
				{
					this,
					bonusId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.CheckAcquireWinsBonus(bonusId);
		}

		// Token: 0x06007E46 RID: 32326 RVA: 0x002498A4 File Offset: 0x00247AA4
		public GainRewardStatus GetRealTimePVPWinsBonusStatus(int bonusId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPWinsBonusStatusInt32_hotfix != null)
			{
				return (GainRewardStatus)this.m_GetRealTimePVPWinsBonusStatusInt32_hotfix.call(new object[]
				{
					this,
					bonusId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = this.CheckRealTimePVPAcquireWinsBonus(bonusId);
			if (num == -4703)
			{
				return GainRewardStatus.Got;
			}
			if (num == 0)
			{
				return GainRewardStatus.CanGet;
			}
			return GainRewardStatus.CanNotGet;
		}

		// Token: 0x06007E47 RID: 32327 RVA: 0x00249940 File Offset: 0x00247B40
		public RealTimePVPMatchStats GetRealTimePVPLadderMatchStats()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPLadderMatchStats_hotfix != null)
			{
				return (RealTimePVPMatchStats)this.m_GetRealTimePVPLadderMatchStats_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.GetLadderMatchStats();
		}

		// Token: 0x06007E48 RID: 32328 RVA: 0x002499B8 File Offset: 0x00247BB8
		public RealTimePVPMatchStats GetRealTimePVPFriendlyMatchStats()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPFriendlyMatchStats_hotfix != null)
			{
				return (RealTimePVPMatchStats)this.m_GetRealTimePVPFriendlyMatchStats_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.GetFriendlyMatchStats();
		}

		// Token: 0x06007E49 RID: 32329 RVA: 0x00249A30 File Offset: 0x00247C30
		public int GetRealTimePVPHonour()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRealTimePVPHonour_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRealTimePVPHonour_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.GetPlayerBasicInfo().RealTimePVPHonor;
		}

		// Token: 0x06007E4A RID: 32330 RVA: 0x00249AAC File Offset: 0x00247CAC
		public int IsRealTimePVPArenaAvailable(BattleMode mode)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRealTimePVPArenaAvailableBattleMode_hotfix != null)
			{
				return Convert.ToInt32(this.m_IsRealTimePVPArenaAvailableBattleMode_hotfix.call(new object[]
				{
					this,
					mode
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_realTimePVPComponent.IsRealTimePVPArenaAvailable(mode);
		}

		// Token: 0x06007E4B RID: 32331 RVA: 0x00249B34 File Offset: 0x00247D34
		public bool IsRealTimePVPWillMatchBot(BattleMode mode)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRealTimePVPWillMatchBotBattleMode_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRealTimePVPWillMatchBotBattleMode_hotfix.call(new object[]
				{
					this,
					mode
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int playerRealTimePVPScore = this.GetPlayerRealTimePVPScore();
			int playerRealTimePVPDan = this.GetPlayerRealTimePVPDan();
			int num;
			int num2;
			int num3;
			int num4;
			return this.m_realTimePVPComponent.TryGetBotParamsForNovice(mode, playerRealTimePVPScore, out num, out num2, out num3, out num4) || this.m_realTimePVPComponent.TryGetBotParamsForLoser(mode, playerRealTimePVPScore, playerRealTimePVPDan, out num, out num2, out num3, out num4);
		}

		// Token: 0x1400014F RID: 335
		// (add) Token: 0x06007E4C RID: 32332 RVA: 0x00249BF4 File Offset: 0x00247DF4
		// (remove) Token: 0x06007E4D RID: 32333 RVA: 0x00249C90 File Offset: 0x00247E90
		public event Action<int, int> EventOnRealTimePVPWaitingForOpponentAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRealTimePVPWaitingForOpponentAckAction`2_hotfix != null)
				{
					this.m_add_EventOnRealTimePVPWaitingForOpponentAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnRealTimePVPWaitingForOpponentAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnRealTimePVPWaitingForOpponentAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRealTimePVPWaitingForOpponentAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnRealTimePVPWaitingForOpponentAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnRealTimePVPWaitingForOpponentAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnRealTimePVPWaitingForOpponentAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000150 RID: 336
		// (add) Token: 0x06007E4E RID: 32334 RVA: 0x00249D2C File Offset: 0x00247F2C
		// (remove) Token: 0x06007E4F RID: 32335 RVA: 0x00249DC8 File Offset: 0x00247FC8
		public event Action<int> EventOnRealTimePVPMatchupNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRealTimePVPMatchupNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnRealTimePVPMatchupNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPMatchupNtf;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPMatchupNtf, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRealTimePVPMatchupNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnRealTimePVPMatchupNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPMatchupNtf;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPMatchupNtf, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000151 RID: 337
		// (add) Token: 0x06007E50 RID: 32336 RVA: 0x00249E64 File Offset: 0x00248064
		// (remove) Token: 0x06007E51 RID: 32337 RVA: 0x00249F00 File Offset: 0x00248100
		public event Action<int> EventOnRealTimePVPCancelWaitingForOpponentAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRealTimePVPCancelWaitingForOpponentAckAction`1_hotfix != null)
				{
					this.m_add_EventOnRealTimePVPCancelWaitingForOpponentAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPCancelWaitingForOpponentAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPCancelWaitingForOpponentAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRealTimePVPCancelWaitingForOpponentAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnRealTimePVPCancelWaitingForOpponentAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPCancelWaitingForOpponentAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPCancelWaitingForOpponentAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000152 RID: 338
		// (add) Token: 0x06007E52 RID: 32338 RVA: 0x00249F9C File Offset: 0x0024819C
		// (remove) Token: 0x06007E53 RID: 32339 RVA: 0x0024A038 File Offset: 0x00248238
		public event Action<int> EventOnRealTimePVPGetInfoAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRealTimePVPGetInfoAckAction`1_hotfix != null)
				{
					this.m_add_EventOnRealTimePVPGetInfoAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPGetInfoAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPGetInfoAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRealTimePVPGetInfoAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnRealTimePVPGetInfoAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPGetInfoAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPGetInfoAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000153 RID: 339
		// (add) Token: 0x06007E54 RID: 32340 RVA: 0x0024A0D4 File Offset: 0x002482D4
		// (remove) Token: 0x06007E55 RID: 32341 RVA: 0x0024A170 File Offset: 0x00248370
		public event Action<int> EventOnRealTimePVPGetTopPlayersAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRealTimePVPGetTopPlayersAckAction`1_hotfix != null)
				{
					this.m_add_EventOnRealTimePVPGetTopPlayersAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPGetTopPlayersAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPGetTopPlayersAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRealTimePVPGetTopPlayersAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnRealTimePVPGetTopPlayersAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRealTimePVPGetTopPlayersAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRealTimePVPGetTopPlayersAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000154 RID: 340
		// (add) Token: 0x06007E56 RID: 32342 RVA: 0x0024A20C File Offset: 0x0024840C
		// (remove) Token: 0x06007E57 RID: 32343 RVA: 0x0024A2A8 File Offset: 0x002484A8
		public event Action<int, BattleReward> EventOnRealTimePVPAcquireWinsBonusAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRealTimePVPAcquireWinsBonusAckAction`2_hotfix != null)
				{
					this.m_add_EventOnRealTimePVPAcquireWinsBonusAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnRealTimePVPAcquireWinsBonusAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnRealTimePVPAcquireWinsBonusAck, (Action<int, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRealTimePVPAcquireWinsBonusAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnRealTimePVPAcquireWinsBonusAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnRealTimePVPAcquireWinsBonusAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnRealTimePVPAcquireWinsBonusAck, (Action<int, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000155 RID: 341
		// (add) Token: 0x06007E58 RID: 32344 RVA: 0x0024A344 File Offset: 0x00248544
		// (remove) Token: 0x06007E59 RID: 32345 RVA: 0x0024A3E0 File Offset: 0x002485E0
		public event Action<ProRealTimePVPUserInfo> EventOnRealTimePVPLeaderboardInfoNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRealTimePVPLeaderboardInfoNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnRealTimePVPLeaderboardInfoNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ProRealTimePVPUserInfo> action = this.EventOnRealTimePVPLeaderboardInfoNtf;
				Action<ProRealTimePVPUserInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ProRealTimePVPUserInfo>>(ref this.EventOnRealTimePVPLeaderboardInfoNtf, (Action<ProRealTimePVPUserInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRealTimePVPLeaderboardInfoNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnRealTimePVPLeaderboardInfoNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<ProRealTimePVPUserInfo> action = this.EventOnRealTimePVPLeaderboardInfoNtf;
				Action<ProRealTimePVPUserInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<ProRealTimePVPUserInfo>>(ref this.EventOnRealTimePVPLeaderboardInfoNtf, (Action<ProRealTimePVPUserInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007E5A RID: 32346 RVA: 0x0024A47C File Offset: 0x0024867C
		public bool SendRechargeStoreCancelBuyReq(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRechargeStoreCancelBuyReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRechargeStoreCancelBuyReqInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RechargeStoreCancelBuyReq
			{
				GoodsId = goodsId
			});
		}

		// Token: 0x06007E5B RID: 32347 RVA: 0x0024A50C File Offset: 0x0024870C
		public bool SendRechargeStoreBuyGoodsReq(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRechargeStoreBuyGoodsReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRechargeStoreBuyGoodsReqInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			RechargeStoreBuyGoodsReq msg = new RechargeStoreBuyGoodsReq
			{
				GoodsId = goodsId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007E5C RID: 32348 RVA: 0x0024A5A0 File Offset: 0x002487A0
		private void OnMessage(RechargeStoreCancelBuyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRechargeStoreCancelBuyAck_hotfix != null)
			{
				this.m_OnMessageRechargeStoreCancelBuyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Format("recharge store cancel buy goodsId {0} result = {1}", msg.GoodsId, msg.Result));
			if (this.EventOnRechargeStoreCancelBuyAck != null)
			{
				this.EventOnRechargeStoreCancelBuyAck(msg.Result, msg.GoodsId);
			}
		}

		// Token: 0x06007E5D RID: 32349 RVA: 0x0024A658 File Offset: 0x00248858
		public void OnMessage(BoughtRechargeStoreItemNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageBoughtRechargeStoreItemNtf_hotfix != null)
			{
				this.m_OnMessageBoughtRechargeStoreItemNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.OnMessage(msg.Ntf);
			this.m_rechargeStoreComponent.BuyGoods(msg.GoodsId, msg.RechargeCrystal);
			this.m_giftStoreComponent.AddOrderReward(msg.Reward.OrderId, OrderReward.FromPB(msg.Reward));
			if (this.EventOnRechargeBoughtSuccessNtf != null)
			{
				this.EventOnRechargeBoughtSuccessNtf(msg.Reward.OrderId);
			}
			global::Debug.Log(string.Format("OnMessage BoughtRechargeStoreItemNtf rechargeGoodID={0} receiveCrystal={1}", msg.GoodsId, msg.RechargeCrystal));
		}

		// Token: 0x06007E5E RID: 32350 RVA: 0x0024A754 File Offset: 0x00248954
		public void OnMessage(RechargeStoreBuyGoodsAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRechargeStoreBuyGoodsAck_hotfix != null)
			{
				this.m_OnMessageRechargeStoreBuyGoodsAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			global::Debug.Log(string.Format("recharge store apply buy goodsId {0} result = {1}", msg.GoodsId, msg.Result));
			if (this.EventOnRechargeStoreItemBuyAck != null)
			{
				this.EventOnRechargeStoreItemBuyAck(msg.Result, msg.GoodsId);
			}
		}

		// Token: 0x06007E5F RID: 32351 RVA: 0x0024A80C File Offset: 0x00248A0C
		public void OnMessage(DSRechargeStoreNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSRechargeStoreNtf_hotfix != null)
			{
				this.m_OnMessageDSRechargeStoreNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_rechargeStoreComponent.DeSerialize(msg);
		}

		// Token: 0x06007E60 RID: 32352 RVA: 0x0024A888 File Offset: 0x00248A88
		public bool IsRechargeGoodsBought(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRechargeGoodsBoughtInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRechargeGoodsBoughtInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_rechargeStoreComponent.IsGoodsBought(goodsId);
		}

		// Token: 0x06007E61 RID: 32353 RVA: 0x0024A910 File Offset: 0x00248B10
		public int CaculateGotCrystalNums(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CaculateGotCrystalNumsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CaculateGotCrystalNumsInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_rechargeStoreComponent.CaculateGotCrystalNums(goodsId);
		}

		// Token: 0x06007E62 RID: 32354 RVA: 0x0024A998 File Offset: 0x00248B98
		public int GetRechargeCrystalOriginalNums(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRechargeCrystalOriginalNumsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRechargeCrystalOriginalNumsInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_rechargeStoreComponent.GetCrystalOriginalNums(goodsId);
		}

		// Token: 0x06007E63 RID: 32355 RVA: 0x0024AA20 File Offset: 0x00248C20
		public int GetRechargeCrystalFirstBoughtRewardNums(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRechargeCrystalFirstBoughtRewardNumsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRechargeCrystalFirstBoughtRewardNumsInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_rechargeStoreComponent.GetCrystalFirstBoughtRewardNums(goodsId);
		}

		// Token: 0x06007E64 RID: 32356 RVA: 0x0024AAA8 File Offset: 0x00248CA8
		public int GetRechargeCrystalRepeatlyBoughtRewardNums(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRechargeCrystalRepeatlyBoughtRewardNumsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRechargeCrystalRepeatlyBoughtRewardNumsInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_rechargeStoreComponent.GetCrystalRepeatlyBoughtRewardNums(goodsId);
		}

		// Token: 0x06007E65 RID: 32357 RVA: 0x0024AB30 File Offset: 0x00248D30
		public string GetRechargeGoodsIcon(int goodsId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRechargeGoodsIconInt32_hotfix != null)
			{
				return (string)this.m_GetRechargeGoodsIconInt32_hotfix.call(new object[]
				{
					this,
					goodsId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_rechargeStoreComponent.GetGoodsIcon(goodsId);
		}

		// Token: 0x14000156 RID: 342
		// (add) Token: 0x06007E66 RID: 32358 RVA: 0x0024ABB8 File Offset: 0x00248DB8
		// (remove) Token: 0x06007E67 RID: 32359 RVA: 0x0024AC54 File Offset: 0x00248E54
		public event Action<string> EventOnRechargeBoughtSuccessNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRechargeBoughtSuccessNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnRechargeBoughtSuccessNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<string> action = this.EventOnRechargeBoughtSuccessNtf;
				Action<string> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<string>>(ref this.EventOnRechargeBoughtSuccessNtf, (Action<string>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRechargeBoughtSuccessNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnRechargeBoughtSuccessNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<string> action = this.EventOnRechargeBoughtSuccessNtf;
				Action<string> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<string>>(ref this.EventOnRechargeBoughtSuccessNtf, (Action<string>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000157 RID: 343
		// (add) Token: 0x06007E68 RID: 32360 RVA: 0x0024ACF0 File Offset: 0x00248EF0
		// (remove) Token: 0x06007E69 RID: 32361 RVA: 0x0024AD8C File Offset: 0x00248F8C
		public event Action<int, int> EventOnRechargeStoreItemBuyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRechargeStoreItemBuyAckAction`2_hotfix != null)
				{
					this.m_add_EventOnRechargeStoreItemBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnRechargeStoreItemBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnRechargeStoreItemBuyAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRechargeStoreItemBuyAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnRechargeStoreItemBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnRechargeStoreItemBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnRechargeStoreItemBuyAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000158 RID: 344
		// (add) Token: 0x06007E6A RID: 32362 RVA: 0x0024AE28 File Offset: 0x00249028
		// (remove) Token: 0x06007E6B RID: 32363 RVA: 0x0024AEC4 File Offset: 0x002490C4
		public event Action<int, int> EventOnRechargeStoreCancelBuyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRechargeStoreCancelBuyAckAction`2_hotfix != null)
				{
					this.m_add_EventOnRechargeStoreCancelBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnRechargeStoreCancelBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnRechargeStoreCancelBuyAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRechargeStoreCancelBuyAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnRechargeStoreCancelBuyAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnRechargeStoreCancelBuyAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnRechargeStoreCancelBuyAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007E6C RID: 32364 RVA: 0x0024AF60 File Offset: 0x00249160
		private void OnMessage(DSResourceNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSResourceNtf_hotfix != null)
			{
				this.m_OnMessageDSResourceNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_resourceComponent.DeSerialize(msg);
		}

		// Token: 0x06007E6D RID: 32365 RVA: 0x0024AFDC File Offset: 0x002491DC
		private void OnMessage(MonthCardUpdateNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageMonthCardUpdateNtf_hotfix != null)
			{
				this.m_OnMessageMonthCardUpdateNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_resourceComponent.UpdateMonthCard(msg.MonthCard.MonthCardId, msg.MonthCard.ExpiredTime);
			global::Debug.Log(string.Format("update month card {0} to {1}", msg.MonthCard.MonthCardId, new DateTime(msg.MonthCard.ExpiredTime)));
		}

		// Token: 0x06007E6E RID: 32366 RVA: 0x0024B0A4 File Offset: 0x002492A4
		public bool SendRiftLevelAttackReq(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRiftLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRiftLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RiftLevelAttackReq
			{
				LevelId = levelId
			});
		}

		// Token: 0x06007E6F RID: 32367 RVA: 0x0024B134 File Offset: 0x00249334
		public bool SendRiftLevelBattleFinishedReq(int riftLevelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRiftLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRiftLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					riftLevelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RiftLevelBattleFinishedReq
			{
				RiftLevelId = riftLevelId,
				BattleReport = battleReport
			});
		}

		// Token: 0x06007E70 RID: 32368 RVA: 0x0024B1DC File Offset: 0x002493DC
		public bool SendRiftLevelRaidReq(int levelId, int count)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRiftLevelRaidReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRiftLevelRaidReqInt32Int32_hotfix.call(new object[]
				{
					this,
					levelId,
					count
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RiftLevelRaidReq
			{
				LevelId = levelId,
				Nums = count
			});
		}

		// Token: 0x06007E71 RID: 32369 RVA: 0x0024B284 File Offset: 0x00249484
		public bool SendRiftChapterRewardGainReq(int chapterId, int index)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendRiftChapterRewardGainReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendRiftChapterRewardGainReqInt32Int32_hotfix.call(new object[]
				{
					this,
					chapterId,
					index
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new RiftChapterRewardGainReq
			{
				ChapterId = chapterId,
				Index = index
			});
		}

		// Token: 0x06007E72 RID: 32370 RVA: 0x0024B32C File Offset: 0x0024952C
		private void OnMessage(DSRiftNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSRiftNtf_hotfix != null)
			{
				this.m_OnMessageDSRiftNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_riftComponent.DeSerialize(msg);
		}

		// Token: 0x06007E73 RID: 32371 RVA: 0x0024B3A8 File Offset: 0x002495A8
		private void OnMessage(RiftLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRiftLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageRiftLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_riftComponent.AttackLevel(msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnRiftLevelAttackAck != null)
			{
				this.EventOnRiftLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007E74 RID: 32372 RVA: 0x0024B4A0 File Offset: 0x002496A0
		private void OnMessage(RiftLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRiftLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageRiftLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			bool isFirstWin = this.m_riftComponent.IsFirstPassLevel(msg.RiftLevelId);
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_riftComponent.FinishBattleRiftLevel(msg.RiftLevelId, msg.AchievementIds, msg.GainStars, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnRiftLevelBattleFinishedAck != null)
			{
				this.EventOnRiftLevelBattleFinishedAck(msg.Result, msg.GainStars, battleReward, isFirstWin, msg.AchievementIds);
			}
		}

		// Token: 0x06007E75 RID: 32373 RVA: 0x0024B5F8 File Offset: 0x002497F8
		private void OnMessage(RiftLevelRaidAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRiftLevelRaidAck_hotfix != null)
			{
				this.m_OnMessageRiftLevelRaidAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				list.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.RaidRewards));
				int num = this.m_riftComponent.RaidRiftLevel(msg.LevelId, msg.Nums);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnRiftLevelRaidAck != null)
			{
				this.EventOnRiftLevelRaidAck(msg.Result, battleReward, list);
			}
		}

		// Token: 0x06007E76 RID: 32374 RVA: 0x0024B714 File Offset: 0x00249914
		private void OnMessage(RiftChapterRewardGainAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageRiftChapterRewardGainAck_hotfix != null)
			{
				this.m_OnMessageRiftChapterRewardGainAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_riftComponent.GainChapterReward(msg.ChapterId, msg.Index);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnRiftChapterRewardGainAck != null)
			{
				this.EventOnRiftChapterRewardGainAck(msg.Result, battleReward);
			}
		}

		// Token: 0x06007E77 RID: 32375 RVA: 0x0024B810 File Offset: 0x00249A10
		public int CanUnlockRiftChapter(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnlockRiftChapterInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnlockRiftChapterInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.CanUnlockChapter(chapterId);
		}

		// Token: 0x06007E78 RID: 32376 RVA: 0x0024B898 File Offset: 0x00249A98
		public int GetRiftChapterTotalStars(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftChapterTotalStarsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftChapterTotalStarsInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.GetChapterTotalStars(chapterId);
		}

		// Token: 0x06007E79 RID: 32377 RVA: 0x0024B920 File Offset: 0x00249B20
		public int GetRiftChapterTotalStarsMax(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftChapterTotalStarsMaxInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftChapterTotalStarsMaxInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftChapterInfo configDataRiftChapterInfo = this.m_configDataLoader.GetConfigDataRiftChapterInfo(chapterId);
			if (configDataRiftChapterInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (ConfigDataRiftLevelInfo configDataRiftLevelInfo in configDataRiftChapterInfo.m_levelInfos)
			{
				if (configDataRiftLevelInfo.LevelType != RiftLevelType.RiftLevelType_Event)
				{
					num += this.m_configDataLoader.ConfigableConstId_RiftLevelMaxStar;
				}
			}
			return num;
		}

		// Token: 0x06007E7A RID: 32378 RVA: 0x0024B9F8 File Offset: 0x00249BF8
		public int GetRiftChapterTotalAchievementCount(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftChapterTotalAchievementCountInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftChapterTotalAchievementCountInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftChapterInfo configDataRiftChapterInfo = this.m_configDataLoader.GetConfigDataRiftChapterInfo(chapterId);
			if (configDataRiftChapterInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (ConfigDataRiftLevelInfo configDataRiftLevelInfo in configDataRiftChapterInfo.m_levelInfos)
			{
				foreach (BattleLevelAchievement battleLevelAchievement in configDataRiftLevelInfo.m_achievements)
				{
					if (this.HasRiftLevelAchievement(battleLevelAchievement.m_achievementRelatedInfo.ID))
					{
						num++;
					}
				}
			}
			return num;
		}

		// Token: 0x06007E7B RID: 32379 RVA: 0x0024BAF4 File Offset: 0x00249CF4
		public int GetRiftChapterTotalAchievementCountMax(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftChapterTotalAchievementCountMaxInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftChapterTotalAchievementCountMaxInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftChapterInfo configDataRiftChapterInfo = this.m_configDataLoader.GetConfigDataRiftChapterInfo(chapterId);
			if (configDataRiftChapterInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (ConfigDataRiftLevelInfo configDataRiftLevelInfo in configDataRiftChapterInfo.m_levelInfos)
			{
				num += configDataRiftLevelInfo.m_achievements.Length;
			}
			return num;
		}

		// Token: 0x06007E7C RID: 32380 RVA: 0x0024BBB8 File Offset: 0x00249DB8
		public int GetRiftChapterTotalBattleTreasureCount(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftChapterTotalBattleTreasureCountInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftChapterTotalBattleTreasureCountInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftChapterInfo configDataRiftChapterInfo = this.m_configDataLoader.GetConfigDataRiftChapterInfo(chapterId);
			if (configDataRiftChapterInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (ConfigDataRiftLevelInfo configDataRiftLevelInfo in configDataRiftChapterInfo.m_levelInfos)
			{
				num += this.GetGainBattleTreasureCount(configDataRiftLevelInfo.m_battleInfo);
			}
			return num;
		}

		// Token: 0x06007E7D RID: 32381 RVA: 0x0024BC80 File Offset: 0x00249E80
		public int GetRiftChapterTotalBattleTreasureCountMax(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftChapterTotalBattleTreasureCountMaxInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftChapterTotalBattleTreasureCountMaxInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftChapterInfo configDataRiftChapterInfo = this.m_configDataLoader.GetConfigDataRiftChapterInfo(chapterId);
			if (configDataRiftChapterInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (ConfigDataRiftLevelInfo configDataRiftLevelInfo in configDataRiftChapterInfo.m_levelInfos)
			{
				num += configDataRiftLevelInfo.m_battleInfo.BattleTreasures_ID.Count;
			}
			return num;
		}

		// Token: 0x06007E7E RID: 32382 RVA: 0x0024BD4C File Offset: 0x00249F4C
		public bool IsRiftChapterUnlockConditionCompleted(int chapterId, RiftChapterUnlockConditionType condition, int param)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRiftChapterUnlockConditionCompletedInt32RiftChapterUnlockConditionTypeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRiftChapterUnlockConditionCompletedInt32RiftChapterUnlockConditionTypeInt32_hotfix.call(new object[]
				{
					this,
					chapterId,
					condition,
					param
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.IsRiftChapterUnlockConditionCompleted(chapterId, condition, param);
		}

		// Token: 0x06007E7F RID: 32383 RVA: 0x0024BDF8 File Offset: 0x00249FF8
		public int CanUnlockRiftLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnlockRiftLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnlockRiftLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.CanUnLockLevel(levelId);
		}

		// Token: 0x06007E80 RID: 32384 RVA: 0x0024BE80 File Offset: 0x0024A080
		public int CanAttackRiftLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackRiftLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackRiftLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftLevelInfo configDataRiftLevelInfo = this.m_configDataLoader.GetConfigDataRiftLevelInfo(levelId);
			if (configDataRiftLevelInfo == null)
			{
				return -808;
			}
			int num = this.CanUnlockRiftChapter(configDataRiftLevelInfo.m_chapterId);
			if (num != 0)
			{
				return num;
			}
			return this.m_riftComponent.CanAttackLevel(levelId);
		}

		// Token: 0x06007E81 RID: 32385 RVA: 0x0024BF38 File Offset: 0x0024A138
		public int CanRaidRiftLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanRaidRiftLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanRaidRiftLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftLevelInfo configDataRiftLevelInfo = this.m_configDataLoader.GetConfigDataRiftLevelInfo(levelId);
			if (configDataRiftLevelInfo == null)
			{
				return -808;
			}
			return this.m_riftComponent.CanRaidLevel(configDataRiftLevelInfo);
		}

		// Token: 0x06007E82 RID: 32386 RVA: 0x0024BFDC File Offset: 0x0024A1DC
		public RiftLevelStatus GetRiftLevelStatus(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftLevelStatusInt32_hotfix != null)
			{
				return (RiftLevelStatus)this.m_GetRiftLevelStatusInt32_hotfix.call(new object[]
				{
					this,
					levelId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftLevelInfo configDataRiftLevelInfo = this.m_configDataLoader.GetConfigDataRiftLevelInfo(levelId);
			if (configDataRiftLevelInfo == null)
			{
				return RiftLevelStatus.Close;
			}
			int num = this.CanUnlockRiftLevel(levelId);
			if (num == 0)
			{
				return RiftLevelStatus.Open;
			}
			if (num != -809)
			{
				return RiftLevelStatus.Lock;
			}
			if (configDataRiftLevelInfo.UnlockConditions.Count > 0)
			{
				return RiftLevelStatus.CloseLock;
			}
			return RiftLevelStatus.Close;
		}

		// Token: 0x06007E83 RID: 32387 RVA: 0x0024C0A0 File Offset: 0x0024A2A0
		public RiftLevelStatus GetEventRiftLevelStatus(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetEventRiftLevelStatusInt32_hotfix != null)
			{
				return (RiftLevelStatus)this.m_GetEventRiftLevelStatusInt32_hotfix.call(new object[]
				{
					this,
					levelId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.CanUnlockRiftLevel(levelId) != 0)
			{
				return RiftLevelStatus.Lock;
			}
			if (this.m_riftComponent.IsLevelFinished(levelId))
			{
				return RiftLevelStatus.Close;
			}
			return RiftLevelStatus.Open;
		}

		// Token: 0x06007E84 RID: 32388 RVA: 0x0024C140 File Offset: 0x0024A340
		public bool IsRiftLevelUnlockConditionCompleted(int levelId, RiftLevelUnlockConditionType condition, int param)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRiftLevelUnlockConditionCompletedInt32RiftLevelUnlockConditionTypeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRiftLevelUnlockConditionCompletedInt32RiftLevelUnlockConditionTypeInt32_hotfix.call(new object[]
				{
					this,
					levelId,
					condition,
					param
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.IsRiftLevelUnlockConditionCompleted(levelId, condition, param);
		}

		// Token: 0x06007E85 RID: 32389 RVA: 0x0024C1EC File Offset: 0x0024A3EC
		public int GetRiftLevelChallengeNum(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftLevelChallengeNumInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftLevelChallengeNumInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.GetRiftLevelChallengeNum(levelId);
		}

		// Token: 0x06007E86 RID: 32390 RVA: 0x0024C274 File Offset: 0x0024A474
		public int GetRiftLevelCanChallengeNums(ConfigDataRiftLevelInfo levelInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftLevelCanChallengeNumsConfigDataRiftLevelInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftLevelCanChallengeNumsConfigDataRiftLevelInfo_hotfix.call(new object[]
				{
					this,
					levelInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.GetRiftLevelCanChallengeNums(levelInfo);
		}

		// Token: 0x06007E87 RID: 32391 RVA: 0x0024C2FC File Offset: 0x0024A4FC
		public int GetRiftLevelCanChallengeMaxNums(ConfigDataRiftLevelInfo levelInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftLevelCanChallengeMaxNumsConfigDataRiftLevelInfo_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftLevelCanChallengeMaxNumsConfigDataRiftLevelInfo_hotfix.call(new object[]
				{
					this,
					levelInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.GetRiftLevelCanChallengeMaxNums(levelInfo);
		}

		// Token: 0x06007E88 RID: 32392 RVA: 0x0024C384 File Offset: 0x0024A584
		public bool IsRiftLevelChallenged(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsRiftLevelChallengedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsRiftLevelChallengedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.IsRiftLevelChallenged(levelId);
		}

		// Token: 0x06007E89 RID: 32393 RVA: 0x0024C40C File Offset: 0x0024A60C
		public int GetRiftLevelStars(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftLevelStarsInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftLevelStarsInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.GetRiftLevelStars(levelId);
		}

		// Token: 0x06007E8A RID: 32394 RVA: 0x0024C494 File Offset: 0x0024A694
		public int GetRiftLevelAchievementCount(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftLevelAchievementCountInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetRiftLevelAchievementCountInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftLevelInfo configDataRiftLevelInfo = this.m_configDataLoader.GetConfigDataRiftLevelInfo(levelId);
			if (configDataRiftLevelInfo == null)
			{
				return 0;
			}
			int num = 0;
			foreach (BattleLevelAchievement battleLevelAchievement in configDataRiftLevelInfo.m_achievements)
			{
				if (this.HasRiftLevelAchievement(battleLevelAchievement.m_achievementRelatedInfo.ID))
				{
					num++;
				}
			}
			return num;
		}

		// Token: 0x06007E8B RID: 32395 RVA: 0x0024C568 File Offset: 0x0024A768
		public bool HasRiftLevelAchievement(int achievementRelatedId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_HasRiftLevelAchievementInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_HasRiftLevelAchievementInt32_hotfix.call(new object[]
				{
					this,
					achievementRelatedId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.HasGotAchievementRelationId(achievementRelatedId);
		}

		// Token: 0x06007E8C RID: 32396 RVA: 0x0024C5F0 File Offset: 0x0024A7F0
		public int CanGainRiftChapterStarReward(int chapterId, int index)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGainRiftChapterStarRewardInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanGainRiftChapterStarRewardInt32Int32_hotfix.call(new object[]
				{
					this,
					chapterId,
					index
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.CanGainChapterStarReward(chapterId, index);
		}

		// Token: 0x06007E8D RID: 32397 RVA: 0x0024C68C File Offset: 0x0024A88C
		public GainRewardStatus GetRiftChapterStarRewardStatus(int chapterId, int index)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftChapterStarRewardStatusInt32Int32_hotfix != null)
			{
				return (GainRewardStatus)this.m_GetRiftChapterStarRewardStatusInt32Int32_hotfix.call(new object[]
				{
					this,
					chapterId,
					index
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int num = this.CanGainRiftChapterStarReward(chapterId, index);
			if (num == -804)
			{
				return GainRewardStatus.Got;
			}
			if (num == 0)
			{
				return GainRewardStatus.CanGet;
			}
			return GainRewardStatus.CanNotGet;
		}

		// Token: 0x06007E8E RID: 32398 RVA: 0x0024C738 File Offset: 0x0024A938
		public bool GetRiftLevelFinished(int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetRiftLevelFinishedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_GetRiftLevelFinishedInt32_hotfix.call(new object[]
				{
					this,
					id
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_riftComponent.m_unLockInfo.FinishedRiftLevelIds.Contains(id);
		}

		// Token: 0x06007E8F RID: 32399 RVA: 0x0024C7CC File Offset: 0x0024A9CC
		private void InitOpenedRiftChapters()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_InitOpenedRiftChapters_hotfix != null)
			{
				this.m_InitOpenedRiftChapters_hotfix.call(new object[]
				{
					this
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_opendRiftChapterIds.Clear();
			foreach (KeyValuePair<int, ConfigDataRiftChapterInfo> keyValuePair in this.m_configDataLoader.GetAllConfigDataRiftChapterInfo())
			{
				if (this.CanUnlockRiftChapter(keyValuePair.Key) == 0)
				{
					this.m_opendRiftChapterIds.Add(keyValuePair.Key);
				}
			}
			this.m_lastOpenedRiftChapterInfo = this.GetLastOpenedRiftChapterInfo();
		}

		// Token: 0x06007E90 RID: 32400 RVA: 0x0024C8B4 File Offset: 0x0024AAB4
		public bool CheckChangeOpenedRiftChapter(int chapterId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckChangeOpenedRiftChapterInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CheckChangeOpenedRiftChapterInt32_hotfix.call(new object[]
				{
					this,
					chapterId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.CanUnlockRiftChapter(chapterId) != 0)
			{
				return false;
			}
			if (this.m_opendRiftChapterIds.Contains(chapterId))
			{
				return false;
			}
			this.m_opendRiftChapterIds.Add(chapterId);
			return true;
		}

		// Token: 0x06007E91 RID: 32401 RVA: 0x0024C960 File Offset: 0x0024AB60
		public bool CheckChangeLastOpenedRiftChapter()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CheckChangeLastOpenedRiftChapter_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CheckChangeLastOpenedRiftChapter_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftChapterInfo lastOpenedRiftChapterInfo = this.GetLastOpenedRiftChapterInfo();
			if (lastOpenedRiftChapterInfo != null && lastOpenedRiftChapterInfo != this.m_lastOpenedRiftChapterInfo)
			{
				this.m_lastOpenedRiftChapterInfo = lastOpenedRiftChapterInfo;
				return true;
			}
			return false;
		}

		// Token: 0x06007E92 RID: 32402 RVA: 0x0024C9F0 File Offset: 0x0024ABF0
		public ConfigDataRiftChapterInfo GetLastOpenedRiftChapterInfo()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetLastOpenedRiftChapterInfo_hotfix != null)
			{
				return (ConfigDataRiftChapterInfo)this.m_GetLastOpenedRiftChapterInfo_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataRiftChapterInfo result = null;
			foreach (KeyValuePair<int, ConfigDataRiftChapterInfo> keyValuePair in this.m_configDataLoader.GetAllConfigDataRiftChapterInfo())
			{
				if (keyValuePair.Value.Hard == 1)
				{
					if (this.CanUnlockRiftChapter(keyValuePair.Key) == 0)
					{
						result = keyValuePair.Value;
					}
				}
			}
			return result;
		}

		// Token: 0x14000159 RID: 345
		// (add) Token: 0x06007E93 RID: 32403 RVA: 0x0024CADC File Offset: 0x0024ACDC
		// (remove) Token: 0x06007E94 RID: 32404 RVA: 0x0024CB78 File Offset: 0x0024AD78
		public event Action<int> EventOnRiftLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRiftLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnRiftLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRiftLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRiftLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRiftLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnRiftLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnRiftLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnRiftLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400015A RID: 346
		// (add) Token: 0x06007E95 RID: 32405 RVA: 0x0024CC14 File Offset: 0x0024AE14
		// (remove) Token: 0x06007E96 RID: 32406 RVA: 0x0024CCB0 File Offset: 0x0024AEB0
		public event ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback EventOnRiftLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix != null)
				{
					this.m_add_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback riftLevelBattleFinishedAckCallback = this.EventOnRiftLevelBattleFinishedAck;
				ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback riftLevelBattleFinishedAckCallback2;
				do
				{
					riftLevelBattleFinishedAckCallback2 = riftLevelBattleFinishedAckCallback;
					riftLevelBattleFinishedAckCallback = Interlocked.CompareExchange<ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback>(ref this.EventOnRiftLevelBattleFinishedAck, (ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback)Delegate.Combine(riftLevelBattleFinishedAckCallback2, value), riftLevelBattleFinishedAckCallback);
				}
				while (riftLevelBattleFinishedAckCallback != riftLevelBattleFinishedAckCallback2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix != null)
				{
					this.m_remove_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback riftLevelBattleFinishedAckCallback = this.EventOnRiftLevelBattleFinishedAck;
				ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback riftLevelBattleFinishedAckCallback2;
				do
				{
					riftLevelBattleFinishedAckCallback2 = riftLevelBattleFinishedAckCallback;
					riftLevelBattleFinishedAckCallback = Interlocked.CompareExchange<ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback>(ref this.EventOnRiftLevelBattleFinishedAck, (ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback)Delegate.Remove(riftLevelBattleFinishedAckCallback2, value), riftLevelBattleFinishedAckCallback);
				}
				while (riftLevelBattleFinishedAckCallback != riftLevelBattleFinishedAckCallback2);
			}
		}

		// Token: 0x1400015B RID: 347
		// (add) Token: 0x06007E97 RID: 32407 RVA: 0x0024CD4C File Offset: 0x0024AF4C
		// (remove) Token: 0x06007E98 RID: 32408 RVA: 0x0024CDE8 File Offset: 0x0024AFE8
		public event Action<int, BattleReward, List<Goods>> EventOnRiftLevelRaidAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRiftLevelRaidAckAction`3_hotfix != null)
				{
					this.m_add_EventOnRiftLevelRaidAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward, List<Goods>> action = this.EventOnRiftLevelRaidAck;
				Action<int, BattleReward, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward, List<Goods>>>(ref this.EventOnRiftLevelRaidAck, (Action<int, BattleReward, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRiftLevelRaidAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnRiftLevelRaidAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward, List<Goods>> action = this.EventOnRiftLevelRaidAck;
				Action<int, BattleReward, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward, List<Goods>>>(ref this.EventOnRiftLevelRaidAck, (Action<int, BattleReward, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400015C RID: 348
		// (add) Token: 0x06007E99 RID: 32409 RVA: 0x0024CE84 File Offset: 0x0024B084
		// (remove) Token: 0x06007E9A RID: 32410 RVA: 0x0024CF20 File Offset: 0x0024B120
		public event Action<int, BattleReward> EventOnRiftChapterRewardGainAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnRiftChapterRewardGainAckAction`2_hotfix != null)
				{
					this.m_add_EventOnRiftChapterRewardGainAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnRiftChapterRewardGainAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnRiftChapterRewardGainAck, (Action<int, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnRiftChapterRewardGainAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnRiftChapterRewardGainAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, BattleReward> action = this.EventOnRiftChapterRewardGainAck;
				Action<int, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, BattleReward>>(ref this.EventOnRiftChapterRewardGainAck, (Action<int, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007E9B RID: 32411 RVA: 0x0024CFBC File Offset: 0x0024B1BC
		public bool SendSelectCardReq(int cardPoolId, bool isSingleSlect, bool isUsingTicket)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendSelectCardReqInt32BooleanBoolean_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendSelectCardReqInt32BooleanBoolean_hotfix.call(new object[]
				{
					this,
					cardPoolId,
					isSingleSlect,
					isUsingTicket
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new SelectCardReq
			{
				CardPoolId = cardPoolId,
				IsSingleSelect = isSingleSlect,
				IsUsingTicket = isUsingTicket
			});
		}

		// Token: 0x06007E9C RID: 32412 RVA: 0x0024D07C File Offset: 0x0024B27C
		private void OnMessage(DSSelectCardNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSSelectCardNtf_hotfix != null)
			{
				this.m_OnMessageDSSelectCardNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_selectCardComponent.DeSerialize(msg);
		}

		// Token: 0x06007E9D RID: 32413 RVA: 0x0024D0F8 File Offset: 0x0024B2F8
		private void OnMessage(SelectCardAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageSelectCardAck_hotfix != null)
			{
				this.m_OnMessageSelectCardAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Ntf != null)
				{
					this.SetHeroRewardToFragmentDict(msg.Ntf.Changed);
					this.SetRewardFlags(msg.SelectedGoods);
					this.OnMessage(msg.Ntf);
					foreach (ProGoods proGoods in msg.SelectedGoods)
					{
						if (proGoods.GoodsType == 4)
						{
							this.m_selectCardComponent.SelectHeroCard(proGoods.Id);
						}
					}
					list.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.SelectedGoods));
				}
				this.m_selectCardComponent.SelectCard(msg.CardPoolId, msg.IsSingleSelect, msg.IsUsingTicket, msg.GuaranteedAccumulatedValue, msg.GuaranteedSelectCardCount);
			}
			if (this.EventOnCardSelectAck != null)
			{
				this.EventOnCardSelectAck(msg.Result, list);
			}
		}

		// Token: 0x1400015D RID: 349
		// (add) Token: 0x06007E9E RID: 32414 RVA: 0x0024D26C File Offset: 0x0024B46C
		// (remove) Token: 0x06007E9F RID: 32415 RVA: 0x0024D308 File Offset: 0x0024B508
		public event Action<int, List<Goods>> EventOnCardSelectAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnCardSelectAckAction`2_hotfix != null)
				{
					this.m_add_EventOnCardSelectAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnCardSelectAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnCardSelectAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnCardSelectAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnCardSelectAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnCardSelectAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnCardSelectAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007EA0 RID: 32416 RVA: 0x0024D3A4 File Offset: 0x0024B5A4
		public bool[] GetSelectRewardsIsFirstGetArray()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetSelectRewardsIsFirstGetArray_hotfix != null)
			{
				return (bool[])this.m_GetSelectRewardsIsFirstGetArray_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_rewardFlags;
		}

		// Token: 0x06007EA1 RID: 32417 RVA: 0x0024D418 File Offset: 0x0024B618
		private void SetRewardFlags(List<ProGoods> goodsList)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetRewardFlagsList`1_hotfix != null)
			{
				this.m_SetRewardFlagsList`1_hotfix.call(new object[]
				{
					this,
					goodsList
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ProjectLPlayerContext projectLPlayerContext = GameManager.Instance.PlayerContext as ProjectLPlayerContext;
			for (int i = 0; i < goodsList.Count; i++)
			{
				ProGoods proGoods = goodsList[i];
				GoodsType goodsType = (GoodsType)proGoods.GoodsType;
				bool flag = false;
				switch (goodsType)
				{
				case GoodsType.GoodsType_Hero:
					flag = (projectLPlayerContext.GetHero(proGoods.Id) == null);
					break;
				case GoodsType.GoodsType_JobMaterial:
				case GoodsType.GoodsType_Item:
				case GoodsType.GoodsType_Equipment:
					flag = !projectLPlayerContext.IsExistBagItemIgnoreInstanceDifference(goodsType, proGoods.Id);
					break;
				}
				this.m_rewardFlags[i] = flag;
			}
		}

		// Token: 0x06007EA2 RID: 32418 RVA: 0x0024D550 File Offset: 0x0024B750
		public Dictionary<int, bool> GetIsSelectHeroRewardTransferToFragmentDict()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetIsSelectHeroRewardTransferToFragmentDict_hotfix != null)
			{
				return (Dictionary<int, bool>)this.m_GetIsSelectHeroRewardTransferToFragmentDict_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_isSelectHeroRewardTransferToFragmentDict;
		}

		// Token: 0x06007EA3 RID: 32419 RVA: 0x0024D5C4 File Offset: 0x0024B7C4
		private void SetHeroRewardToFragmentDict(List<ProGoods> goodsList)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetHeroRewardToFragmentDictList`1_hotfix != null)
			{
				this.m_SetHeroRewardToFragmentDictList`1_hotfix.call(new object[]
				{
					this,
					goodsList
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_isSelectHeroRewardTransferToFragmentDict.Clear();
			foreach (ProGoods proGoods in goodsList)
			{
				if (proGoods.GoodsType == 4)
				{
					this.m_isSelectHeroRewardTransferToFragmentDict[proGoods.Id] = false;
				}
			}
		}

		// Token: 0x06007EA4 RID: 32420 RVA: 0x0024D6A0 File Offset: 0x0024B8A0
		public CardPool GetCardPoolById(int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCardPoolByIdInt32_hotfix != null)
			{
				return (CardPool)this.m_GetCardPoolByIdInt32_hotfix.call(new object[]
				{
					this,
					id
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_selectCardComponent.GetCardPoolById(id, true);
		}

		// Token: 0x06007EA5 RID: 32421 RVA: 0x0024D72C File Offset: 0x0024B92C
		public List<CardPool> GetActivityCardPoolList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetActivityCardPoolList_hotfix != null)
			{
				return (List<CardPool>)this.m_GetActivityCardPoolList_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_selectCardComponent.GetActivityCardPool();
		}

		// Token: 0x06007EA6 RID: 32422 RVA: 0x0024D7A4 File Offset: 0x0024B9A4
		public string GetActivityTimeByPoolId(int id)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetActivityTimeByPoolIdInt32_hotfix != null)
			{
				return (string)this.m_GetActivityTimeByPoolIdInt32_hotfix.call(new object[]
				{
					this,
					id
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_selectCardComponent.GetActivityTimeByPoolId(id);
		}

		// Token: 0x06007EA7 RID: 32423 RVA: 0x0024D82C File Offset: 0x0024BA2C
		public OperationalActivityBase FindOperationalActivityByActivityCardPoolId(int activityCardPoolId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_FindOperationalActivityByActivityCardPoolIdInt32_hotfix != null)
			{
				return (OperationalActivityBase)this.m_FindOperationalActivityByActivityCardPoolIdInt32_hotfix.call(new object[]
				{
					this,
					activityCardPoolId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_selectCardComponent.FindOperationalActivityByActivityCardPoolId(activityCardPoolId);
		}

		// Token: 0x06007EA8 RID: 32424 RVA: 0x0024D8B4 File Offset: 0x0024BAB4
		public int IsActivityCardPoolOnActivityTime(int activityCardPoolId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsActivityCardPoolOnActivityTimeInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_IsActivityCardPoolOnActivityTimeInt32_hotfix.call(new object[]
				{
					this,
					activityCardPoolId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_selectCardComponent.IsActivityCardPoolOnActivityTime(activityCardPoolId);
		}

		// Token: 0x06007EA9 RID: 32425 RVA: 0x0024D93C File Offset: 0x0024BB3C
		public int GetActivityCardPoolLastDays(CardPool cardPool)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetActivityCardPoolLastDaysCardPool_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetActivityCardPoolLastDaysCardPool_hotfix.call(new object[]
				{
					this,
					cardPool
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (cardPool.Config.PoolType == CardPoolType.CardPoolType_ActivityCardPool)
			{
				OperationalActivityBase operationalActivityBase = this.m_selectCardComponent.FindOperationalActivityByActivityCardPoolId(cardPool.PoolId);
				return (operationalActivityBase.OperationEndTime.Date - this.GetServerTime().Date).Days + 1;
			}
			return 0;
		}

		// Token: 0x06007EAA RID: 32426 RVA: 0x0024DA08 File Offset: 0x0024BC08
		public int CanSelectCard(int cardPoolId, bool isSingleSelect, bool isUsingTickets = true)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanSelectCardInt32BooleanBoolean_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanSelectCardInt32BooleanBoolean_hotfix.call(new object[]
				{
					this,
					cardPoolId,
					isSingleSelect,
					isUsingTickets
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_selectCardComponent.CanSelectCard(cardPoolId, isSingleSelect, isUsingTickets);
		}

		// Token: 0x06007EAB RID: 32427 RVA: 0x0024DAB4 File Offset: 0x0024BCB4
		public bool SendEverydaySignReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendEverydaySignReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendEverydaySignReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			EverydaySignReq msg = new EverydaySignReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007EAC RID: 32428 RVA: 0x0024DB30 File Offset: 0x0024BD30
		private void OnMessage(EverydaySignAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageEverydaySignAck_hotfix != null)
			{
				this.m_OnMessageEverydaySignAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			if (msg.Result == 0)
			{
				if (msg.Changed.Count != 0)
				{
					this.AppendChangedGoodsToRewards(msg.Changed, list);
					this.SetChangedGoodsListStatus(msg.Changed);
				}
				this.m_playerBasicInfoComponent.EveryDaySign(msg.SignDays, msg.SignTime);
			}
			if (this.EventOnEverydaySignAck != null)
			{
				this.EventOnEverydaySignAck(msg.Result, list);
			}
		}

		// Token: 0x06007EAD RID: 32429 RVA: 0x0024DC10 File Offset: 0x0024BE10
		public int CanSignToday()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanSignToday_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanSignToday_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.CanSignToday();
		}

		// Token: 0x06007EAE RID: 32430 RVA: 0x0024DC88 File Offset: 0x0024BE88
		public int GetSignDaysMonth()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetSignDaysMonth_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetSignDaysMonth_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.m_playerBasicDS.SignDays;
		}

		// Token: 0x06007EAF RID: 32431 RVA: 0x0024DD04 File Offset: 0x0024BF04
		public List<List<Goods>> GetMonthRewardList(int month)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetMonthRewardListInt32_hotfix != null)
			{
				return (List<List<Goods>>)this.m_GetMonthRewardListInt32_hotfix.call(new object[]
				{
					this,
					month
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<List<Goods>> list = new List<List<Goods>>();
			MonthSignRewardInfo monthSignRewardInfo;
			bool flag = this.m_configDataLoader.SignRewardData.MonthRewards.TryGetValue(month, out monthSignRewardInfo);
			if (flag)
			{
				DateTime serverTime = this.GetServerTime();
				for (int i = 1; i <= DateTime.DaysInMonth(serverTime.Year, serverTime.Month); i++)
				{
					List<Goods> list2;
					if (monthSignRewardInfo.SignRewards.TryGetValue(i, out list2))
					{
						list.Add(monthSignRewardInfo.SignRewards[i]);
					}
				}
				return list;
			}
			global::Debug.LogError("Don't have SignMonthReward!");
			return null;
		}

		// Token: 0x06007EB0 RID: 32432 RVA: 0x0024DE0C File Offset: 0x0024C00C
		public List<Goods> GetSignRewardMonthList(int month)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetSignRewardMonthListInt32_hotfix != null)
			{
				return (List<Goods>)this.m_GetSignRewardMonthListInt32_hotfix.call(new object[]
				{
					this,
					month
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<Goods> list = new List<Goods>();
			DateTime serverTime = this.GetServerTime();
			for (int i = 1; i <= DateTime.DaysInMonth(serverTime.Year, serverTime.Month); i++)
			{
				Goods oneDaySignReward = this.GetOneDaySignReward(month, i);
				list.Add(oneDaySignReward);
			}
			return list;
		}

		// Token: 0x06007EB1 RID: 32433 RVA: 0x0024DECC File Offset: 0x0024C0CC
		public bool TodayIsSigned()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_TodayIsSigned_hotfix != null)
			{
				return Convert.ToBoolean(this.m_TodayIsSigned_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.IsSigned();
		}

		// Token: 0x06007EB2 RID: 32434 RVA: 0x0024DF44 File Offset: 0x0024C144
		public Goods GetTodaySignReward()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTodaySignReward_hotfix != null)
			{
				return (Goods)this.m_GetTodaySignReward_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			int month = this.GetServerTime().Month;
			int index;
			if (this.m_playerBasicInfoComponent.IsSigned())
			{
				index = this.GetSignDaysMonth();
			}
			else
			{
				index = this.GetSignDaysMonth() + 1;
			}
			List<List<Goods>> monthRewardList = this.GetMonthRewardList(month);
			List<Goods> list = monthRewardList[index];
			if (list != null)
			{
				return list[0];
			}
			global::Debug.LogError("Don't have SignTodayReward!");
			return null;
		}

		// Token: 0x06007EB3 RID: 32435 RVA: 0x0024E010 File Offset: 0x0024C210
		public Goods GetOneDaySignReward(int month, int day)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetOneDaySignRewardInt32Int32_hotfix != null)
			{
				return (Goods)this.m_GetOneDaySignRewardInt32Int32_hotfix.call(new object[]
				{
					this,
					month,
					day
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<List<Goods>> monthRewardList = this.GetMonthRewardList(month);
			if (day <= monthRewardList.Count)
			{
				int index = day - 1;
				List<Goods> list = monthRewardList[index];
				return list[0];
			}
			global::Debug.LogError("Don't have SignDayReward!");
			return null;
		}

		// Token: 0x1400015E RID: 350
		// (add) Token: 0x06007EB4 RID: 32436 RVA: 0x0024E0D0 File Offset: 0x0024C2D0
		// (remove) Token: 0x06007EB5 RID: 32437 RVA: 0x0024E16C File Offset: 0x0024C36C
		public event Action<int, List<Goods>> EventOnEverydaySignAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnEverydaySignAckAction`2_hotfix != null)
				{
					this.m_add_EventOnEverydaySignAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnEverydaySignAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnEverydaySignAck, (Action<int, List<Goods>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnEverydaySignAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnEverydaySignAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<Goods>> action = this.EventOnEverydaySignAck;
				Action<int, List<Goods>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<Goods>>>(ref this.EventOnEverydaySignAck, (Action<int, List<Goods>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007EB6 RID: 32438 RVA: 0x0024E208 File Offset: 0x0024C408
		public bool SendOpenSurveyReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendOpenSurveyReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendOpenSurveyReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			OpenSurveyReq msg = new OpenSurveyReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007EB7 RID: 32439 RVA: 0x0024E284 File Offset: 0x0024C484
		public bool SendGetSurveyRewardReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendGetSurveyRewardReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendGetSurveyRewardReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			GetSurveyRewardReq msg = new GetSurveyRewardReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007EB8 RID: 32440 RVA: 0x0024E300 File Offset: 0x0024C500
		private void OnMessage(DSSurveyNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSSurveyNtf_hotfix != null)
			{
				this.m_OnMessageDSSurveyNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_surveyComponent.DeSerialize(msg);
		}

		// Token: 0x06007EB9 RID: 32441 RVA: 0x0024E37C File Offset: 0x0024C57C
		private void OnMessage(NewSurveyNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageNewSurveyNtf_hotfix != null)
			{
				this.m_OnMessageNewSurveyNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_surveyComponent.SetCurrentSurvey(Survey.ToSurvey(msg.Survey));
		}

		// Token: 0x06007EBA RID: 32442 RVA: 0x0024E404 File Offset: 0x0024C604
		private void OnMessage(UpdateSurveyNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUpdateSurveyNtf_hotfix != null)
			{
				this.m_OnMessageUpdateSurveyNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_surveyComponent.SetCurrentSurvey(Survey.ToSurvey(msg.Survey));
		}

		// Token: 0x06007EBB RID: 32443 RVA: 0x0024E48C File Offset: 0x0024C68C
		private void OnMessage(GetSurveyRewardAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageGetSurveyRewardAck_hotfix != null)
			{
				this.m_OnMessageGetSurveyRewardAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_surveyComponent.SetSurveyStatus(SurveyStatus.Finished);
			}
			if (this.EventOnGetSurveyRewardAck != null)
			{
				this.EventOnGetSurveyRewardAck(msg.Result);
			}
		}

		// Token: 0x06007EBC RID: 32444 RVA: 0x0024E530 File Offset: 0x0024C730
		private void OnMessage(OpenSurveyAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageOpenSurveyAck_hotfix != null)
			{
				this.m_OnMessageOpenSurveyAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_surveyComponent.SetSurveyStatus(SurveyStatus.Open);
			}
			if (this.EventOnOpenSurveyAck != null)
			{
				this.EventOnOpenSurveyAck(msg.Result);
			}
		}

		// Token: 0x06007EBD RID: 32445 RVA: 0x0024E5D4 File Offset: 0x0024C7D4
		public SurveyStatus GetCurrentSurveyStatus()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetCurrentSurveyStatus_hotfix != null)
			{
				return (SurveyStatus)this.m_GetCurrentSurveyStatus_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_surveyComponent.GetCurrentSurveyStatus();
		}

		// Token: 0x1400015F RID: 351
		// (add) Token: 0x06007EBE RID: 32446 RVA: 0x0024E64C File Offset: 0x0024C84C
		// (remove) Token: 0x06007EBF RID: 32447 RVA: 0x0024E6E8 File Offset: 0x0024C8E8
		public event Action<int> EventOnOpenSurveyAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnOpenSurveyAckAction`1_hotfix != null)
				{
					this.m_add_EventOnOpenSurveyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnOpenSurveyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnOpenSurveyAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnOpenSurveyAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnOpenSurveyAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnOpenSurveyAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnOpenSurveyAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000160 RID: 352
		// (add) Token: 0x06007EC0 RID: 32448 RVA: 0x0024E784 File Offset: 0x0024C984
		// (remove) Token: 0x06007EC1 RID: 32449 RVA: 0x0024E820 File Offset: 0x0024CA20
		public event Action<int> EventOnGetSurveyRewardAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnGetSurveyRewardAckAction`1_hotfix != null)
				{
					this.m_add_EventOnGetSurveyRewardAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGetSurveyRewardAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGetSurveyRewardAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnGetSurveyRewardAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnGetSurveyRewardAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnGetSurveyRewardAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnGetSurveyRewardAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007EC2 RID: 32450 RVA: 0x0024E8BC File Offset: 0x0024CABC
		public int CanGainSurveyReward()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGainSurveyReward_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanGainSurveyReward_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_surveyComponent.CanGainSurveyReward();
		}

		// Token: 0x06007EC3 RID: 32451 RVA: 0x0024E934 File Offset: 0x0024CB34
		public bool SendTeamRoomCreateReq(TeamRoomSetting setting)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomCreateReqTeamRoomSetting_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomCreateReqTeamRoomSetting_hotfix.call(new object[]
				{
					this,
					setting
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new TeamRoomCreateReq
			{
				Setting = TeamRoomSetting.TeamRoomSettingToPbTeamRoomSetting(setting)
			});
		}

		// Token: 0x06007EC4 RID: 32452 RVA: 0x0024E9CC File Offset: 0x0024CBCC
		public bool SendTeamRoomViewReq(GameFunctionType gameFunctionTypeId, int chapterId, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomViewReqGameFunctionTypeInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomViewReqGameFunctionTypeInt32Int32_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					chapterId,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomViewReq msg = new TeamRoomViewReq
			{
				GameFunctionTypeId = (int)gameFunctionTypeId,
				ChapterId = chapterId,
				LocationId = locationId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007EC5 RID: 32453 RVA: 0x0024EA8C File Offset: 0x0024CC8C
		public bool SendTeamRoomAutoMatchReq(GameFunctionType gameFunctionTypeId, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomAutoMatchReqGameFunctionTypeInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomAutoMatchReqGameFunctionTypeInt32_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomAutoMatchReq msg = new TeamRoomAutoMatchReq
			{
				GameFunctionTypeId = (int)gameFunctionTypeId,
				LocationId = locationId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007EC6 RID: 32454 RVA: 0x0024EB38 File Offset: 0x0024CD38
		public bool SendTeamRoomAutoMatchCancelReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomAutoMatchCancelReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomAutoMatchCancelReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomAutoMatchCancelReq msg = new TeamRoomAutoMatchCancelReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007EC7 RID: 32455 RVA: 0x0024EBB4 File Offset: 0x0024CDB4
		public bool SendTeamRoomAuthorityChangeReq(TeamRoomAuthority authority)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomAuthorityChangeReqTeamRoomAuthority_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomAuthorityChangeReqTeamRoomAuthority_hotfix.call(new object[]
				{
					this,
					authority
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomAuthorityChangeReq msg = new TeamRoomAuthorityChangeReq
			{
				Authority = (int)authority
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007EC8 RID: 32456 RVA: 0x0024EC48 File Offset: 0x0024CE48
		public bool SendTeamRoomJoinReq(int roomId, GameFunctionType gameFunctionTypeId, int locationId, ulong inviterSessionId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomJoinReqInt32GameFunctionTypeInt32UInt64_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomJoinReqInt32GameFunctionTypeInt32UInt64_hotfix.call(new object[]
				{
					this,
					roomId,
					gameFunctionTypeId,
					locationId,
					inviterSessionId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomJoinReq msg = new TeamRoomJoinReq
			{
				RoomId = roomId,
				GameFunctionTypeId = (int)gameFunctionTypeId,
				LocationId = locationId,
				InviterSessionId = inviterSessionId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007EC9 RID: 32457 RVA: 0x0024ED20 File Offset: 0x0024CF20
		public bool SendTeamRoomQuitReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomQuitReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomQuitReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomQuitReq msg = new TeamRoomQuitReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007ECA RID: 32458 RVA: 0x0024ED9C File Offset: 0x0024CF9C
		public bool SendTeamRoomGetReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomGetReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomGetReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomGetReq msg = new TeamRoomGetReq();
			return this.SendMessage(msg);
		}

		// Token: 0x06007ECB RID: 32459 RVA: 0x0024EE18 File Offset: 0x0024D018
		public bool SendTeamRoomInviteReq(List<string> inviteeUserIds)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomInviteReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomInviteReqList`1_hotfix.call(new object[]
				{
					this,
					inviteeUserIds
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomInviteReq teamRoomInviteReq = new TeamRoomInviteReq();
			teamRoomInviteReq.InviteeUserIds.AddRange(inviteeUserIds);
			return this.SendMessage(teamRoomInviteReq);
		}

		// Token: 0x06007ECC RID: 32460 RVA: 0x0024EEB0 File Offset: 0x0024D0B0
		public bool SendTeamRoomInvitationRefusedReq(ulong inviterSessionId, int inviterChannelId, int roomId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomInvitationRefusedReqUInt64Int32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomInvitationRefusedReqUInt64Int32Int32_hotfix.call(new object[]
				{
					this,
					inviterSessionId,
					inviterChannelId,
					roomId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomInvitationRefusedReq msg = new TeamRoomInvitationRefusedReq
			{
				InviterSessionId = inviterSessionId,
				InviterChannelId = inviterChannelId,
				RoomId = roomId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007ECD RID: 32461 RVA: 0x0024EF70 File Offset: 0x0024D170
		public bool SendTeamRoomInviteeInfoGetReq(List<string> inviteeUserIds, TeamRoomInviteeInfoType infoType)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomInviteeInfoGetReqList`1TeamRoomInviteeInfoType_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomInviteeInfoGetReqList`1TeamRoomInviteeInfoType_hotfix.call(new object[]
				{
					this,
					inviteeUserIds,
					infoType
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomInviteeInfoGetReq teamRoomInviteeInfoGetReq = new TeamRoomInviteeInfoGetReq();
			teamRoomInviteeInfoGetReq.InviteeUserIds.AddRange(inviteeUserIds);
			teamRoomInviteeInfoGetReq.Type = (int)infoType;
			return this.SendMessage(teamRoomInviteeInfoGetReq);
		}

		// Token: 0x06007ECE RID: 32462 RVA: 0x0024F01C File Offset: 0x0024D21C
		public bool SendTeamRoomPlayerPositionChangeReq(List<ProTeamRoomPlayerPositionInfo> positionInfo)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTeamRoomPlayerPositionChangeReqList`1_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTeamRoomPlayerPositionChangeReqList`1_hotfix.call(new object[]
				{
					this,
					positionInfo
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomPlayerPositionChangeReq teamRoomPlayerPositionChangeReq = new TeamRoomPlayerPositionChangeReq();
			teamRoomPlayerPositionChangeReq.PositionInfos.AddRange(positionInfo);
			return this.SendMessage(teamRoomPlayerPositionChangeReq);
		}

		// Token: 0x06007ECF RID: 32463 RVA: 0x0024F0B4 File Offset: 0x0024D2B4
		private void OnMessage(DSTeamNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSTeamNtf_hotfix != null)
			{
				this.m_OnMessageDSTeamNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_teamComponent.DeSerialize(msg);
		}

		// Token: 0x06007ED0 RID: 32464 RVA: 0x0024F130 File Offset: 0x0024D330
		private void OnMessage(TeamRoomCreateAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomCreateAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomCreateAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				TeamRoom room = TeamRoom.PbTeamRoomToTeamRoom(msg.Room);
				this.m_teamComponent.CreateTeam(room);
			}
			if (this.EventOnTeamRoomCreateAck != null)
			{
				this.EventOnTeamRoomCreateAck(msg.Result);
			}
		}

		// Token: 0x06007ED1 RID: 32465 RVA: 0x0024F1E4 File Offset: 0x0024D3E4
		private void OnMessage(TeamRoomViewAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomViewAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomViewAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<TeamRoom> list = new List<TeamRoom>();
			if (msg.Result == 0)
			{
				foreach (ProTeamRoom pbRoom in msg.Rooms)
				{
					list.Add(TeamRoom.PbTeamRoomToTeamRoom(pbRoom));
				}
			}
			if (this.EventOnTeamRoomViewAck != null)
			{
				this.EventOnTeamRoomViewAck(msg.Result, list);
			}
		}

		// Token: 0x06007ED2 RID: 32466 RVA: 0x0024F2D8 File Offset: 0x0024D4D8
		private void OnMessage(TeamRoomAutoMatchAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomAutoMatchAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomAutoMatchAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoom room = null;
			if (msg.Result == 0)
			{
				if (msg.Room != null)
				{
					room = TeamRoom.PbTeamRoomToTeamRoom(msg.Room);
				}
				this.m_teamComponent.AutoMatchTeamRoom((GameFunctionType)msg.GameFunctionTypeId, msg.LocationId, room);
			}
			if (this.EventOnTeamRoomAutoMatchAck != null)
			{
				this.EventOnTeamRoomAutoMatchAck(msg.Result, msg.FrontOfYouWaitingNums, msg.Room != null);
			}
		}

		// Token: 0x06007ED3 RID: 32467 RVA: 0x0024F3B4 File Offset: 0x0024D5B4
		private void OnMessage(TeamRoomAutoMatchCancelAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomAutoMatchCancelAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomAutoMatchCancelAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_teamComponent.CancelAutoMatchTeamRoom();
			}
			if (this.EventOnTeamRoomAutoMatchCancelAck != null)
			{
				this.EventOnTeamRoomAutoMatchCancelAck(msg.Result);
			}
		}

		// Token: 0x06007ED4 RID: 32468 RVA: 0x0024F458 File Offset: 0x0024D658
		private void OnMessage(TeamRoomAuthorityChangeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomAuthorityChangeAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomAuthorityChangeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_teamComponent.ChangeTeamRoomAuthority((TeamRoomAuthority)msg.Authority);
			}
			if (this.EventOnTeamRoomAuthorityChangeAck != null)
			{
				this.EventOnTeamRoomAuthorityChangeAck(msg.Result);
			}
		}

		// Token: 0x06007ED5 RID: 32469 RVA: 0x0024F500 File Offset: 0x0024D700
		private void OnMessage(TeamRoomJoinAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomJoinAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomJoinAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				TeamRoom room = TeamRoom.PbTeamRoomToTeamRoom(msg.Room);
				this.m_teamComponent.JoinTeamRoom(room);
				this.m_friendComponent.PVPInviteInfos.Clear();
			}
			if (this.EventOnTeamRoomJoinAck != null)
			{
				this.EventOnTeamRoomJoinAck(msg.Result);
			}
		}

		// Token: 0x06007ED6 RID: 32470 RVA: 0x0024F5C4 File Offset: 0x0024D7C4
		private void OnMessage(TeamRoomQuitAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomQuitAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomQuitAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_teamComponent.QuitTeamRoom();
			}
			if (this.EventOnTeamRoomQuitAck != null)
			{
				this.EventOnTeamRoomQuitAck(msg.Result);
			}
		}

		// Token: 0x06007ED7 RID: 32471 RVA: 0x0024F668 File Offset: 0x0024D868
		private void OnMessage(TeamRoomGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomGetAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0 && msg.Room != null)
			{
				TeamRoom room = TeamRoom.PbTeamRoomToTeamRoom(msg.Room);
				this.m_teamComponent.Room = room;
			}
			if (this.EventOnTeamRoomGetAck != null)
			{
				this.EventOnTeamRoomGetAck(msg.Result, msg.FrontOfYouWaitingNums);
			}
		}

		// Token: 0x06007ED8 RID: 32472 RVA: 0x0024F72C File Offset: 0x0024D92C
		private void OnMessage(TeamRoomInviteAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomInviteAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomInviteAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_teamComponent.InviteTeamRoom();
			if (this.EventOnTeamRoomInviteAck != null)
			{
				this.EventOnTeamRoomInviteAck(msg.Result);
			}
		}

		// Token: 0x06007ED9 RID: 32473 RVA: 0x0024F7C4 File Offset: 0x0024D9C4
		private void OnMessage(TeamRoomInvitationRefusedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomInvitationRefusedAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomInvitationRefusedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_teamComponent.ClearAInviteInfo(msg.InviterSessionId, msg.RoomId);
			if (this.EventOnTeamRoomInvitationRefusedAck != null)
			{
				this.EventOnTeamRoomInvitationRefusedAck(msg.Result);
			}
		}

		// Token: 0x06007EDA RID: 32474 RVA: 0x0024F868 File Offset: 0x0024DA68
		private void OnMessage(TeamRoomInviteeInfoGetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomInviteeInfoGetAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomInviteeInfoGetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnTeamRoomInviteeInfoGetAck != null)
			{
				this.EventOnTeamRoomInviteeInfoGetAck(msg.Result);
			}
		}

		// Token: 0x06007EDB RID: 32475 RVA: 0x0024F8F4 File Offset: 0x0024DAF4
		private void OnMessage(TeamRoomPlayerPositionChangeAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomPlayerPositionChangeAck_hotfix != null)
			{
				this.m_OnMessageTeamRoomPlayerPositionChangeAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnTeamRoomPlayerPositionChangeAck != null)
			{
				this.EventOnTeamRoomPlayerPositionChangeAck(msg.Result);
			}
		}

		// Token: 0x06007EDC RID: 32476 RVA: 0x0024F980 File Offset: 0x0024DB80
		private void OnMessage(TeamRoomPlayerJoinNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomPlayerJoinNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomPlayerJoinNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomPlayer teamRoomPlayer = TeamRoomPlayer.PbTeamRoomPlayerToTeamRoomPlayer(msg.Player);
			this.m_teamComponent.PlayerJoinTeamRoom(teamRoomPlayer);
			if (this.EventOnTeamRoomPlayerJoinNtf != null)
			{
				this.EventOnTeamRoomPlayerJoinNtf(teamRoomPlayer);
			}
		}

		// Token: 0x06007EDD RID: 32477 RVA: 0x0024FA20 File Offset: 0x0024DC20
		private void OnMessage(TeamRoomPlayerQuitNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomPlayerQuitNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomPlayerQuitNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoom room = this.m_teamComponent.Room;
			TeamRoomPlayer teamRoomPlayer = room.FindTeamRoomPlayer(msg.QuitPlayerSessionId);
			this.m_teamComponent.PlayerQuitTeamRoom(teamRoomPlayer, msg.LeaderSessionId, msg.LeaderKickOutTime);
			if (this.EventOnTeamRoomPlayerQuitNtf != null)
			{
				this.EventOnTeamRoomPlayerQuitNtf(teamRoomPlayer);
			}
		}

		// Token: 0x06007EDE RID: 32478 RVA: 0x0024FAD8 File Offset: 0x0024DCD8
		private void OnMessage(TeamRoomPlayerLeaveWaitingListAndJoinRoomNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoom room = TeamRoom.PbTeamRoomToTeamRoom(msg.Room);
			this.m_teamComponent.LeaveWaitingListAndJoinRoom(room);
			if (this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf != null)
			{
				this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf();
			}
		}

		// Token: 0x06007EDF RID: 32479 RVA: 0x0024FB78 File Offset: 0x0024DD78
		private void OnMessage(TeamRoomAuthorityChangeNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomAuthorityChangeNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomAuthorityChangeNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_teamComponent.ChangeTeamRoomAuthority((TeamRoomAuthority)msg.Authority);
			if (this.EventOnTeamRoomAuthorityChangeNtf != null)
			{
				this.EventOnTeamRoomAuthorityChangeNtf((TeamRoomAuthority)msg.Authority);
			}
		}

		// Token: 0x06007EE0 RID: 32480 RVA: 0x0024FC18 File Offset: 0x0024DE18
		private void OnMessage(TeamRoomAutoMatchInfoNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomAutoMatchInfoNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomAutoMatchInfoNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnTeamRoomAutoMatchInfoNtf != null)
			{
				this.EventOnTeamRoomAutoMatchInfoNtf(msg.FrontOfYouWaitingNums);
			}
		}

		// Token: 0x06007EE1 RID: 32481 RVA: 0x0024FCA4 File Offset: 0x0024DEA4
		private void OnMessage(TeamRoomInviteNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomInviteNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomInviteNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoomInviteInfo teamRoomInviteInfo = TeamRoomInviteInfo.PbTeamRoomInviteInfoToTeamRoomInviteInfo(msg.InviteInfo);
			this.m_teamComponent.SetTeamRoomInviteInfo(teamRoomInviteInfo);
			if (this.EventOnTeamRoomInviteNtf != null)
			{
				this.EventOnTeamRoomInviteNtf(teamRoomInviteInfo);
			}
		}

		// Token: 0x06007EE2 RID: 32482 RVA: 0x0024FD44 File Offset: 0x0024DF44
		private void OnMessage(TeamRoomInvitationRefusedNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomInvitationRefusedNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomInvitationRefusedNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnTeamRoomInvitationRefusedNtf != null)
			{
				this.EventOnTeamRoomInvitationRefusedNtf(msg.Result, msg.InviteeName);
			}
		}

		// Token: 0x06007EE3 RID: 32483 RVA: 0x0024FDD8 File Offset: 0x0024DFD8
		private void OnMessage(TeamRoomSelfKickOutNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomSelfKickOutNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomSelfKickOutNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_teamComponent.QuitTeamRoom();
			if (this.EventOnTeamRoomSelfKickOutNtf != null)
			{
				this.EventOnTeamRoomSelfKickOutNtf();
			}
		}

		// Token: 0x06007EE4 RID: 32484 RVA: 0x0024FE6C File Offset: 0x0024E06C
		private void OnMessage(TeamRoomInviteeLevelInfoNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomInviteeLevelInfoNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomInviteeLevelInfoNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (this.EventOnTeamRoomInviteeInfoNtf != null)
			{
				this.EventOnTeamRoomInviteeInfoNtf(msg.InviteeUserId, msg.LevelUnlocked, msg.GuildMassiveCombatAvailable);
			}
		}

		// Token: 0x06007EE5 RID: 32485 RVA: 0x0024FF04 File Offset: 0x0024E104
		private void OnMessage(TeamRoomPlayerPositionChangeNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTeamRoomPlayerPositionChangeNtf_hotfix != null)
			{
				this.m_OnMessageTeamRoomPlayerPositionChangeNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TeamRoom teamRoom = this.GetTeamRoom();
			foreach (ProTeamRoomPlayerPositionInfo proTeamRoomPlayerPositionInfo in msg.PositionInfos)
			{
				TeamRoomPlayer teamRoomPlayer = teamRoom.FindTeamRoomPlayer(proTeamRoomPlayerPositionInfo.SessionId);
				if (teamRoomPlayer != null)
				{
					teamRoomPlayer.Position = proTeamRoomPlayerPositionInfo.Position;
				}
			}
			if (this.EventOnTeamRoomPlayerPositionChangeNtf != null)
			{
				this.EventOnTeamRoomPlayerPositionChangeNtf();
			}
		}

		// Token: 0x06007EE6 RID: 32486 RVA: 0x0024FFF8 File Offset: 0x0024E1F8
		public TeamRoom GetTeamRoom()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTeamRoom_hotfix != null)
			{
				return (TeamRoom)this.m_GetTeamRoom_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.Room;
		}

		// Token: 0x06007EE7 RID: 32487 RVA: 0x00250070 File Offset: 0x0024E270
		public bool IsInTeamRoom()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsInTeamRoom_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsInTeamRoom_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.IsInRoom();
		}

		// Token: 0x06007EE8 RID: 32488 RVA: 0x002500E8 File Offset: 0x0024E2E8
		public bool IsInTeamRoomAutoMatchWaitingList()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsInTeamRoomAutoMatchWaitingList_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsInTeamRoomAutoMatchWaitingList_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.IsInWaitingList();
		}

		// Token: 0x06007EE9 RID: 32489 RVA: 0x00250160 File Offset: 0x0024E360
		public List<TeamRoomInviteInfo> GetTeamRoomInviteInfos()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTeamRoomInviteInfos_hotfix != null)
			{
				return (List<TeamRoomInviteInfo>)this.m_GetTeamRoomInviteInfos_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.GetInviteInfos();
		}

		// Token: 0x06007EEA RID: 32490 RVA: 0x002501D8 File Offset: 0x0024E3D8
		public void RemoveTeamRoomAInviteInfo(ulong sessionId, int roomId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_RemoveTeamRoomAInviteInfoUInt64Int32_hotfix != null)
			{
				this.m_RemoveTeamRoomAInviteInfoUInt64Int32_hotfix.call(new object[]
				{
					this,
					sessionId,
					roomId
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_teamComponent.ClearAInviteInfo(sessionId, roomId);
		}

		// Token: 0x06007EEB RID: 32491 RVA: 0x00250268 File Offset: 0x0024E468
		public int CanUnlockTeamBattle(GameFunctionType gameFunctionType, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanUnlockTeamBattleGameFunctionTypeInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanUnlockTeamBattleGameFunctionTypeInt32_hotfix.call(new object[]
				{
					this,
					gameFunctionType,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.IsLevelUnlocked(gameFunctionType, locationId);
		}

		// Token: 0x06007EEC RID: 32492 RVA: 0x00250304 File Offset: 0x0024E504
		public void SetTeamRoomInviteAgain(bool on)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SetTeamRoomInviteAgainBoolean_hotfix != null)
			{
				this.m_SetTeamRoomInviteAgainBoolean_hotfix.call(new object[]
				{
					this,
					on
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_teamComponent.IsTeamRoomInviteAgain = on;
		}

		// Token: 0x06007EED RID: 32493 RVA: 0x00250380 File Offset: 0x0024E580
		public bool IsTeamRoomInviteAgain()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsTeamRoomInviteAgain_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsTeamRoomInviteAgain_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.IsTeamRoomInviteAgain;
		}

		// Token: 0x06007EEE RID: 32494 RVA: 0x002503F8 File Offset: 0x0024E5F8
		public int CanCreateTeam(TeamRoomSetting setting)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanCreateTeamTeamRoomSetting_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanCreateTeamTeamRoomSetting_hotfix.call(new object[]
				{
					this,
					setting
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.CanCreateTeam(TeamRoomSetting.TeamRoomSettingToPbTeamRoomSetting(setting));
		}

		// Token: 0x06007EEF RID: 32495 RVA: 0x00250488 File Offset: 0x0024E688
		public int CanViewTeamRoom(GameFunctionType gameFunctionTypeId, int chapterId, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanViewTeamRoomGameFunctionTypeInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanViewTeamRoomGameFunctionTypeInt32Int32_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					chapterId,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.CanViewTeamRoom(gameFunctionTypeId, chapterId, locationId);
		}

		// Token: 0x06007EF0 RID: 32496 RVA: 0x00250534 File Offset: 0x0024E734
		public int CanJoinTeamRoom(GameFunctionType gameFunctionTypeId, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanJoinTeamRoomGameFunctionTypeInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanJoinTeamRoomGameFunctionTypeInt32_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.CanJoinTeamRoom(gameFunctionTypeId, locationId);
		}

		// Token: 0x06007EF1 RID: 32497 RVA: 0x002505D0 File Offset: 0x0024E7D0
		public int CanAutoMatchTeamRoom(GameFunctionType gameFunctionTypeId, int locationId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAutoMatchTeamRoomGameFunctionTypeInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAutoMatchTeamRoomGameFunctionTypeInt32_hotfix.call(new object[]
				{
					this,
					gameFunctionTypeId,
					locationId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.CanAutoMatchTeamRoom(gameFunctionTypeId, locationId);
		}

		// Token: 0x06007EF2 RID: 32498 RVA: 0x0025066C File Offset: 0x0024E86C
		public int CanCancelAutoMatchTeamRoom()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanCancelAutoMatchTeamRoom_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanCancelAutoMatchTeamRoom_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_teamComponent.CanCancelAutoMatchTeamRoom();
		}

		// Token: 0x14000161 RID: 353
		// (add) Token: 0x06007EF3 RID: 32499 RVA: 0x002506E4 File Offset: 0x0024E8E4
		// (remove) Token: 0x06007EF4 RID: 32500 RVA: 0x00250780 File Offset: 0x0024E980
		public event Action<int> EventOnTeamRoomCreateAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomCreateAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomCreateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomCreateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomCreateAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomCreateAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomCreateAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomCreateAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomCreateAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000162 RID: 354
		// (add) Token: 0x06007EF5 RID: 32501 RVA: 0x0025081C File Offset: 0x0024EA1C
		// (remove) Token: 0x06007EF6 RID: 32502 RVA: 0x002508B8 File Offset: 0x0024EAB8
		public event Action<int, List<TeamRoom>> EventOnTeamRoomViewAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomViewAckAction`2_hotfix != null)
				{
					this.m_add_EventOnTeamRoomViewAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<TeamRoom>> action = this.EventOnTeamRoomViewAck;
				Action<int, List<TeamRoom>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<TeamRoom>>>(ref this.EventOnTeamRoomViewAck, (Action<int, List<TeamRoom>>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomViewAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomViewAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, List<TeamRoom>> action = this.EventOnTeamRoomViewAck;
				Action<int, List<TeamRoom>> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, List<TeamRoom>>>(ref this.EventOnTeamRoomViewAck, (Action<int, List<TeamRoom>>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000163 RID: 355
		// (add) Token: 0x06007EF7 RID: 32503 RVA: 0x00250954 File Offset: 0x0024EB54
		// (remove) Token: 0x06007EF8 RID: 32504 RVA: 0x002509F0 File Offset: 0x0024EBF0
		public event Action<int, int, bool> EventOnTeamRoomAutoMatchAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomAutoMatchAckAction`3_hotfix != null)
				{
					this.m_add_EventOnTeamRoomAutoMatchAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int, bool> action = this.EventOnTeamRoomAutoMatchAck;
				Action<int, int, bool> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int, bool>>(ref this.EventOnTeamRoomAutoMatchAck, (Action<int, int, bool>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomAutoMatchAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomAutoMatchAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int, bool> action = this.EventOnTeamRoomAutoMatchAck;
				Action<int, int, bool> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int, bool>>(ref this.EventOnTeamRoomAutoMatchAck, (Action<int, int, bool>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000164 RID: 356
		// (add) Token: 0x06007EF9 RID: 32505 RVA: 0x00250A8C File Offset: 0x0024EC8C
		// (remove) Token: 0x06007EFA RID: 32506 RVA: 0x00250B28 File Offset: 0x0024ED28
		public event Action<int> EventOnTeamRoomAutoMatchCancelAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomAutoMatchCancelAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomAutoMatchCancelAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomAutoMatchCancelAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomAutoMatchCancelAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomAutoMatchCancelAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomAutoMatchCancelAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomAutoMatchCancelAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomAutoMatchCancelAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000165 RID: 357
		// (add) Token: 0x06007EFB RID: 32507 RVA: 0x00250BC4 File Offset: 0x0024EDC4
		// (remove) Token: 0x06007EFC RID: 32508 RVA: 0x00250C60 File Offset: 0x0024EE60
		public event Action<int> EventOnTeamRoomAuthorityChangeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomAuthorityChangeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomAuthorityChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomAuthorityChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomAuthorityChangeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomAuthorityChangeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomAuthorityChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomAuthorityChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomAuthorityChangeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000166 RID: 358
		// (add) Token: 0x06007EFD RID: 32509 RVA: 0x00250CFC File Offset: 0x0024EEFC
		// (remove) Token: 0x06007EFE RID: 32510 RVA: 0x00250D98 File Offset: 0x0024EF98
		public event Action<int> EventOnTeamRoomJoinAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomJoinAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomJoinAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomJoinAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomJoinAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomJoinAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomJoinAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomJoinAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomJoinAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000167 RID: 359
		// (add) Token: 0x06007EFF RID: 32511 RVA: 0x00250E34 File Offset: 0x0024F034
		// (remove) Token: 0x06007F00 RID: 32512 RVA: 0x00250ED0 File Offset: 0x0024F0D0
		public event Action<int> EventOnTeamRoomQuitAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomQuitAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomQuitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomQuitAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomQuitAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomQuitAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomQuitAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomQuitAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomQuitAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000168 RID: 360
		// (add) Token: 0x06007F01 RID: 32513 RVA: 0x00250F6C File Offset: 0x0024F16C
		// (remove) Token: 0x06007F02 RID: 32514 RVA: 0x00251008 File Offset: 0x0024F208
		public event Action<int, int> EventOnTeamRoomGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomGetAckAction`2_hotfix != null)
				{
					this.m_add_EventOnTeamRoomGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnTeamRoomGetAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnTeamRoomGetAck, (Action<int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomGetAckAction`2_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomGetAckAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, int> action = this.EventOnTeamRoomGetAck;
				Action<int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, int>>(ref this.EventOnTeamRoomGetAck, (Action<int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000169 RID: 361
		// (add) Token: 0x06007F03 RID: 32515 RVA: 0x002510A4 File Offset: 0x0024F2A4
		// (remove) Token: 0x06007F04 RID: 32516 RVA: 0x00251140 File Offset: 0x0024F340
		public event Action<int> EventOnTeamRoomInviteAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomInviteAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomInviteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomInviteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomInviteAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomInviteAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomInviteAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomInviteAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomInviteAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400016A RID: 362
		// (add) Token: 0x06007F05 RID: 32517 RVA: 0x002511DC File Offset: 0x0024F3DC
		// (remove) Token: 0x06007F06 RID: 32518 RVA: 0x00251278 File Offset: 0x0024F478
		public event Action<int> EventOnTeamRoomInvitationRefusedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomInvitationRefusedAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomInvitationRefusedAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomInvitationRefusedAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomInvitationRefusedAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomInvitationRefusedAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomInvitationRefusedAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomInvitationRefusedAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomInvitationRefusedAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400016B RID: 363
		// (add) Token: 0x06007F07 RID: 32519 RVA: 0x00251314 File Offset: 0x0024F514
		// (remove) Token: 0x06007F08 RID: 32520 RVA: 0x002513B0 File Offset: 0x0024F5B0
		public event Action<int> EventOnTeamRoomInviteeInfoGetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomInviteeInfoGetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomInviteeInfoGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomInviteeInfoGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomInviteeInfoGetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomInviteeInfoGetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomInviteeInfoGetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomInviteeInfoGetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomInviteeInfoGetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400016C RID: 364
		// (add) Token: 0x06007F09 RID: 32521 RVA: 0x0025144C File Offset: 0x0024F64C
		// (remove) Token: 0x06007F0A RID: 32522 RVA: 0x002514E8 File Offset: 0x0024F6E8
		public event Action<TeamRoomPlayer> EventOnTeamRoomPlayerJoinNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomPlayerJoinNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomPlayerJoinNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomPlayer> action = this.EventOnTeamRoomPlayerJoinNtf;
				Action<TeamRoomPlayer> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomPlayer>>(ref this.EventOnTeamRoomPlayerJoinNtf, (Action<TeamRoomPlayer>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomPlayerJoinNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomPlayerJoinNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomPlayer> action = this.EventOnTeamRoomPlayerJoinNtf;
				Action<TeamRoomPlayer> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomPlayer>>(ref this.EventOnTeamRoomPlayerJoinNtf, (Action<TeamRoomPlayer>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400016D RID: 365
		// (add) Token: 0x06007F0B RID: 32523 RVA: 0x00251584 File Offset: 0x0024F784
		// (remove) Token: 0x06007F0C RID: 32524 RVA: 0x00251620 File Offset: 0x0024F820
		public event Action<TeamRoomPlayer> EventOnTeamRoomPlayerQuitNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomPlayerQuitNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomPlayerQuitNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomPlayer> action = this.EventOnTeamRoomPlayerQuitNtf;
				Action<TeamRoomPlayer> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomPlayer>>(ref this.EventOnTeamRoomPlayerQuitNtf, (Action<TeamRoomPlayer>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomPlayerQuitNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomPlayerQuitNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomPlayer> action = this.EventOnTeamRoomPlayerQuitNtf;
				Action<TeamRoomPlayer> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomPlayer>>(ref this.EventOnTeamRoomPlayerQuitNtf, (Action<TeamRoomPlayer>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400016E RID: 366
		// (add) Token: 0x06007F0D RID: 32525 RVA: 0x002516BC File Offset: 0x0024F8BC
		// (remove) Token: 0x06007F0E RID: 32526 RVA: 0x00251758 File Offset: 0x0024F958
		public event Action EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix != null)
				{
					this.m_add_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400016F RID: 367
		// (add) Token: 0x06007F0F RID: 32527 RVA: 0x002517F4 File Offset: 0x0024F9F4
		// (remove) Token: 0x06007F10 RID: 32528 RVA: 0x00251890 File Offset: 0x0024FA90
		public event Action<TeamRoomAuthority> EventOnTeamRoomAuthorityChangeNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomAuthorityChangeNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomAuthorityChangeNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomAuthority> action = this.EventOnTeamRoomAuthorityChangeNtf;
				Action<TeamRoomAuthority> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomAuthority>>(ref this.EventOnTeamRoomAuthorityChangeNtf, (Action<TeamRoomAuthority>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomAuthorityChangeNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomAuthorityChangeNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomAuthority> action = this.EventOnTeamRoomAuthorityChangeNtf;
				Action<TeamRoomAuthority> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomAuthority>>(ref this.EventOnTeamRoomAuthorityChangeNtf, (Action<TeamRoomAuthority>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000170 RID: 368
		// (add) Token: 0x06007F11 RID: 32529 RVA: 0x0025192C File Offset: 0x0024FB2C
		// (remove) Token: 0x06007F12 RID: 32530 RVA: 0x002519C8 File Offset: 0x0024FBC8
		public event Action<int> EventOnTeamRoomAutoMatchInfoNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomAutoMatchInfoNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomAutoMatchInfoNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomAutoMatchInfoNtf;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomAutoMatchInfoNtf, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomAutoMatchInfoNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomAutoMatchInfoNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomAutoMatchInfoNtf;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomAutoMatchInfoNtf, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000171 RID: 369
		// (add) Token: 0x06007F13 RID: 32531 RVA: 0x00251A64 File Offset: 0x0024FC64
		// (remove) Token: 0x06007F14 RID: 32532 RVA: 0x00251B00 File Offset: 0x0024FD00
		public event Action<TeamRoomInviteInfo> EventOnTeamRoomInviteNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomInviteNtfAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomInviteNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomInviteInfo> action = this.EventOnTeamRoomInviteNtf;
				Action<TeamRoomInviteInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomInviteInfo>>(ref this.EventOnTeamRoomInviteNtf, (Action<TeamRoomInviteInfo>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomInviteNtfAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomInviteNtfAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<TeamRoomInviteInfo> action = this.EventOnTeamRoomInviteNtf;
				Action<TeamRoomInviteInfo> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<TeamRoomInviteInfo>>(ref this.EventOnTeamRoomInviteNtf, (Action<TeamRoomInviteInfo>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000172 RID: 370
		// (add) Token: 0x06007F15 RID: 32533 RVA: 0x00251B9C File Offset: 0x0024FD9C
		// (remove) Token: 0x06007F16 RID: 32534 RVA: 0x00251C38 File Offset: 0x0024FE38
		public event Action<int, string> EventOnTeamRoomInvitationRefusedNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomInvitationRefusedNtfAction`2_hotfix != null)
				{
					this.m_add_EventOnTeamRoomInvitationRefusedNtfAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, string> action = this.EventOnTeamRoomInvitationRefusedNtf;
				Action<int, string> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, string>>(ref this.EventOnTeamRoomInvitationRefusedNtf, (Action<int, string>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomInvitationRefusedNtfAction`2_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomInvitationRefusedNtfAction`2_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, string> action = this.EventOnTeamRoomInvitationRefusedNtf;
				Action<int, string> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, string>>(ref this.EventOnTeamRoomInvitationRefusedNtf, (Action<int, string>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000173 RID: 371
		// (add) Token: 0x06007F17 RID: 32535 RVA: 0x00251CD4 File Offset: 0x0024FED4
		// (remove) Token: 0x06007F18 RID: 32536 RVA: 0x00251D70 File Offset: 0x0024FF70
		public event Action EventOnTeamRoomSelfKickOutNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomSelfKickOutNtfAction_hotfix != null)
				{
					this.m_add_EventOnTeamRoomSelfKickOutNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnTeamRoomSelfKickOutNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnTeamRoomSelfKickOutNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomSelfKickOutNtfAction_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomSelfKickOutNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnTeamRoomSelfKickOutNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnTeamRoomSelfKickOutNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000174 RID: 372
		// (add) Token: 0x06007F19 RID: 32537 RVA: 0x00251E0C File Offset: 0x0025000C
		// (remove) Token: 0x06007F1A RID: 32538 RVA: 0x00251EA8 File Offset: 0x002500A8
		public event Action<string, int, int> EventOnTeamRoomInviteeInfoNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomInviteeInfoNtfAction`3_hotfix != null)
				{
					this.m_add_EventOnTeamRoomInviteeInfoNtfAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<string, int, int> action = this.EventOnTeamRoomInviteeInfoNtf;
				Action<string, int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<string, int, int>>(ref this.EventOnTeamRoomInviteeInfoNtf, (Action<string, int, int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomInviteeInfoNtfAction`3_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomInviteeInfoNtfAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<string, int, int> action = this.EventOnTeamRoomInviteeInfoNtf;
				Action<string, int, int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<string, int, int>>(ref this.EventOnTeamRoomInviteeInfoNtf, (Action<string, int, int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000175 RID: 373
		// (add) Token: 0x06007F1B RID: 32539 RVA: 0x00251F44 File Offset: 0x00250144
		// (remove) Token: 0x06007F1C RID: 32540 RVA: 0x00251FE0 File Offset: 0x002501E0
		public event Action<int> EventOnTeamRoomPlayerPositionChangeAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomPlayerPositionChangeAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTeamRoomPlayerPositionChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomPlayerPositionChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomPlayerPositionChangeAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomPlayerPositionChangeAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomPlayerPositionChangeAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTeamRoomPlayerPositionChangeAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTeamRoomPlayerPositionChangeAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000176 RID: 374
		// (add) Token: 0x06007F1D RID: 32541 RVA: 0x0025207C File Offset: 0x0025027C
		// (remove) Token: 0x06007F1E RID: 32542 RVA: 0x00252118 File Offset: 0x00250318
		public event Action EventOnTeamRoomPlayerPositionChangeNtf
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix != null)
				{
					this.m_add_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnTeamRoomPlayerPositionChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnTeamRoomPlayerPositionChangeNtf, (Action)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix != null)
				{
					this.m_remove_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action action = this.EventOnTeamRoomPlayerPositionChangeNtf;
				Action action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action>(ref this.EventOnTeamRoomPlayerPositionChangeNtf, (Action)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007F1F RID: 32543 RVA: 0x002521B4 File Offset: 0x002503B4
		public bool SendThearchyTrialLevelAttackReq(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendThearchyTrialLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendThearchyTrialLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ThearchyTrialLevelAttackReq
			{
				LevelId = levelId
			});
		}

		// Token: 0x06007F20 RID: 32544 RVA: 0x00252244 File Offset: 0x00250444
		public bool SendThearchyTrialLevelBattleFinishedReq(int levelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendThearchyTrialLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendThearchyTrialLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					levelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new ThearchyTrialLevelBattleFinishedReq
			{
				LevelId = levelId,
				BattleReport = battleReport
			});
		}

		// Token: 0x06007F21 RID: 32545 RVA: 0x002522EC File Offset: 0x002504EC
		private void OnMessage(DSThearchyTrialNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSThearchyTrialNtf_hotfix != null)
			{
				this.m_OnMessageDSThearchyTrialNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_thearchyTrialComponent.DeSerialize(msg);
		}

		// Token: 0x06007F22 RID: 32546 RVA: 0x00252368 File Offset: 0x00250568
		private void OnMessage(ThearchyTrialLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageThearchyTrialLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageThearchyTrialLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_thearchyTrialComponent.AttackThearchyTrialLevel(msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnThearchyTrialLevelAttackAck != null)
			{
				this.EventOnThearchyTrialLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007F23 RID: 32547 RVA: 0x00252460 File Offset: 0x00250660
		private void OnMessage(ThearchyTrialLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageThearchyTrialLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageThearchyTrialLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.DailyGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.DailyRewards));
				int num = this.m_thearchyTrialComponent.FinishedThearchyTrialLevel(msg.LevelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnThearchyTrialLevelBattleFinishedAck != null)
			{
				this.EventOnThearchyTrialLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007F24 RID: 32548 RVA: 0x002525AC File Offset: 0x002507AC
		public bool IsThearchyOpened(int thearchyId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsThearchyOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsThearchyOpenedInt32_hotfix.call(new object[]
				{
					this,
					thearchyId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_thearchyTrialComponent.IsThearchyOpened(thearchyId);
		}

		// Token: 0x06007F25 RID: 32549 RVA: 0x00252634 File Offset: 0x00250834
		public bool IsThearchyLevelOpened(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsThearchyLevelOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsThearchyLevelOpenedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_thearchyTrialComponent.IsThearchyLevelOpened(levelId);
		}

		// Token: 0x06007F26 RID: 32550 RVA: 0x002526BC File Offset: 0x002508BC
		public int CanAttackThearchyLevel(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackThearchyLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackThearchyLevelInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_thearchyTrialComponent.CanAttackThearchyTrialLevel(levelId, false);
		}

		// Token: 0x06007F27 RID: 32551 RVA: 0x00252748 File Offset: 0x00250948
		public int GetThearchyTicketCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetThearchyTicketCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetThearchyTicketCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_thearchyTrialComponent.GetCurrentTicketNums();
		}

		// Token: 0x06007F28 RID: 32552 RVA: 0x002527C0 File Offset: 0x002509C0
		public bool IsThearchyTrialLevelFinished(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsThearchyTrialLevelFinishedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsThearchyTrialLevelFinishedInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_thearchyTrialComponent.IsLevelFinished(levelId);
		}

		// Token: 0x06007F29 RID: 32553 RVA: 0x00252848 File Offset: 0x00250A48
		public int GetThearchyDailyRewardRestCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetThearchyDailyRewardRestCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetThearchyDailyRewardRestCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_thearchyTrialComponent.GetDailyChallengNums();
		}

		// Token: 0x14000177 RID: 375
		// (add) Token: 0x06007F2A RID: 32554 RVA: 0x002528C0 File Offset: 0x00250AC0
		// (remove) Token: 0x06007F2B RID: 32555 RVA: 0x0025295C File Offset: 0x00250B5C
		public event Action<int> EventOnThearchyTrialLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnThearchyTrialLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnThearchyTrialLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnThearchyTrialLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnThearchyTrialLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnThearchyTrialLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnThearchyTrialLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnThearchyTrialLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnThearchyTrialLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x14000178 RID: 376
		// (add) Token: 0x06007F2C RID: 32556 RVA: 0x002529F8 File Offset: 0x00250BF8
		// (remove) Token: 0x06007F2D RID: 32557 RVA: 0x00252A94 File Offset: 0x00250C94
		public event Action<int, bool, BattleReward> EventOnThearchyTrialLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnThearchyTrialLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnThearchyTrialLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnThearchyTrialLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnThearchyTrialLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnThearchyTrialLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnThearchyTrialLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnThearchyTrialLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnThearchyTrialLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007F2E RID: 32558 RVA: 0x00252B30 File Offset: 0x00250D30
		public bool SendTechLevelupReq(int TechId, int DeltaLevel = 1)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTechLevelupReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTechLevelupReqInt32Int32_hotfix.call(new object[]
				{
					this,
					TechId,
					DeltaLevel
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			TrainingGroundTechLevelupReq msg = new TrainingGroundTechLevelupReq
			{
				TechId = TechId,
				DeltaLevel = DeltaLevel
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007F2F RID: 32559 RVA: 0x00252BDC File Offset: 0x00250DDC
		private void OnMessage(DSTrainingGroundNtf ntf)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSTrainingGroundNtf_hotfix != null)
			{
				this.m_OnMessageDSTrainingGroundNtf_hotfix.call(new object[]
				{
					this,
					ntf
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_trainingGroundComponent.DeSerialize(ntf);
			this.m_trainingGroundComponent.PostDeSerialize();
		}

		// Token: 0x06007F30 RID: 32560 RVA: 0x00252C64 File Offset: 0x00250E64
		private void OnMessage(TrainingGroundTechLevelupAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTrainingGroundTechLevelupAck_hotfix != null)
			{
				this.m_OnMessageTrainingGroundTechLevelupAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				this.m_trainingGroundComponent.AddTechLevel(msg.Req.TechId, msg.Req.DeltaLevel, false);
			}
			if (this.EventOnTrainingGroundTechLevelupAck != null)
			{
				this.EventOnTrainingGroundTechLevelupAck(msg.Result);
			}
		}

		// Token: 0x06007F31 RID: 32561 RVA: 0x00252D20 File Offset: 0x00250F20
		public TrainingRoom GetTrainingRoomById(int roomId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTrainingRoomByIdInt32_hotfix != null)
			{
				return (TrainingRoom)this.m_GetTrainingRoomByIdInt32_hotfix.call(new object[]
				{
					this,
					roomId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.GetRoom(roomId);
		}

		// Token: 0x06007F32 RID: 32562 RVA: 0x00252DA8 File Offset: 0x00250FA8
		public int CanTechLevelup(int techId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanTechLevelupInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanTechLevelupInt32_hotfix.call(new object[]
				{
					this,
					techId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.CheckTechLevelup(techId, 1);
		}

		// Token: 0x06007F33 RID: 32563 RVA: 0x00252E34 File Offset: 0x00251034
		public bool CanTrainingCourseLevelup(TrainingCourse course)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanTrainingCourseLevelupTrainingCourse_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanTrainingCourseLevelupTrainingCourse_hotfix.call(new object[]
				{
					this,
					course
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (course.Locked)
			{
				return false;
			}
			foreach (int techId in course.Config.Techs)
			{
				if (!this.m_trainingGroundComponent.IsTechLocked(techId) && this.CanTechLevelup(techId) == 0)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007F34 RID: 32564 RVA: 0x00252F34 File Offset: 0x00251134
		public bool CanTrainingRoomLevelup(TrainingRoom room)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanTrainingRoomLevelupTrainingRoom_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanTrainingRoomLevelupTrainingRoom_hotfix.call(new object[]
				{
					this,
					room
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (room.Locked)
			{
				return false;
			}
			foreach (TrainingCourse course in room.Courses)
			{
				if (this.CanTrainingCourseLevelup(course))
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x06007F35 RID: 32565 RVA: 0x0025301C File Offset: 0x0025121C
		public List<TrainingTech> GetTrainingGroundAvailableTechs()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTrainingGroundAvailableTechs_hotfix != null)
			{
				return (List<TrainingTech>)this.m_GetTrainingGroundAvailableTechs_hotfix.call(new object[]
				{
					this
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.GetAvailableTechs();
		}

		// Token: 0x06007F36 RID: 32566 RVA: 0x00253094 File Offset: 0x00251294
		public TrainingTech GetTrainingTechById(int techId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTrainingTechByIdInt32_hotfix != null)
			{
				return (TrainingTech)this.m_GetTrainingTechByIdInt32_hotfix.call(new object[]
				{
					this,
					techId
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.GetTech(techId);
		}

		// Token: 0x06007F37 RID: 32567 RVA: 0x0025311C File Offset: 0x0025131C
		public int GetTechMaxLevel(int TechId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTechMaxLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetTechMaxLevelInt32_hotfix.call(new object[]
				{
					this,
					TechId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.GetTechMaxLevel(TechId);
		}

		// Token: 0x06007F38 RID: 32568 RVA: 0x002531A4 File Offset: 0x002513A4
		public bool IsTechLocked(int TechId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsTechLockedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsTechLockedInt32_hotfix.call(new object[]
				{
					this,
					TechId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.IsTechLocked(TechId);
		}

		// Token: 0x06007F39 RID: 32569 RVA: 0x0025322C File Offset: 0x0025142C
		public bool CanLevelup(int TechId, int DeltaLevel = 1)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanLevelupInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanLevelupInt32Int32_hotfix.call(new object[]
				{
					this,
					TechId,
					DeltaLevel
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.CanLevelup(TechId, DeltaLevel);
		}

		// Token: 0x06007F3A RID: 32570 RVA: 0x002532C8 File Offset: 0x002514C8
		public TrainingTechResourceRequirements GetResourceRequirementsByLevel(int TechId, int Level)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetResourceRequirementsByLevelInt32Int32_hotfix != null)
			{
				return (TrainingTechResourceRequirements)this.m_GetResourceRequirementsByLevelInt32Int32_hotfix.call(new object[]
				{
					this,
					TechId,
					Level
				});
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_trainingGroundComponent.GetResourceRequirementsByLevel(TechId, Level);
		}

		// Token: 0x06007F3B RID: 32571 RVA: 0x00253364 File Offset: 0x00251564
		public int GetTrainingCourseIdByTechId(int techId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTrainingCourseIdByTechIdInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetTrainingCourseIdByTechIdInt32_hotfix.call(new object[]
				{
					this,
					techId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataTrainingTechInfo configDataTrainingTechInfo = this.m_configDataLoader.GetConfigDataTrainingTechInfo(techId);
			return configDataTrainingTechInfo.m_courseId;
		}

		// Token: 0x06007F3C RID: 32572 RVA: 0x002533F4 File Offset: 0x002515F4
		public int GetTrainingRoomIdByTechId(int techId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTrainingRoomIdByTechIdInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetTrainingRoomIdByTechIdInt32_hotfix.call(new object[]
				{
					this,
					techId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataTrainingTechInfo configDataTrainingTechInfo = this.m_configDataLoader.GetConfigDataTrainingTechInfo(techId);
			ConfigDataTrainingCourseInfo configDataTrainingCourseInfo = this.m_configDataLoader.GetConfigDataTrainingCourseInfo(configDataTrainingTechInfo.m_courseId);
			return configDataTrainingCourseInfo.RoomID;
		}

		// Token: 0x06007F3D RID: 32573 RVA: 0x00253498 File Offset: 0x00251698
		public bool CanGoToGetSoldierTech(int getSoliderTechId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanGoToGetSoldierTechInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_CanGoToGetSoldierTechInt32_hotfix.call(new object[]
				{
					this,
					getSoliderTechId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (!this.IsGameFunctionOpened(GameFunctionType.GameFunctionType_TrainingGround))
			{
				return false;
			}
			int courseId = this.GetTrainingCourseIdByTechId(getSoliderTechId);
			ConfigDataTrainingCourseInfo configDataTrainingCourseInfo = this.m_configDataLoader.GetConfigDataTrainingCourseInfo(courseId);
			TrainingRoom trainingRoomById = this.GetTrainingRoomById(configDataTrainingCourseInfo.RoomID);
			TrainingCourse trainingCourse = trainingRoomById.Courses.Find((TrainingCourse c) => c.ConfigId == courseId);
			return !trainingRoomById.Locked && !trainingCourse.Locked;
		}

		// Token: 0x14000179 RID: 377
		// (add) Token: 0x06007F3E RID: 32574 RVA: 0x00253588 File Offset: 0x00251788
		// (remove) Token: 0x06007F3F RID: 32575 RVA: 0x00253624 File Offset: 0x00251824
		public event Action<int> EventOnTrainingGroundTechLevelupAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTrainingGroundTechLevelupAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTrainingGroundTechLevelupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTrainingGroundTechLevelupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTrainingGroundTechLevelupAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTrainingGroundTechLevelupAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTrainingGroundTechLevelupAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTrainingGroundTechLevelupAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTrainingGroundTechLevelupAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007F40 RID: 32576 RVA: 0x002536C0 File Offset: 0x002518C0
		public bool SendTreasureLevelAttackReq(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTreasureLevelAttackReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTreasureLevelAttackReqInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new TreasureLevelAttackReq
			{
				LevelId = levelId
			});
		}

		// Token: 0x06007F41 RID: 32577 RVA: 0x00253750 File Offset: 0x00251950
		public bool SendTreasureLevelBattleFinishedReq(int levelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendTreasureLevelBattleFinishedReqInt32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendTreasureLevelBattleFinishedReqInt32ProBattleReport_hotfix.call(new object[]
				{
					this,
					levelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new TreasureLevelBattleFinishedReq
			{
				LevelId = levelId,
				BattleReport = battleReport
			});
		}

		// Token: 0x06007F42 RID: 32578 RVA: 0x002537F8 File Offset: 0x002519F8
		private void OnMessage(DSTreasureMapNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSTreasureMapNtf_hotfix != null)
			{
				this.m_OnMessageDSTreasureMapNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_treasureMapComponent.DeSerialize(msg);
		}

		// Token: 0x06007F43 RID: 32579 RVA: 0x00253874 File Offset: 0x00251A74
		private void OnMessage(TreasureLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTreasureLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageTreasureLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_treasureMapComponent.AttackTreasureLevel(msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnTreasureLevelAttackAck != null)
			{
				this.EventOnTreasureLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007F44 RID: 32580 RVA: 0x0025396C File Offset: 0x00251B6C
		private void OnMessage(TreasureLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageTreasureLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageTreasureLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				int num = this.m_treasureMapComponent.FinishedTreasureLevel(msg.LevelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnTreasureLevelBattleFinishedAck != null)
			{
				this.EventOnTreasureLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007F45 RID: 32581 RVA: 0x00253AA4 File Offset: 0x00251CA4
		public bool IsTreasureLevelOpened(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsTreasureLevelOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsTreasureLevelOpenedInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.GetPlayerLevel() >= this.m_configDataLoader.GetConfigDataTreasureLevelInfo(levelID).OpenPlayerLevel;
		}

		// Token: 0x06007F46 RID: 32582 RVA: 0x00253B3C File Offset: 0x00251D3C
		public int CanAttackTreasureLevel(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackTreasureLevelInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackTreasureLevelInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_treasureMapComponent.CanAttackTreasureLevel(levelID);
		}

		// Token: 0x06007F47 RID: 32583 RVA: 0x00253BC4 File Offset: 0x00251DC4
		public int GetTreasureTicketCount()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetTreasureTicketCount_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetTreasureTicketCount_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_treasureMapComponent.GetCurrentTicketNums();
		}

		// Token: 0x06007F48 RID: 32584 RVA: 0x00253C3C File Offset: 0x00251E3C
		public bool IsTreasureLevelFinished(int levelID)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsTreasureLevelFinishedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsTreasureLevelFinishedInt32_hotfix.call(new object[]
				{
					this,
					levelID
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_treasureMapComponent.IsLevelFinished(levelID);
		}

		// Token: 0x1400017A RID: 378
		// (add) Token: 0x06007F49 RID: 32585 RVA: 0x00253CC4 File Offset: 0x00251EC4
		// (remove) Token: 0x06007F4A RID: 32586 RVA: 0x00253D60 File Offset: 0x00251F60
		public event Action<int> EventOnTreasureLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTreasureLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnTreasureLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTreasureLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTreasureLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTreasureLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnTreasureLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnTreasureLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnTreasureLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400017B RID: 379
		// (add) Token: 0x06007F4B RID: 32587 RVA: 0x00253DFC File Offset: 0x00251FFC
		// (remove) Token: 0x06007F4C RID: 32588 RVA: 0x00253E98 File Offset: 0x00252098
		public event Action<int, bool, BattleReward> EventOnTreasureLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnTreasureLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnTreasureLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnTreasureLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnTreasureLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnTreasureLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnTreasureLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnTreasureLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnTreasureLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007F4D RID: 32589 RVA: 0x00253F34 File Offset: 0x00252134
		public bool SendUnchartedScoreChallengeLevelAttackReq(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUnchartedScoreChallengeLevelAttackReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUnchartedScoreChallengeLevelAttackReqInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			UnchartedScoreChallengeLevelAttackReq msg = new UnchartedScoreChallengeLevelAttackReq
			{
				UnchartedScoreId = unchartedScoreId,
				LevelId = levelId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007F4E RID: 32590 RVA: 0x00253FE0 File Offset: 0x002521E0
		public bool SendUnchartedScoreChallengeLevelBattleFinishedReq(int unchartedScoreId, int levelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUnchartedScoreChallengeLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUnchartedScoreChallengeLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			UnchartedScoreChallengeLevelBattleFinishedReq msg = new UnchartedScoreChallengeLevelBattleFinishedReq
			{
				UnchartedScoreId = unchartedScoreId,
				LevelId = levelId,
				BattleReport = battleReport
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007F4F RID: 32591 RVA: 0x002540A0 File Offset: 0x002522A0
		public bool SendUnchartedScoreScoreLevelAttackReq(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUnchartedScoreScoreLevelAttackReqInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUnchartedScoreScoreLevelAttackReqInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			UnchartedScoreScoreLevelAttackReq msg = new UnchartedScoreScoreLevelAttackReq
			{
				UnchartedScoreId = unchartedScoreId,
				LevelId = levelId
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007F50 RID: 32592 RVA: 0x0025414C File Offset: 0x0025234C
		public bool SendUnchartedScoreScoreLevelBattleFinishedReq(int unchartedScoreId, int levelId, ProBattleReport battleReport)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUnchartedScoreScoreLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUnchartedScoreScoreLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId,
					battleReport
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			UnchartedScoreScoreLevelBattleFinishedReq msg = new UnchartedScoreScoreLevelBattleFinishedReq
			{
				UnchartedScoreId = unchartedScoreId,
				LevelId = levelId,
				BattleReport = battleReport
			};
			return this.SendMessage(msg);
		}

		// Token: 0x06007F51 RID: 32593 RVA: 0x0025420C File Offset: 0x0025240C
		private void OnMessage(DSUnchartedScoreNtf msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageDSUnchartedScoreNtf_hotfix != null)
			{
				this.m_OnMessageDSUnchartedScoreNtf_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_unchartedScoreComponent.DeSerialize(msg);
		}

		// Token: 0x06007F52 RID: 32594 RVA: 0x00254288 File Offset: 0x00252488
		private void OnMessage(UnchartedScoreChallengeLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUnchartedScoreChallengeLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageUnchartedScoreChallengeLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_unchartedScoreComponent.AttackChallengeLevel(msg.UnchartedScoreId, msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnUnchartedScoreChallengeLevelAttackAck != null)
			{
				this.EventOnUnchartedScoreChallengeLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007F53 RID: 32595 RVA: 0x00254388 File Offset: 0x00252588
		private void OnMessage(UnchartedScoreChallengeLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUnchartedScoreChallengeLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageUnchartedScoreChallengeLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.ScoreGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.ScoreRewards));
				int num = this.m_unchartedScoreComponent.FinishedChallengeLevel(msg.UnchartedScoreId, msg.LevelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck != null)
			{
				this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007F54 RID: 32596 RVA: 0x002544DC File Offset: 0x002526DC
		private void OnMessage(UnchartedScoreScoreLevelAttackAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUnchartedScoreScoreLevelAttackAck_hotfix != null)
			{
				this.m_OnMessageUnchartedScoreScoreLevelAttackAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.m_unchartedScoreComponent.AttackScoreLevel(msg.UnchartedScoreId, msg.LevelId);
				if (num != 0)
				{
					this.DataError(num);
				}
				if (msg.BattleBeginInfo != null)
				{
					this.m_battleComponent.SetBattleRandomSeed(msg.BattleBeginInfo.RandomSeed);
				}
			}
			else if (msg.Result == -900)
			{
				this.m_battleComponent.ClearFighting();
			}
			if (this.EventOnUnchartedScoreScoreLevelAttackAck != null)
			{
				this.EventOnUnchartedScoreScoreLevelAttackAck(msg.Result);
			}
		}

		// Token: 0x06007F55 RID: 32597 RVA: 0x002545DC File Offset: 0x002527DC
		private void OnMessage(UnchartedScoreScoreLevelBattleFinishedAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUnchartedScoreScoreLevelBattleFinishedAck_hotfix != null)
			{
				this.m_OnMessageUnchartedScoreScoreLevelBattleFinishedAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			BattleReward battleReward = this.m_battleComponent.GetBattleReward();
			battleReward.Clear();
			if (msg.Result == 0)
			{
				this.SaveBeforeRewardStatus();
				if (msg.Ntf != null)
				{
					this.OnMessage(msg.Ntf);
				}
				if (msg.Treasure != null)
				{
					this.OnMessage(msg.Treasure);
				}
				battleReward.Goods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.NormalRewards));
				battleReward.DailyGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.DailyRewards));
				battleReward.ScoreGoods.AddRange(BagItemBase.PBGoodsListToGoodsList(msg.ScoreRewards));
				int num = this.m_unchartedScoreComponent.FinishedScoreLevel(msg.UnchartedScoreId, msg.LevelId, msg.Win, msg.BattleTreasures);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			else
			{
				this.BattleFinishedError(msg.Result);
			}
			if (this.EventOnUnchartedScoreScoreLevelBattleFinishedAck != null)
			{
				this.EventOnUnchartedScoreScoreLevelBattleFinishedAck(msg.Result, msg.Win, battleReward);
			}
		}

		// Token: 0x06007F56 RID: 32598 RVA: 0x00254744 File Offset: 0x00252944
		public bool IsUnchartedScoreOpened(int unchartedScoreId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedScoreOpenedInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedScoreOpenedInt32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.IsUnchartedScoreOpened(unchartedScoreId);
		}

		// Token: 0x06007F57 RID: 32599 RVA: 0x002547CC File Offset: 0x002529CC
		public bool IsUnchartedScoreDisplay(int unchartedScoreId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedScoreDisplayInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedScoreDisplayInt32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.IsUnchartedScoreDisplay(unchartedScoreId);
		}

		// Token: 0x06007F58 RID: 32600 RVA: 0x00254854 File Offset: 0x00252A54
		public void GetUnchartedScoreOpenTime(int unchartedScoreId, out DateTime startTime, out DateTime endTime)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUnchartedScoreOpenTimeInt32DateTime_DateTime__hotfix != null)
			{
				LuaDelegation.Lua_BlackJack_ProjectL_PlayerContext_ProjectLPlayerContext_GetUnchartedScoreOpenTime_Int32_DateTime_DateTime(this, this.m_GetUnchartedScoreOpenTimeInt32DateTime_DateTime__hotfix, unchartedScoreId, out startTime, out endTime);
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			this.m_unchartedScoreComponent.GetUnchartedScoreOpenTime(unchartedScoreId, out startTime, out endTime);
		}

		// Token: 0x06007F59 RID: 32601 RVA: 0x002548B8 File Offset: 0x00252AB8
		public bool IsUnchartedScoreLevelTimeUnlock(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedScoreLevelTimeUnlockInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedScoreLevelTimeUnlockInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.IsUnchartedScoreLevelTimeUnlock(unchartedScoreId, levelId) == 0;
		}

		// Token: 0x06007F5A RID: 32602 RVA: 0x00254954 File Offset: 0x00252B54
		public bool IsUnchartedScoreLevelPlayerLevelVaild(int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedScoreLevelPlayerLevelVaildInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedScoreLevelPlayerLevelVaildInt32_hotfix.call(new object[]
				{
					this,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			ConfigDataScoreLevelInfo configDataScoreLevelInfo = this.m_configDataLoader.GetConfigDataScoreLevelInfo(levelId);
			return configDataScoreLevelInfo != null && this.m_unchartedScoreComponent.IsPlayerLevelVaild(configDataScoreLevelInfo);
		}

		// Token: 0x06007F5B RID: 32603 RVA: 0x002549F4 File Offset: 0x00252BF4
		public bool IsUnchartedChallengePrevLevelComplete(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedChallengePrevLevelCompleteInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedChallengePrevLevelCompleteInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.IsChallengePrevLevelComplete(unchartedScoreId, levelId);
		}

		// Token: 0x06007F5C RID: 32604 RVA: 0x00254A90 File Offset: 0x00252C90
		public int GetUnchartedChallengeLevelTimeUnlockDay(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUnchartedChallengeLevelTimeUnlockDayInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetUnchartedChallengeLevelTimeUnlockDayInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.GetChallengeLevelTimeUnlockDay(unchartedScoreId, levelId);
		}

		// Token: 0x06007F5D RID: 32605 RVA: 0x00254B2C File Offset: 0x00252D2C
		public int CanAttackUnchartedScoreLevel(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackUnchartedScoreLevelInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackUnchartedScoreLevelInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.CanAttackScoreLevel(unchartedScoreId, levelId, false);
		}

		// Token: 0x06007F5E RID: 32606 RVA: 0x00254BC8 File Offset: 0x00252DC8
		public int CanAttackUnchartedChallengeLevel(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_CanAttackUnchartedChallengeLevelInt32Int32_hotfix != null)
			{
				return Convert.ToInt32(this.m_CanAttackUnchartedChallengeLevelInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.CanAttackChallengeLevel(unchartedScoreId, levelId);
		}

		// Token: 0x06007F5F RID: 32607 RVA: 0x00254C64 File Offset: 0x00252E64
		public bool IsUnchartedScoreLevelFinished(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedScoreLevelFinishedInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedScoreLevelFinishedInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.IsScoreLevelComplete(unchartedScoreId, levelId);
		}

		// Token: 0x06007F60 RID: 32608 RVA: 0x00254D00 File Offset: 0x00252F00
		public bool IsUnchartedChallengeLevelFinished(int unchartedScoreId, int levelId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedChallengeLevelFinishedInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedChallengeLevelFinishedInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					levelId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.IsChallengeLevelComplete(unchartedScoreId, levelId);
		}

		// Token: 0x06007F61 RID: 32609 RVA: 0x00254D9C File Offset: 0x00252F9C
		public bool IsUnchartedScoreRewardGot(int unchartedScoreId, int unchartedScoreRewardGroupId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUnchartedScoreRewardGotInt32Int32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUnchartedScoreRewardGotInt32Int32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId,
					unchartedScoreRewardGroupId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.IsRewardGot(unchartedScoreId, unchartedScoreRewardGroupId);
		}

		// Token: 0x06007F62 RID: 32610 RVA: 0x00254E38 File Offset: 0x00253038
		public int GetUnchartedScoreScore(int unchartedScoreId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUnchartedScoreScoreInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetUnchartedScoreScoreInt32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.GetScore(unchartedScoreId);
		}

		// Token: 0x06007F63 RID: 32611 RVA: 0x00254EC0 File Offset: 0x002530C0
		public int GetUnchartedScoreDailyRewardRestCount(int unchartedScoreId)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_GetUnchartedScoreDailyRewardRestCountInt32_hotfix != null)
			{
				return Convert.ToInt32(this.m_GetUnchartedScoreDailyRewardRestCountInt32_hotfix.call(new object[]
				{
					this,
					unchartedScoreId
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_unchartedScoreComponent.GetDailyRewardRestCount(unchartedScoreId);
		}

		// Token: 0x1400017C RID: 380
		// (add) Token: 0x06007F64 RID: 32612 RVA: 0x00254F48 File Offset: 0x00253148
		// (remove) Token: 0x06007F65 RID: 32613 RVA: 0x00254FE4 File Offset: 0x002531E4
		public event Action<int> EventOnUnchartedScoreChallengeLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnUnchartedScoreChallengeLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnUnchartedScoreChallengeLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnUnchartedScoreChallengeLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnUnchartedScoreChallengeLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnUnchartedScoreChallengeLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnUnchartedScoreChallengeLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnUnchartedScoreChallengeLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnUnchartedScoreChallengeLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400017D RID: 381
		// (add) Token: 0x06007F66 RID: 32614 RVA: 0x00255080 File Offset: 0x00253280
		// (remove) Token: 0x06007F67 RID: 32615 RVA: 0x0025511C File Offset: 0x0025331C
		public event Action<int, bool, BattleReward> EventOnUnchartedScoreChallengeLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400017E RID: 382
		// (add) Token: 0x06007F68 RID: 32616 RVA: 0x002551B8 File Offset: 0x002533B8
		// (remove) Token: 0x06007F69 RID: 32617 RVA: 0x00255254 File Offset: 0x00253454
		public event Action<int> EventOnUnchartedScoreScoreLevelAttackAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnUnchartedScoreScoreLevelAttackAckAction`1_hotfix != null)
				{
					this.m_add_EventOnUnchartedScoreScoreLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnUnchartedScoreScoreLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnUnchartedScoreScoreLevelAttackAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnUnchartedScoreScoreLevelAttackAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnUnchartedScoreScoreLevelAttackAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnUnchartedScoreScoreLevelAttackAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnUnchartedScoreScoreLevelAttackAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x1400017F RID: 383
		// (add) Token: 0x06007F6A RID: 32618 RVA: 0x002552F0 File Offset: 0x002534F0
		// (remove) Token: 0x06007F6B RID: 32619 RVA: 0x0025538C File Offset: 0x0025358C
		public event Action<int, bool, BattleReward> EventOnUnchartedScoreScoreLevelBattleFinishedAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_add_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnUnchartedScoreScoreLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnUnchartedScoreScoreLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction`3_hotfix != null)
				{
					this.m_remove_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction`3_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int, bool, BattleReward> action = this.EventOnUnchartedScoreScoreLevelBattleFinishedAck;
				Action<int, bool, BattleReward> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int, bool, BattleReward>>(ref this.EventOnUnchartedScoreScoreLevelBattleFinishedAck, (Action<int, bool, BattleReward>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x06007F6C RID: 32620 RVA: 0x00255428 File Offset: 0x00253628
		public bool SendUserGuideSetReq(int step)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUserGuideSetReqInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUserGuideSetReqInt32_hotfix.call(new object[]
				{
					this,
					step
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.SendMessage(new UserGuideSetReq
			{
				CompleteStepIds = 
				{
					step
				}
			});
		}

		// Token: 0x06007F6D RID: 32621 RVA: 0x002554C0 File Offset: 0x002536C0
		public bool SendUserGuideSetReq(int[] steps)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUserGuideSetReqInt32be_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUserGuideSetReqInt32be_hotfix.call(new object[]
				{
					this,
					steps
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			UserGuideSetReq userGuideSetReq = new UserGuideSetReq();
			foreach (int item in steps)
			{
				userGuideSetReq.CompleteStepIds.Add(item);
			}
			return this.SendMessage(userGuideSetReq);
		}

		// Token: 0x06007F6E RID: 32622 RVA: 0x00255570 File Offset: 0x00253770
		public bool SendUserGuideClearReq()
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_SendUserGuideClearReq_hotfix != null)
			{
				return Convert.ToBoolean(this.m_SendUserGuideClearReq_hotfix.call(new object[]
				{
					this
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			List<int> list = new List<int>();
			foreach (KeyValuePair<int, ConfigDataUserGuide> keyValuePair in this.m_configDataLoader.GetAllConfigDataUserGuide())
			{
				if (this.IsUserGuideComplete(keyValuePair.Value.ID))
				{
					list.Add(keyValuePair.Value.ID);
				}
			}
			if (list.Count <= 0)
			{
				return true;
			}
			string text = "CLEAN_USER_GUIDE ";
			for (int i = 0; i < list.Count; i++)
			{
				if (i > 0)
				{
					text += ",";
				}
				text += list[i];
			}
			this.m_playerBasicInfoComponent.CleanUserGuide(list);
			return this.SendGmCommandReq(text);
		}

		// Token: 0x06007F6F RID: 32623 RVA: 0x002556C0 File Offset: 0x002538C0
		private void OnMessage(UserGuideSetAck msg)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_OnMessageUserGuideSetAck_hotfix != null)
			{
				this.m_OnMessageUserGuideSetAck_hotfix.call(new object[]
				{
					this,
					msg
				});
				return;
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			if (msg.Result == 0)
			{
				int num = this.SetUserGuide(msg.CompleteStepIds);
				if (num != 0)
				{
					this.DataError(num);
				}
			}
			if (this.EventOnUserGuideSetAck != null)
			{
				this.EventOnUserGuideSetAck(msg.Result);
			}
		}

		// Token: 0x06007F70 RID: 32624 RVA: 0x00255774 File Offset: 0x00253974
		public bool IsGameFunctionOpened(GameFunctionType gameFunctionType)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsGameFunctionOpenedGameFunctionType_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsGameFunctionOpenedGameFunctionType_hotfix.call(new object[]
				{
					this,
					gameFunctionType
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.IsGameFunctionOpened(gameFunctionType);
		}

		// Token: 0x06007F71 RID: 32625 RVA: 0x002557FC File Offset: 0x002539FC
		public bool IsUserGuideComplete(int step)
		{
			if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_IsUserGuideCompleteInt32_hotfix != null)
			{
				return Convert.ToBoolean(this.m_IsUserGuideCompleteInt32_hotfix.call(new object[]
				{
					this,
					step
				}));
			}
			BJLuaObjHelper.IsSkipLuaHotfix = false;
			return this.m_playerBasicInfoComponent.IsUserGuideCompleted(step);
		}

		// Token: 0x14000180 RID: 384
		// (add) Token: 0x06007F72 RID: 32626 RVA: 0x00255884 File Offset: 0x00253A84
		// (remove) Token: 0x06007F73 RID: 32627 RVA: 0x00255920 File Offset: 0x00253B20
		public event Action<int> EventOnUserGuideSetAck
		{
			add
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_add_EventOnUserGuideSetAckAction`1_hotfix != null)
				{
					this.m_add_EventOnUserGuideSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnUserGuideSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnUserGuideSetAck, (Action<int>)Delegate.Combine(action2, value), action);
				}
				while (action != action2);
			}
			remove
			{
				if (!BJLuaObjHelper.IsSkipLuaHotfix && this.TryInitHotFix("") && this.m_remove_EventOnUserGuideSetAckAction`1_hotfix != null)
				{
					this.m_remove_EventOnUserGuideSetAckAction`1_hotfix.call(new object[]
					{
						this,
						value
					});
					return;
				}
				BJLuaObjHelper.IsSkipLuaHotfix = false;
				Action<int> action = this.EventOnUserGuideSetAck;
				Action<int> action2;
				do
				{
					action2 = action;
					action = Interlocked.CompareExchange<Action<int>>(ref this.EventOnUserGuideSetAck, (Action<int>)Delegate.Remove(action2, value), action);
				}
				while (action != action2);
			}
		}

		// Token: 0x17001BF1 RID: 7153
		// (get) Token: 0x06007F74 RID: 32628 RVA: 0x002559BC File Offset: 0x00253BBC
		// (set) Token: 0x06007F75 RID: 32629 RVA: 0x002559DC File Offset: 0x00253BDC
		[DoNotToLua]
		public new ProjectLPlayerContext.LuaExportHelper m_luaExportHelper
		{
			get
			{
				if (this.luaExportHelper == null)
				{
					this.luaExportHelper = new ProjectLPlayerContext.LuaExportHelper(this);
				}
				return this.luaExportHelper;
			}
			set
			{
				this.luaExportHelper = value;
			}
		}

		// Token: 0x06007F76 RID: 32630 RVA: 0x002559E8 File Offset: 0x00253BE8
		private bool __callBase_IsInited()
		{
			return base.IsInited();
		}

		// Token: 0x06007F77 RID: 32631 RVA: 0x002559F0 File Offset: 0x00253BF0
		private void __callBase_OnPlayerInfoInitEndNtf()
		{
			base.OnPlayerInfoInitEndNtf();
		}

		// Token: 0x06007F78 RID: 32632 RVA: 0x002559F8 File Offset: 0x00253BF8
		private void __callBase_SyncServerTime(DateTime serverTime)
		{
			base.SyncServerTime(serverTime);
		}

		// Token: 0x06007F79 RID: 32633 RVA: 0x00255A04 File Offset: 0x00253C04
		private DateTime __callBase_GetCurrServerTime()
		{
			return base.GetCurrServerTime();
		}

		// Token: 0x06007F7A RID: 32634 RVA: 0x00255A0C File Offset: 0x00253C0C
		private DateTime __callBase_GetCurrTickServerTime()
		{
			return base.GetCurrTickServerTime();
		}

		// Token: 0x06007F7B RID: 32635 RVA: 0x00255A14 File Offset: 0x00253C14
		private bool __callBase_Disconnect()
		{
			return base.Disconnect();
		}

		// Token: 0x06007F7C RID: 32636 RVA: 0x00255A1C File Offset: 0x00253C1C
		private bool __callBase_StartGameAuthLogin(string serverAddress, int serverPort, string authToken, string localization, int loginChannelId, int bornChannelId)
		{
			return base.StartGameAuthLogin(serverAddress, serverPort, authToken, localization, loginChannelId, bornChannelId);
		}

		// Token: 0x06007F7D RID: 32637 RVA: 0x00255A30 File Offset: 0x00253C30
		private void __callBase_SetSessionToken(string sessionToken, int channelId, int bornChannelId)
		{
			base.SetSessionToken(sessionToken, channelId, bornChannelId);
		}

		// Token: 0x06007F7E RID: 32638 RVA: 0x00255A3C File Offset: 0x00253C3C
		private bool __callBase_StartGameSessionLogin()
		{
			return base.StartGameSessionLogin();
		}

		// Token: 0x06007F7F RID: 32639 RVA: 0x00255A44 File Offset: 0x00253C44
		private bool __callBase_SendPlayerInfoInitReq()
		{
			return base.SendPlayerInfoInitReq();
		}

		// Token: 0x06007F80 RID: 32640 RVA: 0x00255A4C File Offset: 0x00253C4C
		private bool __callBase_SendPlayerInfoReqOnReloginBySession(bool checkOnly)
		{
			return base.SendPlayerInfoReqOnReloginBySession(checkOnly);
		}

		// Token: 0x06007F81 RID: 32641 RVA: 0x00255A58 File Offset: 0x00253C58
		private bool __callBase_SendWorldEnterReqOnReloginBySession()
		{
			return base.SendWorldEnterReqOnReloginBySession();
		}

		// Token: 0x06007F82 RID: 32642 RVA: 0x00255A60 File Offset: 0x00253C60
		private bool __callBase_CheckForSessionLogin()
		{
			return base.CheckForSessionLogin();
		}

		// Token: 0x06007F83 RID: 32643 RVA: 0x00255A68 File Offset: 0x00253C68
		private string __callBase_GetDeviceId()
		{
			return base.GetDeviceId();
		}

		// Token: 0x06007F84 RID: 32644 RVA: 0x00255A70 File Offset: 0x00253C70
		private string __callBase_GetClientVersion()
		{
			return base.GetClientVersion();
		}

		// Token: 0x06007F85 RID: 32645 RVA: 0x00255A78 File Offset: 0x00253C78
		private void __callBase_OnTimeJumped()
		{
			base.OnTimeJumped();
		}

		// Token: 0x06007F86 RID: 32646 RVA: 0x00255A80 File Offset: 0x00253C80
		private void __callDele_EventOnClientCheatNtf()
		{
			Action eventOnClientCheatNtf = this.EventOnClientCheatNtf;
			if (eventOnClientCheatNtf != null)
			{
				eventOnClientCheatNtf();
			}
		}

		// Token: 0x06007F87 RID: 32647 RVA: 0x00255AA0 File Offset: 0x00253CA0
		private void __clearDele_EventOnClientCheatNtf()
		{
			this.EventOnClientCheatNtf = null;
		}

		// Token: 0x06007F88 RID: 32648 RVA: 0x00255AAC File Offset: 0x00253CAC
		private void __callDele_EventOnServerDisconnectNtf(int obj)
		{
			Action<int> eventOnServerDisconnectNtf = this.EventOnServerDisconnectNtf;
			if (eventOnServerDisconnectNtf != null)
			{
				eventOnServerDisconnectNtf(obj);
			}
		}

		// Token: 0x06007F89 RID: 32649 RVA: 0x00255AD0 File Offset: 0x00253CD0
		private void __clearDele_EventOnServerDisconnectNtf(int obj)
		{
			this.EventOnServerDisconnectNtf = null;
		}

		// Token: 0x06007F8A RID: 32650 RVA: 0x00255ADC File Offset: 0x00253CDC
		private void __callDele_EventOnAnikiGymLevelAttackAck(int obj)
		{
			Action<int> eventOnAnikiGymLevelAttackAck = this.EventOnAnikiGymLevelAttackAck;
			if (eventOnAnikiGymLevelAttackAck != null)
			{
				eventOnAnikiGymLevelAttackAck(obj);
			}
		}

		// Token: 0x06007F8B RID: 32651 RVA: 0x00255B00 File Offset: 0x00253D00
		private void __clearDele_EventOnAnikiGymLevelAttackAck(int obj)
		{
			this.EventOnAnikiGymLevelAttackAck = null;
		}

		// Token: 0x06007F8C RID: 32652 RVA: 0x00255B0C File Offset: 0x00253D0C
		private void __callDele_EventOnAnikiGymLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnAnikiGymLevelBattleFinishedAck = this.EventOnAnikiGymLevelBattleFinishedAck;
			if (eventOnAnikiGymLevelBattleFinishedAck != null)
			{
				eventOnAnikiGymLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06007F8D RID: 32653 RVA: 0x00255B30 File Offset: 0x00253D30
		private void __clearDele_EventOnAnikiGymLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnAnikiGymLevelBattleFinishedAck = null;
		}

		// Token: 0x06007F8E RID: 32654 RVA: 0x00255B3C File Offset: 0x00253D3C
		private void __callDele_EventOnArenaPlayerInfoGetAck(int obj)
		{
			Action<int> eventOnArenaPlayerInfoGetAck = this.EventOnArenaPlayerInfoGetAck;
			if (eventOnArenaPlayerInfoGetAck != null)
			{
				eventOnArenaPlayerInfoGetAck(obj);
			}
		}

		// Token: 0x06007F8F RID: 32655 RVA: 0x00255B60 File Offset: 0x00253D60
		private void __clearDele_EventOnArenaPlayerInfoGetAck(int obj)
		{
			this.EventOnArenaPlayerInfoGetAck = null;
		}

		// Token: 0x06007F90 RID: 32656 RVA: 0x00255B6C File Offset: 0x00253D6C
		private void __callDele_EventOnArenaOpponentViewAck(int arg1, List<ProBattleHero> arg2, int arg3)
		{
			Action<int, List<ProBattleHero>, int> eventOnArenaOpponentViewAck = this.EventOnArenaOpponentViewAck;
			if (eventOnArenaOpponentViewAck != null)
			{
				eventOnArenaOpponentViewAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06007F91 RID: 32657 RVA: 0x00255B90 File Offset: 0x00253D90
		private void __clearDele_EventOnArenaOpponentViewAck(int arg1, List<ProBattleHero> arg2, int arg3)
		{
			this.EventOnArenaOpponentViewAck = null;
		}

		// Token: 0x06007F92 RID: 32658 RVA: 0x00255B9C File Offset: 0x00253D9C
		private void __callDele_EventOnArenaOpponentAttackAck(int obj)
		{
			Action<int> eventOnArenaOpponentAttackAck = this.EventOnArenaOpponentAttackAck;
			if (eventOnArenaOpponentAttackAck != null)
			{
				eventOnArenaOpponentAttackAck(obj);
			}
		}

		// Token: 0x06007F93 RID: 32659 RVA: 0x00255BC0 File Offset: 0x00253DC0
		private void __clearDele_EventOnArenaOpponentAttackAck(int obj)
		{
			this.EventOnArenaOpponentAttackAck = null;
		}

		// Token: 0x06007F94 RID: 32660 RVA: 0x00255BCC File Offset: 0x00253DCC
		private void __callDele_EventOnArenaRevengeOpponentGetAck(int arg1, ProArenaOpponent arg2, List<ProBattleHero> arg3, int arg4)
		{
			Action<int, ProArenaOpponent, List<ProBattleHero>, int> eventOnArenaRevengeOpponentGetAck = this.EventOnArenaRevengeOpponentGetAck;
			if (eventOnArenaRevengeOpponentGetAck != null)
			{
				eventOnArenaRevengeOpponentGetAck(arg1, arg2, arg3, arg4);
			}
		}

		// Token: 0x06007F95 RID: 32661 RVA: 0x00255BF4 File Offset: 0x00253DF4
		private void __clearDele_EventOnArenaRevengeOpponentGetAck(int arg1, ProArenaOpponent arg2, List<ProBattleHero> arg3, int arg4)
		{
			this.EventOnArenaRevengeOpponentGetAck = null;
		}

		// Token: 0x06007F96 RID: 32662 RVA: 0x00255C00 File Offset: 0x00253E00
		private void __callDele_EventOnArenaOpponentRevengeAck(int obj)
		{
			Action<int> eventOnArenaOpponentRevengeAck = this.EventOnArenaOpponentRevengeAck;
			if (eventOnArenaOpponentRevengeAck != null)
			{
				eventOnArenaOpponentRevengeAck(obj);
			}
		}

		// Token: 0x06007F97 RID: 32663 RVA: 0x00255C24 File Offset: 0x00253E24
		private void __clearDele_EventOnArenaOpponentRevengeAck(int obj)
		{
			this.EventOnArenaOpponentRevengeAck = null;
		}

		// Token: 0x06007F98 RID: 32664 RVA: 0x00255C30 File Offset: 0x00253E30
		private void __callDele_EventOnArenaOpponentAttackFightingAck(int obj)
		{
			Action<int> eventOnArenaOpponentAttackFightingAck = this.EventOnArenaOpponentAttackFightingAck;
			if (eventOnArenaOpponentAttackFightingAck != null)
			{
				eventOnArenaOpponentAttackFightingAck(obj);
			}
		}

		// Token: 0x06007F99 RID: 32665 RVA: 0x00255C54 File Offset: 0x00253E54
		private void __clearDele_EventOnArenaOpponentAttackFightingAck(int obj)
		{
			this.EventOnArenaOpponentAttackFightingAck = null;
		}

		// Token: 0x06007F9A RID: 32666 RVA: 0x00255C60 File Offset: 0x00253E60
		private void __callDele_EventOnArenaBattleFinishedAck(int arg1, BattleReward arg2, bool arg3)
		{
			Action<int, BattleReward, bool> eventOnArenaBattleFinishedAck = this.EventOnArenaBattleFinishedAck;
			if (eventOnArenaBattleFinishedAck != null)
			{
				eventOnArenaBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06007F9B RID: 32667 RVA: 0x00255C84 File Offset: 0x00253E84
		private void __clearDele_EventOnArenaBattleFinishedAck(int arg1, BattleReward arg2, bool arg3)
		{
			this.EventOnArenaBattleFinishedAck = null;
		}

		// Token: 0x06007F9C RID: 32668 RVA: 0x00255C90 File Offset: 0x00253E90
		private void __callDele_EventOnArenaPlayerSetDefensiveTeamAck(int obj)
		{
			Action<int> eventOnArenaPlayerSetDefensiveTeamAck = this.EventOnArenaPlayerSetDefensiveTeamAck;
			if (eventOnArenaPlayerSetDefensiveTeamAck != null)
			{
				eventOnArenaPlayerSetDefensiveTeamAck(obj);
			}
		}

		// Token: 0x06007F9D RID: 32669 RVA: 0x00255CB4 File Offset: 0x00253EB4
		private void __clearDele_EventOnArenaPlayerSetDefensiveTeamAck(int obj)
		{
			this.EventOnArenaPlayerSetDefensiveTeamAck = null;
		}

		// Token: 0x06007F9E RID: 32670 RVA: 0x00255CC0 File Offset: 0x00253EC0
		private void __callDele_EventOnArenaVictoryPointsRewardGainAck(int arg1, BattleReward arg2)
		{
			Action<int, BattleReward> eventOnArenaVictoryPointsRewardGainAck = this.EventOnArenaVictoryPointsRewardGainAck;
			if (eventOnArenaVictoryPointsRewardGainAck != null)
			{
				eventOnArenaVictoryPointsRewardGainAck(arg1, arg2);
			}
		}

		// Token: 0x06007F9F RID: 32671 RVA: 0x00255CE4 File Offset: 0x00253EE4
		private void __clearDele_EventOnArenaVictoryPointsRewardGainAck(int arg1, BattleReward arg2)
		{
			this.EventOnArenaVictoryPointsRewardGainAck = null;
		}

		// Token: 0x06007FA0 RID: 32672 RVA: 0x00255CF0 File Offset: 0x00253EF0
		private void __callDele_EventOnArenaBattleReportBasicDataGetAck(int obj)
		{
			Action<int> eventOnArenaBattleReportBasicDataGetAck = this.EventOnArenaBattleReportBasicDataGetAck;
			if (eventOnArenaBattleReportBasicDataGetAck != null)
			{
				eventOnArenaBattleReportBasicDataGetAck(obj);
			}
		}

		// Token: 0x06007FA1 RID: 32673 RVA: 0x00255D14 File Offset: 0x00253F14
		private void __clearDele_EventOnArenaBattleReportBasicDataGetAck(int obj)
		{
			this.EventOnArenaBattleReportBasicDataGetAck = null;
		}

		// Token: 0x06007FA2 RID: 32674 RVA: 0x00255D20 File Offset: 0x00253F20
		private void __callDele_EventOnArenaBattleReportPlayBackDataGetAck(int obj)
		{
			Action<int> eventOnArenaBattleReportPlayBackDataGetAck = this.EventOnArenaBattleReportPlayBackDataGetAck;
			if (eventOnArenaBattleReportPlayBackDataGetAck != null)
			{
				eventOnArenaBattleReportPlayBackDataGetAck(obj);
			}
		}

		// Token: 0x06007FA3 RID: 32675 RVA: 0x00255D44 File Offset: 0x00253F44
		private void __clearDele_EventOnArenaBattleReportPlayBackDataGetAck(int obj)
		{
			this.EventOnArenaBattleReportPlayBackDataGetAck = null;
		}

		// Token: 0x06007FA4 RID: 32676 RVA: 0x00255D50 File Offset: 0x00253F50
		private void __callDele_EventOnArenaTopRankPlayersGetAck(int obj)
		{
			Action<int> eventOnArenaTopRankPlayersGetAck = this.EventOnArenaTopRankPlayersGetAck;
			if (eventOnArenaTopRankPlayersGetAck != null)
			{
				eventOnArenaTopRankPlayersGetAck(obj);
			}
		}

		// Token: 0x06007FA5 RID: 32677 RVA: 0x00255D74 File Offset: 0x00253F74
		private void __clearDele_EventOnArenaTopRankPlayersGetAck(int obj)
		{
			this.EventOnArenaTopRankPlayersGetAck = null;
		}

		// Token: 0x06007FA6 RID: 32678 RVA: 0x00255D80 File Offset: 0x00253F80
		private void __callDele_EventOnArenaBattleReconnectAck(int obj)
		{
			Action<int> eventOnArenaBattleReconnectAck = this.EventOnArenaBattleReconnectAck;
			if (eventOnArenaBattleReconnectAck != null)
			{
				eventOnArenaBattleReconnectAck(obj);
			}
		}

		// Token: 0x06007FA7 RID: 32679 RVA: 0x00255DA4 File Offset: 0x00253FA4
		private void __clearDele_EventOnArenaBattleReconnectAck(int obj)
		{
			this.EventOnArenaBattleReconnectAck = null;
		}

		// Token: 0x06007FA8 RID: 32680 RVA: 0x00255DB0 File Offset: 0x00253FB0
		private void __callDele_EventOnArenaBattleReportNtf()
		{
			Action eventOnArenaBattleReportNtf = this.EventOnArenaBattleReportNtf;
			if (eventOnArenaBattleReportNtf != null)
			{
				eventOnArenaBattleReportNtf();
			}
		}

		// Token: 0x06007FA9 RID: 32681 RVA: 0x00255DD0 File Offset: 0x00253FD0
		private void __clearDele_EventOnArenaBattleReportNtf()
		{
			this.EventOnArenaBattleReportNtf = null;
		}

		// Token: 0x06007FAA RID: 32682 RVA: 0x00255DDC File Offset: 0x00253FDC
		private void __callDele_EventOnArenaFlushOpponentsNtf()
		{
			Action eventOnArenaFlushOpponentsNtf = this.EventOnArenaFlushOpponentsNtf;
			if (eventOnArenaFlushOpponentsNtf != null)
			{
				eventOnArenaFlushOpponentsNtf();
			}
		}

		// Token: 0x06007FAB RID: 32683 RVA: 0x00255DFC File Offset: 0x00253FFC
		private void __clearDele_EventOnArenaFlushOpponentsNtf()
		{
			this.EventOnArenaFlushOpponentsNtf = null;
		}

		// Token: 0x06007FAC RID: 32684 RVA: 0x00255E08 File Offset: 0x00254008
		private void __callDele_EventOnBagItemChangeNtf()
		{
			Action eventOnBagItemChangeNtf = this.EventOnBagItemChangeNtf;
			if (eventOnBagItemChangeNtf != null)
			{
				eventOnBagItemChangeNtf();
			}
		}

		// Token: 0x06007FAD RID: 32685 RVA: 0x00255E28 File Offset: 0x00254028
		private void __clearDele_EventOnBagItemChangeNtf()
		{
			this.EventOnBagItemChangeNtf = null;
		}

		// Token: 0x06007FAE RID: 32686 RVA: 0x00255E34 File Offset: 0x00254034
		private void __callDele_EventOnUseBagItemAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnUseBagItemAck = this.EventOnUseBagItemAck;
			if (eventOnUseBagItemAck != null)
			{
				eventOnUseBagItemAck(arg1, arg2);
			}
		}

		// Token: 0x06007FAF RID: 32687 RVA: 0x00255E58 File Offset: 0x00254058
		private void __clearDele_EventOnUseBagItemAck(int arg1, List<Goods> arg2)
		{
			this.EventOnUseBagItemAck = null;
		}

		// Token: 0x06007FB0 RID: 32688 RVA: 0x00255E64 File Offset: 0x00254064
		private void __callDele_EventOnSellBagItemAck(int obj)
		{
			Action<int> eventOnSellBagItemAck = this.EventOnSellBagItemAck;
			if (eventOnSellBagItemAck != null)
			{
				eventOnSellBagItemAck(obj);
			}
		}

		// Token: 0x06007FB1 RID: 32689 RVA: 0x00255E88 File Offset: 0x00254088
		private void __clearDele_EventOnSellBagItemAck(int obj)
		{
			this.EventOnSellBagItemAck = null;
		}

		// Token: 0x06007FB2 RID: 32690 RVA: 0x00255E94 File Offset: 0x00254094
		private void __callDele_EventOnEquipmentLockAndUnLockAck(int obj)
		{
			Action<int> eventOnEquipmentLockAndUnLockAck = this.EventOnEquipmentLockAndUnLockAck;
			if (eventOnEquipmentLockAndUnLockAck != null)
			{
				eventOnEquipmentLockAndUnLockAck(obj);
			}
		}

		// Token: 0x06007FB3 RID: 32691 RVA: 0x00255EB8 File Offset: 0x002540B8
		private void __clearDele_EventOnEquipmentLockAndUnLockAck(int obj)
		{
			this.EventOnEquipmentLockAndUnLockAck = null;
		}

		// Token: 0x06007FB4 RID: 32692 RVA: 0x00255EC4 File Offset: 0x002540C4
		private void __callDele_EventOnEquipmentEnhanceAck(int obj)
		{
			Action<int> eventOnEquipmentEnhanceAck = this.EventOnEquipmentEnhanceAck;
			if (eventOnEquipmentEnhanceAck != null)
			{
				eventOnEquipmentEnhanceAck(obj);
			}
		}

		// Token: 0x06007FB5 RID: 32693 RVA: 0x00255EE8 File Offset: 0x002540E8
		private void __clearDele_EventOnEquipmentEnhanceAck(int obj)
		{
			this.EventOnEquipmentEnhanceAck = null;
		}

		// Token: 0x06007FB6 RID: 32694 RVA: 0x00255EF4 File Offset: 0x002540F4
		private void __callDele_EventOnEquipmentStarLevelUpAck(int obj)
		{
			Action<int> eventOnEquipmentStarLevelUpAck = this.EventOnEquipmentStarLevelUpAck;
			if (eventOnEquipmentStarLevelUpAck != null)
			{
				eventOnEquipmentStarLevelUpAck(obj);
			}
		}

		// Token: 0x06007FB7 RID: 32695 RVA: 0x00255F18 File Offset: 0x00254118
		private void __clearDele_EventOnEquipmentStarLevelUpAck(int obj)
		{
			this.EventOnEquipmentStarLevelUpAck = null;
		}

		// Token: 0x06007FB8 RID: 32696 RVA: 0x00255F24 File Offset: 0x00254124
		private void __callDele_EventOnBagItemDecomposeAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnBagItemDecomposeAck = this.EventOnBagItemDecomposeAck;
			if (eventOnBagItemDecomposeAck != null)
			{
				eventOnBagItemDecomposeAck(arg1, arg2);
			}
		}

		// Token: 0x06007FB9 RID: 32697 RVA: 0x00255F48 File Offset: 0x00254148
		private void __clearDele_EventOnBagItemDecomposeAck(int arg1, List<Goods> arg2)
		{
			this.EventOnBagItemDecomposeAck = null;
		}

		// Token: 0x06007FBA RID: 32698 RVA: 0x00255F54 File Offset: 0x00254154
		private void __callDele_EventOnEquipmentEnchantAck(int arg1, int arg2, List<CommonBattleProperty> arg3)
		{
			Action<int, int, List<CommonBattleProperty>> eventOnEquipmentEnchantAck = this.EventOnEquipmentEnchantAck;
			if (eventOnEquipmentEnchantAck != null)
			{
				eventOnEquipmentEnchantAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06007FBB RID: 32699 RVA: 0x00255F78 File Offset: 0x00254178
		private void __clearDele_EventOnEquipmentEnchantAck(int arg1, int arg2, List<CommonBattleProperty> arg3)
		{
			this.EventOnEquipmentEnchantAck = null;
		}

		// Token: 0x06007FBC RID: 32700 RVA: 0x00255F84 File Offset: 0x00254184
		private void __callDele_EventOnEquipmentEnchantSaveAck(int arg1, EquipmentBagItem arg2)
		{
			Action<int, EquipmentBagItem> eventOnEquipmentEnchantSaveAck = this.EventOnEquipmentEnchantSaveAck;
			if (eventOnEquipmentEnchantSaveAck != null)
			{
				eventOnEquipmentEnchantSaveAck(arg1, arg2);
			}
		}

		// Token: 0x06007FBD RID: 32701 RVA: 0x00255FA8 File Offset: 0x002541A8
		private void __clearDele_EventOnEquipmentEnchantSaveAck(int arg1, EquipmentBagItem arg2)
		{
			this.EventOnEquipmentEnchantSaveAck = null;
		}

		// Token: 0x06007FBE RID: 32702 RVA: 0x00255FB4 File Offset: 0x002541B4
		private void __callDele_EventOnBattleCancelAck(int obj)
		{
			Action<int> eventOnBattleCancelAck = this.EventOnBattleCancelAck;
			if (eventOnBattleCancelAck != null)
			{
				eventOnBattleCancelAck(obj);
			}
		}

		// Token: 0x06007FBF RID: 32703 RVA: 0x00255FD8 File Offset: 0x002541D8
		private void __clearDele_EventOnBattleCancelAck(int obj)
		{
			this.EventOnBattleCancelAck = null;
		}

		// Token: 0x06007FC0 RID: 32704 RVA: 0x00255FE4 File Offset: 0x002541E4
		private void __callDele_EventOnBattleTeamSetAck(int obj)
		{
			Action<int> eventOnBattleTeamSetAck = this.EventOnBattleTeamSetAck;
			if (eventOnBattleTeamSetAck != null)
			{
				eventOnBattleTeamSetAck(obj);
			}
		}

		// Token: 0x06007FC1 RID: 32705 RVA: 0x00256008 File Offset: 0x00254208
		private void __clearDele_EventOnBattleTeamSetAck(int obj)
		{
			this.EventOnBattleTeamSetAck = null;
		}

		// Token: 0x06007FC2 RID: 32706 RVA: 0x00256014 File Offset: 0x00254214
		private void __callDele_EventOnBattleArmyRandomSeedGetAck(int obj)
		{
			Action<int> eventOnBattleArmyRandomSeedGetAck = this.EventOnBattleArmyRandomSeedGetAck;
			if (eventOnBattleArmyRandomSeedGetAck != null)
			{
				eventOnBattleArmyRandomSeedGetAck(obj);
			}
		}

		// Token: 0x06007FC3 RID: 32707 RVA: 0x00256038 File Offset: 0x00254238
		private void __clearDele_EventOnBattleArmyRandomSeedGetAck(int obj)
		{
			this.EventOnBattleArmyRandomSeedGetAck = null;
		}

		// Token: 0x06007FC4 RID: 32708 RVA: 0x00256044 File Offset: 0x00254244
		private void __callDele_EventOnBattleRoomCreateAck(int obj)
		{
			Action<int> eventOnBattleRoomCreateAck = this.EventOnBattleRoomCreateAck;
			if (eventOnBattleRoomCreateAck != null)
			{
				eventOnBattleRoomCreateAck(obj);
			}
		}

		// Token: 0x06007FC5 RID: 32709 RVA: 0x00256068 File Offset: 0x00254268
		private void __clearDele_EventOnBattleRoomCreateAck(int obj)
		{
			this.EventOnBattleRoomCreateAck = null;
		}

		// Token: 0x06007FC6 RID: 32710 RVA: 0x00256074 File Offset: 0x00254274
		private void __callDele_EventOnBattleRoomPlayerStatusChangeAck(int obj)
		{
			Action<int> eventOnBattleRoomPlayerStatusChangeAck = this.EventOnBattleRoomPlayerStatusChangeAck;
			if (eventOnBattleRoomPlayerStatusChangeAck != null)
			{
				eventOnBattleRoomPlayerStatusChangeAck(obj);
			}
		}

		// Token: 0x06007FC7 RID: 32711 RVA: 0x00256098 File Offset: 0x00254298
		private void __clearDele_EventOnBattleRoomPlayerStatusChangeAck(int obj)
		{
			this.EventOnBattleRoomPlayerStatusChangeAck = null;
		}

		// Token: 0x06007FC8 RID: 32712 RVA: 0x002560A4 File Offset: 0x002542A4
		private void __callDele_EventOnBattleRoomHeroSetupAck(int obj)
		{
			Action<int> eventOnBattleRoomHeroSetupAck = this.EventOnBattleRoomHeroSetupAck;
			if (eventOnBattleRoomHeroSetupAck != null)
			{
				eventOnBattleRoomHeroSetupAck(obj);
			}
		}

		// Token: 0x06007FC9 RID: 32713 RVA: 0x002560C8 File Offset: 0x002542C8
		private void __clearDele_EventOnBattleRoomHeroSetupAck(int obj)
		{
			this.EventOnBattleRoomHeroSetupAck = null;
		}

		// Token: 0x06007FCA RID: 32714 RVA: 0x002560D4 File Offset: 0x002542D4
		private void __callDele_EventOnBattleRoomHeroSwapAck(int obj)
		{
			Action<int> eventOnBattleRoomHeroSwapAck = this.EventOnBattleRoomHeroSwapAck;
			if (eventOnBattleRoomHeroSwapAck != null)
			{
				eventOnBattleRoomHeroSwapAck(obj);
			}
		}

		// Token: 0x06007FCB RID: 32715 RVA: 0x002560F8 File Offset: 0x002542F8
		private void __clearDele_EventOnBattleRoomHeroSwapAck(int obj)
		{
			this.EventOnBattleRoomHeroSwapAck = null;
		}

		// Token: 0x06007FCC RID: 32716 RVA: 0x00256104 File Offset: 0x00254304
		private void __callDele_EventOnBattleRoomHeroPutdownAck(int obj)
		{
			Action<int> eventOnBattleRoomHeroPutdownAck = this.EventOnBattleRoomHeroPutdownAck;
			if (eventOnBattleRoomHeroPutdownAck != null)
			{
				eventOnBattleRoomHeroPutdownAck(obj);
			}
		}

		// Token: 0x06007FCD RID: 32717 RVA: 0x00256128 File Offset: 0x00254328
		private void __clearDele_EventOnBattleRoomHeroPutdownAck(int obj)
		{
			this.EventOnBattleRoomHeroPutdownAck = null;
		}

		// Token: 0x06007FCE RID: 32718 RVA: 0x00256134 File Offset: 0x00254334
		private void __callDele_EventOnBattleRoomHeroProtectAck(int obj)
		{
			Action<int> eventOnBattleRoomHeroProtectAck = this.EventOnBattleRoomHeroProtectAck;
			if (eventOnBattleRoomHeroProtectAck != null)
			{
				eventOnBattleRoomHeroProtectAck(obj);
			}
		}

		// Token: 0x06007FCF RID: 32719 RVA: 0x00256158 File Offset: 0x00254358
		private void __clearDele_EventOnBattleRoomHeroProtectAck(int obj)
		{
			this.EventOnBattleRoomHeroProtectAck = null;
		}

		// Token: 0x06007FD0 RID: 32720 RVA: 0x00256164 File Offset: 0x00254364
		private void __callDele_EventOnBattleRoomHeroBanAck(int obj)
		{
			Action<int> eventOnBattleRoomHeroBanAck = this.EventOnBattleRoomHeroBanAck;
			if (eventOnBattleRoomHeroBanAck != null)
			{
				eventOnBattleRoomHeroBanAck(obj);
			}
		}

		// Token: 0x06007FD1 RID: 32721 RVA: 0x00256188 File Offset: 0x00254388
		private void __clearDele_EventOnBattleRoomHeroBanAck(int obj)
		{
			this.EventOnBattleRoomHeroBanAck = null;
		}

		// Token: 0x06007FD2 RID: 32722 RVA: 0x00256194 File Offset: 0x00254394
		private void __callDele_EventOnBattleRoomBattleCommandExecuteAck(int obj)
		{
			Action<int> eventOnBattleRoomBattleCommandExecuteAck = this.EventOnBattleRoomBattleCommandExecuteAck;
			if (eventOnBattleRoomBattleCommandExecuteAck != null)
			{
				eventOnBattleRoomBattleCommandExecuteAck(obj);
			}
		}

		// Token: 0x06007FD3 RID: 32723 RVA: 0x002561B8 File Offset: 0x002543B8
		private void __clearDele_EventOnBattleRoomBattleCommandExecuteAck(int obj)
		{
			this.EventOnBattleRoomBattleCommandExecuteAck = null;
		}

		// Token: 0x06007FD4 RID: 32724 RVA: 0x002561C4 File Offset: 0x002543C4
		private void __callDele_EventOnBattleRoomQuitAck(int obj)
		{
			Action<int> eventOnBattleRoomQuitAck = this.EventOnBattleRoomQuitAck;
			if (eventOnBattleRoomQuitAck != null)
			{
				eventOnBattleRoomQuitAck(obj);
			}
		}

		// Token: 0x06007FD5 RID: 32725 RVA: 0x002561E8 File Offset: 0x002543E8
		private void __clearDele_EventOnBattleRoomQuitAck(int obj)
		{
			this.EventOnBattleRoomQuitAck = null;
		}

		// Token: 0x06007FD6 RID: 32726 RVA: 0x002561F4 File Offset: 0x002543F4
		private void __callDele_EventOnBattleRoomPlayerActionBeginAck(int obj)
		{
			Action<int> eventOnBattleRoomPlayerActionBeginAck = this.EventOnBattleRoomPlayerActionBeginAck;
			if (eventOnBattleRoomPlayerActionBeginAck != null)
			{
				eventOnBattleRoomPlayerActionBeginAck(obj);
			}
		}

		// Token: 0x06007FD7 RID: 32727 RVA: 0x00256218 File Offset: 0x00254418
		private void __clearDele_EventOnBattleRoomPlayerActionBeginAck(int obj)
		{
			this.EventOnBattleRoomPlayerActionBeginAck = null;
		}

		// Token: 0x06007FD8 RID: 32728 RVA: 0x00256224 File Offset: 0x00254424
		private void __callDele_EventOnBattleRoomGetAck(int obj)
		{
			Action<int> eventOnBattleRoomGetAck = this.EventOnBattleRoomGetAck;
			if (eventOnBattleRoomGetAck != null)
			{
				eventOnBattleRoomGetAck(obj);
			}
		}

		// Token: 0x06007FD9 RID: 32729 RVA: 0x00256248 File Offset: 0x00254448
		private void __clearDele_EventOnBattleRoomGetAck(int obj)
		{
			this.EventOnBattleRoomGetAck = null;
		}

		// Token: 0x06007FDA RID: 32730 RVA: 0x00256254 File Offset: 0x00254454
		private void __callDele_EventOnBattleRoomEndCurrentBPTurnAck(int obj)
		{
			Action<int> eventOnBattleRoomEndCurrentBPTurnAck = this.EventOnBattleRoomEndCurrentBPTurnAck;
			if (eventOnBattleRoomEndCurrentBPTurnAck != null)
			{
				eventOnBattleRoomEndCurrentBPTurnAck(obj);
			}
		}

		// Token: 0x06007FDB RID: 32731 RVA: 0x00256278 File Offset: 0x00254478
		private void __clearDele_EventOnBattleRoomEndCurrentBPTurnAck(int obj)
		{
			this.EventOnBattleRoomEndCurrentBPTurnAck = null;
		}

		// Token: 0x06007FDC RID: 32732 RVA: 0x00256284 File Offset: 0x00254484
		private void __callDele_EventOnBattleRoomTeamBattleJoinNtf()
		{
			Action eventOnBattleRoomTeamBattleJoinNtf = this.EventOnBattleRoomTeamBattleJoinNtf;
			if (eventOnBattleRoomTeamBattleJoinNtf != null)
			{
				eventOnBattleRoomTeamBattleJoinNtf();
			}
		}

		// Token: 0x06007FDD RID: 32733 RVA: 0x002562A4 File Offset: 0x002544A4
		private void __clearDele_EventOnBattleRoomTeamBattleJoinNtf()
		{
			this.EventOnBattleRoomTeamBattleJoinNtf = null;
		}

		// Token: 0x06007FDE RID: 32734 RVA: 0x002562B0 File Offset: 0x002544B0
		private void __callDele_EventOnBattleRoomPVPBattleJoinNtf()
		{
			Action eventOnBattleRoomPVPBattleJoinNtf = this.EventOnBattleRoomPVPBattleJoinNtf;
			if (eventOnBattleRoomPVPBattleJoinNtf != null)
			{
				eventOnBattleRoomPVPBattleJoinNtf();
			}
		}

		// Token: 0x06007FDF RID: 32735 RVA: 0x002562D0 File Offset: 0x002544D0
		private void __clearDele_EventOnBattleRoomPVPBattleJoinNtf()
		{
			this.EventOnBattleRoomPVPBattleJoinNtf = null;
		}

		// Token: 0x06007FE0 RID: 32736 RVA: 0x002562DC File Offset: 0x002544DC
		private void __callDele_EventOnBattleRoomRealTimePVPBattleJoinNtf()
		{
			Action eventOnBattleRoomRealTimePVPBattleJoinNtf = this.EventOnBattleRoomRealTimePVPBattleJoinNtf;
			if (eventOnBattleRoomRealTimePVPBattleJoinNtf != null)
			{
				eventOnBattleRoomRealTimePVPBattleJoinNtf();
			}
		}

		// Token: 0x06007FE1 RID: 32737 RVA: 0x002562FC File Offset: 0x002544FC
		private void __clearDele_EventOnBattleRoomRealTimePVPBattleJoinNtf()
		{
			this.EventOnBattleRoomRealTimePVPBattleJoinNtf = null;
		}

		// Token: 0x06007FE2 RID: 32738 RVA: 0x00256308 File Offset: 0x00254508
		private void __callDele_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf()
		{
			Action eventOnBattleRoomGuildMassiveCombatBattleJoinNtf = this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf;
			if (eventOnBattleRoomGuildMassiveCombatBattleJoinNtf != null)
			{
				eventOnBattleRoomGuildMassiveCombatBattleJoinNtf();
			}
		}

		// Token: 0x06007FE3 RID: 32739 RVA: 0x00256328 File Offset: 0x00254528
		private void __clearDele_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf()
		{
			this.EventOnBattleRoomGuildMassiveCombatBattleJoinNtf = null;
		}

		// Token: 0x06007FE4 RID: 32740 RVA: 0x00256334 File Offset: 0x00254534
		private void __callDele_EventOnBattleRoomPlayerStatusChangedNtf(ulong obj)
		{
			Action<ulong> eventOnBattleRoomPlayerStatusChangedNtf = this.EventOnBattleRoomPlayerStatusChangedNtf;
			if (eventOnBattleRoomPlayerStatusChangedNtf != null)
			{
				eventOnBattleRoomPlayerStatusChangedNtf(obj);
			}
		}

		// Token: 0x06007FE5 RID: 32741 RVA: 0x00256358 File Offset: 0x00254558
		private void __clearDele_EventOnBattleRoomPlayerStatusChangedNtf(ulong obj)
		{
			this.EventOnBattleRoomPlayerStatusChangedNtf = null;
		}

		// Token: 0x06007FE6 RID: 32742 RVA: 0x00256364 File Offset: 0x00254564
		private void __callDele_EventOnBattleRoomPlayerQuitNtf(ulong arg1, BattleRoomQuitReason arg2)
		{
			Action<ulong, BattleRoomQuitReason> eventOnBattleRoomPlayerQuitNtf = this.EventOnBattleRoomPlayerQuitNtf;
			if (eventOnBattleRoomPlayerQuitNtf != null)
			{
				eventOnBattleRoomPlayerQuitNtf(arg1, arg2);
			}
		}

		// Token: 0x06007FE7 RID: 32743 RVA: 0x00256388 File Offset: 0x00254588
		private void __clearDele_EventOnBattleRoomPlayerQuitNtf(ulong arg1, BattleRoomQuitReason arg2)
		{
			this.EventOnBattleRoomPlayerQuitNtf = null;
		}

		// Token: 0x06007FE8 RID: 32744 RVA: 0x00256394 File Offset: 0x00254594
		private void __callDele_EventOnBattleRoomHeroSetupNtf(List<int> obj)
		{
			Action<List<int>> eventOnBattleRoomHeroSetupNtf = this.EventOnBattleRoomHeroSetupNtf;
			if (eventOnBattleRoomHeroSetupNtf != null)
			{
				eventOnBattleRoomHeroSetupNtf(obj);
			}
		}

		// Token: 0x06007FE9 RID: 32745 RVA: 0x002563B8 File Offset: 0x002545B8
		private void __clearDele_EventOnBattleRoomHeroSetupNtf(List<int> obj)
		{
			this.EventOnBattleRoomHeroSetupNtf = null;
		}

		// Token: 0x06007FEA RID: 32746 RVA: 0x002563C4 File Offset: 0x002545C4
		private void __callDele_EventOnBattleRoomTeamBattleStartNtf()
		{
			Action eventOnBattleRoomTeamBattleStartNtf = this.EventOnBattleRoomTeamBattleStartNtf;
			if (eventOnBattleRoomTeamBattleStartNtf != null)
			{
				eventOnBattleRoomTeamBattleStartNtf();
			}
		}

		// Token: 0x06007FEB RID: 32747 RVA: 0x002563E4 File Offset: 0x002545E4
		private void __clearDele_EventOnBattleRoomTeamBattleStartNtf()
		{
			this.EventOnBattleRoomTeamBattleStartNtf = null;
		}

		// Token: 0x06007FEC RID: 32748 RVA: 0x002563F0 File Offset: 0x002545F0
		private void __callDele_EventOnBattleRoomPVPBattleStartNtf()
		{
			Action eventOnBattleRoomPVPBattleStartNtf = this.EventOnBattleRoomPVPBattleStartNtf;
			if (eventOnBattleRoomPVPBattleStartNtf != null)
			{
				eventOnBattleRoomPVPBattleStartNtf();
			}
		}

		// Token: 0x06007FED RID: 32749 RVA: 0x00256410 File Offset: 0x00254610
		private void __clearDele_EventOnBattleRoomPVPBattleStartNtf()
		{
			this.EventOnBattleRoomPVPBattleStartNtf = null;
		}

		// Token: 0x06007FEE RID: 32750 RVA: 0x0025641C File Offset: 0x0025461C
		private void __callDele_EventOnBattleRoomRealTimePVPBattleStartNtf()
		{
			Action eventOnBattleRoomRealTimePVPBattleStartNtf = this.EventOnBattleRoomRealTimePVPBattleStartNtf;
			if (eventOnBattleRoomRealTimePVPBattleStartNtf != null)
			{
				eventOnBattleRoomRealTimePVPBattleStartNtf();
			}
		}

		// Token: 0x06007FEF RID: 32751 RVA: 0x0025643C File Offset: 0x0025463C
		private void __clearDele_EventOnBattleRoomRealTimePVPBattleStartNtf()
		{
			this.EventOnBattleRoomRealTimePVPBattleStartNtf = null;
		}

		// Token: 0x06007FF0 RID: 32752 RVA: 0x00256448 File Offset: 0x00254648
		private void __callDele_EventOnBattleRoomBattleCommandExecuteNtf(ulong obj)
		{
			Action<ulong> eventOnBattleRoomBattleCommandExecuteNtf = this.EventOnBattleRoomBattleCommandExecuteNtf;
			if (eventOnBattleRoomBattleCommandExecuteNtf != null)
			{
				eventOnBattleRoomBattleCommandExecuteNtf(obj);
			}
		}

		// Token: 0x06007FF1 RID: 32753 RVA: 0x0025646C File Offset: 0x0025466C
		private void __clearDele_EventOnBattleRoomBattleCommandExecuteNtf(ulong obj)
		{
			this.EventOnBattleRoomBattleCommandExecuteNtf = null;
		}

		// Token: 0x06007FF2 RID: 32754 RVA: 0x00256478 File Offset: 0x00254678
		private void __callDele_EventOnBattleRoomTeamBattleFinishNtf()
		{
			Action eventOnBattleRoomTeamBattleFinishNtf = this.EventOnBattleRoomTeamBattleFinishNtf;
			if (eventOnBattleRoomTeamBattleFinishNtf != null)
			{
				eventOnBattleRoomTeamBattleFinishNtf();
			}
		}

		// Token: 0x06007FF3 RID: 32755 RVA: 0x00256498 File Offset: 0x00254698
		private void __clearDele_EventOnBattleRoomTeamBattleFinishNtf()
		{
			this.EventOnBattleRoomTeamBattleFinishNtf = null;
		}

		// Token: 0x06007FF4 RID: 32756 RVA: 0x002564A4 File Offset: 0x002546A4
		private void __callDele_EventOnBattleRoomPVPBattleFinishNtf()
		{
			Action eventOnBattleRoomPVPBattleFinishNtf = this.EventOnBattleRoomPVPBattleFinishNtf;
			if (eventOnBattleRoomPVPBattleFinishNtf != null)
			{
				eventOnBattleRoomPVPBattleFinishNtf();
			}
		}

		// Token: 0x06007FF5 RID: 32757 RVA: 0x002564C4 File Offset: 0x002546C4
		private void __clearDele_EventOnBattleRoomPVPBattleFinishNtf()
		{
			this.EventOnBattleRoomPVPBattleFinishNtf = null;
		}

		// Token: 0x06007FF6 RID: 32758 RVA: 0x002564D0 File Offset: 0x002546D0
		private void __callDele_EventOnBattleRoomRealTimePVPBattleFinishNtf()
		{
			Action eventOnBattleRoomRealTimePVPBattleFinishNtf = this.EventOnBattleRoomRealTimePVPBattleFinishNtf;
			if (eventOnBattleRoomRealTimePVPBattleFinishNtf != null)
			{
				eventOnBattleRoomRealTimePVPBattleFinishNtf();
			}
		}

		// Token: 0x06007FF7 RID: 32759 RVA: 0x002564F0 File Offset: 0x002546F0
		private void __clearDele_EventOnBattleRoomRealTimePVPBattleFinishNtf()
		{
			this.EventOnBattleRoomRealTimePVPBattleFinishNtf = null;
		}

		// Token: 0x06007FF8 RID: 32760 RVA: 0x002564FC File Offset: 0x002546FC
		private void __callDele_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf()
		{
			Action eventOnBattleRoomGuildMassiveCombatBattleFinishNtf = this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf;
			if (eventOnBattleRoomGuildMassiveCombatBattleFinishNtf != null)
			{
				eventOnBattleRoomGuildMassiveCombatBattleFinishNtf();
			}
		}

		// Token: 0x06007FF9 RID: 32761 RVA: 0x0025651C File Offset: 0x0025471C
		private void __clearDele_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf()
		{
			this.EventOnBattleRoomGuildMassiveCombatBattleFinishNtf = null;
		}

		// Token: 0x06007FFA RID: 32762 RVA: 0x00256528 File Offset: 0x00254728
		private void __callDele_EventOnBattleRoomPlayerBattleInfoInitNtf()
		{
			Action eventOnBattleRoomPlayerBattleInfoInitNtf = this.EventOnBattleRoomPlayerBattleInfoInitNtf;
			if (eventOnBattleRoomPlayerBattleInfoInitNtf != null)
			{
				eventOnBattleRoomPlayerBattleInfoInitNtf();
			}
		}

		// Token: 0x06007FFB RID: 32763 RVA: 0x00256548 File Offset: 0x00254748
		private void __clearDele_EventOnBattleRoomPlayerBattleInfoInitNtf()
		{
			this.EventOnBattleRoomPlayerBattleInfoInitNtf = null;
		}

		// Token: 0x06007FFC RID: 32764 RVA: 0x00256554 File Offset: 0x00254754
		private void __callDele_EventOnBattleRoomDataChangeNtf()
		{
			Action eventOnBattleRoomDataChangeNtf = this.EventOnBattleRoomDataChangeNtf;
			if (eventOnBattleRoomDataChangeNtf != null)
			{
				eventOnBattleRoomDataChangeNtf();
			}
		}

		// Token: 0x06007FFD RID: 32765 RVA: 0x00256574 File Offset: 0x00254774
		private void __clearDele_EventOnBattleRoomDataChangeNtf()
		{
			this.EventOnBattleRoomDataChangeNtf = null;
		}

		// Token: 0x06007FFE RID: 32766 RVA: 0x00256580 File Offset: 0x00254780
		private void __callDele_EventOnChatMessageNtf(ChatMessage obj)
		{
			Action<ChatMessage> eventOnChatMessageNtf = this.EventOnChatMessageNtf;
			if (eventOnChatMessageNtf != null)
			{
				eventOnChatMessageNtf(obj);
			}
		}

		// Token: 0x06007FFF RID: 32767 RVA: 0x002565A4 File Offset: 0x002547A4
		private void __clearDele_EventOnChatMessageNtf(ChatMessage obj)
		{
			this.EventOnChatMessageNtf = null;
		}

		// Token: 0x06008000 RID: 32768 RVA: 0x002565B0 File Offset: 0x002547B0
		private void __callDele_EventOnChatContactUserSummaryInfoAck()
		{
			Action eventOnChatContactUserSummaryInfoAck = this.EventOnChatContactUserSummaryInfoAck;
			if (eventOnChatContactUserSummaryInfoAck != null)
			{
				eventOnChatContactUserSummaryInfoAck();
			}
		}

		// Token: 0x06008001 RID: 32769 RVA: 0x002565D0 File Offset: 0x002547D0
		private void __clearDele_EventOnChatContactUserSummaryInfoAck()
		{
			this.EventOnChatContactUserSummaryInfoAck = null;
		}

		// Token: 0x06008002 RID: 32770 RVA: 0x002565DC File Offset: 0x002547DC
		private void __callDele_EventOnChatMessageAck(int obj)
		{
			Action<int> eventOnChatMessageAck = this.EventOnChatMessageAck;
			if (eventOnChatMessageAck != null)
			{
				eventOnChatMessageAck(obj);
			}
		}

		// Token: 0x06008003 RID: 32771 RVA: 0x00256600 File Offset: 0x00254800
		private void __clearDele_EventOnChatMessageAck(int obj)
		{
			this.EventOnChatMessageAck = null;
		}

		// Token: 0x06008004 RID: 32772 RVA: 0x0025660C File Offset: 0x0025480C
		private void __callDele_EventOnChatGetVoiceContentAck(ChatVoiceMessage obj)
		{
			Action<ChatVoiceMessage> eventOnChatGetVoiceContentAck = this.EventOnChatGetVoiceContentAck;
			if (eventOnChatGetVoiceContentAck != null)
			{
				eventOnChatGetVoiceContentAck(obj);
			}
		}

		// Token: 0x06008005 RID: 32773 RVA: 0x00256630 File Offset: 0x00254830
		private void __clearDele_EventOnChatGetVoiceContentAck(ChatVoiceMessage obj)
		{
			this.EventOnChatGetVoiceContentAck = null;
		}

		// Token: 0x06008006 RID: 32774 RVA: 0x0025663C File Offset: 0x0025483C
		private void __callDele_EventOnChatEnterRoomAck(int arg1, int arg2)
		{
			Action<int, int> eventOnChatEnterRoomAck = this.EventOnChatEnterRoomAck;
			if (eventOnChatEnterRoomAck != null)
			{
				eventOnChatEnterRoomAck(arg1, arg2);
			}
		}

		// Token: 0x06008007 RID: 32775 RVA: 0x00256660 File Offset: 0x00254860
		private void __clearDele_EventOnChatEnterRoomAck(int arg1, int arg2)
		{
			this.EventOnChatEnterRoomAck = null;
		}

		// Token: 0x06008008 RID: 32776 RVA: 0x0025666C File Offset: 0x0025486C
		private void __callDele_EventOnCreateChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
		{
			Action<int, ProChatGroupInfo, ProChatUserInfo> eventOnCreateChatGroupAck = this.EventOnCreateChatGroupAck;
			if (eventOnCreateChatGroupAck != null)
			{
				eventOnCreateChatGroupAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008009 RID: 32777 RVA: 0x00256690 File Offset: 0x00254890
		private void __clearDele_EventOnCreateChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
		{
			this.EventOnCreateChatGroupAck = null;
		}

		// Token: 0x0600800A RID: 32778 RVA: 0x0025669C File Offset: 0x0025489C
		private void __callDele_EventOnGetAllChatGroupAck(int arg1, List<ProChatGroupCompactInfo> arg2)
		{
			Action<int, List<ProChatGroupCompactInfo>> eventOnGetAllChatGroupAck = this.EventOnGetAllChatGroupAck;
			if (eventOnGetAllChatGroupAck != null)
			{
				eventOnGetAllChatGroupAck(arg1, arg2);
			}
		}

		// Token: 0x0600800B RID: 32779 RVA: 0x002566C0 File Offset: 0x002548C0
		private void __clearDele_EventOnGetAllChatGroupAck(int arg1, List<ProChatGroupCompactInfo> arg2)
		{
			this.EventOnGetAllChatGroupAck = null;
		}

		// Token: 0x0600800C RID: 32780 RVA: 0x002566CC File Offset: 0x002548CC
		private void __callDele_EventOnGetChatGroupMemberAck(int arg1, ProChatGroupInfo arg2)
		{
			Action<int, ProChatGroupInfo> eventOnGetChatGroupMemberAck = this.EventOnGetChatGroupMemberAck;
			if (eventOnGetChatGroupMemberAck != null)
			{
				eventOnGetChatGroupMemberAck(arg1, arg2);
			}
		}

		// Token: 0x0600800D RID: 32781 RVA: 0x002566F0 File Offset: 0x002548F0
		private void __clearDele_EventOnGetChatGroupMemberAck(int arg1, ProChatGroupInfo arg2)
		{
			this.EventOnGetChatGroupMemberAck = null;
		}

		// Token: 0x0600800E RID: 32782 RVA: 0x002566FC File Offset: 0x002548FC
		private void __callDele_EventOnChatGroupChangeOwnerAck(int obj)
		{
			Action<int> eventOnChatGroupChangeOwnerAck = this.EventOnChatGroupChangeOwnerAck;
			if (eventOnChatGroupChangeOwnerAck != null)
			{
				eventOnChatGroupChangeOwnerAck(obj);
			}
		}

		// Token: 0x0600800F RID: 32783 RVA: 0x00256720 File Offset: 0x00254920
		private void __clearDele_EventOnChatGroupChangeOwnerAck(int obj)
		{
			this.EventOnChatGroupChangeOwnerAck = null;
		}

		// Token: 0x06008010 RID: 32784 RVA: 0x0025672C File Offset: 0x0025492C
		private void __callDele_EventOnChatGroupChangeNameAck(int obj)
		{
			Action<int> eventOnChatGroupChangeNameAck = this.EventOnChatGroupChangeNameAck;
			if (eventOnChatGroupChangeNameAck != null)
			{
				eventOnChatGroupChangeNameAck(obj);
			}
		}

		// Token: 0x06008011 RID: 32785 RVA: 0x00256750 File Offset: 0x00254950
		private void __clearDele_EventOnChatGroupChangeNameAck(int obj)
		{
			this.EventOnChatGroupChangeNameAck = null;
		}

		// Token: 0x06008012 RID: 32786 RVA: 0x0025675C File Offset: 0x0025495C
		private void __callDele_EventOnInviteToChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
		{
			Action<int, ProChatGroupInfo, ProChatUserInfo> eventOnInviteToChatGroupAck = this.EventOnInviteToChatGroupAck;
			if (eventOnInviteToChatGroupAck != null)
			{
				eventOnInviteToChatGroupAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008013 RID: 32787 RVA: 0x00256780 File Offset: 0x00254980
		private void __clearDele_EventOnInviteToChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
		{
			this.EventOnInviteToChatGroupAck = null;
		}

		// Token: 0x06008014 RID: 32788 RVA: 0x0025678C File Offset: 0x0025498C
		private void __callDele_EventOnLeaveChatGroupAck(int obj)
		{
			Action<int> eventOnLeaveChatGroupAck = this.EventOnLeaveChatGroupAck;
			if (eventOnLeaveChatGroupAck != null)
			{
				eventOnLeaveChatGroupAck(obj);
			}
		}

		// Token: 0x06008015 RID: 32789 RVA: 0x002567B0 File Offset: 0x002549B0
		private void __clearDele_EventOnLeaveChatGroupAck(int obj)
		{
			this.EventOnLeaveChatGroupAck = null;
		}

		// Token: 0x06008016 RID: 32790 RVA: 0x002567BC File Offset: 0x002549BC
		private void __callDele_EventOnKickUserFromGroupAck(int obj)
		{
			Action<int> eventOnKickUserFromGroupAck = this.EventOnKickUserFromGroupAck;
			if (eventOnKickUserFromGroupAck != null)
			{
				eventOnKickUserFromGroupAck(obj);
			}
		}

		// Token: 0x06008017 RID: 32791 RVA: 0x002567E0 File Offset: 0x002549E0
		private void __clearDele_EventOnKickUserFromGroupAck(int obj)
		{
			this.EventOnKickUserFromGroupAck = null;
		}

		// Token: 0x06008018 RID: 32792 RVA: 0x002567EC File Offset: 0x002549EC
		private void __callDele_EventOnGetUserSummaryAck(int arg1, List<UserSummary> arg2)
		{
			Action<int, List<UserSummary>> eventOnGetUserSummaryAck = this.EventOnGetUserSummaryAck;
			if (eventOnGetUserSummaryAck != null)
			{
				eventOnGetUserSummaryAck(arg1, arg2);
			}
		}

		// Token: 0x06008019 RID: 32793 RVA: 0x00256810 File Offset: 0x00254A10
		private void __clearDele_EventOnGetUserSummaryAck(int arg1, List<UserSummary> arg2)
		{
			this.EventOnGetUserSummaryAck = null;
		}

		// Token: 0x0600801A RID: 32794 RVA: 0x0025681C File Offset: 0x00254A1C
		private void __callDele_EventOnChatGroupUpdateNtf(ProChatGroupInfo obj)
		{
			Action<ProChatGroupInfo> eventOnChatGroupUpdateNtf = this.EventOnChatGroupUpdateNtf;
			if (eventOnChatGroupUpdateNtf != null)
			{
				eventOnChatGroupUpdateNtf(obj);
			}
		}

		// Token: 0x0600801B RID: 32795 RVA: 0x00256840 File Offset: 0x00254A40
		private void __clearDele_EventOnChatGroupUpdateNtf(ProChatGroupInfo obj)
		{
			this.EventOnChatGroupUpdateNtf = null;
		}

		// Token: 0x0600801C RID: 32796 RVA: 0x0025684C File Offset: 0x00254A4C
		private void __callDele_EventOnClimbTowerGetAck(int obj)
		{
			Action<int> eventOnClimbTowerGetAck = this.EventOnClimbTowerGetAck;
			if (eventOnClimbTowerGetAck != null)
			{
				eventOnClimbTowerGetAck(obj);
			}
		}

		// Token: 0x0600801D RID: 32797 RVA: 0x00256870 File Offset: 0x00254A70
		private void __clearDele_EventOnClimbTowerGetAck(int obj)
		{
			this.EventOnClimbTowerGetAck = null;
		}

		// Token: 0x0600801E RID: 32798 RVA: 0x0025687C File Offset: 0x00254A7C
		private void __callDele_EventOnClimbTowerLevelAttackAck(int obj)
		{
			Action<int> eventOnClimbTowerLevelAttackAck = this.EventOnClimbTowerLevelAttackAck;
			if (eventOnClimbTowerLevelAttackAck != null)
			{
				eventOnClimbTowerLevelAttackAck(obj);
			}
		}

		// Token: 0x0600801F RID: 32799 RVA: 0x002568A0 File Offset: 0x00254AA0
		private void __clearDele_EventOnClimbTowerLevelAttackAck(int obj)
		{
			this.EventOnClimbTowerLevelAttackAck = null;
		}

		// Token: 0x06008020 RID: 32800 RVA: 0x002568AC File Offset: 0x00254AAC
		private void __callDele_EventOnClimbTowerLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnClimbTowerLevelBattleFinishedAck = this.EventOnClimbTowerLevelBattleFinishedAck;
			if (eventOnClimbTowerLevelBattleFinishedAck != null)
			{
				eventOnClimbTowerLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008021 RID: 32801 RVA: 0x002568D0 File Offset: 0x00254AD0
		private void __clearDele_EventOnClimbTowerLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnClimbTowerLevelBattleFinishedAck = null;
		}

		// Token: 0x06008022 RID: 32802 RVA: 0x002568DC File Offset: 0x00254ADC
		private void __callDele_EventOnClimbTowerRaidAck(int arg1, BattleReward arg2)
		{
			Action<int, BattleReward> eventOnClimbTowerRaidAck = this.EventOnClimbTowerRaidAck;
			if (eventOnClimbTowerRaidAck != null)
			{
				eventOnClimbTowerRaidAck(arg1, arg2);
			}
		}

		// Token: 0x06008023 RID: 32803 RVA: 0x00256900 File Offset: 0x00254B00
		private void __clearDele_EventOnClimbTowerRaidAck(int arg1, BattleReward arg2)
		{
			this.EventOnClimbTowerRaidAck = null;
		}

		// Token: 0x06008024 RID: 32804 RVA: 0x0025690C File Offset: 0x00254B0C
		private void __callDele_EventOnHeroCommentGetAck(int obj)
		{
			Action<int> eventOnHeroCommentGetAck = this.EventOnHeroCommentGetAck;
			if (eventOnHeroCommentGetAck != null)
			{
				eventOnHeroCommentGetAck(obj);
			}
		}

		// Token: 0x06008025 RID: 32805 RVA: 0x00256930 File Offset: 0x00254B30
		private void __clearDele_EventOnHeroCommentGetAck(int obj)
		{
			this.EventOnHeroCommentGetAck = null;
		}

		// Token: 0x06008026 RID: 32806 RVA: 0x0025693C File Offset: 0x00254B3C
		private void __callDele_EventOnHeroCommentSendAck(int obj)
		{
			Action<int> eventOnHeroCommentSendAck = this.EventOnHeroCommentSendAck;
			if (eventOnHeroCommentSendAck != null)
			{
				eventOnHeroCommentSendAck(obj);
			}
		}

		// Token: 0x06008027 RID: 32807 RVA: 0x00256960 File Offset: 0x00254B60
		private void __clearDele_EventOnHeroCommentSendAck(int obj)
		{
			this.EventOnHeroCommentSendAck = null;
		}

		// Token: 0x06008028 RID: 32808 RVA: 0x0025696C File Offset: 0x00254B6C
		private void __callDele_EventOnHeroCommentPraisedAck(int obj)
		{
			Action<int> eventOnHeroCommentPraisedAck = this.EventOnHeroCommentPraisedAck;
			if (eventOnHeroCommentPraisedAck != null)
			{
				eventOnHeroCommentPraisedAck(obj);
			}
		}

		// Token: 0x06008029 RID: 32809 RVA: 0x00256990 File Offset: 0x00254B90
		private void __clearDele_EventOnHeroCommentPraisedAck(int obj)
		{
			this.EventOnHeroCommentPraisedAck = null;
		}

		// Token: 0x0600802A RID: 32810 RVA: 0x0025699C File Offset: 0x00254B9C
		private void __callDele_EventOnCommenterHeroViewAck(int arg1, Hero arg2)
		{
			Action<int, Hero> eventOnCommenterHeroViewAck = this.EventOnCommenterHeroViewAck;
			if (eventOnCommenterHeroViewAck != null)
			{
				eventOnCommenterHeroViewAck(arg1, arg2);
			}
		}

		// Token: 0x0600802B RID: 32811 RVA: 0x002569C0 File Offset: 0x00254BC0
		private void __clearDele_EventOnCommenterHeroViewAck(int arg1, Hero arg2)
		{
			this.EventOnCommenterHeroViewAck = null;
		}

		// Token: 0x0600802C RID: 32812 RVA: 0x002569CC File Offset: 0x00254BCC
		private void __callDele_EventOnGetLevelDanmakuAck(int obj)
		{
			Action<int> eventOnGetLevelDanmakuAck = this.EventOnGetLevelDanmakuAck;
			if (eventOnGetLevelDanmakuAck != null)
			{
				eventOnGetLevelDanmakuAck(obj);
			}
		}

		// Token: 0x0600802D RID: 32813 RVA: 0x002569F0 File Offset: 0x00254BF0
		private void __clearDele_EventOnGetLevelDanmakuAck(int obj)
		{
			this.EventOnGetLevelDanmakuAck = null;
		}

		// Token: 0x0600802E RID: 32814 RVA: 0x002569FC File Offset: 0x00254BFC
		private void __callDele_EventOnSendLevelDanmakuAck(int obj)
		{
			Action<int> eventOnSendLevelDanmakuAck = this.EventOnSendLevelDanmakuAck;
			if (eventOnSendLevelDanmakuAck != null)
			{
				eventOnSendLevelDanmakuAck(obj);
			}
		}

		// Token: 0x0600802F RID: 32815 RVA: 0x00256A20 File Offset: 0x00254C20
		private void __clearDele_EventOnSendLevelDanmakuAck(int obj)
		{
			this.EventOnSendLevelDanmakuAck = null;
		}

		// Token: 0x06008030 RID: 32816 RVA: 0x00256A2C File Offset: 0x00254C2C
		private void __callDele_EventOnFixedStoreBuyStoreItemAck(int obj)
		{
			Action<int> eventOnFixedStoreBuyStoreItemAck = this.EventOnFixedStoreBuyStoreItemAck;
			if (eventOnFixedStoreBuyStoreItemAck != null)
			{
				eventOnFixedStoreBuyStoreItemAck(obj);
			}
		}

		// Token: 0x06008031 RID: 32817 RVA: 0x00256A50 File Offset: 0x00254C50
		private void __clearDele_EventOnFixedStoreBuyStoreItemAck(int obj)
		{
			this.EventOnFixedStoreBuyStoreItemAck = null;
		}

		// Token: 0x06008032 RID: 32818 RVA: 0x00256A5C File Offset: 0x00254C5C
		private void __callDele_EventOnBusinessCardRandomShowChangeAck(int obj)
		{
			Action<int> eventOnBusinessCardRandomShowChangeAck = this.EventOnBusinessCardRandomShowChangeAck;
			if (eventOnBusinessCardRandomShowChangeAck != null)
			{
				eventOnBusinessCardRandomShowChangeAck(obj);
			}
		}

		// Token: 0x06008033 RID: 32819 RVA: 0x00256A80 File Offset: 0x00254C80
		private void __clearDele_EventOnBusinessCardRandomShowChangeAck(int obj)
		{
			this.EventOnBusinessCardRandomShowChangeAck = null;
		}

		// Token: 0x06008034 RID: 32820 RVA: 0x00256A8C File Offset: 0x00254C8C
		private void __callDele_EventOnLikeAck(int obj)
		{
			Action<int> eventOnLikeAck = this.EventOnLikeAck;
			if (eventOnLikeAck != null)
			{
				eventOnLikeAck(obj);
			}
		}

		// Token: 0x06008035 RID: 32821 RVA: 0x00256AB0 File Offset: 0x00254CB0
		private void __clearDele_EventOnLikeAck(int obj)
		{
			this.EventOnLikeAck = null;
		}

		// Token: 0x06008036 RID: 32822 RVA: 0x00256ABC File Offset: 0x00254CBC
		private void __callDele_EventOnBusinessCardGetAck(int obj)
		{
			Action<int> eventOnBusinessCardGetAck = this.EventOnBusinessCardGetAck;
			if (eventOnBusinessCardGetAck != null)
			{
				eventOnBusinessCardGetAck(obj);
			}
		}

		// Token: 0x06008037 RID: 32823 RVA: 0x00256AE0 File Offset: 0x00254CE0
		private void __clearDele_EventOnBusinessCardGetAck(int obj)
		{
			this.EventOnBusinessCardGetAck = null;
		}

		// Token: 0x06008038 RID: 32824 RVA: 0x00256AEC File Offset: 0x00254CEC
		private void __callDele_EventOnBusinessCardDescUpdateAck(int obj)
		{
			Action<int> eventOnBusinessCardDescUpdateAck = this.EventOnBusinessCardDescUpdateAck;
			if (eventOnBusinessCardDescUpdateAck != null)
			{
				eventOnBusinessCardDescUpdateAck(obj);
			}
		}

		// Token: 0x06008039 RID: 32825 RVA: 0x00256B10 File Offset: 0x00254D10
		private void __clearDele_EventOnBusinessCardDescUpdateAck(int obj)
		{
			this.EventOnBusinessCardDescUpdateAck = null;
		}

		// Token: 0x0600803A RID: 32826 RVA: 0x00256B1C File Offset: 0x00254D1C
		private void __callDele_EventOnBusinessCardHeroSetUpdateAck(int obj)
		{
			Action<int> eventOnBusinessCardHeroSetUpdateAck = this.EventOnBusinessCardHeroSetUpdateAck;
			if (eventOnBusinessCardHeroSetUpdateAck != null)
			{
				eventOnBusinessCardHeroSetUpdateAck(obj);
			}
		}

		// Token: 0x0600803B RID: 32827 RVA: 0x00256B40 File Offset: 0x00254D40
		private void __clearDele_EventOnBusinessCardHeroSetUpdateAck(int obj)
		{
			this.EventOnBusinessCardHeroSetUpdateAck = null;
		}

		// Token: 0x0600803C RID: 32828 RVA: 0x00256B4C File Offset: 0x00254D4C
		private void __callDele_EventOnFriendGetSocialRelationAck(int obj)
		{
			Action<int> eventOnFriendGetSocialRelationAck = this.EventOnFriendGetSocialRelationAck;
			if (eventOnFriendGetSocialRelationAck != null)
			{
				eventOnFriendGetSocialRelationAck(obj);
			}
		}

		// Token: 0x0600803D RID: 32829 RVA: 0x00256B70 File Offset: 0x00254D70
		private void __clearDele_EventOnFriendGetSocialRelationAck(int obj)
		{
			this.EventOnFriendGetSocialRelationAck = null;
		}

		// Token: 0x0600803E RID: 32830 RVA: 0x00256B7C File Offset: 0x00254D7C
		private void __callDele_EventOnFriendInviteAck(int arg1, UserSummary arg2)
		{
			Action<int, UserSummary> eventOnFriendInviteAck = this.EventOnFriendInviteAck;
			if (eventOnFriendInviteAck != null)
			{
				eventOnFriendInviteAck(arg1, arg2);
			}
		}

		// Token: 0x0600803F RID: 32831 RVA: 0x00256BA0 File Offset: 0x00254DA0
		private void __clearDele_EventOnFriendInviteAck(int arg1, UserSummary arg2)
		{
			this.EventOnFriendInviteAck = null;
		}

		// Token: 0x06008040 RID: 32832 RVA: 0x00256BAC File Offset: 0x00254DAC
		private void __callDele_EventOnFriendInviteNtf()
		{
			Action eventOnFriendInviteNtf = this.EventOnFriendInviteNtf;
			if (eventOnFriendInviteNtf != null)
			{
				eventOnFriendInviteNtf();
			}
		}

		// Token: 0x06008041 RID: 32833 RVA: 0x00256BCC File Offset: 0x00254DCC
		private void __clearDele_EventOnFriendInviteNtf()
		{
			this.EventOnFriendInviteNtf = null;
		}

		// Token: 0x06008042 RID: 32834 RVA: 0x00256BD8 File Offset: 0x00254DD8
		private void __callDele_EventOnFriendInviteAcceptAck(int arg1, UserSummary arg2)
		{
			Action<int, UserSummary> eventOnFriendInviteAcceptAck = this.EventOnFriendInviteAcceptAck;
			if (eventOnFriendInviteAcceptAck != null)
			{
				eventOnFriendInviteAcceptAck(arg1, arg2);
			}
		}

		// Token: 0x06008043 RID: 32835 RVA: 0x00256BFC File Offset: 0x00254DFC
		private void __clearDele_EventOnFriendInviteAcceptAck(int arg1, UserSummary arg2)
		{
			this.EventOnFriendInviteAcceptAck = null;
		}

		// Token: 0x06008044 RID: 32836 RVA: 0x00256C08 File Offset: 0x00254E08
		private void __callDele_EventOnFriendInviteAcceptNtf(UserSummary obj)
		{
			Action<UserSummary> eventOnFriendInviteAcceptNtf = this.EventOnFriendInviteAcceptNtf;
			if (eventOnFriendInviteAcceptNtf != null)
			{
				eventOnFriendInviteAcceptNtf(obj);
			}
		}

		// Token: 0x06008045 RID: 32837 RVA: 0x00256C2C File Offset: 0x00254E2C
		private void __clearDele_EventOnFriendInviteAcceptNtf(UserSummary obj)
		{
			this.EventOnFriendInviteAcceptNtf = null;
		}

		// Token: 0x06008046 RID: 32838 RVA: 0x00256C38 File Offset: 0x00254E38
		private void __callDele_EventOnFriendInviteDeclineAck(int obj)
		{
			Action<int> eventOnFriendInviteDeclineAck = this.EventOnFriendInviteDeclineAck;
			if (eventOnFriendInviteDeclineAck != null)
			{
				eventOnFriendInviteDeclineAck(obj);
			}
		}

		// Token: 0x06008047 RID: 32839 RVA: 0x00256C5C File Offset: 0x00254E5C
		private void __clearDele_EventOnFriendInviteDeclineAck(int obj)
		{
			this.EventOnFriendInviteDeclineAck = null;
		}

		// Token: 0x06008048 RID: 32840 RVA: 0x00256C68 File Offset: 0x00254E68
		private void __callDele_EventOnFriendInviteDeclineNtf(UserSummary obj)
		{
			Action<UserSummary> eventOnFriendInviteDeclineNtf = this.EventOnFriendInviteDeclineNtf;
			if (eventOnFriendInviteDeclineNtf != null)
			{
				eventOnFriendInviteDeclineNtf(obj);
			}
		}

		// Token: 0x06008049 RID: 32841 RVA: 0x00256C8C File Offset: 0x00254E8C
		private void __clearDele_EventOnFriendInviteDeclineNtf(UserSummary obj)
		{
			this.EventOnFriendInviteDeclineNtf = null;
		}

		// Token: 0x0600804A RID: 32842 RVA: 0x00256C98 File Offset: 0x00254E98
		private void __callDele_EventOnFriendDeleteAck(int obj)
		{
			Action<int> eventOnFriendDeleteAck = this.EventOnFriendDeleteAck;
			if (eventOnFriendDeleteAck != null)
			{
				eventOnFriendDeleteAck(obj);
			}
		}

		// Token: 0x0600804B RID: 32843 RVA: 0x00256CBC File Offset: 0x00254EBC
		private void __clearDele_EventOnFriendDeleteAck(int obj)
		{
			this.EventOnFriendDeleteAck = null;
		}

		// Token: 0x0600804C RID: 32844 RVA: 0x00256CC8 File Offset: 0x00254EC8
		private void __callDele_EventOnPlayerBlockAck(int obj)
		{
			Action<int> eventOnPlayerBlockAck = this.EventOnPlayerBlockAck;
			if (eventOnPlayerBlockAck != null)
			{
				eventOnPlayerBlockAck(obj);
			}
		}

		// Token: 0x0600804D RID: 32845 RVA: 0x00256CEC File Offset: 0x00254EEC
		private void __clearDele_EventOnPlayerBlockAck(int obj)
		{
			this.EventOnPlayerBlockAck = null;
		}

		// Token: 0x0600804E RID: 32846 RVA: 0x00256CF8 File Offset: 0x00254EF8
		private void __callDele_EventOnPlayerUnblockAck(int obj)
		{
			Action<int> eventOnPlayerUnblockAck = this.EventOnPlayerUnblockAck;
			if (eventOnPlayerUnblockAck != null)
			{
				eventOnPlayerUnblockAck(obj);
			}
		}

		// Token: 0x0600804F RID: 32847 RVA: 0x00256D1C File Offset: 0x00254F1C
		private void __clearDele_EventOnPlayerUnblockAck(int obj)
		{
			this.EventOnPlayerUnblockAck = null;
		}

		// Token: 0x06008050 RID: 32848 RVA: 0x00256D28 File Offset: 0x00254F28
		private void __callDele_EventOnFriendFindAck(int obj)
		{
			Action<int> eventOnFriendFindAck = this.EventOnFriendFindAck;
			if (eventOnFriendFindAck != null)
			{
				eventOnFriendFindAck(obj);
			}
		}

		// Token: 0x06008051 RID: 32849 RVA: 0x00256D4C File Offset: 0x00254F4C
		private void __clearDele_EventOnFriendFindAck(int obj)
		{
			this.EventOnFriendFindAck = null;
		}

		// Token: 0x06008052 RID: 32850 RVA: 0x00256D58 File Offset: 0x00254F58
		private void __callDele_EventOnFriendSuggestedAck(int obj)
		{
			Action<int> eventOnFriendSuggestedAck = this.EventOnFriendSuggestedAck;
			if (eventOnFriendSuggestedAck != null)
			{
				eventOnFriendSuggestedAck(obj);
			}
		}

		// Token: 0x06008053 RID: 32851 RVA: 0x00256D7C File Offset: 0x00254F7C
		private void __clearDele_EventOnFriendSuggestedAck(int obj)
		{
			this.EventOnFriendSuggestedAck = null;
		}

		// Token: 0x06008054 RID: 32852 RVA: 0x00256D88 File Offset: 0x00254F88
		private void __callDele_EventOnFriendSummaryUpdateNtf(UserSummary obj)
		{
			Action<UserSummary> eventOnFriendSummaryUpdateNtf = this.EventOnFriendSummaryUpdateNtf;
			if (eventOnFriendSummaryUpdateNtf != null)
			{
				eventOnFriendSummaryUpdateNtf(obj);
			}
		}

		// Token: 0x06008055 RID: 32853 RVA: 0x00256DAC File Offset: 0x00254FAC
		private void __clearDele_EventOnFriendSummaryUpdateNtf(UserSummary obj)
		{
			this.EventOnFriendSummaryUpdateNtf = null;
		}

		// Token: 0x06008056 RID: 32854 RVA: 0x00256DB8 File Offset: 0x00254FB8
		private void __callDele_EventOnBattlePracticeInviteAck(int obj)
		{
			Action<int> eventOnBattlePracticeInviteAck = this.EventOnBattlePracticeInviteAck;
			if (eventOnBattlePracticeInviteAck != null)
			{
				eventOnBattlePracticeInviteAck(obj);
			}
		}

		// Token: 0x06008057 RID: 32855 RVA: 0x00256DDC File Offset: 0x00254FDC
		private void __clearDele_EventOnBattlePracticeInviteAck(int obj)
		{
			this.EventOnBattlePracticeInviteAck = null;
		}

		// Token: 0x06008058 RID: 32856 RVA: 0x00256DE8 File Offset: 0x00254FE8
		private void __callDele_EventOnBattlePracticeAcceptAck(int obj)
		{
			Action<int> eventOnBattlePracticeAcceptAck = this.EventOnBattlePracticeAcceptAck;
			if (eventOnBattlePracticeAcceptAck != null)
			{
				eventOnBattlePracticeAcceptAck(obj);
			}
		}

		// Token: 0x06008059 RID: 32857 RVA: 0x00256E0C File Offset: 0x0025500C
		private void __clearDele_EventOnBattlePracticeAcceptAck(int obj)
		{
			this.EventOnBattlePracticeAcceptAck = null;
		}

		// Token: 0x0600805A RID: 32858 RVA: 0x00256E18 File Offset: 0x00255018
		private void __callDele_EventOnBattlePracticeDeclineAck(int obj)
		{
			Action<int> eventOnBattlePracticeDeclineAck = this.EventOnBattlePracticeDeclineAck;
			if (eventOnBattlePracticeDeclineAck != null)
			{
				eventOnBattlePracticeDeclineAck(obj);
			}
		}

		// Token: 0x0600805B RID: 32859 RVA: 0x00256E3C File Offset: 0x0025503C
		private void __clearDele_EventOnBattlePracticeDeclineAck(int obj)
		{
			this.EventOnBattlePracticeDeclineAck = null;
		}

		// Token: 0x0600805C RID: 32860 RVA: 0x00256E48 File Offset: 0x00255048
		private void __callDele_EventOnBattlePracticeCancelAck(int obj)
		{
			Action<int> eventOnBattlePracticeCancelAck = this.EventOnBattlePracticeCancelAck;
			if (eventOnBattlePracticeCancelAck != null)
			{
				eventOnBattlePracticeCancelAck(obj);
			}
		}

		// Token: 0x0600805D RID: 32861 RVA: 0x00256E6C File Offset: 0x0025506C
		private void __clearDele_EventOnBattlePracticeCancelAck(int obj)
		{
			this.EventOnBattlePracticeCancelAck = null;
		}

		// Token: 0x0600805E RID: 32862 RVA: 0x00256E78 File Offset: 0x00255078
		private void __callDele_EventOnBattlePracticeInvitedNtf(PVPInviteInfo obj)
		{
			Action<PVPInviteInfo> eventOnBattlePracticeInvitedNtf = this.EventOnBattlePracticeInvitedNtf;
			if (eventOnBattlePracticeInvitedNtf != null)
			{
				eventOnBattlePracticeInvitedNtf(obj);
			}
		}

		// Token: 0x0600805F RID: 32863 RVA: 0x00256E9C File Offset: 0x0025509C
		private void __clearDele_EventOnBattlePracticeInvitedNtf(PVPInviteInfo obj)
		{
			this.EventOnBattlePracticeInvitedNtf = null;
		}

		// Token: 0x06008060 RID: 32864 RVA: 0x00256EA8 File Offset: 0x002550A8
		private void __callDele_EventOnBattlePracticeFailNtf()
		{
			Action eventOnBattlePracticeFailNtf = this.EventOnBattlePracticeFailNtf;
			if (eventOnBattlePracticeFailNtf != null)
			{
				eventOnBattlePracticeFailNtf();
			}
		}

		// Token: 0x06008061 RID: 32865 RVA: 0x00256EC8 File Offset: 0x002550C8
		private void __clearDele_EventOnBattlePracticeFailNtf()
		{
			this.EventOnBattlePracticeFailNtf = null;
		}

		// Token: 0x06008062 RID: 32866 RVA: 0x00256ED4 File Offset: 0x002550D4
		private void __callDele_EventOnBattlePracticeDeclinedNtf()
		{
			Action eventOnBattlePracticeDeclinedNtf = this.EventOnBattlePracticeDeclinedNtf;
			if (eventOnBattlePracticeDeclinedNtf != null)
			{
				eventOnBattlePracticeDeclinedNtf();
			}
		}

		// Token: 0x06008063 RID: 32867 RVA: 0x00256EF4 File Offset: 0x002550F4
		private void __clearDele_EventOnBattlePracticeDeclinedNtf()
		{
			this.EventOnBattlePracticeDeclinedNtf = null;
		}

		// Token: 0x06008064 RID: 32868 RVA: 0x00256F00 File Offset: 0x00255100
		private void __callDele_EventOnFriendshipPointsSendAck(int obj)
		{
			Action<int> eventOnFriendshipPointsSendAck = this.EventOnFriendshipPointsSendAck;
			if (eventOnFriendshipPointsSendAck != null)
			{
				eventOnFriendshipPointsSendAck(obj);
			}
		}

		// Token: 0x06008065 RID: 32869 RVA: 0x00256F24 File Offset: 0x00255124
		private void __clearDele_EventOnFriendshipPointsSendAck(int obj)
		{
			this.EventOnFriendshipPointsSendAck = null;
		}

		// Token: 0x06008066 RID: 32870 RVA: 0x00256F30 File Offset: 0x00255130
		private void __callDele_EventOnFriendshipPointsClaimAck(int arg1, int arg2)
		{
			Action<int, int> eventOnFriendshipPointsClaimAck = this.EventOnFriendshipPointsClaimAck;
			if (eventOnFriendshipPointsClaimAck != null)
			{
				eventOnFriendshipPointsClaimAck(arg1, arg2);
			}
		}

		// Token: 0x06008067 RID: 32871 RVA: 0x00256F54 File Offset: 0x00255154
		private void __clearDele_EventOnFriendshipPointsClaimAck(int arg1, int arg2)
		{
			this.EventOnFriendshipPointsClaimAck = null;
		}

		// Token: 0x06008068 RID: 32872 RVA: 0x00256F60 File Offset: 0x00255160
		private void __callDele_EventOnFriendshipPointsReceivedNtf()
		{
			Action eventOnFriendshipPointsReceivedNtf = this.EventOnFriendshipPointsReceivedNtf;
			if (eventOnFriendshipPointsReceivedNtf != null)
			{
				eventOnFriendshipPointsReceivedNtf();
			}
		}

		// Token: 0x06008069 RID: 32873 RVA: 0x00256F80 File Offset: 0x00255180
		private void __clearDele_EventOnFriendshipPointsReceivedNtf()
		{
			this.EventOnFriendshipPointsReceivedNtf = null;
		}

		// Token: 0x0600806A RID: 32874 RVA: 0x00256F8C File Offset: 0x0025518C
		private void __callDele_EventOnGiftStoreItemBuyAck(int arg1, int arg2)
		{
			Action<int, int> eventOnGiftStoreItemBuyAck = this.EventOnGiftStoreItemBuyAck;
			if (eventOnGiftStoreItemBuyAck != null)
			{
				eventOnGiftStoreItemBuyAck(arg1, arg2);
			}
		}

		// Token: 0x0600806B RID: 32875 RVA: 0x00256FB0 File Offset: 0x002551B0
		private void __clearDele_EventOnGiftStoreItemBuyAck(int arg1, int arg2)
		{
			this.EventOnGiftStoreItemBuyAck = null;
		}

		// Token: 0x0600806C RID: 32876 RVA: 0x00256FBC File Offset: 0x002551BC
		private void __callDele_EventOnGiftStoreAppleSubscribeAck(int arg1, int arg2)
		{
			Action<int, int> eventOnGiftStoreAppleSubscribeAck = this.EventOnGiftStoreAppleSubscribeAck;
			if (eventOnGiftStoreAppleSubscribeAck != null)
			{
				eventOnGiftStoreAppleSubscribeAck(arg1, arg2);
			}
		}

		// Token: 0x0600806D RID: 32877 RVA: 0x00256FE0 File Offset: 0x002551E0
		private void __clearDele_EventOnGiftStoreAppleSubscribeAck(int arg1, int arg2)
		{
			this.EventOnGiftStoreAppleSubscribeAck = null;
		}

		// Token: 0x0600806E RID: 32878 RVA: 0x00256FEC File Offset: 0x002551EC
		private void __callDele_EventOnGiftStoreBuyGoodsNtf(string obj)
		{
			Action<string> eventOnGiftStoreBuyGoodsNtf = this.EventOnGiftStoreBuyGoodsNtf;
			if (eventOnGiftStoreBuyGoodsNtf != null)
			{
				eventOnGiftStoreBuyGoodsNtf(obj);
			}
		}

		// Token: 0x0600806F RID: 32879 RVA: 0x00257010 File Offset: 0x00255210
		private void __clearDele_EventOnGiftStoreBuyGoodsNtf(string obj)
		{
			this.EventOnGiftStoreBuyGoodsNtf = null;
		}

		// Token: 0x06008070 RID: 32880 RVA: 0x0025701C File Offset: 0x0025521C
		private void __callDele_EventOnGiftStoreOperationalGoodsUpdateNtf()
		{
			Action eventOnGiftStoreOperationalGoodsUpdateNtf = this.EventOnGiftStoreOperationalGoodsUpdateNtf;
			if (eventOnGiftStoreOperationalGoodsUpdateNtf != null)
			{
				eventOnGiftStoreOperationalGoodsUpdateNtf();
			}
		}

		// Token: 0x06008071 RID: 32881 RVA: 0x0025703C File Offset: 0x0025523C
		private void __clearDele_EventOnGiftStoreOperationalGoodsUpdateNtf()
		{
			this.EventOnGiftStoreOperationalGoodsUpdateNtf = null;
		}

		// Token: 0x06008072 RID: 32882 RVA: 0x00257048 File Offset: 0x00255248
		private void __callDele_EventOnGiftStoreItemCancelBuyAck(int arg1, int arg2)
		{
			Action<int, int> eventOnGiftStoreItemCancelBuyAck = this.EventOnGiftStoreItemCancelBuyAck;
			if (eventOnGiftStoreItemCancelBuyAck != null)
			{
				eventOnGiftStoreItemCancelBuyAck(arg1, arg2);
			}
		}

		// Token: 0x06008073 RID: 32883 RVA: 0x0025706C File Offset: 0x0025526C
		private void __clearDele_EventOnGiftStoreItemCancelBuyAck(int arg1, int arg2)
		{
			this.EventOnGiftStoreItemCancelBuyAck = null;
		}

		// Token: 0x06008074 RID: 32884 RVA: 0x00257078 File Offset: 0x00255278
		private void __callDele_EventOnPullOrderRewardAck(int arg1, string arg2, OrderReward arg3)
		{
			Action<int, string, OrderReward> eventOnPullOrderRewardAck = this.EventOnPullOrderRewardAck;
			if (eventOnPullOrderRewardAck != null)
			{
				eventOnPullOrderRewardAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008075 RID: 32885 RVA: 0x0025709C File Offset: 0x0025529C
		private void __clearDele_EventOnPullOrderRewardAck(int arg1, string arg2, OrderReward arg3)
		{
			this.EventOnPullOrderRewardAck = null;
		}

		// Token: 0x06008076 RID: 32886 RVA: 0x002570A8 File Offset: 0x002552A8
		private void __callDele_EventOnGmCommandAck(int obj)
		{
			Action<int> eventOnGmCommandAck = this.EventOnGmCommandAck;
			if (eventOnGmCommandAck != null)
			{
				eventOnGmCommandAck(obj);
			}
		}

		// Token: 0x06008077 RID: 32887 RVA: 0x002570CC File Offset: 0x002552CC
		private void __clearDele_EventOnGmCommandAck(int obj)
		{
			this.EventOnGmCommandAck = null;
		}

		// Token: 0x06008078 RID: 32888 RVA: 0x002570D8 File Offset: 0x002552D8
		private void __callDele_EventOnGuildCreateAck(int obj)
		{
			Action<int> eventOnGuildCreateAck = this.EventOnGuildCreateAck;
			if (eventOnGuildCreateAck != null)
			{
				eventOnGuildCreateAck(obj);
			}
		}

		// Token: 0x06008079 RID: 32889 RVA: 0x002570FC File Offset: 0x002552FC
		private void __clearDele_EventOnGuildCreateAck(int obj)
		{
			this.EventOnGuildCreateAck = null;
		}

		// Token: 0x0600807A RID: 32890 RVA: 0x00257108 File Offset: 0x00255308
		private void __callDele_EventOnGuildJoinApplyAck(int obj)
		{
			Action<int> eventOnGuildJoinApplyAck = this.EventOnGuildJoinApplyAck;
			if (eventOnGuildJoinApplyAck != null)
			{
				eventOnGuildJoinApplyAck(obj);
			}
		}

		// Token: 0x0600807B RID: 32891 RVA: 0x0025712C File Offset: 0x0025532C
		private void __clearDele_EventOnGuildJoinApplyAck(int obj)
		{
			this.EventOnGuildJoinApplyAck = null;
		}

		// Token: 0x0600807C RID: 32892 RVA: 0x00257138 File Offset: 0x00255338
		private void __callDele_EventOnGuildJoinAdminConfirmAck(int obj)
		{
			Action<int> eventOnGuildJoinAdminConfirmAck = this.EventOnGuildJoinAdminConfirmAck;
			if (eventOnGuildJoinAdminConfirmAck != null)
			{
				eventOnGuildJoinAdminConfirmAck(obj);
			}
		}

		// Token: 0x0600807D RID: 32893 RVA: 0x0025715C File Offset: 0x0025535C
		private void __clearDele_EventOnGuildJoinAdminConfirmAck(int obj)
		{
			this.EventOnGuildJoinAdminConfirmAck = null;
		}

		// Token: 0x0600807E RID: 32894 RVA: 0x00257168 File Offset: 0x00255368
		private void __callDele_EventOnGuildJoinApplyRefuseAck(int obj)
		{
			Action<int> eventOnGuildJoinApplyRefuseAck = this.EventOnGuildJoinApplyRefuseAck;
			if (eventOnGuildJoinApplyRefuseAck != null)
			{
				eventOnGuildJoinApplyRefuseAck(obj);
			}
		}

		// Token: 0x0600807F RID: 32895 RVA: 0x0025718C File Offset: 0x0025538C
		private void __clearDele_EventOnGuildJoinApplyRefuseAck(int obj)
		{
			this.EventOnGuildJoinApplyRefuseAck = null;
		}

		// Token: 0x06008080 RID: 32896 RVA: 0x00257198 File Offset: 0x00255398
		private void __callDele_EventOnGuildJoinPlayerConfirmAck(int obj)
		{
			Action<int> eventOnGuildJoinPlayerConfirmAck = this.EventOnGuildJoinPlayerConfirmAck;
			if (eventOnGuildJoinPlayerConfirmAck != null)
			{
				eventOnGuildJoinPlayerConfirmAck(obj);
			}
		}

		// Token: 0x06008081 RID: 32897 RVA: 0x002571BC File Offset: 0x002553BC
		private void __clearDele_EventOnGuildJoinPlayerConfirmAck(int obj)
		{
			this.EventOnGuildJoinPlayerConfirmAck = null;
		}

		// Token: 0x06008082 RID: 32898 RVA: 0x002571C8 File Offset: 0x002553C8
		private void __callDele_EventOnGuildSearchAck(int arg1, List<GuildSearchInfo> arg2)
		{
			Action<int, List<GuildSearchInfo>> eventOnGuildSearchAck = this.EventOnGuildSearchAck;
			if (eventOnGuildSearchAck != null)
			{
				eventOnGuildSearchAck(arg1, arg2);
			}
		}

		// Token: 0x06008083 RID: 32899 RVA: 0x002571EC File Offset: 0x002553EC
		private void __clearDele_EventOnGuildSearchAck(int arg1, List<GuildSearchInfo> arg2)
		{
			this.EventOnGuildSearchAck = null;
		}

		// Token: 0x06008084 RID: 32900 RVA: 0x002571F8 File Offset: 0x002553F8
		private void __callDele_EventOnGuildRandomListAck(int arg1, List<GuildSearchInfo> arg2)
		{
			Action<int, List<GuildSearchInfo>> eventOnGuildRandomListAck = this.EventOnGuildRandomListAck;
			if (eventOnGuildRandomListAck != null)
			{
				eventOnGuildRandomListAck(arg1, arg2);
			}
		}

		// Token: 0x06008085 RID: 32901 RVA: 0x0025721C File Offset: 0x0025541C
		private void __clearDele_EventOnGuildRandomListAck(int arg1, List<GuildSearchInfo> arg2)
		{
			this.EventOnGuildRandomListAck = null;
		}

		// Token: 0x06008086 RID: 32902 RVA: 0x00257228 File Offset: 0x00255428
		private void __callDele_EventOnGuildQuitAck(int obj)
		{
			Action<int> eventOnGuildQuitAck = this.EventOnGuildQuitAck;
			if (eventOnGuildQuitAck != null)
			{
				eventOnGuildQuitAck(obj);
			}
		}

		// Token: 0x06008087 RID: 32903 RVA: 0x0025724C File Offset: 0x0025544C
		private void __clearDele_EventOnGuildQuitAck(int obj)
		{
			this.EventOnGuildQuitAck = null;
		}

		// Token: 0x06008088 RID: 32904 RVA: 0x00257258 File Offset: 0x00255458
		private void __callDele_EventOnGuildInvitePlayerListAck(int arg1, List<UserSummary> arg2)
		{
			Action<int, List<UserSummary>> eventOnGuildInvitePlayerListAck = this.EventOnGuildInvitePlayerListAck;
			if (eventOnGuildInvitePlayerListAck != null)
			{
				eventOnGuildInvitePlayerListAck(arg1, arg2);
			}
		}

		// Token: 0x06008089 RID: 32905 RVA: 0x0025727C File Offset: 0x0025547C
		private void __clearDele_EventOnGuildInvitePlayerListAck(int arg1, List<UserSummary> arg2)
		{
			this.EventOnGuildInvitePlayerListAck = null;
		}

		// Token: 0x0600808A RID: 32906 RVA: 0x00257288 File Offset: 0x00255488
		private void __callDele_EventOnGuildHiringDeclarationSetAck(int obj)
		{
			Action<int> eventOnGuildHiringDeclarationSetAck = this.EventOnGuildHiringDeclarationSetAck;
			if (eventOnGuildHiringDeclarationSetAck != null)
			{
				eventOnGuildHiringDeclarationSetAck(obj);
			}
		}

		// Token: 0x0600808B RID: 32907 RVA: 0x002572AC File Offset: 0x002554AC
		private void __clearDele_EventOnGuildHiringDeclarationSetAck(int obj)
		{
			this.EventOnGuildHiringDeclarationSetAck = null;
		}

		// Token: 0x0600808C RID: 32908 RVA: 0x002572B8 File Offset: 0x002554B8
		private void __callDele_EventOnGuildJoinInvitationGetAck(int arg1, List<GuildJoinInvitation> arg2)
		{
			Action<int, List<GuildJoinInvitation>> eventOnGuildJoinInvitationGetAck = this.EventOnGuildJoinInvitationGetAck;
			if (eventOnGuildJoinInvitationGetAck != null)
			{
				eventOnGuildJoinInvitationGetAck(arg1, arg2);
			}
		}

		// Token: 0x0600808D RID: 32909 RVA: 0x002572DC File Offset: 0x002554DC
		private void __clearDele_EventOnGuildJoinInvitationGetAck(int arg1, List<GuildJoinInvitation> arg2)
		{
			this.EventOnGuildJoinInvitationGetAck = null;
		}

		// Token: 0x0600808E RID: 32910 RVA: 0x002572E8 File Offset: 0x002554E8
		private void __callDele_EventOnGuildJoinInvitationRefuseAck(int obj)
		{
			Action<int> eventOnGuildJoinInvitationRefuseAck = this.EventOnGuildJoinInvitationRefuseAck;
			if (eventOnGuildJoinInvitationRefuseAck != null)
			{
				eventOnGuildJoinInvitationRefuseAck(obj);
			}
		}

		// Token: 0x0600808F RID: 32911 RVA: 0x0025730C File Offset: 0x0025550C
		private void __clearDele_EventOnGuildJoinInvitationRefuseAck(int obj)
		{
			this.EventOnGuildJoinInvitationRefuseAck = null;
		}

		// Token: 0x06008090 RID: 32912 RVA: 0x00257318 File Offset: 0x00255518
		private void __callDele_EventOnAllGuildJoinInvitationRefuseAck(int obj)
		{
			Action<int> eventOnAllGuildJoinInvitationRefuseAck = this.EventOnAllGuildJoinInvitationRefuseAck;
			if (eventOnAllGuildJoinInvitationRefuseAck != null)
			{
				eventOnAllGuildJoinInvitationRefuseAck(obj);
			}
		}

		// Token: 0x06008091 RID: 32913 RVA: 0x0025733C File Offset: 0x0025553C
		private void __clearDele_EventOnAllGuildJoinInvitationRefuseAck(int obj)
		{
			this.EventOnAllGuildJoinInvitationRefuseAck = null;
		}

		// Token: 0x06008092 RID: 32914 RVA: 0x00257348 File Offset: 0x00255548
		private void __callDele_EventOnGuildGetAck(int arg1, Guild arg2)
		{
			Action<int, Guild> eventOnGuildGetAck = this.EventOnGuildGetAck;
			if (eventOnGuildGetAck != null)
			{
				eventOnGuildGetAck(arg1, arg2);
			}
		}

		// Token: 0x06008093 RID: 32915 RVA: 0x0025736C File Offset: 0x0025556C
		private void __clearDele_EventOnGuildGetAck(int arg1, Guild arg2)
		{
			this.EventOnGuildGetAck = null;
		}

		// Token: 0x06008094 RID: 32916 RVA: 0x00257378 File Offset: 0x00255578
		private void __callDele_EventOnGuildBasicSetAck(int obj)
		{
			Action<int> eventOnGuildBasicSetAck = this.EventOnGuildBasicSetAck;
			if (eventOnGuildBasicSetAck != null)
			{
				eventOnGuildBasicSetAck(obj);
			}
		}

		// Token: 0x06008095 RID: 32917 RVA: 0x0025739C File Offset: 0x0025559C
		private void __clearDele_EventOnGuildBasicSetAck(int obj)
		{
			this.EventOnGuildBasicSetAck = null;
		}

		// Token: 0x06008096 RID: 32918 RVA: 0x002573A8 File Offset: 0x002555A8
		private void __callDele_EventOnGuildAnnouncementSetAck(int obj)
		{
			Action<int> eventOnGuildAnnouncementSetAck = this.EventOnGuildAnnouncementSetAck;
			if (eventOnGuildAnnouncementSetAck != null)
			{
				eventOnGuildAnnouncementSetAck(obj);
			}
		}

		// Token: 0x06008097 RID: 32919 RVA: 0x002573CC File Offset: 0x002555CC
		private void __clearDele_EventOnGuildAnnouncementSetAck(int obj)
		{
			this.EventOnGuildAnnouncementSetAck = null;
		}

		// Token: 0x06008098 RID: 32920 RVA: 0x002573D8 File Offset: 0x002555D8
		private void __callDele_EventOnGuildJoinApplyGetAck(int arg1, List<UserSummary> arg2)
		{
			Action<int, List<UserSummary>> eventOnGuildJoinApplyGetAck = this.EventOnGuildJoinApplyGetAck;
			if (eventOnGuildJoinApplyGetAck != null)
			{
				eventOnGuildJoinApplyGetAck(arg1, arg2);
			}
		}

		// Token: 0x06008099 RID: 32921 RVA: 0x002573FC File Offset: 0x002555FC
		private void __clearDele_EventOnGuildJoinApplyGetAck(int arg1, List<UserSummary> arg2)
		{
			this.EventOnGuildJoinApplyGetAck = null;
		}

		// Token: 0x0600809A RID: 32922 RVA: 0x00257408 File Offset: 0x00255608
		private void __callDele_EventOnGuildNameChangeAck(int obj)
		{
			Action<int> eventOnGuildNameChangeAck = this.EventOnGuildNameChangeAck;
			if (eventOnGuildNameChangeAck != null)
			{
				eventOnGuildNameChangeAck(obj);
			}
		}

		// Token: 0x0600809B RID: 32923 RVA: 0x0025742C File Offset: 0x0025562C
		private void __clearDele_EventOnGuildNameChangeAck(int obj)
		{
			this.EventOnGuildNameChangeAck = null;
		}

		// Token: 0x0600809C RID: 32924 RVA: 0x00257438 File Offset: 0x00255638
		private void __callDele_EventOnGuildLogGetAck(int arg1, List<GuildLog> arg2)
		{
			Action<int, List<GuildLog>> eventOnGuildLogGetAck = this.EventOnGuildLogGetAck;
			if (eventOnGuildLogGetAck != null)
			{
				eventOnGuildLogGetAck(arg1, arg2);
			}
		}

		// Token: 0x0600809D RID: 32925 RVA: 0x0025745C File Offset: 0x0025565C
		private void __clearDele_EventOnGuildLogGetAck(int arg1, List<GuildLog> arg2)
		{
			this.EventOnGuildLogGetAck = null;
		}

		// Token: 0x0600809E RID: 32926 RVA: 0x00257468 File Offset: 0x00255668
		private void __callDele_EventOnGuildJoinInviteAck(int obj)
		{
			Action<int> eventOnGuildJoinInviteAck = this.EventOnGuildJoinInviteAck;
			if (eventOnGuildJoinInviteAck != null)
			{
				eventOnGuildJoinInviteAck(obj);
			}
		}

		// Token: 0x0600809F RID: 32927 RVA: 0x0025748C File Offset: 0x0025568C
		private void __clearDele_EventOnGuildJoinInviteAck(int obj)
		{
			this.EventOnGuildJoinInviteAck = null;
		}

		// Token: 0x060080A0 RID: 32928 RVA: 0x00257498 File Offset: 0x00255698
		private void __callDele_EventOnGuildVicePresidentAppointAck(int obj)
		{
			Action<int> eventOnGuildVicePresidentAppointAck = this.EventOnGuildVicePresidentAppointAck;
			if (eventOnGuildVicePresidentAppointAck != null)
			{
				eventOnGuildVicePresidentAppointAck(obj);
			}
		}

		// Token: 0x060080A1 RID: 32929 RVA: 0x002574BC File Offset: 0x002556BC
		private void __clearDele_EventOnGuildVicePresidentAppointAck(int obj)
		{
			this.EventOnGuildVicePresidentAppointAck = null;
		}

		// Token: 0x060080A2 RID: 32930 RVA: 0x002574C8 File Offset: 0x002556C8
		private void __callDele_EventOnGuildKickOutAck(int obj)
		{
			Action<int> eventOnGuildKickOutAck = this.EventOnGuildKickOutAck;
			if (eventOnGuildKickOutAck != null)
			{
				eventOnGuildKickOutAck(obj);
			}
		}

		// Token: 0x060080A3 RID: 32931 RVA: 0x002574EC File Offset: 0x002556EC
		private void __clearDele_EventOnGuildKickOutAck(int obj)
		{
			this.EventOnGuildKickOutAck = null;
		}

		// Token: 0x060080A4 RID: 32932 RVA: 0x002574F8 File Offset: 0x002556F8
		private void __callDele_EventOnGuildPresidentRelieveAck(int obj)
		{
			Action<int> eventOnGuildPresidentRelieveAck = this.EventOnGuildPresidentRelieveAck;
			if (eventOnGuildPresidentRelieveAck != null)
			{
				eventOnGuildPresidentRelieveAck(obj);
			}
		}

		// Token: 0x060080A5 RID: 32933 RVA: 0x0025751C File Offset: 0x0025571C
		private void __clearDele_EventOnGuildPresidentRelieveAck(int obj)
		{
			this.EventOnGuildPresidentRelieveAck = null;
		}

		// Token: 0x060080A6 RID: 32934 RVA: 0x00257528 File Offset: 0x00255728
		private void __callDele_EventOnGuildPresidentAppointAck(int obj)
		{
			Action<int> eventOnGuildPresidentAppointAck = this.EventOnGuildPresidentAppointAck;
			if (eventOnGuildPresidentAppointAck != null)
			{
				eventOnGuildPresidentAppointAck(obj);
			}
		}

		// Token: 0x060080A7 RID: 32935 RVA: 0x0025754C File Offset: 0x0025574C
		private void __clearDele_EventOnGuildPresidentAppointAck(int obj)
		{
			this.EventOnGuildPresidentAppointAck = null;
		}

		// Token: 0x060080A8 RID: 32936 RVA: 0x00257558 File Offset: 0x00255758
		private void __callDele_EventOnAllGuildJoinApplyRefuseAck(int obj)
		{
			Action<int> eventOnAllGuildJoinApplyRefuseAck = this.EventOnAllGuildJoinApplyRefuseAck;
			if (eventOnAllGuildJoinApplyRefuseAck != null)
			{
				eventOnAllGuildJoinApplyRefuseAck(obj);
			}
		}

		// Token: 0x060080A9 RID: 32937 RVA: 0x0025757C File Offset: 0x0025577C
		private void __clearDele_EventOnAllGuildJoinApplyRefuseAck(int obj)
		{
			this.EventOnAllGuildJoinApplyRefuseAck = null;
		}

		// Token: 0x060080AA RID: 32938 RVA: 0x00257588 File Offset: 0x00255788
		private void __callDele_EventOnGuildUpdateInfo(GuildLog obj)
		{
			Action<GuildLog> eventOnGuildUpdateInfo = this.EventOnGuildUpdateInfo;
			if (eventOnGuildUpdateInfo != null)
			{
				eventOnGuildUpdateInfo(obj);
			}
		}

		// Token: 0x060080AB RID: 32939 RVA: 0x002575AC File Offset: 0x002557AC
		private void __clearDele_EventOnGuildUpdateInfo(GuildLog obj)
		{
			this.EventOnGuildUpdateInfo = null;
		}

		// Token: 0x060080AC RID: 32940 RVA: 0x002575B8 File Offset: 0x002557B8
		private void __callDele_EventOnGuildMassiveCombatAttackAck(int obj)
		{
			Action<int> eventOnGuildMassiveCombatAttackAck = this.EventOnGuildMassiveCombatAttackAck;
			if (eventOnGuildMassiveCombatAttackAck != null)
			{
				eventOnGuildMassiveCombatAttackAck(obj);
			}
		}

		// Token: 0x060080AD RID: 32941 RVA: 0x002575DC File Offset: 0x002557DC
		private void __clearDele_EventOnGuildMassiveCombatAttackAck(int obj)
		{
			this.EventOnGuildMassiveCombatAttackAck = null;
		}

		// Token: 0x060080AE RID: 32942 RVA: 0x002575E8 File Offset: 0x002557E8
		private void __callDele_EventOnGuildMassiveCombatAttackFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnGuildMassiveCombatAttackFinishedAck = this.EventOnGuildMassiveCombatAttackFinishedAck;
			if (eventOnGuildMassiveCombatAttackFinishedAck != null)
			{
				eventOnGuildMassiveCombatAttackFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x060080AF RID: 32943 RVA: 0x0025760C File Offset: 0x0025580C
		private void __clearDele_EventOnGuildMassiveCombatAttackFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnGuildMassiveCombatAttackFinishedAck = null;
		}

		// Token: 0x060080B0 RID: 32944 RVA: 0x00257618 File Offset: 0x00255818
		private void __callDele_EventOnGuildMassiveCombatDataAck(int arg1, GuildMassiveCombatGeneral arg2)
		{
			Action<int, GuildMassiveCombatGeneral> eventOnGuildMassiveCombatDataAck = this.EventOnGuildMassiveCombatDataAck;
			if (eventOnGuildMassiveCombatDataAck != null)
			{
				eventOnGuildMassiveCombatDataAck(arg1, arg2);
			}
		}

		// Token: 0x060080B1 RID: 32945 RVA: 0x0025763C File Offset: 0x0025583C
		private void __clearDele_EventOnGuildMassiveCombatDataAck(int arg1, GuildMassiveCombatGeneral arg2)
		{
			this.EventOnGuildMassiveCombatDataAck = null;
		}

		// Token: 0x060080B2 RID: 32946 RVA: 0x00257648 File Offset: 0x00255848
		private void __callDele_EventOnGuildMassiveCombatNtf(GuildMassiveCombatGeneral obj)
		{
			Action<GuildMassiveCombatGeneral> eventOnGuildMassiveCombatNtf = this.EventOnGuildMassiveCombatNtf;
			if (eventOnGuildMassiveCombatNtf != null)
			{
				eventOnGuildMassiveCombatNtf(obj);
			}
		}

		// Token: 0x060080B3 RID: 32947 RVA: 0x0025766C File Offset: 0x0025586C
		private void __clearDele_EventOnGuildMassiveCombatNtf(GuildMassiveCombatGeneral obj)
		{
			this.EventOnGuildMassiveCombatNtf = null;
		}

		// Token: 0x060080B4 RID: 32948 RVA: 0x00257678 File Offset: 0x00255878
		private void __callDele_EventOnGuildMassiveCombatPlayerNtf(GuildPlayerMassiveCombatInfo obj)
		{
			Action<GuildPlayerMassiveCombatInfo> eventOnGuildMassiveCombatPlayerNtf = this.EventOnGuildMassiveCombatPlayerNtf;
			if (eventOnGuildMassiveCombatPlayerNtf != null)
			{
				eventOnGuildMassiveCombatPlayerNtf(obj);
			}
		}

		// Token: 0x060080B5 RID: 32949 RVA: 0x0025769C File Offset: 0x0025589C
		private void __clearDele_EventOnGuildMassiveCombatPlayerNtf(GuildPlayerMassiveCombatInfo obj)
		{
			this.EventOnGuildMassiveCombatPlayerNtf = null;
		}

		// Token: 0x060080B6 RID: 32950 RVA: 0x002576A8 File Offset: 0x002558A8
		private void __callDele_EventOnGuildMassiveCombatStartAck(int obj)
		{
			Action<int> eventOnGuildMassiveCombatStartAck = this.EventOnGuildMassiveCombatStartAck;
			if (eventOnGuildMassiveCombatStartAck != null)
			{
				eventOnGuildMassiveCombatStartAck(obj);
			}
		}

		// Token: 0x060080B7 RID: 32951 RVA: 0x002576CC File Offset: 0x002558CC
		private void __clearDele_EventOnGuildMassiveCombatStartAck(int obj)
		{
			this.EventOnGuildMassiveCombatStartAck = null;
		}

		// Token: 0x060080B8 RID: 32952 RVA: 0x002576D8 File Offset: 0x002558D8
		private void __callDele_EventOnGuildMassiveCombatSurrenderAck(int obj)
		{
			Action<int> eventOnGuildMassiveCombatSurrenderAck = this.EventOnGuildMassiveCombatSurrenderAck;
			if (eventOnGuildMassiveCombatSurrenderAck != null)
			{
				eventOnGuildMassiveCombatSurrenderAck(obj);
			}
		}

		// Token: 0x060080B9 RID: 32953 RVA: 0x002576FC File Offset: 0x002558FC
		private void __clearDele_EventOnGuildMassiveCombatSurrenderAck(int obj)
		{
			this.EventOnGuildMassiveCombatSurrenderAck = null;
		}

		// Token: 0x060080BA RID: 32954 RVA: 0x00257708 File Offset: 0x00255908
		private void __callDele_EventOnSetProtagonistAck(int obj)
		{
			Action<int> eventOnSetProtagonistAck = this.EventOnSetProtagonistAck;
			if (eventOnSetProtagonistAck != null)
			{
				eventOnSetProtagonistAck(obj);
			}
		}

		// Token: 0x060080BB RID: 32955 RVA: 0x0025772C File Offset: 0x0025592C
		private void __clearDele_EventOnSetProtagonistAck(int obj)
		{
			this.EventOnSetProtagonistAck = null;
		}

		// Token: 0x060080BC RID: 32956 RVA: 0x00257738 File Offset: 0x00255938
		private void __callDele_EventOnHeroJobTransferAck(int obj)
		{
			Action<int> eventOnHeroJobTransferAck = this.EventOnHeroJobTransferAck;
			if (eventOnHeroJobTransferAck != null)
			{
				eventOnHeroJobTransferAck(obj);
			}
		}

		// Token: 0x060080BD RID: 32957 RVA: 0x0025775C File Offset: 0x0025595C
		private void __clearDele_EventOnHeroJobTransferAck(int obj)
		{
			this.EventOnHeroJobTransferAck = null;
		}

		// Token: 0x060080BE RID: 32958 RVA: 0x00257768 File Offset: 0x00255968
		private void __callDele_EventOnHeroStarLevelUpAck(int obj)
		{
			Action<int> eventOnHeroStarLevelUpAck = this.EventOnHeroStarLevelUpAck;
			if (eventOnHeroStarLevelUpAck != null)
			{
				eventOnHeroStarLevelUpAck(obj);
			}
		}

		// Token: 0x060080BF RID: 32959 RVA: 0x0025778C File Offset: 0x0025598C
		private void __clearDele_EventOnHeroStarLevelUpAck(int obj)
		{
			this.EventOnHeroStarLevelUpAck = null;
		}

		// Token: 0x060080C0 RID: 32960 RVA: 0x00257798 File Offset: 0x00255998
		private void __callDele_EventOnHeroJobLevelUpAck(int obj)
		{
			Action<int> eventOnHeroJobLevelUpAck = this.EventOnHeroJobLevelUpAck;
			if (eventOnHeroJobLevelUpAck != null)
			{
				eventOnHeroJobLevelUpAck(obj);
			}
		}

		// Token: 0x060080C1 RID: 32961 RVA: 0x002577BC File Offset: 0x002559BC
		private void __clearDele_EventOnHeroJobLevelUpAck(int obj)
		{
			this.EventOnHeroJobLevelUpAck = null;
		}

		// Token: 0x060080C2 RID: 32962 RVA: 0x002577C8 File Offset: 0x002559C8
		private void __callDele_EventOnHeroSkillsSelectAck(int obj)
		{
			Action<int> eventOnHeroSkillsSelectAck = this.EventOnHeroSkillsSelectAck;
			if (eventOnHeroSkillsSelectAck != null)
			{
				eventOnHeroSkillsSelectAck(obj);
			}
		}

		// Token: 0x060080C3 RID: 32963 RVA: 0x002577EC File Offset: 0x002559EC
		private void __clearDele_EventOnHeroSkillsSelectAck(int obj)
		{
			this.EventOnHeroSkillsSelectAck = null;
		}

		// Token: 0x060080C4 RID: 32964 RVA: 0x002577F8 File Offset: 0x002559F8
		private void __callDele_EventOnHeroSoldierSelectAck(int obj)
		{
			Action<int> eventOnHeroSoldierSelectAck = this.EventOnHeroSoldierSelectAck;
			if (eventOnHeroSoldierSelectAck != null)
			{
				eventOnHeroSoldierSelectAck(obj);
			}
		}

		// Token: 0x060080C5 RID: 32965 RVA: 0x0025781C File Offset: 0x00255A1C
		private void __clearDele_EventOnHeroSoldierSelectAck(int obj)
		{
			this.EventOnHeroSoldierSelectAck = null;
		}

		// Token: 0x060080C6 RID: 32966 RVA: 0x00257828 File Offset: 0x00255A28
		private void __callDele_EventOnHeroComposeAck(int obj)
		{
			Action<int> eventOnHeroComposeAck = this.EventOnHeroComposeAck;
			if (eventOnHeroComposeAck != null)
			{
				eventOnHeroComposeAck(obj);
			}
		}

		// Token: 0x060080C7 RID: 32967 RVA: 0x0025784C File Offset: 0x00255A4C
		private void __clearDele_EventOnHeroComposeAck(int obj)
		{
			this.EventOnHeroComposeAck = null;
		}

		// Token: 0x060080C8 RID: 32968 RVA: 0x00257858 File Offset: 0x00255A58
		private void __callDele_EventOnHeroExpAddAck(int obj)
		{
			Action<int> eventOnHeroExpAddAck = this.EventOnHeroExpAddAck;
			if (eventOnHeroExpAddAck != null)
			{
				eventOnHeroExpAddAck(obj);
			}
		}

		// Token: 0x060080C9 RID: 32969 RVA: 0x0025787C File Offset: 0x00255A7C
		private void __clearDele_EventOnHeroExpAddAck(int obj)
		{
			this.EventOnHeroExpAddAck = null;
		}

		// Token: 0x060080CA RID: 32970 RVA: 0x00257888 File Offset: 0x00255A88
		private void __callDele_EventOnHeroJobUnlockAck(int obj)
		{
			Action<int> eventOnHeroJobUnlockAck = this.EventOnHeroJobUnlockAck;
			if (eventOnHeroJobUnlockAck != null)
			{
				eventOnHeroJobUnlockAck(obj);
			}
		}

		// Token: 0x060080CB RID: 32971 RVA: 0x002578AC File Offset: 0x00255AAC
		private void __clearDele_EventOnHeroJobUnlockAck(int obj)
		{
			this.EventOnHeroJobUnlockAck = null;
		}

		// Token: 0x060080CC RID: 32972 RVA: 0x002578B8 File Offset: 0x00255AB8
		private void __callDele_EventOnEquipmentWearAck(int obj)
		{
			Action<int> eventOnEquipmentWearAck = this.EventOnEquipmentWearAck;
			if (eventOnEquipmentWearAck != null)
			{
				eventOnEquipmentWearAck(obj);
			}
		}

		// Token: 0x060080CD RID: 32973 RVA: 0x002578DC File Offset: 0x00255ADC
		private void __clearDele_EventOnEquipmentWearAck(int obj)
		{
			this.EventOnEquipmentWearAck = null;
		}

		// Token: 0x060080CE RID: 32974 RVA: 0x002578E8 File Offset: 0x00255AE8
		private void __callDele_EventOnEquipmentTakeOffAck(int obj)
		{
			Action<int> eventOnEquipmentTakeOffAck = this.EventOnEquipmentTakeOffAck;
			if (eventOnEquipmentTakeOffAck != null)
			{
				eventOnEquipmentTakeOffAck(obj);
			}
		}

		// Token: 0x060080CF RID: 32975 RVA: 0x0025790C File Offset: 0x00255B0C
		private void __clearDele_EventOnEquipmentTakeOffAck(int obj)
		{
			this.EventOnEquipmentTakeOffAck = null;
		}

		// Token: 0x060080D0 RID: 32976 RVA: 0x00257918 File Offset: 0x00255B18
		private void __callDele_EventOnAutoEquipAck(int obj)
		{
			Action<int> eventOnAutoEquipAck = this.EventOnAutoEquipAck;
			if (eventOnAutoEquipAck != null)
			{
				eventOnAutoEquipAck(obj);
			}
		}

		// Token: 0x060080D1 RID: 32977 RVA: 0x0025793C File Offset: 0x00255B3C
		private void __clearDele_EventOnAutoEquipAck(int obj)
		{
			this.EventOnAutoEquipAck = null;
		}

		// Token: 0x060080D2 RID: 32978 RVA: 0x00257948 File Offset: 0x00255B48
		private void __callDele_EventOnHeroFetterLevelUpAck(int obj)
		{
			Action<int> eventOnHeroFetterLevelUpAck = this.EventOnHeroFetterLevelUpAck;
			if (eventOnHeroFetterLevelUpAck != null)
			{
				eventOnHeroFetterLevelUpAck(obj);
			}
		}

		// Token: 0x060080D3 RID: 32979 RVA: 0x0025796C File Offset: 0x00255B6C
		private void __clearDele_EventOnHeroFetterLevelUpAck(int obj)
		{
			this.EventOnHeroFetterLevelUpAck = null;
		}

		// Token: 0x060080D4 RID: 32980 RVA: 0x00257978 File Offset: 0x00255B78
		private void __callDele_EventOnHeroConfessAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnHeroConfessAck = this.EventOnHeroConfessAck;
			if (eventOnHeroConfessAck != null)
			{
				eventOnHeroConfessAck(arg1, arg2);
			}
		}

		// Token: 0x060080D5 RID: 32981 RVA: 0x0025799C File Offset: 0x00255B9C
		private void __clearDele_EventOnHeroConfessAck(int arg1, List<Goods> arg2)
		{
			this.EventOnHeroConfessAck = null;
		}

		// Token: 0x060080D6 RID: 32982 RVA: 0x002579A8 File Offset: 0x00255BA8
		private void __callDele_EventOnHeroFavorabilityExpAddAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnHeroFavorabilityExpAddAck = this.EventOnHeroFavorabilityExpAddAck;
			if (eventOnHeroFavorabilityExpAddAck != null)
			{
				eventOnHeroFavorabilityExpAddAck(arg1, arg2);
			}
		}

		// Token: 0x060080D7 RID: 32983 RVA: 0x002579CC File Offset: 0x00255BCC
		private void __clearDele_EventOnHeroFavorabilityExpAddAck(int arg1, List<Goods> arg2)
		{
			this.EventOnHeroFavorabilityExpAddAck = null;
		}

		// Token: 0x060080D8 RID: 32984 RVA: 0x002579D8 File Offset: 0x00255BD8
		private void __callDele_EventOnFetterUnlockAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnFetterUnlockAck = this.EventOnFetterUnlockAck;
			if (eventOnFetterUnlockAck != null)
			{
				eventOnFetterUnlockAck(arg1, arg2);
			}
		}

		// Token: 0x060080D9 RID: 32985 RVA: 0x002579FC File Offset: 0x00255BFC
		private void __clearDele_EventOnFetterUnlockAck(int arg1, List<Goods> arg2)
		{
			this.EventOnFetterUnlockAck = null;
		}

		// Token: 0x060080DA RID: 32986 RVA: 0x00257A08 File Offset: 0x00255C08
		private void __callDele_EventOnHeroInteractAck(HeroInteractAck arg1, List<Goods> arg2, int arg3)
		{
			Action<HeroInteractAck, List<Goods>, int> eventOnHeroInteractAck = this.EventOnHeroInteractAck;
			if (eventOnHeroInteractAck != null)
			{
				eventOnHeroInteractAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x060080DB RID: 32987 RVA: 0x00257A2C File Offset: 0x00255C2C
		private void __clearDele_EventOnHeroInteractAck(HeroInteractAck arg1, List<Goods> arg2, int arg3)
		{
			this.EventOnHeroInteractAck = null;
		}

		// Token: 0x060080DC RID: 32988 RVA: 0x00257A38 File Offset: 0x00255C38
		private void __callDele_EventOnCharSkinWearAck(int obj)
		{
			Action<int> eventOnCharSkinWearAck = this.EventOnCharSkinWearAck;
			if (eventOnCharSkinWearAck != null)
			{
				eventOnCharSkinWearAck(obj);
			}
		}

		// Token: 0x060080DD RID: 32989 RVA: 0x00257A5C File Offset: 0x00255C5C
		private void __clearDele_EventOnCharSkinWearAck(int obj)
		{
			this.EventOnCharSkinWearAck = null;
		}

		// Token: 0x060080DE RID: 32990 RVA: 0x00257A68 File Offset: 0x00255C68
		private void __callDele_EventOnCharSkinTakeOffAck(int obj)
		{
			Action<int> eventOnCharSkinTakeOffAck = this.EventOnCharSkinTakeOffAck;
			if (eventOnCharSkinTakeOffAck != null)
			{
				eventOnCharSkinTakeOffAck(obj);
			}
		}

		// Token: 0x060080DF RID: 32991 RVA: 0x00257A8C File Offset: 0x00255C8C
		private void __clearDele_EventOnCharSkinTakeOffAck(int obj)
		{
			this.EventOnCharSkinTakeOffAck = null;
		}

		// Token: 0x060080E0 RID: 32992 RVA: 0x00257A98 File Offset: 0x00255C98
		private void __callDele_EventOnModelSkinWearAck(int obj)
		{
			Action<int> eventOnModelSkinWearAck = this.EventOnModelSkinWearAck;
			if (eventOnModelSkinWearAck != null)
			{
				eventOnModelSkinWearAck(obj);
			}
		}

		// Token: 0x060080E1 RID: 32993 RVA: 0x00257ABC File Offset: 0x00255CBC
		private void __clearDele_EventOnModelSkinWearAck(int obj)
		{
			this.EventOnModelSkinWearAck = null;
		}

		// Token: 0x060080E2 RID: 32994 RVA: 0x00257AC8 File Offset: 0x00255CC8
		private void __callDele_EventOnModelSkinTakeOffAck(int obj)
		{
			Action<int> eventOnModelSkinTakeOffAck = this.EventOnModelSkinTakeOffAck;
			if (eventOnModelSkinTakeOffAck != null)
			{
				eventOnModelSkinTakeOffAck(obj);
			}
		}

		// Token: 0x060080E3 RID: 32995 RVA: 0x00257AEC File Offset: 0x00255CEC
		private void __clearDele_EventOnModelSkinTakeOffAck(int obj)
		{
			this.EventOnModelSkinTakeOffAck = null;
		}

		// Token: 0x060080E4 RID: 32996 RVA: 0x00257AF8 File Offset: 0x00255CF8
		private void __callDele_EventOnSoldierSkinWearAck(int obj)
		{
			Action<int> eventOnSoldierSkinWearAck = this.EventOnSoldierSkinWearAck;
			if (eventOnSoldierSkinWearAck != null)
			{
				eventOnSoldierSkinWearAck(obj);
			}
		}

		// Token: 0x060080E5 RID: 32997 RVA: 0x00257B1C File Offset: 0x00255D1C
		private void __clearDele_EventOnSoldierSkinWearAck(int obj)
		{
			this.EventOnSoldierSkinWearAck = null;
		}

		// Token: 0x060080E6 RID: 32998 RVA: 0x00257B28 File Offset: 0x00255D28
		private void __callDele_EventOnSoldierSkinTakeOffAck(int obj)
		{
			Action<int> eventOnSoldierSkinTakeOffAck = this.EventOnSoldierSkinTakeOffAck;
			if (eventOnSoldierSkinTakeOffAck != null)
			{
				eventOnSoldierSkinTakeOffAck(obj);
			}
		}

		// Token: 0x060080E7 RID: 32999 RVA: 0x00257B4C File Offset: 0x00255D4C
		private void __clearDele_EventOnSoldierSkinTakeOffAck(int obj)
		{
			this.EventOnSoldierSkinTakeOffAck = null;
		}

		// Token: 0x060080E8 RID: 33000 RVA: 0x00257B58 File Offset: 0x00255D58
		private void __callDele_EventOnExchangeHeroFragementAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnExchangeHeroFragementAck = this.EventOnExchangeHeroFragementAck;
			if (eventOnExchangeHeroFragementAck != null)
			{
				eventOnExchangeHeroFragementAck(arg1, arg2);
			}
		}

		// Token: 0x060080E9 RID: 33001 RVA: 0x00257B7C File Offset: 0x00255D7C
		private void __clearDele_EventOnExchangeHeroFragementAck(int arg1, List<Goods> arg2)
		{
			this.EventOnExchangeHeroFragementAck = null;
		}

		// Token: 0x060080EA RID: 33002 RVA: 0x00257B88 File Offset: 0x00255D88
		private void __callDele_EventOnAutoTakeOffEquipmentsAck(int obj)
		{
			Action<int> eventOnAutoTakeOffEquipmentsAck = this.EventOnAutoTakeOffEquipmentsAck;
			if (eventOnAutoTakeOffEquipmentsAck != null)
			{
				eventOnAutoTakeOffEquipmentsAck(obj);
			}
		}

		// Token: 0x060080EB RID: 33003 RVA: 0x00257BAC File Offset: 0x00255DAC
		private void __clearDele_EventOnAutoTakeOffEquipmentsAck(int obj)
		{
			this.EventOnAutoTakeOffEquipmentsAck = null;
		}

		// Token: 0x060080EC RID: 33004 RVA: 0x00257BB8 File Offset: 0x00255DB8
		private void __callDele_EventOnHeroChangeNtf()
		{
			Action eventOnHeroChangeNtf = this.EventOnHeroChangeNtf;
			if (eventOnHeroChangeNtf != null)
			{
				eventOnHeroChangeNtf();
			}
		}

		// Token: 0x060080ED RID: 33005 RVA: 0x00257BD8 File Offset: 0x00255DD8
		private void __clearDele_EventOnHeroChangeNtf()
		{
			this.EventOnHeroChangeNtf = null;
		}

		// Token: 0x060080EE RID: 33006 RVA: 0x00257BE4 File Offset: 0x00255DE4
		private void __callDele_EventOnHeroAssistantAssignToTaskAck(int obj)
		{
			Action<int> eventOnHeroAssistantAssignToTaskAck = this.EventOnHeroAssistantAssignToTaskAck;
			if (eventOnHeroAssistantAssignToTaskAck != null)
			{
				eventOnHeroAssistantAssignToTaskAck(obj);
			}
		}

		// Token: 0x060080EF RID: 33007 RVA: 0x00257C08 File Offset: 0x00255E08
		private void __clearDele_EventOnHeroAssistantAssignToTaskAck(int obj)
		{
			this.EventOnHeroAssistantAssignToTaskAck = null;
		}

		// Token: 0x060080F0 RID: 33008 RVA: 0x00257C14 File Offset: 0x00255E14
		private void __callDele_EventOnHeroAssistantCancelTaskAck(int obj)
		{
			Action<int> eventOnHeroAssistantCancelTaskAck = this.EventOnHeroAssistantCancelTaskAck;
			if (eventOnHeroAssistantCancelTaskAck != null)
			{
				eventOnHeroAssistantCancelTaskAck(obj);
			}
		}

		// Token: 0x060080F1 RID: 33009 RVA: 0x00257C38 File Offset: 0x00255E38
		private void __clearDele_EventOnHeroAssistantCancelTaskAck(int obj)
		{
			this.EventOnHeroAssistantCancelTaskAck = null;
		}

		// Token: 0x060080F2 RID: 33010 RVA: 0x00257C44 File Offset: 0x00255E44
		private void __callDele_EventOnHeroAssistantClaimRewardAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnHeroAssistantClaimRewardAck = this.EventOnHeroAssistantClaimRewardAck;
			if (eventOnHeroAssistantClaimRewardAck != null)
			{
				eventOnHeroAssistantClaimRewardAck(arg1, arg2);
			}
		}

		// Token: 0x060080F3 RID: 33011 RVA: 0x00257C68 File Offset: 0x00255E68
		private void __clearDele_EventOnHeroAssistantClaimRewardAck(int arg1, List<Goods> arg2)
		{
			this.EventOnHeroAssistantClaimRewardAck = null;
		}

		// Token: 0x060080F4 RID: 33012 RVA: 0x00257C74 File Offset: 0x00255E74
		private void __callDele_EventOnHeroDungeonLevelAttackAck(int obj)
		{
			Action<int> eventOnHeroDungeonLevelAttackAck = this.EventOnHeroDungeonLevelAttackAck;
			if (eventOnHeroDungeonLevelAttackAck != null)
			{
				eventOnHeroDungeonLevelAttackAck(obj);
			}
		}

		// Token: 0x060080F5 RID: 33013 RVA: 0x00257C98 File Offset: 0x00255E98
		private void __clearDele_EventOnHeroDungeonLevelAttackAck(int obj)
		{
			this.EventOnHeroDungeonLevelAttackAck = null;
		}

		// Token: 0x060080F6 RID: 33014 RVA: 0x00257CA4 File Offset: 0x00255EA4
		private void __callDele_EventOnHeroDungeonLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
		{
			Action<int, BattleReward, List<Goods>> eventOnHeroDungeonLevelRaidAck = this.EventOnHeroDungeonLevelRaidAck;
			if (eventOnHeroDungeonLevelRaidAck != null)
			{
				eventOnHeroDungeonLevelRaidAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x060080F7 RID: 33015 RVA: 0x00257CC8 File Offset: 0x00255EC8
		private void __clearDele_EventOnHeroDungeonLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
		{
			this.EventOnHeroDungeonLevelRaidAck = null;
		}

		// Token: 0x060080F8 RID: 33016 RVA: 0x00257CD4 File Offset: 0x00255ED4
		private void __callDele_EventOnHeroDungeonRewardGainAck(int arg1, BattleReward arg2)
		{
			Action<int, BattleReward> eventOnHeroDungeonRewardGainAck = this.EventOnHeroDungeonRewardGainAck;
			if (eventOnHeroDungeonRewardGainAck != null)
			{
				eventOnHeroDungeonRewardGainAck(arg1, arg2);
			}
		}

		// Token: 0x060080F9 RID: 33017 RVA: 0x00257CF8 File Offset: 0x00255EF8
		private void __clearDele_EventOnHeroDungeonRewardGainAck(int arg1, BattleReward arg2)
		{
			this.EventOnHeroDungeonRewardGainAck = null;
		}

		// Token: 0x060080FA RID: 33018 RVA: 0x00257D04 File Offset: 0x00255F04
		private void __callDele_EventOnHeroDungeonLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
		{
			ProjectLPlayerContext.HeroDungeonLevelBattleFinishedAckCallback eventOnHeroDungeonLevelBattleFinishedAck = this.EventOnHeroDungeonLevelBattleFinishedAck;
			if (eventOnHeroDungeonLevelBattleFinishedAck != null)
			{
				eventOnHeroDungeonLevelBattleFinishedAck(result, stars, reward, isFirstWin, achievements);
			}
		}

		// Token: 0x060080FB RID: 33019 RVA: 0x00257D2C File Offset: 0x00255F2C
		private void __clearDele_EventOnHeroDungeonLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
		{
			this.EventOnHeroDungeonLevelBattleFinishedAck = null;
		}

		// Token: 0x060080FC RID: 33020 RVA: 0x00257D38 File Offset: 0x00255F38
		private void __callDele_EventOnHeroPhantomAttackAck(int obj)
		{
			Action<int> eventOnHeroPhantomAttackAck = this.EventOnHeroPhantomAttackAck;
			if (eventOnHeroPhantomAttackAck != null)
			{
				eventOnHeroPhantomAttackAck(obj);
			}
		}

		// Token: 0x060080FD RID: 33021 RVA: 0x00257D5C File Offset: 0x00255F5C
		private void __clearDele_EventOnHeroPhantomAttackAck(int obj)
		{
			this.EventOnHeroPhantomAttackAck = null;
		}

		// Token: 0x060080FE RID: 33022 RVA: 0x00257D68 File Offset: 0x00255F68
		private void __callDele_EventOnHeroPhantomBattleFinishedAck(int result, bool isWin, BattleReward reward, bool isFirstWin, List<int> achievements)
		{
			ProjectLPlayerContext.HeroPhantomBattleFinishedAckCallback eventOnHeroPhantomBattleFinishedAck = this.EventOnHeroPhantomBattleFinishedAck;
			if (eventOnHeroPhantomBattleFinishedAck != null)
			{
				eventOnHeroPhantomBattleFinishedAck(result, isWin, reward, isFirstWin, achievements);
			}
		}

		// Token: 0x060080FF RID: 33023 RVA: 0x00257D90 File Offset: 0x00255F90
		private void __clearDele_EventOnHeroPhantomBattleFinishedAck(int result, bool isWin, BattleReward reward, bool isFirstWin, List<int> achievements)
		{
			this.EventOnHeroPhantomBattleFinishedAck = null;
		}

		// Token: 0x06008100 RID: 33024 RVA: 0x00257D9C File Offset: 0x00255F9C
		private void __callDele_EventOnHeroTrainningLevelAttackAck(int obj)
		{
			Action<int> eventOnHeroTrainningLevelAttackAck = this.EventOnHeroTrainningLevelAttackAck;
			if (eventOnHeroTrainningLevelAttackAck != null)
			{
				eventOnHeroTrainningLevelAttackAck(obj);
			}
		}

		// Token: 0x06008101 RID: 33025 RVA: 0x00257DC0 File Offset: 0x00255FC0
		private void __clearDele_EventOnHeroTrainningLevelAttackAck(int obj)
		{
			this.EventOnHeroTrainningLevelAttackAck = null;
		}

		// Token: 0x06008102 RID: 33026 RVA: 0x00257DCC File Offset: 0x00255FCC
		private void __callDele_EventOnHeroTrainningLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnHeroTrainningLevelBattleFinishedAck = this.EventOnHeroTrainningLevelBattleFinishedAck;
			if (eventOnHeroTrainningLevelBattleFinishedAck != null)
			{
				eventOnHeroTrainningLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008103 RID: 33027 RVA: 0x00257DF0 File Offset: 0x00255FF0
		private void __clearDele_EventOnHeroTrainningLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnHeroTrainningLevelBattleFinishedAck = null;
		}

		// Token: 0x06008104 RID: 33028 RVA: 0x00257DFC File Offset: 0x00255FFC
		private void __callDele_EventOnLevelWayPointMoveAck(int arg1, BattleReward arg2)
		{
			Action<int, BattleReward> eventOnLevelWayPointMoveAck = this.EventOnLevelWayPointMoveAck;
			if (eventOnLevelWayPointMoveAck != null)
			{
				eventOnLevelWayPointMoveAck(arg1, arg2);
			}
		}

		// Token: 0x06008105 RID: 33029 RVA: 0x00257E20 File Offset: 0x00256020
		private void __clearDele_EventOnLevelWayPointMoveAck(int arg1, BattleReward arg2)
		{
			this.EventOnLevelWayPointMoveAck = null;
		}

		// Token: 0x06008106 RID: 33030 RVA: 0x00257E2C File Offset: 0x0025602C
		private void __callDele_EventOnLevelScenarioHandleAck(int arg1, BattleReward arg2)
		{
			Action<int, BattleReward> eventOnLevelScenarioHandleAck = this.EventOnLevelScenarioHandleAck;
			if (eventOnLevelScenarioHandleAck != null)
			{
				eventOnLevelScenarioHandleAck(arg1, arg2);
			}
		}

		// Token: 0x06008107 RID: 33031 RVA: 0x00257E50 File Offset: 0x00256050
		private void __clearDele_EventOnLevelScenarioHandleAck(int arg1, BattleReward arg2)
		{
			this.EventOnLevelScenarioHandleAck = null;
		}

		// Token: 0x06008108 RID: 33032 RVA: 0x00257E5C File Offset: 0x0025605C
		private void __callDele_EventOnLevelWayPointBattleFinishAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnLevelWayPointBattleFinishAck = this.EventOnLevelWayPointBattleFinishAck;
			if (eventOnLevelWayPointBattleFinishAck != null)
			{
				eventOnLevelWayPointBattleFinishAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008109 RID: 33033 RVA: 0x00257E80 File Offset: 0x00256080
		private void __clearDele_EventOnLevelWayPointBattleFinishAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnLevelWayPointBattleFinishAck = null;
		}

		// Token: 0x0600810A RID: 33034 RVA: 0x00257E8C File Offset: 0x0025608C
		private void __callDele_EventOnRandomEventNtf()
		{
			Action eventOnRandomEventNtf = this.EventOnRandomEventNtf;
			if (eventOnRandomEventNtf != null)
			{
				eventOnRandomEventNtf();
			}
		}

		// Token: 0x0600810B RID: 33035 RVA: 0x00257EAC File Offset: 0x002560AC
		private void __clearDele_EventOnRandomEventNtf()
		{
			this.EventOnRandomEventNtf = null;
		}

		// Token: 0x0600810C RID: 33036 RVA: 0x00257EB8 File Offset: 0x002560B8
		private void __callDele_EventOnMailsGetAck()
		{
			Action eventOnMailsGetAck = this.EventOnMailsGetAck;
			if (eventOnMailsGetAck != null)
			{
				eventOnMailsGetAck();
			}
		}

		// Token: 0x0600810D RID: 33037 RVA: 0x00257ED8 File Offset: 0x002560D8
		private void __clearDele_EventOnMailsGetAck()
		{
			this.EventOnMailsGetAck = null;
		}

		// Token: 0x0600810E RID: 33038 RVA: 0x00257EE4 File Offset: 0x002560E4
		private void __callDele_EventOnMailsChangedNtf()
		{
			Action eventOnMailsChangedNtf = this.EventOnMailsChangedNtf;
			if (eventOnMailsChangedNtf != null)
			{
				eventOnMailsChangedNtf();
			}
		}

		// Token: 0x0600810F RID: 33039 RVA: 0x00257F04 File Offset: 0x00256104
		private void __clearDele_EventOnMailsChangedNtf()
		{
			this.EventOnMailsChangedNtf = null;
		}

		// Token: 0x06008110 RID: 33040 RVA: 0x00257F10 File Offset: 0x00256110
		private void __callDele_EventOnMailReadAck(int obj)
		{
			Action<int> eventOnMailReadAck = this.EventOnMailReadAck;
			if (eventOnMailReadAck != null)
			{
				eventOnMailReadAck(obj);
			}
		}

		// Token: 0x06008111 RID: 33041 RVA: 0x00257F34 File Offset: 0x00256134
		private void __clearDele_EventOnMailReadAck(int obj)
		{
			this.EventOnMailReadAck = null;
		}

		// Token: 0x06008112 RID: 33042 RVA: 0x00257F40 File Offset: 0x00256140
		private void __callDele_EventOnMailAttachmentsGetAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnMailAttachmentsGetAck = this.EventOnMailAttachmentsGetAck;
			if (eventOnMailAttachmentsGetAck != null)
			{
				eventOnMailAttachmentsGetAck(arg1, arg2);
			}
		}

		// Token: 0x06008113 RID: 33043 RVA: 0x00257F64 File Offset: 0x00256164
		private void __clearDele_EventOnMailAttachmentsGetAck(int arg1, List<Goods> arg2)
		{
			this.EventOnMailAttachmentsGetAck = null;
		}

		// Token: 0x06008114 RID: 33044 RVA: 0x00257F70 File Offset: 0x00256170
		private void __callDele_EventOnMailAttachmentsAutoGetAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnMailAttachmentsAutoGetAck = this.EventOnMailAttachmentsAutoGetAck;
			if (eventOnMailAttachmentsAutoGetAck != null)
			{
				eventOnMailAttachmentsAutoGetAck(arg1, arg2);
			}
		}

		// Token: 0x06008115 RID: 33045 RVA: 0x00257F94 File Offset: 0x00256194
		private void __clearDele_EventOnMailAttachmentsAutoGetAck(int arg1, List<Goods> arg2)
		{
			this.EventOnMailAttachmentsAutoGetAck = null;
		}

		// Token: 0x06008116 RID: 33046 RVA: 0x00257FA0 File Offset: 0x002561A0
		private void __callDele_EventOnMemoryCorridorLevelAttackAck(int obj)
		{
			Action<int> eventOnMemoryCorridorLevelAttackAck = this.EventOnMemoryCorridorLevelAttackAck;
			if (eventOnMemoryCorridorLevelAttackAck != null)
			{
				eventOnMemoryCorridorLevelAttackAck(obj);
			}
		}

		// Token: 0x06008117 RID: 33047 RVA: 0x00257FC4 File Offset: 0x002561C4
		private void __clearDele_EventOnMemoryCorridorLevelAttackAck(int obj)
		{
			this.EventOnMemoryCorridorLevelAttackAck = null;
		}

		// Token: 0x06008118 RID: 33048 RVA: 0x00257FD0 File Offset: 0x002561D0
		private void __callDele_EventOnMemoryCorridorLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnMemoryCorridorLevelBattleFinishedAck = this.EventOnMemoryCorridorLevelBattleFinishedAck;
			if (eventOnMemoryCorridorLevelBattleFinishedAck != null)
			{
				eventOnMemoryCorridorLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008119 RID: 33049 RVA: 0x00257FF4 File Offset: 0x002561F4
		private void __clearDele_EventOnMemoryCorridorLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnMemoryCorridorLevelBattleFinishedAck = null;
		}

		// Token: 0x0600811A RID: 33050 RVA: 0x00258000 File Offset: 0x00256200
		private void __callDele_EventOnMissionRewardGetAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnMissionRewardGetAck = this.EventOnMissionRewardGetAck;
			if (eventOnMissionRewardGetAck != null)
			{
				eventOnMissionRewardGetAck(arg1, arg2);
			}
		}

		// Token: 0x0600811B RID: 33051 RVA: 0x00258024 File Offset: 0x00256224
		private void __clearDele_EventOnMissionRewardGetAck(int arg1, List<Goods> arg2)
		{
			this.EventOnMissionRewardGetAck = null;
		}

		// Token: 0x0600811C RID: 33052 RVA: 0x00258030 File Offset: 0x00256230
		private void __callDele_EventOnNoviceClaimRewardAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnNoviceClaimRewardAck = this.EventOnNoviceClaimRewardAck;
			if (eventOnNoviceClaimRewardAck != null)
			{
				eventOnNoviceClaimRewardAck(arg1, arg2);
			}
		}

		// Token: 0x0600811D RID: 33053 RVA: 0x00258054 File Offset: 0x00256254
		private void __clearDele_EventOnNoviceClaimRewardAck(int arg1, List<Goods> arg2)
		{
			this.EventOnNoviceClaimRewardAck = null;
		}

		// Token: 0x0600811E RID: 33054 RVA: 0x00258060 File Offset: 0x00256260
		private void __callDele_EventOnActivityGainRewardAck(int obj)
		{
			Action<int> eventOnActivityGainRewardAck = this.EventOnActivityGainRewardAck;
			if (eventOnActivityGainRewardAck != null)
			{
				eventOnActivityGainRewardAck(obj);
			}
		}

		// Token: 0x0600811F RID: 33055 RVA: 0x00258084 File Offset: 0x00256284
		private void __clearDele_EventOnActivityGainRewardAck(int obj)
		{
			this.EventOnActivityGainRewardAck = null;
		}

		// Token: 0x06008120 RID: 33056 RVA: 0x00258090 File Offset: 0x00256290
		private void __callDele_EventOnActivityExchangeItemGroupAck(int obj)
		{
			Action<int> eventOnActivityExchangeItemGroupAck = this.EventOnActivityExchangeItemGroupAck;
			if (eventOnActivityExchangeItemGroupAck != null)
			{
				eventOnActivityExchangeItemGroupAck(obj);
			}
		}

		// Token: 0x06008121 RID: 33057 RVA: 0x002580B4 File Offset: 0x002562B4
		private void __clearDele_EventOnActivityExchangeItemGroupAck(int obj)
		{
			this.EventOnActivityExchangeItemGroupAck = null;
		}

		// Token: 0x06008122 RID: 33058 RVA: 0x002580C0 File Offset: 0x002562C0
		private void __callDele_EventOnNewMarqueeNtf(Marquee obj)
		{
			Action<Marquee> eventOnNewMarqueeNtf = this.EventOnNewMarqueeNtf;
			if (eventOnNewMarqueeNtf != null)
			{
				eventOnNewMarqueeNtf(obj);
			}
		}

		// Token: 0x06008123 RID: 33059 RVA: 0x002580E4 File Offset: 0x002562E4
		private void __clearDele_EventOnNewMarqueeNtf(Marquee obj)
		{
			this.EventOnNewMarqueeNtf = null;
		}

		// Token: 0x06008124 RID: 33060 RVA: 0x002580F0 File Offset: 0x002562F0
		private void __callDele_EventOnActivityRedeemClaimAck(int obj)
		{
			Action<int> eventOnActivityRedeemClaimAck = this.EventOnActivityRedeemClaimAck;
			if (eventOnActivityRedeemClaimAck != null)
			{
				eventOnActivityRedeemClaimAck(obj);
			}
		}

		// Token: 0x06008125 RID: 33061 RVA: 0x00258114 File Offset: 0x00256314
		private void __clearDele_EventOnActivityRedeemClaimAck(int obj)
		{
			this.EventOnActivityRedeemClaimAck = null;
		}

		// Token: 0x06008126 RID: 33062 RVA: 0x00258120 File Offset: 0x00256320
		private void __callDele_EventOnActivityFansRewardsFromPBTCBT(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnActivityFansRewardsFromPBTCBT = this.EventOnActivityFansRewardsFromPBTCBT;
			if (eventOnActivityFansRewardsFromPBTCBT != null)
			{
				eventOnActivityFansRewardsFromPBTCBT(arg1, arg2);
			}
		}

		// Token: 0x06008127 RID: 33063 RVA: 0x00258144 File Offset: 0x00256344
		private void __clearDele_EventOnActivityFansRewardsFromPBTCBT(int arg1, List<Goods> arg2)
		{
			this.EventOnActivityFansRewardsFromPBTCBT = null;
		}

		// Token: 0x06008128 RID: 33064 RVA: 0x00258150 File Offset: 0x00256350
		private void __callDele_EventOnExchangeGiftCDKeyAck(int arg1, int arg2)
		{
			Action<int, int> eventOnExchangeGiftCDKeyAck = this.EventOnExchangeGiftCDKeyAck;
			if (eventOnExchangeGiftCDKeyAck != null)
			{
				eventOnExchangeGiftCDKeyAck(arg1, arg2);
			}
		}

		// Token: 0x06008129 RID: 33065 RVA: 0x00258174 File Offset: 0x00256374
		private void __clearDele_EventOnExchangeGiftCDKeyAck(int arg1, int arg2)
		{
			this.EventOnExchangeGiftCDKeyAck = null;
		}

		// Token: 0x0600812A RID: 33066 RVA: 0x00258180 File Offset: 0x00256380
		private void __callDele_EventOnPlayerInfoInitAck(object obj)
		{
			Action<object> eventOnPlayerInfoInitAck = this.EventOnPlayerInfoInitAck;
			if (eventOnPlayerInfoInitAck != null)
			{
				eventOnPlayerInfoInitAck(obj);
			}
		}

		// Token: 0x0600812B RID: 33067 RVA: 0x002581A4 File Offset: 0x002563A4
		private void __clearDele_EventOnPlayerInfoInitAck(object obj)
		{
			this.EventOnPlayerInfoInitAck = null;
		}

		// Token: 0x0600812C RID: 33068 RVA: 0x002581B0 File Offset: 0x002563B0
		private void __callDele_EventOnPlayerInfoInitEnd()
		{
			Action eventOnPlayerInfoInitEnd = this.EventOnPlayerInfoInitEnd;
			if (eventOnPlayerInfoInitEnd != null)
			{
				eventOnPlayerInfoInitEnd();
			}
		}

		// Token: 0x0600812D RID: 33069 RVA: 0x002581D0 File Offset: 0x002563D0
		private void __clearDele_EventOnPlayerInfoInitEnd()
		{
			this.EventOnPlayerInfoInitEnd = null;
		}

		// Token: 0x0600812E RID: 33070 RVA: 0x002581DC File Offset: 0x002563DC
		private void __callDele_EventOnCreateCharactorAck(int obj)
		{
			Action<int> eventOnCreateCharactorAck = this.EventOnCreateCharactorAck;
			if (eventOnCreateCharactorAck != null)
			{
				eventOnCreateCharactorAck(obj);
			}
		}

		// Token: 0x0600812F RID: 33071 RVA: 0x00258200 File Offset: 0x00256400
		private void __clearDele_EventOnCreateCharactorAck(int obj)
		{
			this.EventOnCreateCharactorAck = null;
		}

		// Token: 0x06008130 RID: 33072 RVA: 0x0025820C File Offset: 0x0025640C
		private void __callDele_EventOnBuyEnergyAck(int obj)
		{
			Action<int> eventOnBuyEnergyAck = this.EventOnBuyEnergyAck;
			if (eventOnBuyEnergyAck != null)
			{
				eventOnBuyEnergyAck(obj);
			}
		}

		// Token: 0x06008131 RID: 33073 RVA: 0x00258230 File Offset: 0x00256430
		private void __clearDele_EventOnBuyEnergyAck(int obj)
		{
			this.EventOnBuyEnergyAck = null;
		}

		// Token: 0x06008132 RID: 33074 RVA: 0x0025823C File Offset: 0x0025643C
		private void __callDele_EventOnHeadPortraitAndHeadFrameSetAck(int obj)
		{
			Action<int> eventOnHeadPortraitAndHeadFrameSetAck = this.EventOnHeadPortraitAndHeadFrameSetAck;
			if (eventOnHeadPortraitAndHeadFrameSetAck != null)
			{
				eventOnHeadPortraitAndHeadFrameSetAck(obj);
			}
		}

		// Token: 0x06008133 RID: 33075 RVA: 0x00258260 File Offset: 0x00256460
		private void __clearDele_EventOnHeadPortraitAndHeadFrameSetAck(int obj)
		{
			this.EventOnHeadPortraitAndHeadFrameSetAck = null;
		}

		// Token: 0x06008134 RID: 33076 RVA: 0x0025826C File Offset: 0x0025646C
		private void __callDele_EventOnPlayerNameChangeAck(int obj)
		{
			Action<int> eventOnPlayerNameChangeAck = this.EventOnPlayerNameChangeAck;
			if (eventOnPlayerNameChangeAck != null)
			{
				eventOnPlayerNameChangeAck(obj);
			}
		}

		// Token: 0x06008135 RID: 33077 RVA: 0x00258290 File Offset: 0x00256490
		private void __clearDele_EventOnPlayerNameChangeAck(int obj)
		{
			this.EventOnPlayerNameChangeAck = null;
		}

		// Token: 0x06008136 RID: 33078 RVA: 0x0025829C File Offset: 0x0025649C
		private void __callDele_EventOnPlayerInfoChangeNtf()
		{
			Action eventOnPlayerInfoChangeNtf = this.EventOnPlayerInfoChangeNtf;
			if (eventOnPlayerInfoChangeNtf != null)
			{
				eventOnPlayerInfoChangeNtf();
			}
		}

		// Token: 0x06008137 RID: 33079 RVA: 0x002582BC File Offset: 0x002564BC
		private void __clearDele_EventOnPlayerInfoChangeNtf()
		{
			this.EventOnPlayerInfoChangeNtf = null;
		}

		// Token: 0x06008138 RID: 33080 RVA: 0x002582C8 File Offset: 0x002564C8
		private void __callDele_EventOnArenaTicketsBuyAck(int obj)
		{
			Action<int> eventOnArenaTicketsBuyAck = this.EventOnArenaTicketsBuyAck;
			if (eventOnArenaTicketsBuyAck != null)
			{
				eventOnArenaTicketsBuyAck(obj);
			}
		}

		// Token: 0x06008139 RID: 33081 RVA: 0x002582EC File Offset: 0x002564EC
		private void __clearDele_EventOnArenaTicketsBuyAck(int obj)
		{
			this.EventOnArenaTicketsBuyAck = null;
		}

		// Token: 0x0600813A RID: 33082 RVA: 0x002582F8 File Offset: 0x002564F8
		private void __callDele_EventOnOpenGameRatingAck()
		{
			Action eventOnOpenGameRatingAck = this.EventOnOpenGameRatingAck;
			if (eventOnOpenGameRatingAck != null)
			{
				eventOnOpenGameRatingAck();
			}
		}

		// Token: 0x0600813B RID: 33083 RVA: 0x00258318 File Offset: 0x00256518
		private void __clearDele_EventOnOpenGameRatingAck()
		{
			this.EventOnOpenGameRatingAck = null;
		}

		// Token: 0x0600813C RID: 33084 RVA: 0x00258324 File Offset: 0x00256524
		private void __callDele_EventOnShareAck()
		{
			Action eventOnShareAck = this.EventOnShareAck;
			if (eventOnShareAck != null)
			{
				eventOnShareAck();
			}
		}

		// Token: 0x0600813D RID: 33085 RVA: 0x00258344 File Offset: 0x00256544
		private void __clearDele_EventOnShareAck()
		{
			this.EventOnShareAck = null;
		}

		// Token: 0x0600813E RID: 33086 RVA: 0x00258350 File Offset: 0x00256550
		private void __callDele_EventOnCheckOnlineAck()
		{
			Action eventOnCheckOnlineAck = this.EventOnCheckOnlineAck;
			if (eventOnCheckOnlineAck != null)
			{
				eventOnCheckOnlineAck();
			}
		}

		// Token: 0x0600813F RID: 33087 RVA: 0x00258370 File Offset: 0x00256570
		private void __clearDele_EventOnCheckOnlineAck()
		{
			this.EventOnCheckOnlineAck = null;
		}

		// Token: 0x06008140 RID: 33088 RVA: 0x0025837C File Offset: 0x0025657C
		private void __callDele_EventOnSendClientHeartBeatNtfFail()
		{
			Action eventOnSendClientHeartBeatNtfFail = this.EventOnSendClientHeartBeatNtfFail;
			if (eventOnSendClientHeartBeatNtfFail != null)
			{
				eventOnSendClientHeartBeatNtfFail();
			}
		}

		// Token: 0x06008141 RID: 33089 RVA: 0x0025839C File Offset: 0x0025659C
		private void __clearDele_EventOnSendClientHeartBeatNtfFail()
		{
			this.EventOnSendClientHeartBeatNtfFail = null;
		}

		// Token: 0x06008142 RID: 33090 RVA: 0x002583A8 File Offset: 0x002565A8
		private void __callDele_EventOnSendClientAppResumeNtfFail()
		{
			Action eventOnSendClientAppResumeNtfFail = this.EventOnSendClientAppResumeNtfFail;
			if (eventOnSendClientAppResumeNtfFail != null)
			{
				eventOnSendClientAppResumeNtfFail();
			}
		}

		// Token: 0x06008143 RID: 33091 RVA: 0x002583C8 File Offset: 0x002565C8
		private void __clearDele_EventOnSendClientAppResumeNtfFail()
		{
			this.EventOnSendClientAppResumeNtfFail = null;
		}

		// Token: 0x06008144 RID: 33092 RVA: 0x002583D4 File Offset: 0x002565D4
		private void __callDele_EventOpenMemoryStoreAck()
		{
			Action eventOpenMemoryStoreAck = this.EventOpenMemoryStoreAck;
			if (eventOpenMemoryStoreAck != null)
			{
				eventOpenMemoryStoreAck();
			}
		}

		// Token: 0x06008145 RID: 33093 RVA: 0x002583F4 File Offset: 0x002565F4
		private void __clearDele_EventOpenMemoryStoreAck()
		{
			this.EventOpenMemoryStoreAck = null;
		}

		// Token: 0x06008146 RID: 33094 RVA: 0x00258400 File Offset: 0x00256600
		private void __callDele_EventOnResetPushNotification()
		{
			Action eventOnResetPushNotification = this.EventOnResetPushNotification;
			if (eventOnResetPushNotification != null)
			{
				eventOnResetPushNotification();
			}
		}

		// Token: 0x06008147 RID: 33095 RVA: 0x00258420 File Offset: 0x00256620
		private void __clearDele_EventOnResetPushNotification()
		{
			this.EventOnResetPushNotification = null;
		}

		// Token: 0x06008148 RID: 33096 RVA: 0x0025842C File Offset: 0x0025662C
		private void __callDele_EventOnRaffleDrawAck(int arg1, int arg2, Goods arg3)
		{
			Action<int, int, Goods> eventOnRaffleDrawAck = this.EventOnRaffleDrawAck;
			if (eventOnRaffleDrawAck != null)
			{
				eventOnRaffleDrawAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x06008149 RID: 33097 RVA: 0x00258450 File Offset: 0x00256650
		private void __clearDele_EventOnRaffleDrawAck(int arg1, int arg2, Goods arg3)
		{
			this.EventOnRaffleDrawAck = null;
		}

		// Token: 0x0600814A RID: 33098 RVA: 0x0025845C File Offset: 0x0025665C
		private void __callDele_EventOnGetRandomStoreListAck(int obj)
		{
			Action<int> eventOnGetRandomStoreListAck = this.EventOnGetRandomStoreListAck;
			if (eventOnGetRandomStoreListAck != null)
			{
				eventOnGetRandomStoreListAck(obj);
			}
		}

		// Token: 0x0600814B RID: 33099 RVA: 0x00258480 File Offset: 0x00256680
		private void __clearDele_EventOnGetRandomStoreListAck(int obj)
		{
			this.EventOnGetRandomStoreListAck = null;
		}

		// Token: 0x0600814C RID: 33100 RVA: 0x0025848C File Offset: 0x0025668C
		private void __callDele_EventOnFlushRandomStoreAck(int obj)
		{
			Action<int> eventOnFlushRandomStoreAck = this.EventOnFlushRandomStoreAck;
			if (eventOnFlushRandomStoreAck != null)
			{
				eventOnFlushRandomStoreAck(obj);
			}
		}

		// Token: 0x0600814D RID: 33101 RVA: 0x002584B0 File Offset: 0x002566B0
		private void __clearDele_EventOnFlushRandomStoreAck(int obj)
		{
			this.EventOnFlushRandomStoreAck = null;
		}

		// Token: 0x0600814E RID: 33102 RVA: 0x002584BC File Offset: 0x002566BC
		private void __callDele_EventOnRandomStoreBuyStoreItemAck(int obj)
		{
			Action<int> eventOnRandomStoreBuyStoreItemAck = this.EventOnRandomStoreBuyStoreItemAck;
			if (eventOnRandomStoreBuyStoreItemAck != null)
			{
				eventOnRandomStoreBuyStoreItemAck(obj);
			}
		}

		// Token: 0x0600814F RID: 33103 RVA: 0x002584E0 File Offset: 0x002566E0
		private void __clearDele_EventOnRandomStoreBuyStoreItemAck(int obj)
		{
			this.EventOnRandomStoreBuyStoreItemAck = null;
		}

		// Token: 0x06008150 RID: 33104 RVA: 0x002584EC File Offset: 0x002566EC
		private void __callDele_EventOnRankingListInfoQueryAck(int obj)
		{
			Action<int> eventOnRankingListInfoQueryAck = this.EventOnRankingListInfoQueryAck;
			if (eventOnRankingListInfoQueryAck != null)
			{
				eventOnRankingListInfoQueryAck(obj);
			}
		}

		// Token: 0x06008151 RID: 33105 RVA: 0x00258510 File Offset: 0x00256710
		private void __clearDele_EventOnRankingListInfoQueryAck(int obj)
		{
			this.EventOnRankingListInfoQueryAck = null;
		}

		// Token: 0x06008152 RID: 33106 RVA: 0x0025851C File Offset: 0x0025671C
		private void __callDele_EventOnRealTimePVPWaitingForOpponentAck(int arg1, int arg2)
		{
			Action<int, int> eventOnRealTimePVPWaitingForOpponentAck = this.EventOnRealTimePVPWaitingForOpponentAck;
			if (eventOnRealTimePVPWaitingForOpponentAck != null)
			{
				eventOnRealTimePVPWaitingForOpponentAck(arg1, arg2);
			}
		}

		// Token: 0x06008153 RID: 33107 RVA: 0x00258540 File Offset: 0x00256740
		private void __clearDele_EventOnRealTimePVPWaitingForOpponentAck(int arg1, int arg2)
		{
			this.EventOnRealTimePVPWaitingForOpponentAck = null;
		}

		// Token: 0x06008154 RID: 33108 RVA: 0x0025854C File Offset: 0x0025674C
		private void __callDele_EventOnRealTimePVPMatchupNtf(int obj)
		{
			Action<int> eventOnRealTimePVPMatchupNtf = this.EventOnRealTimePVPMatchupNtf;
			if (eventOnRealTimePVPMatchupNtf != null)
			{
				eventOnRealTimePVPMatchupNtf(obj);
			}
		}

		// Token: 0x06008155 RID: 33109 RVA: 0x00258570 File Offset: 0x00256770
		private void __clearDele_EventOnRealTimePVPMatchupNtf(int obj)
		{
			this.EventOnRealTimePVPMatchupNtf = null;
		}

		// Token: 0x06008156 RID: 33110 RVA: 0x0025857C File Offset: 0x0025677C
		private void __callDele_EventOnRealTimePVPCancelWaitingForOpponentAck(int obj)
		{
			Action<int> eventOnRealTimePVPCancelWaitingForOpponentAck = this.EventOnRealTimePVPCancelWaitingForOpponentAck;
			if (eventOnRealTimePVPCancelWaitingForOpponentAck != null)
			{
				eventOnRealTimePVPCancelWaitingForOpponentAck(obj);
			}
		}

		// Token: 0x06008157 RID: 33111 RVA: 0x002585A0 File Offset: 0x002567A0
		private void __clearDele_EventOnRealTimePVPCancelWaitingForOpponentAck(int obj)
		{
			this.EventOnRealTimePVPCancelWaitingForOpponentAck = null;
		}

		// Token: 0x06008158 RID: 33112 RVA: 0x002585AC File Offset: 0x002567AC
		private void __callDele_EventOnRealTimePVPGetInfoAck(int obj)
		{
			Action<int> eventOnRealTimePVPGetInfoAck = this.EventOnRealTimePVPGetInfoAck;
			if (eventOnRealTimePVPGetInfoAck != null)
			{
				eventOnRealTimePVPGetInfoAck(obj);
			}
		}

		// Token: 0x06008159 RID: 33113 RVA: 0x002585D0 File Offset: 0x002567D0
		private void __clearDele_EventOnRealTimePVPGetInfoAck(int obj)
		{
			this.EventOnRealTimePVPGetInfoAck = null;
		}

		// Token: 0x0600815A RID: 33114 RVA: 0x002585DC File Offset: 0x002567DC
		private void __callDele_EventOnRealTimePVPGetTopPlayersAck(int obj)
		{
			Action<int> eventOnRealTimePVPGetTopPlayersAck = this.EventOnRealTimePVPGetTopPlayersAck;
			if (eventOnRealTimePVPGetTopPlayersAck != null)
			{
				eventOnRealTimePVPGetTopPlayersAck(obj);
			}
		}

		// Token: 0x0600815B RID: 33115 RVA: 0x00258600 File Offset: 0x00256800
		private void __clearDele_EventOnRealTimePVPGetTopPlayersAck(int obj)
		{
			this.EventOnRealTimePVPGetTopPlayersAck = null;
		}

		// Token: 0x0600815C RID: 33116 RVA: 0x0025860C File Offset: 0x0025680C
		private void __callDele_EventOnRealTimePVPAcquireWinsBonusAck(int arg1, BattleReward arg2)
		{
			Action<int, BattleReward> eventOnRealTimePVPAcquireWinsBonusAck = this.EventOnRealTimePVPAcquireWinsBonusAck;
			if (eventOnRealTimePVPAcquireWinsBonusAck != null)
			{
				eventOnRealTimePVPAcquireWinsBonusAck(arg1, arg2);
			}
		}

		// Token: 0x0600815D RID: 33117 RVA: 0x00258630 File Offset: 0x00256830
		private void __clearDele_EventOnRealTimePVPAcquireWinsBonusAck(int arg1, BattleReward arg2)
		{
			this.EventOnRealTimePVPAcquireWinsBonusAck = null;
		}

		// Token: 0x0600815E RID: 33118 RVA: 0x0025863C File Offset: 0x0025683C
		private void __callDele_EventOnRealTimePVPLeaderboardInfoNtf(ProRealTimePVPUserInfo obj)
		{
			Action<ProRealTimePVPUserInfo> eventOnRealTimePVPLeaderboardInfoNtf = this.EventOnRealTimePVPLeaderboardInfoNtf;
			if (eventOnRealTimePVPLeaderboardInfoNtf != null)
			{
				eventOnRealTimePVPLeaderboardInfoNtf(obj);
			}
		}

		// Token: 0x0600815F RID: 33119 RVA: 0x00258660 File Offset: 0x00256860
		private void __clearDele_EventOnRealTimePVPLeaderboardInfoNtf(ProRealTimePVPUserInfo obj)
		{
			this.EventOnRealTimePVPLeaderboardInfoNtf = null;
		}

		// Token: 0x06008160 RID: 33120 RVA: 0x0025866C File Offset: 0x0025686C
		private void __callDele_EventOnRechargeBoughtSuccessNtf(string obj)
		{
			Action<string> eventOnRechargeBoughtSuccessNtf = this.EventOnRechargeBoughtSuccessNtf;
			if (eventOnRechargeBoughtSuccessNtf != null)
			{
				eventOnRechargeBoughtSuccessNtf(obj);
			}
		}

		// Token: 0x06008161 RID: 33121 RVA: 0x00258690 File Offset: 0x00256890
		private void __clearDele_EventOnRechargeBoughtSuccessNtf(string obj)
		{
			this.EventOnRechargeBoughtSuccessNtf = null;
		}

		// Token: 0x06008162 RID: 33122 RVA: 0x0025869C File Offset: 0x0025689C
		private void __callDele_EventOnRechargeStoreItemBuyAck(int arg1, int arg2)
		{
			Action<int, int> eventOnRechargeStoreItemBuyAck = this.EventOnRechargeStoreItemBuyAck;
			if (eventOnRechargeStoreItemBuyAck != null)
			{
				eventOnRechargeStoreItemBuyAck(arg1, arg2);
			}
		}

		// Token: 0x06008163 RID: 33123 RVA: 0x002586C0 File Offset: 0x002568C0
		private void __clearDele_EventOnRechargeStoreItemBuyAck(int arg1, int arg2)
		{
			this.EventOnRechargeStoreItemBuyAck = null;
		}

		// Token: 0x06008164 RID: 33124 RVA: 0x002586CC File Offset: 0x002568CC
		private void __callDele_EventOnRechargeStoreCancelBuyAck(int arg1, int arg2)
		{
			Action<int, int> eventOnRechargeStoreCancelBuyAck = this.EventOnRechargeStoreCancelBuyAck;
			if (eventOnRechargeStoreCancelBuyAck != null)
			{
				eventOnRechargeStoreCancelBuyAck(arg1, arg2);
			}
		}

		// Token: 0x06008165 RID: 33125 RVA: 0x002586F0 File Offset: 0x002568F0
		private void __clearDele_EventOnRechargeStoreCancelBuyAck(int arg1, int arg2)
		{
			this.EventOnRechargeStoreCancelBuyAck = null;
		}

		// Token: 0x06008166 RID: 33126 RVA: 0x002586FC File Offset: 0x002568FC
		private void __callDele_EventOnRiftLevelAttackAck(int obj)
		{
			Action<int> eventOnRiftLevelAttackAck = this.EventOnRiftLevelAttackAck;
			if (eventOnRiftLevelAttackAck != null)
			{
				eventOnRiftLevelAttackAck(obj);
			}
		}

		// Token: 0x06008167 RID: 33127 RVA: 0x00258720 File Offset: 0x00256920
		private void __clearDele_EventOnRiftLevelAttackAck(int obj)
		{
			this.EventOnRiftLevelAttackAck = null;
		}

		// Token: 0x06008168 RID: 33128 RVA: 0x0025872C File Offset: 0x0025692C
		private void __callDele_EventOnRiftLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
		{
			ProjectLPlayerContext.RiftLevelBattleFinishedAckCallback eventOnRiftLevelBattleFinishedAck = this.EventOnRiftLevelBattleFinishedAck;
			if (eventOnRiftLevelBattleFinishedAck != null)
			{
				eventOnRiftLevelBattleFinishedAck(result, stars, reward, isFirstWin, achievements);
			}
		}

		// Token: 0x06008169 RID: 33129 RVA: 0x00258754 File Offset: 0x00256954
		private void __clearDele_EventOnRiftLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
		{
			this.EventOnRiftLevelBattleFinishedAck = null;
		}

		// Token: 0x0600816A RID: 33130 RVA: 0x00258760 File Offset: 0x00256960
		private void __callDele_EventOnRiftLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
		{
			Action<int, BattleReward, List<Goods>> eventOnRiftLevelRaidAck = this.EventOnRiftLevelRaidAck;
			if (eventOnRiftLevelRaidAck != null)
			{
				eventOnRiftLevelRaidAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x0600816B RID: 33131 RVA: 0x00258784 File Offset: 0x00256984
		private void __clearDele_EventOnRiftLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
		{
			this.EventOnRiftLevelRaidAck = null;
		}

		// Token: 0x0600816C RID: 33132 RVA: 0x00258790 File Offset: 0x00256990
		private void __callDele_EventOnRiftChapterRewardGainAck(int arg1, BattleReward arg2)
		{
			Action<int, BattleReward> eventOnRiftChapterRewardGainAck = this.EventOnRiftChapterRewardGainAck;
			if (eventOnRiftChapterRewardGainAck != null)
			{
				eventOnRiftChapterRewardGainAck(arg1, arg2);
			}
		}

		// Token: 0x0600816D RID: 33133 RVA: 0x002587B4 File Offset: 0x002569B4
		private void __clearDele_EventOnRiftChapterRewardGainAck(int arg1, BattleReward arg2)
		{
			this.EventOnRiftChapterRewardGainAck = null;
		}

		// Token: 0x0600816E RID: 33134 RVA: 0x002587C0 File Offset: 0x002569C0
		private void __callDele_EventOnCardSelectAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnCardSelectAck = this.EventOnCardSelectAck;
			if (eventOnCardSelectAck != null)
			{
				eventOnCardSelectAck(arg1, arg2);
			}
		}

		// Token: 0x0600816F RID: 33135 RVA: 0x002587E4 File Offset: 0x002569E4
		private void __clearDele_EventOnCardSelectAck(int arg1, List<Goods> arg2)
		{
			this.EventOnCardSelectAck = null;
		}

		// Token: 0x06008170 RID: 33136 RVA: 0x002587F0 File Offset: 0x002569F0
		private void __callDele_EventOnEverydaySignAck(int arg1, List<Goods> arg2)
		{
			Action<int, List<Goods>> eventOnEverydaySignAck = this.EventOnEverydaySignAck;
			if (eventOnEverydaySignAck != null)
			{
				eventOnEverydaySignAck(arg1, arg2);
			}
		}

		// Token: 0x06008171 RID: 33137 RVA: 0x00258814 File Offset: 0x00256A14
		private void __clearDele_EventOnEverydaySignAck(int arg1, List<Goods> arg2)
		{
			this.EventOnEverydaySignAck = null;
		}

		// Token: 0x06008172 RID: 33138 RVA: 0x00258820 File Offset: 0x00256A20
		private void __callDele_EventOnOpenSurveyAck(int obj)
		{
			Action<int> eventOnOpenSurveyAck = this.EventOnOpenSurveyAck;
			if (eventOnOpenSurveyAck != null)
			{
				eventOnOpenSurveyAck(obj);
			}
		}

		// Token: 0x06008173 RID: 33139 RVA: 0x00258844 File Offset: 0x00256A44
		private void __clearDele_EventOnOpenSurveyAck(int obj)
		{
			this.EventOnOpenSurveyAck = null;
		}

		// Token: 0x06008174 RID: 33140 RVA: 0x00258850 File Offset: 0x00256A50
		private void __callDele_EventOnGetSurveyRewardAck(int obj)
		{
			Action<int> eventOnGetSurveyRewardAck = this.EventOnGetSurveyRewardAck;
			if (eventOnGetSurveyRewardAck != null)
			{
				eventOnGetSurveyRewardAck(obj);
			}
		}

		// Token: 0x06008175 RID: 33141 RVA: 0x00258874 File Offset: 0x00256A74
		private void __clearDele_EventOnGetSurveyRewardAck(int obj)
		{
			this.EventOnGetSurveyRewardAck = null;
		}

		// Token: 0x06008176 RID: 33142 RVA: 0x00258880 File Offset: 0x00256A80
		private void __callDele_EventOnTeamRoomCreateAck(int obj)
		{
			Action<int> eventOnTeamRoomCreateAck = this.EventOnTeamRoomCreateAck;
			if (eventOnTeamRoomCreateAck != null)
			{
				eventOnTeamRoomCreateAck(obj);
			}
		}

		// Token: 0x06008177 RID: 33143 RVA: 0x002588A4 File Offset: 0x00256AA4
		private void __clearDele_EventOnTeamRoomCreateAck(int obj)
		{
			this.EventOnTeamRoomCreateAck = null;
		}

		// Token: 0x06008178 RID: 33144 RVA: 0x002588B0 File Offset: 0x00256AB0
		private void __callDele_EventOnTeamRoomViewAck(int arg1, List<TeamRoom> arg2)
		{
			Action<int, List<TeamRoom>> eventOnTeamRoomViewAck = this.EventOnTeamRoomViewAck;
			if (eventOnTeamRoomViewAck != null)
			{
				eventOnTeamRoomViewAck(arg1, arg2);
			}
		}

		// Token: 0x06008179 RID: 33145 RVA: 0x002588D4 File Offset: 0x00256AD4
		private void __clearDele_EventOnTeamRoomViewAck(int arg1, List<TeamRoom> arg2)
		{
			this.EventOnTeamRoomViewAck = null;
		}

		// Token: 0x0600817A RID: 33146 RVA: 0x002588E0 File Offset: 0x00256AE0
		private void __callDele_EventOnTeamRoomAutoMatchAck(int arg1, int arg2, bool arg3)
		{
			Action<int, int, bool> eventOnTeamRoomAutoMatchAck = this.EventOnTeamRoomAutoMatchAck;
			if (eventOnTeamRoomAutoMatchAck != null)
			{
				eventOnTeamRoomAutoMatchAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x0600817B RID: 33147 RVA: 0x00258904 File Offset: 0x00256B04
		private void __clearDele_EventOnTeamRoomAutoMatchAck(int arg1, int arg2, bool arg3)
		{
			this.EventOnTeamRoomAutoMatchAck = null;
		}

		// Token: 0x0600817C RID: 33148 RVA: 0x00258910 File Offset: 0x00256B10
		private void __callDele_EventOnTeamRoomAutoMatchCancelAck(int obj)
		{
			Action<int> eventOnTeamRoomAutoMatchCancelAck = this.EventOnTeamRoomAutoMatchCancelAck;
			if (eventOnTeamRoomAutoMatchCancelAck != null)
			{
				eventOnTeamRoomAutoMatchCancelAck(obj);
			}
		}

		// Token: 0x0600817D RID: 33149 RVA: 0x00258934 File Offset: 0x00256B34
		private void __clearDele_EventOnTeamRoomAutoMatchCancelAck(int obj)
		{
			this.EventOnTeamRoomAutoMatchCancelAck = null;
		}

		// Token: 0x0600817E RID: 33150 RVA: 0x00258940 File Offset: 0x00256B40
		private void __callDele_EventOnTeamRoomAuthorityChangeAck(int obj)
		{
			Action<int> eventOnTeamRoomAuthorityChangeAck = this.EventOnTeamRoomAuthorityChangeAck;
			if (eventOnTeamRoomAuthorityChangeAck != null)
			{
				eventOnTeamRoomAuthorityChangeAck(obj);
			}
		}

		// Token: 0x0600817F RID: 33151 RVA: 0x00258964 File Offset: 0x00256B64
		private void __clearDele_EventOnTeamRoomAuthorityChangeAck(int obj)
		{
			this.EventOnTeamRoomAuthorityChangeAck = null;
		}

		// Token: 0x06008180 RID: 33152 RVA: 0x00258970 File Offset: 0x00256B70
		private void __callDele_EventOnTeamRoomJoinAck(int obj)
		{
			Action<int> eventOnTeamRoomJoinAck = this.EventOnTeamRoomJoinAck;
			if (eventOnTeamRoomJoinAck != null)
			{
				eventOnTeamRoomJoinAck(obj);
			}
		}

		// Token: 0x06008181 RID: 33153 RVA: 0x00258994 File Offset: 0x00256B94
		private void __clearDele_EventOnTeamRoomJoinAck(int obj)
		{
			this.EventOnTeamRoomJoinAck = null;
		}

		// Token: 0x06008182 RID: 33154 RVA: 0x002589A0 File Offset: 0x00256BA0
		private void __callDele_EventOnTeamRoomQuitAck(int obj)
		{
			Action<int> eventOnTeamRoomQuitAck = this.EventOnTeamRoomQuitAck;
			if (eventOnTeamRoomQuitAck != null)
			{
				eventOnTeamRoomQuitAck(obj);
			}
		}

		// Token: 0x06008183 RID: 33155 RVA: 0x002589C4 File Offset: 0x00256BC4
		private void __clearDele_EventOnTeamRoomQuitAck(int obj)
		{
			this.EventOnTeamRoomQuitAck = null;
		}

		// Token: 0x06008184 RID: 33156 RVA: 0x002589D0 File Offset: 0x00256BD0
		private void __callDele_EventOnTeamRoomGetAck(int arg1, int arg2)
		{
			Action<int, int> eventOnTeamRoomGetAck = this.EventOnTeamRoomGetAck;
			if (eventOnTeamRoomGetAck != null)
			{
				eventOnTeamRoomGetAck(arg1, arg2);
			}
		}

		// Token: 0x06008185 RID: 33157 RVA: 0x002589F4 File Offset: 0x00256BF4
		private void __clearDele_EventOnTeamRoomGetAck(int arg1, int arg2)
		{
			this.EventOnTeamRoomGetAck = null;
		}

		// Token: 0x06008186 RID: 33158 RVA: 0x00258A00 File Offset: 0x00256C00
		private void __callDele_EventOnTeamRoomInviteAck(int obj)
		{
			Action<int> eventOnTeamRoomInviteAck = this.EventOnTeamRoomInviteAck;
			if (eventOnTeamRoomInviteAck != null)
			{
				eventOnTeamRoomInviteAck(obj);
			}
		}

		// Token: 0x06008187 RID: 33159 RVA: 0x00258A24 File Offset: 0x00256C24
		private void __clearDele_EventOnTeamRoomInviteAck(int obj)
		{
			this.EventOnTeamRoomInviteAck = null;
		}

		// Token: 0x06008188 RID: 33160 RVA: 0x00258A30 File Offset: 0x00256C30
		private void __callDele_EventOnTeamRoomInvitationRefusedAck(int obj)
		{
			Action<int> eventOnTeamRoomInvitationRefusedAck = this.EventOnTeamRoomInvitationRefusedAck;
			if (eventOnTeamRoomInvitationRefusedAck != null)
			{
				eventOnTeamRoomInvitationRefusedAck(obj);
			}
		}

		// Token: 0x06008189 RID: 33161 RVA: 0x00258A54 File Offset: 0x00256C54
		private void __clearDele_EventOnTeamRoomInvitationRefusedAck(int obj)
		{
			this.EventOnTeamRoomInvitationRefusedAck = null;
		}

		// Token: 0x0600818A RID: 33162 RVA: 0x00258A60 File Offset: 0x00256C60
		private void __callDele_EventOnTeamRoomInviteeInfoGetAck(int obj)
		{
			Action<int> eventOnTeamRoomInviteeInfoGetAck = this.EventOnTeamRoomInviteeInfoGetAck;
			if (eventOnTeamRoomInviteeInfoGetAck != null)
			{
				eventOnTeamRoomInviteeInfoGetAck(obj);
			}
		}

		// Token: 0x0600818B RID: 33163 RVA: 0x00258A84 File Offset: 0x00256C84
		private void __clearDele_EventOnTeamRoomInviteeInfoGetAck(int obj)
		{
			this.EventOnTeamRoomInviteeInfoGetAck = null;
		}

		// Token: 0x0600818C RID: 33164 RVA: 0x00258A90 File Offset: 0x00256C90
		private void __callDele_EventOnTeamRoomPlayerJoinNtf(TeamRoomPlayer obj)
		{
			Action<TeamRoomPlayer> eventOnTeamRoomPlayerJoinNtf = this.EventOnTeamRoomPlayerJoinNtf;
			if (eventOnTeamRoomPlayerJoinNtf != null)
			{
				eventOnTeamRoomPlayerJoinNtf(obj);
			}
		}

		// Token: 0x0600818D RID: 33165 RVA: 0x00258AB4 File Offset: 0x00256CB4
		private void __clearDele_EventOnTeamRoomPlayerJoinNtf(TeamRoomPlayer obj)
		{
			this.EventOnTeamRoomPlayerJoinNtf = null;
		}

		// Token: 0x0600818E RID: 33166 RVA: 0x00258AC0 File Offset: 0x00256CC0
		private void __callDele_EventOnTeamRoomPlayerQuitNtf(TeamRoomPlayer obj)
		{
			Action<TeamRoomPlayer> eventOnTeamRoomPlayerQuitNtf = this.EventOnTeamRoomPlayerQuitNtf;
			if (eventOnTeamRoomPlayerQuitNtf != null)
			{
				eventOnTeamRoomPlayerQuitNtf(obj);
			}
		}

		// Token: 0x0600818F RID: 33167 RVA: 0x00258AE4 File Offset: 0x00256CE4
		private void __clearDele_EventOnTeamRoomPlayerQuitNtf(TeamRoomPlayer obj)
		{
			this.EventOnTeamRoomPlayerQuitNtf = null;
		}

		// Token: 0x06008190 RID: 33168 RVA: 0x00258AF0 File Offset: 0x00256CF0
		private void __callDele_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf()
		{
			Action eventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf = this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf;
			if (eventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf != null)
			{
				eventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf();
			}
		}

		// Token: 0x06008191 RID: 33169 RVA: 0x00258B10 File Offset: 0x00256D10
		private void __clearDele_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf()
		{
			this.EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf = null;
		}

		// Token: 0x06008192 RID: 33170 RVA: 0x00258B1C File Offset: 0x00256D1C
		private void __callDele_EventOnTeamRoomAuthorityChangeNtf(TeamRoomAuthority obj)
		{
			Action<TeamRoomAuthority> eventOnTeamRoomAuthorityChangeNtf = this.EventOnTeamRoomAuthorityChangeNtf;
			if (eventOnTeamRoomAuthorityChangeNtf != null)
			{
				eventOnTeamRoomAuthorityChangeNtf(obj);
			}
		}

		// Token: 0x06008193 RID: 33171 RVA: 0x00258B40 File Offset: 0x00256D40
		private void __clearDele_EventOnTeamRoomAuthorityChangeNtf(TeamRoomAuthority obj)
		{
			this.EventOnTeamRoomAuthorityChangeNtf = null;
		}

		// Token: 0x06008194 RID: 33172 RVA: 0x00258B4C File Offset: 0x00256D4C
		private void __callDele_EventOnTeamRoomAutoMatchInfoNtf(int obj)
		{
			Action<int> eventOnTeamRoomAutoMatchInfoNtf = this.EventOnTeamRoomAutoMatchInfoNtf;
			if (eventOnTeamRoomAutoMatchInfoNtf != null)
			{
				eventOnTeamRoomAutoMatchInfoNtf(obj);
			}
		}

		// Token: 0x06008195 RID: 33173 RVA: 0x00258B70 File Offset: 0x00256D70
		private void __clearDele_EventOnTeamRoomAutoMatchInfoNtf(int obj)
		{
			this.EventOnTeamRoomAutoMatchInfoNtf = null;
		}

		// Token: 0x06008196 RID: 33174 RVA: 0x00258B7C File Offset: 0x00256D7C
		private void __callDele_EventOnTeamRoomInviteNtf(TeamRoomInviteInfo obj)
		{
			Action<TeamRoomInviteInfo> eventOnTeamRoomInviteNtf = this.EventOnTeamRoomInviteNtf;
			if (eventOnTeamRoomInviteNtf != null)
			{
				eventOnTeamRoomInviteNtf(obj);
			}
		}

		// Token: 0x06008197 RID: 33175 RVA: 0x00258BA0 File Offset: 0x00256DA0
		private void __clearDele_EventOnTeamRoomInviteNtf(TeamRoomInviteInfo obj)
		{
			this.EventOnTeamRoomInviteNtf = null;
		}

		// Token: 0x06008198 RID: 33176 RVA: 0x00258BAC File Offset: 0x00256DAC
		private void __callDele_EventOnTeamRoomInvitationRefusedNtf(int arg1, string arg2)
		{
			Action<int, string> eventOnTeamRoomInvitationRefusedNtf = this.EventOnTeamRoomInvitationRefusedNtf;
			if (eventOnTeamRoomInvitationRefusedNtf != null)
			{
				eventOnTeamRoomInvitationRefusedNtf(arg1, arg2);
			}
		}

		// Token: 0x06008199 RID: 33177 RVA: 0x00258BD0 File Offset: 0x00256DD0
		private void __clearDele_EventOnTeamRoomInvitationRefusedNtf(int arg1, string arg2)
		{
			this.EventOnTeamRoomInvitationRefusedNtf = null;
		}

		// Token: 0x0600819A RID: 33178 RVA: 0x00258BDC File Offset: 0x00256DDC
		private void __callDele_EventOnTeamRoomSelfKickOutNtf()
		{
			Action eventOnTeamRoomSelfKickOutNtf = this.EventOnTeamRoomSelfKickOutNtf;
			if (eventOnTeamRoomSelfKickOutNtf != null)
			{
				eventOnTeamRoomSelfKickOutNtf();
			}
		}

		// Token: 0x0600819B RID: 33179 RVA: 0x00258BFC File Offset: 0x00256DFC
		private void __clearDele_EventOnTeamRoomSelfKickOutNtf()
		{
			this.EventOnTeamRoomSelfKickOutNtf = null;
		}

		// Token: 0x0600819C RID: 33180 RVA: 0x00258C08 File Offset: 0x00256E08
		private void __callDele_EventOnTeamRoomInviteeInfoNtf(string arg1, int arg2, int arg3)
		{
			Action<string, int, int> eventOnTeamRoomInviteeInfoNtf = this.EventOnTeamRoomInviteeInfoNtf;
			if (eventOnTeamRoomInviteeInfoNtf != null)
			{
				eventOnTeamRoomInviteeInfoNtf(arg1, arg2, arg3);
			}
		}

		// Token: 0x0600819D RID: 33181 RVA: 0x00258C2C File Offset: 0x00256E2C
		private void __clearDele_EventOnTeamRoomInviteeInfoNtf(string arg1, int arg2, int arg3)
		{
			this.EventOnTeamRoomInviteeInfoNtf = null;
		}

		// Token: 0x0600819E RID: 33182 RVA: 0x00258C38 File Offset: 0x00256E38
		private void __callDele_EventOnTeamRoomPlayerPositionChangeAck(int obj)
		{
			Action<int> eventOnTeamRoomPlayerPositionChangeAck = this.EventOnTeamRoomPlayerPositionChangeAck;
			if (eventOnTeamRoomPlayerPositionChangeAck != null)
			{
				eventOnTeamRoomPlayerPositionChangeAck(obj);
			}
		}

		// Token: 0x0600819F RID: 33183 RVA: 0x00258C5C File Offset: 0x00256E5C
		private void __clearDele_EventOnTeamRoomPlayerPositionChangeAck(int obj)
		{
			this.EventOnTeamRoomPlayerPositionChangeAck = null;
		}

		// Token: 0x060081A0 RID: 33184 RVA: 0x00258C68 File Offset: 0x00256E68
		private void __callDele_EventOnTeamRoomPlayerPositionChangeNtf()
		{
			Action eventOnTeamRoomPlayerPositionChangeNtf = this.EventOnTeamRoomPlayerPositionChangeNtf;
			if (eventOnTeamRoomPlayerPositionChangeNtf != null)
			{
				eventOnTeamRoomPlayerPositionChangeNtf();
			}
		}

		// Token: 0x060081A1 RID: 33185 RVA: 0x00258C88 File Offset: 0x00256E88
		private void __clearDele_EventOnTeamRoomPlayerPositionChangeNtf()
		{
			this.EventOnTeamRoomPlayerPositionChangeNtf = null;
		}

		// Token: 0x060081A2 RID: 33186 RVA: 0x00258C94 File Offset: 0x00256E94
		private void __callDele_EventOnThearchyTrialLevelAttackAck(int obj)
		{
			Action<int> eventOnThearchyTrialLevelAttackAck = this.EventOnThearchyTrialLevelAttackAck;
			if (eventOnThearchyTrialLevelAttackAck != null)
			{
				eventOnThearchyTrialLevelAttackAck(obj);
			}
		}

		// Token: 0x060081A3 RID: 33187 RVA: 0x00258CB8 File Offset: 0x00256EB8
		private void __clearDele_EventOnThearchyTrialLevelAttackAck(int obj)
		{
			this.EventOnThearchyTrialLevelAttackAck = null;
		}

		// Token: 0x060081A4 RID: 33188 RVA: 0x00258CC4 File Offset: 0x00256EC4
		private void __callDele_EventOnThearchyTrialLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnThearchyTrialLevelBattleFinishedAck = this.EventOnThearchyTrialLevelBattleFinishedAck;
			if (eventOnThearchyTrialLevelBattleFinishedAck != null)
			{
				eventOnThearchyTrialLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x060081A5 RID: 33189 RVA: 0x00258CE8 File Offset: 0x00256EE8
		private void __clearDele_EventOnThearchyTrialLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnThearchyTrialLevelBattleFinishedAck = null;
		}

		// Token: 0x060081A6 RID: 33190 RVA: 0x00258CF4 File Offset: 0x00256EF4
		private void __callDele_EventOnTrainingGroundTechLevelupAck(int obj)
		{
			Action<int> eventOnTrainingGroundTechLevelupAck = this.EventOnTrainingGroundTechLevelupAck;
			if (eventOnTrainingGroundTechLevelupAck != null)
			{
				eventOnTrainingGroundTechLevelupAck(obj);
			}
		}

		// Token: 0x060081A7 RID: 33191 RVA: 0x00258D18 File Offset: 0x00256F18
		private void __clearDele_EventOnTrainingGroundTechLevelupAck(int obj)
		{
			this.EventOnTrainingGroundTechLevelupAck = null;
		}

		// Token: 0x060081A8 RID: 33192 RVA: 0x00258D24 File Offset: 0x00256F24
		private void __callDele_EventOnTreasureLevelAttackAck(int obj)
		{
			Action<int> eventOnTreasureLevelAttackAck = this.EventOnTreasureLevelAttackAck;
			if (eventOnTreasureLevelAttackAck != null)
			{
				eventOnTreasureLevelAttackAck(obj);
			}
		}

		// Token: 0x060081A9 RID: 33193 RVA: 0x00258D48 File Offset: 0x00256F48
		private void __clearDele_EventOnTreasureLevelAttackAck(int obj)
		{
			this.EventOnTreasureLevelAttackAck = null;
		}

		// Token: 0x060081AA RID: 33194 RVA: 0x00258D54 File Offset: 0x00256F54
		private void __callDele_EventOnTreasureLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnTreasureLevelBattleFinishedAck = this.EventOnTreasureLevelBattleFinishedAck;
			if (eventOnTreasureLevelBattleFinishedAck != null)
			{
				eventOnTreasureLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x060081AB RID: 33195 RVA: 0x00258D78 File Offset: 0x00256F78
		private void __clearDele_EventOnTreasureLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnTreasureLevelBattleFinishedAck = null;
		}

		// Token: 0x060081AC RID: 33196 RVA: 0x00258D84 File Offset: 0x00256F84
		private void __callDele_EventOnUnchartedScoreChallengeLevelAttackAck(int obj)
		{
			Action<int> eventOnUnchartedScoreChallengeLevelAttackAck = this.EventOnUnchartedScoreChallengeLevelAttackAck;
			if (eventOnUnchartedScoreChallengeLevelAttackAck != null)
			{
				eventOnUnchartedScoreChallengeLevelAttackAck(obj);
			}
		}

		// Token: 0x060081AD RID: 33197 RVA: 0x00258DA8 File Offset: 0x00256FA8
		private void __clearDele_EventOnUnchartedScoreChallengeLevelAttackAck(int obj)
		{
			this.EventOnUnchartedScoreChallengeLevelAttackAck = null;
		}

		// Token: 0x060081AE RID: 33198 RVA: 0x00258DB4 File Offset: 0x00256FB4
		private void __callDele_EventOnUnchartedScoreChallengeLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnUnchartedScoreChallengeLevelBattleFinishedAck = this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck;
			if (eventOnUnchartedScoreChallengeLevelBattleFinishedAck != null)
			{
				eventOnUnchartedScoreChallengeLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x060081AF RID: 33199 RVA: 0x00258DD8 File Offset: 0x00256FD8
		private void __clearDele_EventOnUnchartedScoreChallengeLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnUnchartedScoreChallengeLevelBattleFinishedAck = null;
		}

		// Token: 0x060081B0 RID: 33200 RVA: 0x00258DE4 File Offset: 0x00256FE4
		private void __callDele_EventOnUnchartedScoreScoreLevelAttackAck(int obj)
		{
			Action<int> eventOnUnchartedScoreScoreLevelAttackAck = this.EventOnUnchartedScoreScoreLevelAttackAck;
			if (eventOnUnchartedScoreScoreLevelAttackAck != null)
			{
				eventOnUnchartedScoreScoreLevelAttackAck(obj);
			}
		}

		// Token: 0x060081B1 RID: 33201 RVA: 0x00258E08 File Offset: 0x00257008
		private void __clearDele_EventOnUnchartedScoreScoreLevelAttackAck(int obj)
		{
			this.EventOnUnchartedScoreScoreLevelAttackAck = null;
		}

		// Token: 0x060081B2 RID: 33202 RVA: 0x00258E14 File Offset: 0x00257014
		private void __callDele_EventOnUnchartedScoreScoreLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			Action<int, bool, BattleReward> eventOnUnchartedScoreScoreLevelBattleFinishedAck = this.EventOnUnchartedScoreScoreLevelBattleFinishedAck;
			if (eventOnUnchartedScoreScoreLevelBattleFinishedAck != null)
			{
				eventOnUnchartedScoreScoreLevelBattleFinishedAck(arg1, arg2, arg3);
			}
		}

		// Token: 0x060081B3 RID: 33203 RVA: 0x00258E38 File Offset: 0x00257038
		private void __clearDele_EventOnUnchartedScoreScoreLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
		{
			this.EventOnUnchartedScoreScoreLevelBattleFinishedAck = null;
		}

		// Token: 0x060081B4 RID: 33204 RVA: 0x00258E44 File Offset: 0x00257044
		private void __callDele_EventOnUserGuideSetAck(int obj)
		{
			Action<int> eventOnUserGuideSetAck = this.EventOnUserGuideSetAck;
			if (eventOnUserGuideSetAck != null)
			{
				eventOnUserGuideSetAck(obj);
			}
		}

		// Token: 0x060081B5 RID: 33205 RVA: 0x00258E68 File Offset: 0x00257068
		private void __clearDele_EventOnUserGuideSetAck(int obj)
		{
			this.EventOnUserGuideSetAck = null;
		}

		// Token: 0x060081BE RID: 33214 RVA: 0x00258F88 File Offset: 0x00257188
		private bool InitHotFix(LuaTable A_1)
		{
			this.m_luaObjHelper = new BJLuaObjHelper();
			this.m_luaObjHelper.InitInCS(this, A_1);
			LuaFunction luaFunction = A_1.RawGet("HotFixObject") as LuaFunction;
			bool result;
			if (luaFunction == null)
			{
				global::Debug.LogError("Can't find HotFixObject Func");
				result = false;
			}
			else
			{
				luaFunction.call(new object[]
				{
					this,
					this.m_luaObjHelper
				});
				LuaTable luaObj = this.m_luaObjHelper.GetLuaObj();
				if (luaObj == null)
				{
					result = false;
				}
				else
				{
					this.m_ctor_hotfix = (luaObj.RawGet("ctor") as LuaFunction);
					this.m_SendMessageObject_hotfix = (luaObj.RawGet("SendMessage") as LuaFunction);
					this.m_OnGameServerMessageObjectInt32_hotfix = (luaObj.RawGet("OnGameServerMessage") as LuaFunction);
					this.m_OnMessageServerHeartBeatNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageServerDisconnectNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageClientCheatNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_RemoveOwnerComponent_hotfix = (luaObj.RawGet("RemoveOwnerComponent") as LuaFunction);
					this.m_GetOwnerComponent_hotfix = (luaObj.RawGet("GetOwnerComponent") as LuaFunction);
					this.m_GetOwnerComponentString_hotfix = (luaObj.RawGet("GetOwnerComponent") as LuaFunction);
					this.m_Tick_hotfix = (luaObj.RawGet("Tick") as LuaFunction);
					this.m_TestMarquee_hotfix = (luaObj.RawGet("TestMarquee") as LuaFunction);
					this.m_TestChat_hotfix = (luaObj.RawGet("TestChat") as LuaFunction);
					this.m_GetSessionToken_hotfix = (luaObj.RawGet("GetSessionToken") as LuaFunction);
					this.m_GetDeviceId_hotfix = (luaObj.RawGet("GetDeviceId") as LuaFunction);
					this.m_GetClientVersion_hotfix = (luaObj.RawGet("GetClientVersion") as LuaFunction);
					this.m_IsDataCacheDirtyByPlayerInfoInitAckObjectBoolean__hotfix = (luaObj.RawGet("IsDataCacheDirtyByPlayerInfoInitAck") as LuaFunction);
					this.m_IsPlayerInfoInitAck4CheckOnlyObject_hotfix = (luaObj.RawGet("IsPlayerInfoInitAck4CheckOnly") as LuaFunction);
					this.m_IsLocalGame_hotfix = (luaObj.RawGet("IsLocalGame") as LuaFunction);
					this.m_GetLocalTime_hotfix = (luaObj.RawGet("GetLocalTime") as LuaFunction);
					this.m_GetServerTime_Bug_hotfix = (luaObj.RawGet("GetServerTime_Bug") as LuaFunction);
					this.m_GetServerTime_hotfix = (luaObj.RawGet("GetServerTime") as LuaFunction);
					this.m_LocalTimeToServerTimeDateTime_hotfix = (luaObj.RawGet("LocalTimeToServerTime") as LuaFunction);
					this.m_ServerTimeToLocalTimeDateTime_hotfix = (luaObj.RawGet("ServerTimeToLocalTime") as LuaFunction);
					this.m_DataErrorInt32_hotfix = (luaObj.RawGet("DataError") as LuaFunction);
					this.m_IsDataError_hotfix = (luaObj.RawGet("IsDataError") as LuaFunction);
					this.m_get_Happening_hotfix = (luaObj.RawGet("get_Happening") as LuaFunction);
					this.m_get_CurrentBattle_hotfix = (luaObj.RawGet("get_CurrentBattle") as LuaFunction);
					this.m_add_EventOnClientCheatNtfAction_hotfix = (luaObj.RawGet("add_EventOnClientCheatNtf") as LuaFunction);
					this.m_remove_EventOnClientCheatNtfAction_hotfix = (luaObj.RawGet("remove_EventOnClientCheatNtf") as LuaFunction);
					this.m_add_EventOnServerDisconnectNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnServerDisconnectNtf") as LuaFunction);
					this.m_remove_EventOnServerDisconnectNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnServerDisconnectNtf") as LuaFunction);
					this.m_SendAnikiGymLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendAnikiGymLevelAttackReq") as LuaFunction);
					this.m_SendAnikiGymLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendAnikiGymLevelBattleFinishedReq") as LuaFunction);
					this.m_OnMessageDSAnikiGymNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageAnikiGymLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageAnikiGymLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsAnikiGymOpenedInt32_hotfix = (luaObj.RawGet("IsAnikiGymOpened") as LuaFunction);
					this.m_IsAnikiLevelOpenedInt32_hotfix = (luaObj.RawGet("IsAnikiLevelOpened") as LuaFunction);
					this.m_CanAttackAnikiLevelInt32_hotfix = (luaObj.RawGet("CanAttackAnikiLevel") as LuaFunction);
					this.m_GetAnikiTicketCount_hotfix = (luaObj.RawGet("GetAnikiTicketCount") as LuaFunction);
					this.m_IsAnikiLevelFinishedInt32_hotfix = (luaObj.RawGet("IsAnikiLevelFinished") as LuaFunction);
					this.m_GetAnikiDailyRewardRestCount_hotfix = (luaObj.RawGet("GetAnikiDailyRewardRestCount") as LuaFunction);
					this.m_add_EventOnAnikiGymLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnAnikiGymLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnAnikiGymLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnAnikiGymLevelAttackAck") as LuaFunction);
					this.m_add_EventOnAnikiGymLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnAnikiGymLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnAnikiGymLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnAnikiGymLevelBattleFinishedAck") as LuaFunction);
					this.m_SendArenaPlayerInfoGetReq_hotfix = (luaObj.RawGet("SendArenaPlayerInfoGetReq") as LuaFunction);
					this.m_SendArenaOpponentViewReqInt32_hotfix = (luaObj.RawGet("SendArenaOpponentViewReq") as LuaFunction);
					this.m_SendArenaOpponentAttackReqBoolean_hotfix = (luaObj.RawGet("SendArenaOpponentAttackReq") as LuaFunction);
					this.m_SendArenaRevengeOpponentGetReqUInt64_hotfix = (luaObj.RawGet("SendArenaRevengeOpponentGetReq") as LuaFunction);
					this.m_SendArenaOpponentRevengeReqUInt64Boolean_hotfix = (luaObj.RawGet("SendArenaOpponentRevengeReq") as LuaFunction);
					this.m_SendArenaOpponentAttackFightingReq_hotfix = (luaObj.RawGet("SendArenaOpponentAttackFightingReq") as LuaFunction);
					this.m_SendArenaBattleFinishedReqProBattleReport_hotfix = (luaObj.RawGet("SendArenaBattleFinishedReq") as LuaFunction);
					this.m_SendArenaPlayerSetDefensiveTeamReqInt32Int32List`1_hotfix = (luaObj.RawGet("SendArenaPlayerSetDefensiveTeamReq") as LuaFunction);
					this.m_SendArenaVictoryPointsRewardGainReqInt32_hotfix = (luaObj.RawGet("SendArenaVictoryPointsRewardGainReq") as LuaFunction);
					this.m_SendArenaBattleReportBaiscDataGetReq_hotfix = (luaObj.RawGet("SendArenaBattleReportBaiscDataGetReq") as LuaFunction);
					this.m_SendArenaBattleReportPlayBackDataGetReqUInt64_hotfix = (luaObj.RawGet("SendArenaBattleReportPlayBackDataGetReq") as LuaFunction);
					this.m_SendArenaTopRankPlayersGetReq_hotfix = (luaObj.RawGet("SendArenaTopRankPlayersGetReq") as LuaFunction);
					this.m_SendArenaBattleReconnectReq_hotfix = (luaObj.RawGet("SendArenaBattleReconnectReq") as LuaFunction);
					this.m_OnMessageDSArenaNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaPlayerInfoGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaOpponentViewAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaOpponentAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaRevengeOpponentGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaOpponentRevengeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaOpponentAttackFightingAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaPlayerSetDefensiveTeamAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaVictoryPointsRewardGainAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaBattleReportBasicDataGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaBattleReportPlayBackDataGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaTopRankPlayersGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaBattleReconnectAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaBattleReportNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaFlushOpponentsNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsEmptyArenaPlayerInfo_hotfix = (luaObj.RawGet("IsEmptyArenaPlayerInfo") as LuaFunction);
					this.m_IsNeedGetArenaPlayerInfo_hotfix = (luaObj.RawGet("IsNeedGetArenaPlayerInfo") as LuaFunction);
					this.m_GetPlayerArenaLevelId_hotfix = (luaObj.RawGet("GetPlayerArenaLevelId") as LuaFunction);
					this.m_GetPlayerArenaPoints_hotfix = (luaObj.RawGet("GetPlayerArenaPoints") as LuaFunction);
					this.m_GetPlayerArenaVictoryPoints_hotfix = (luaObj.RawGet("GetPlayerArenaVictoryPoints") as LuaFunction);
					this.m_GetArenaThisWeekVictoryNums_hotfix = (luaObj.RawGet("GetArenaThisWeekVictoryNums") as LuaFunction);
					this.m_GetArenaThisWeekTotalBattleNums_hotfix = (luaObj.RawGet("GetArenaThisWeekTotalBattleNums") as LuaFunction);
					this.m_IsArenaAutoBattle_hotfix = (luaObj.RawGet("IsArenaAutoBattle") as LuaFunction);
					this.m_GetArenaTicketCount_hotfix = (luaObj.RawGet("GetArenaTicketCount") as LuaFunction);
					this.m_GetArenaHonour_hotfix = (luaObj.RawGet("GetArenaHonour") as LuaFunction);
					this.m_CanGetArenaVictoryPointsRewardInt32_hotfix = (luaObj.RawGet("CanGetArenaVictoryPointsReward") as LuaFunction);
					this.m_GetArenaVictoryPointsRewardStatusInt32_hotfix = (luaObj.RawGet("GetArenaVictoryPointsRewardStatus") as LuaFunction);
					this.m_GetArenaThisWeekDefendBattleIds_hotfix = (luaObj.RawGet("GetArenaThisWeekDefendBattleIds") as LuaFunction);
					this.m_CanAttackArenaOpponent_hotfix = (luaObj.RawGet("CanAttackArenaOpponent") as LuaFunction);
					this.m_CanRevengeArenaOpponentUInt64_hotfix = (luaObj.RawGet("CanRevengeArenaOpponent") as LuaFunction);
					this.m_GetArenaOpponents_hotfix = (luaObj.RawGet("GetArenaOpponents") as LuaFunction);
					this.m_GetArenaOpponentNextFlushTime_hotfix = (luaObj.RawGet("GetArenaOpponentNextFlushTime") as LuaFunction);
					this.m_GetArenaOpponentDefensiveBattleInfo_hotfix = (luaObj.RawGet("GetArenaOpponentDefensiveBattleInfo") as LuaFunction);
					this.m_GetArenaPlayerDefensiveTeam_hotfix = (luaObj.RawGet("GetArenaPlayerDefensiveTeam") as LuaFunction);
					this.m_IsArenaInSettleTime_hotfix = (luaObj.RawGet("IsArenaInSettleTime") as LuaFunction);
					this.m_GetAllArenaBattleReports_hotfix = (luaObj.RawGet("GetAllArenaBattleReports") as LuaFunction);
					this.m_GetArenaPointChangeValueUInt64_hotfix = (luaObj.RawGet("GetArenaPointChangeValue") as LuaFunction);
					this.m_GetPlayerArenaRank_hotfix = (luaObj.RawGet("GetPlayerArenaRank") as LuaFunction);
					this.m_GetArenaTopRankPlayers_hotfix = (luaObj.RawGet("GetArenaTopRankPlayers") as LuaFunction);
					this.m_CanReconnectArenaBattle_hotfix = (luaObj.RawGet("CanReconnectArenaBattle") as LuaFunction);
					this.m_add_EventOnArenaPlayerInfoGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaPlayerInfoGetAck") as LuaFunction);
					this.m_remove_EventOnArenaPlayerInfoGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaPlayerInfoGetAck") as LuaFunction);
					this.m_add_EventOnArenaOpponentViewAckAction`3_hotfix = (luaObj.RawGet("add_EventOnArenaOpponentViewAck") as LuaFunction);
					this.m_remove_EventOnArenaOpponentViewAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnArenaOpponentViewAck") as LuaFunction);
					this.m_add_EventOnArenaOpponentAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaOpponentAttackAck") as LuaFunction);
					this.m_remove_EventOnArenaOpponentAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaOpponentAttackAck") as LuaFunction);
					this.m_add_EventOnArenaRevengeOpponentGetAckAction`4_hotfix = (luaObj.RawGet("add_EventOnArenaRevengeOpponentGetAck") as LuaFunction);
					this.m_remove_EventOnArenaRevengeOpponentGetAckAction`4_hotfix = (luaObj.RawGet("remove_EventOnArenaRevengeOpponentGetAck") as LuaFunction);
					this.m_add_EventOnArenaOpponentRevengeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaOpponentRevengeAck") as LuaFunction);
					this.m_remove_EventOnArenaOpponentRevengeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaOpponentRevengeAck") as LuaFunction);
					this.m_add_EventOnArenaOpponentAttackFightingAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaOpponentAttackFightingAck") as LuaFunction);
					this.m_remove_EventOnArenaOpponentAttackFightingAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaOpponentAttackFightingAck") as LuaFunction);
					this.m_add_EventOnArenaBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnArenaBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnArenaBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnArenaBattleFinishedAck") as LuaFunction);
					this.m_add_EventOnArenaPlayerSetDefensiveTeamAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaPlayerSetDefensiveTeamAck") as LuaFunction);
					this.m_remove_EventOnArenaPlayerSetDefensiveTeamAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaPlayerSetDefensiveTeamAck") as LuaFunction);
					this.m_add_EventOnArenaVictoryPointsRewardGainAckAction`2_hotfix = (luaObj.RawGet("add_EventOnArenaVictoryPointsRewardGainAck") as LuaFunction);
					this.m_remove_EventOnArenaVictoryPointsRewardGainAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnArenaVictoryPointsRewardGainAck") as LuaFunction);
					this.m_add_EventOnArenaBattleReportBasicDataGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaBattleReportBasicDataGetAck") as LuaFunction);
					this.m_remove_EventOnArenaBattleReportBasicDataGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaBattleReportBasicDataGetAck") as LuaFunction);
					this.m_add_EventOnArenaBattleReportPlayBackDataGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaBattleReportPlayBackDataGetAck") as LuaFunction);
					this.m_remove_EventOnArenaBattleReportPlayBackDataGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaBattleReportPlayBackDataGetAck") as LuaFunction);
					this.m_add_EventOnArenaTopRankPlayersGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaTopRankPlayersGetAck") as LuaFunction);
					this.m_remove_EventOnArenaTopRankPlayersGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaTopRankPlayersGetAck") as LuaFunction);
					this.m_add_EventOnArenaBattleReconnectAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaBattleReconnectAck") as LuaFunction);
					this.m_remove_EventOnArenaBattleReconnectAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaBattleReconnectAck") as LuaFunction);
					this.m_add_EventOnArenaBattleReportNtfAction_hotfix = (luaObj.RawGet("add_EventOnArenaBattleReportNtf") as LuaFunction);
					this.m_remove_EventOnArenaBattleReportNtfAction_hotfix = (luaObj.RawGet("remove_EventOnArenaBattleReportNtf") as LuaFunction);
					this.m_add_EventOnArenaFlushOpponentsNtfAction_hotfix = (luaObj.RawGet("add_EventOnArenaFlushOpponentsNtf") as LuaFunction);
					this.m_remove_EventOnArenaFlushOpponentsNtfAction_hotfix = (luaObj.RawGet("remove_EventOnArenaFlushOpponentsNtf") as LuaFunction);
					this.m_SendUseBagItemReqGoodsTypeInt32Int32Int32_hotfix = (luaObj.RawGet("SendUseBagItemReq") as LuaFunction);
					this.m_SendSellBagItemReqUInt64Int32_hotfix = (luaObj.RawGet("SendSellBagItemReq") as LuaFunction);
					this.m_SendLockAndUnLockEquipmentReqUInt64_hotfix = (luaObj.RawGet("SendLockAndUnLockEquipmentReq") as LuaFunction);
					this.m_SendEquipmentEnhanceReqUInt64List`1_hotfix = (luaObj.RawGet("SendEquipmentEnhanceReq") as LuaFunction);
					this.m_SendEquipmentStarLevelUpReqUInt64UInt64_hotfix = (luaObj.RawGet("SendEquipmentStarLevelUpReq") as LuaFunction);
					this.m_SendBagItemDecomposeReqList`1_hotfix = (luaObj.RawGet("SendBagItemDecomposeReq") as LuaFunction);
					this.m_SendEquipmentEnchantReqUInt64UInt64_hotfix = (luaObj.RawGet("SendEquipmentEnchantReq") as LuaFunction);
					this.m_SendEquipmentEnchantSaveReq_hotfix = (luaObj.RawGet("SendEquipmentEnchantSaveReq") as LuaFunction);
					this.m_OnMessageDSBagNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSBagExtraNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageUseBagItemAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageSellBagItemAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentLockAndUnLockAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentEnhanceAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentStarLevelUpAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBagItemDecomposeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentEnchantAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentEnchantSaveAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_CanEnchantEquipmentUInt64UInt64_hotfix = (luaObj.RawGet("CanEnchantEquipment") as LuaFunction);
					this.m_GetBagItems_hotfix = (luaObj.RawGet("GetBagItems") as LuaFunction);
					this.m_GetBagSize_hotfix = (luaObj.RawGet("GetBagSize") as LuaFunction);
					this.m_GetBagItemGoodsTypeInt32UInt64_hotfix = (luaObj.RawGet("GetBagItem") as LuaFunction);
					this.m_GetBagItemByTypeGoodsTypeInt32_hotfix = (luaObj.RawGet("GetBagItemByType") as LuaFunction);
					this.m_IsExistBagItemIgnoreInstanceDifferenceGoodsTypeInt32_hotfix = (luaObj.RawGet("IsExistBagItemIgnoreInstanceDifference") as LuaFunction);
					this.m_GetBagItemByInstanceIdUInt64_hotfix = (luaObj.RawGet("GetBagItemByInstanceId") as LuaFunction);
					this.m_GetBagItemCountGoodsTypeInt32UInt64_hotfix = (luaObj.RawGet("GetBagItemCount") as LuaFunction);
					this.m_GetBagItemCountByTypeGoodsTypeInt32_hotfix = (luaObj.RawGet("GetBagItemCountByType") as LuaFunction);
					this.m_GetBagItemCountByTypeAndIDGoodsTypeInt32_hotfix = (luaObj.RawGet("GetBagItemCountByTypeAndID") as LuaFunction);
					this.m_GetInstanceBagItemInstanceIdsByContentIdInt32_hotfix = (luaObj.RawGet("GetInstanceBagItemInstanceIdsByContentId") as LuaFunction);
					this.m_GetBagItemCountByInstanceIdUInt64_hotfix = (luaObj.RawGet("GetBagItemCountByInstanceId") as LuaFunction);
					this.m_CanUseEnergyMedicineInt32Int32_hotfix = (luaObj.RawGet("CanUseEnergyMedicine") as LuaFunction);
					this.m_CalculateEnhanceEquipmentExpList`1_hotfix = (luaObj.RawGet("CalculateEnhanceEquipmentExp") as LuaFunction);
					this.m_CalculateEnhanceEquipmentGoldInt32_hotfix = (luaObj.RawGet("CalculateEnhanceEquipmentGold") as LuaFunction);
					this.m_CaculateEquipmentNextLevelExpEquipmentBagItem_hotfix = (luaObj.RawGet("CaculateEquipmentNextLevelExp") as LuaFunction);
					this.m_CaculateEquipmentNextLevelExpInt32Int32_hotfix = (luaObj.RawGet("CaculateEquipmentNextLevelExp") as LuaFunction);
					this.m_CanEnhanceEquipmentUInt64List`1_hotfix = (luaObj.RawGet("CanEnhanceEquipment") as LuaFunction);
					this.m_CanLevelUpEquipmentStarUInt64UInt64_hotfix = (luaObj.RawGet("CanLevelUpEquipmentStar") as LuaFunction);
					this.m_IsLevelTicketsMaxInMissionList`1_hotfix = (luaObj.RawGet("IsLevelTicketsMaxInMission") as LuaFunction);
					this.m_CalcEquipmentDecomposeReturnGoldEquipmentBagItem_hotfix = (luaObj.RawGet("CalcEquipmentDecomposeReturnGold") as LuaFunction);
					this.m_GetEquipmentResonanceNumsUInt64_hotfix = (luaObj.RawGet("GetEquipmentResonanceNums") as LuaFunction);
					this.m_GetEquipmentResonanceNumsByHeroIdUInt64Int32_hotfix = (luaObj.RawGet("GetEquipmentResonanceNumsByHeroId") as LuaFunction);
					this.m_RemoveBagItemByTypeGoodsTypeInt32Int32GameFunctionTypeString_hotfix = (luaObj.RawGet("RemoveBagItemByType") as LuaFunction);
					this.m_IsShowEnchantCancelConfirmPanel_hotfix = (luaObj.RawGet("IsShowEnchantCancelConfirmPanel") as LuaFunction);
					this.m_SetEnchantCancelConfirmFlagBoolean_hotfix = (luaObj.RawGet("SetEnchantCancelConfirmFlag") as LuaFunction);
					this.m_IsShowEnchantSaveConfirmPanel_hotfix = (luaObj.RawGet("IsShowEnchantSaveConfirmPanel") as LuaFunction);
					this.m_SetEnchantSaveConfirmFlagBoolean_hotfix = (luaObj.RawGet("SetEnchantSaveConfirmFlag") as LuaFunction);
					this.m_HasOwnGoodsTypeInt32_hotfix = (luaObj.RawGet("HasOwn") as LuaFunction);
					this.m_NeedUpdatePlayerResourceGoodsTypeInt32_hotfix = (luaObj.RawGet("NeedUpdatePlayerResource") as LuaFunction);
					this.m_add_EventOnBagItemChangeNtfAction_hotfix = (luaObj.RawGet("add_EventOnBagItemChangeNtf") as LuaFunction);
					this.m_remove_EventOnBagItemChangeNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBagItemChangeNtf") as LuaFunction);
					this.m_add_EventOnUseBagItemAckAction`2_hotfix = (luaObj.RawGet("add_EventOnUseBagItemAck") as LuaFunction);
					this.m_remove_EventOnUseBagItemAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnUseBagItemAck") as LuaFunction);
					this.m_add_EventOnSellBagItemAckAction`1_hotfix = (luaObj.RawGet("add_EventOnSellBagItemAck") as LuaFunction);
					this.m_remove_EventOnSellBagItemAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnSellBagItemAck") as LuaFunction);
					this.m_add_EventOnEquipmentLockAndUnLockAckAction`1_hotfix = (luaObj.RawGet("add_EventOnEquipmentLockAndUnLockAck") as LuaFunction);
					this.m_remove_EventOnEquipmentLockAndUnLockAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnEquipmentLockAndUnLockAck") as LuaFunction);
					this.m_add_EventOnEquipmentEnhanceAckAction`1_hotfix = (luaObj.RawGet("add_EventOnEquipmentEnhanceAck") as LuaFunction);
					this.m_remove_EventOnEquipmentEnhanceAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnEquipmentEnhanceAck") as LuaFunction);
					this.m_add_EventOnEquipmentStarLevelUpAckAction`1_hotfix = (luaObj.RawGet("add_EventOnEquipmentStarLevelUpAck") as LuaFunction);
					this.m_remove_EventOnEquipmentStarLevelUpAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnEquipmentStarLevelUpAck") as LuaFunction);
					this.m_add_EventOnBagItemDecomposeAckAction`2_hotfix = (luaObj.RawGet("add_EventOnBagItemDecomposeAck") as LuaFunction);
					this.m_remove_EventOnBagItemDecomposeAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnBagItemDecomposeAck") as LuaFunction);
					this.m_add_EventOnEquipmentEnchantAckAction`3_hotfix = (luaObj.RawGet("add_EventOnEquipmentEnchantAck") as LuaFunction);
					this.m_remove_EventOnEquipmentEnchantAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnEquipmentEnchantAck") as LuaFunction);
					this.m_add_EventOnEquipmentEnchantSaveAckAction`2_hotfix = (luaObj.RawGet("add_EventOnEquipmentEnchantSaveAck") as LuaFunction);
					this.m_remove_EventOnEquipmentEnchantSaveAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnEquipmentEnchantSaveAck") as LuaFunction);
					this.m_SendBattleCancelReq_hotfix = (luaObj.RawGet("SendBattleCancelReq") as LuaFunction);
					this.m_SendBattleTeamSetReqBattleTypeInt32List`1_hotfix = (luaObj.RawGet("SendBattleTeamSetReq") as LuaFunction);
					this.m_SendBattleArmyRandomSeedGetReqInt32_hotfix = (luaObj.RawGet("SendBattleArmyRandomSeedGetReq") as LuaFunction);
					this.m_OnMessageDSBattleNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleCancelAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleTeamSetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleArmyRandomSeedGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsGameFunctionOpenByMonthCardGameFunctionType_hotfix = (luaObj.RawGet("IsGameFunctionOpenByMonthCard") as LuaFunction);
					this.m_GetDailyBonusMaxNumsGameFunctionType_hotfix = (luaObj.RawGet("GetDailyBonusMaxNums") as LuaFunction);
					this.m_SetBattleBaseBattleBase_hotfix = (luaObj.RawGet("SetBattleBase") as LuaFunction);
					this.m_SetCurrentBattleConfigDataBattleInfoBattleType_hotfix = (luaObj.RawGet("SetCurrentBattle") as LuaFunction);
					this.m_SetCurrentArenaBattleConfigDataArenaBattleInfoConfigDataArenaDefendRuleInfoInt32List`1List`1Boolean_hotfix = (luaObj.RawGet("SetCurrentArenaBattle") as LuaFunction);
					this.m_SetCurrentArenaBattleReportArenaBattleReport_hotfix = (luaObj.RawGet("SetCurrentArenaBattleReport") as LuaFunction);
					this.m_SetCurrentPVPBattleConfigDataPVPBattleInfo_hotfix = (luaObj.RawGet("SetCurrentPVPBattle") as LuaFunction);
					this.m_SetCurrentRealTimePVPBattleConfigDataRealTimePVPBattleInfo_hotfix = (luaObj.RawGet("SetCurrentRealTimePVPBattle") as LuaFunction);
					this.m_SetCurrentRealTimePVPBattleReportRealTimePVPBattleReport_hotfix = (luaObj.RawGet("SetCurrentRealTimePVPBattleReport") as LuaFunction);
					this.m_IsCurrentBattleFirstBattle_hotfix = (luaObj.RawGet("IsCurrentBattleFirstBattle") as LuaFunction);
					this.m_GetBattleTeamBattleType_hotfix = (luaObj.RawGet("GetBattleTeam") as LuaFunction);
					this.m_CreateBattleHeroFromMyHeroHero_hotfix = (luaObj.RawGet("CreateBattleHeroFromMyHero") as LuaFunction);
					this.m_CreateDefaultBattleHeroInt32_hotfix = (luaObj.RawGet("CreateDefaultBattleHero") as LuaFunction);
					this.m_SaveBeforeRewardStatus_hotfix = (luaObj.RawGet("SaveBeforeRewardStatus") as LuaFunction);
					this.m_SaveBattleHeroIdsList`1_hotfix = (luaObj.RawGet("SaveBattleHeroIds") as LuaFunction);
					this.m_GetBeforeRewardPlayerStatus_hotfix = (luaObj.RawGet("GetBeforeRewardPlayerStatus") as LuaFunction);
					this.m_GetBeforeRewardHeroStatusInt32_hotfix = (luaObj.RawGet("GetBeforeRewardHeroStatus") as LuaFunction);
					this.m_GetProcessingBattle_hotfix = (luaObj.RawGet("GetProcessingBattle") as LuaFunction);
					this.m_GetArenaBattleStatus_hotfix = (luaObj.RawGet("GetArenaBattleStatus") as LuaFunction);
					this.m_GetArenaBattleId_hotfix = (luaObj.RawGet("GetArenaBattleId") as LuaFunction);
					this.m_SetNeedRebuildBattleBoolean_hotfix = (luaObj.RawGet("SetNeedRebuildBattle") as LuaFunction);
					this.m_IsNeedRebuildBattle_hotfix = (luaObj.RawGet("IsNeedRebuildBattle") as LuaFunction);
					this.m_GetGainBattleTreasrueIds_hotfix = (luaObj.RawGet("GetGainBattleTreasrueIds") as LuaFunction);
					this.m_GetGainBattleTreasureCountConfigDataBattleInfo_hotfix = (luaObj.RawGet("GetGainBattleTreasureCount") as LuaFunction);
					this.m_ComputeBattlePowerHero_hotfix = (luaObj.RawGet("ComputeBattlePower") as LuaFunction);
					this.m_ComputeBattlePowerBattleHeroList`1_hotfix = (luaObj.RawGet("ComputeBattlePower") as LuaFunction);
					this.m_SetBattleRandomSeedInt32_hotfix = (luaObj.RawGet("SetBattleRandomSeed") as LuaFunction);
					this.m_GetBattleRandomSeed_hotfix = (luaObj.RawGet("GetBattleRandomSeed") as LuaFunction);
					this.m_SetArenaBattleRandomSeedInt32_hotfix = (luaObj.RawGet("SetArenaBattleRandomSeed") as LuaFunction);
					this.m_GetArenaBattleRandomSeed_hotfix = (luaObj.RawGet("GetArenaBattleRandomSeed") as LuaFunction);
					this.m_SetBattleArmyRandomSeedInt32_hotfix = (luaObj.RawGet("SetBattleArmyRandomSeed") as LuaFunction);
					this.m_GetBattleArmyRandomSeed_hotfix = (luaObj.RawGet("GetBattleArmyRandomSeed") as LuaFunction);
					this.m_BattleFinishedErrorInt32_hotfix = (luaObj.RawGet("BattleFinishedError") as LuaFunction);
					this.m_GetDeadEnemyHeroIds_hotfix = (luaObj.RawGet("GetDeadEnemyHeroIds") as LuaFunction);
					this.m_UpdateGeneralInviteInfosList`1_hotfix = (luaObj.RawGet("UpdateGeneralInviteInfos") as LuaFunction);
					this.m_SetRemainBattleRegretCountInt32_hotfix = (luaObj.RawGet("SetRemainBattleRegretCount") as LuaFunction);
					this.m_GetRemainBattleRegretCount_hotfix = (luaObj.RawGet("GetRemainBattleRegretCount") as LuaFunction);
					this.m_UseBattleRegret_hotfix = (luaObj.RawGet("UseBattleRegret") as LuaFunction);
					this.m_GetCurrentBattleFailEnergyCost_hotfix = (luaObj.RawGet("GetCurrentBattleFailEnergyCost") as LuaFunction);
					this.m_add_EventOnBattleCancelAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleCancelAck") as LuaFunction);
					this.m_remove_EventOnBattleCancelAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleCancelAck") as LuaFunction);
					this.m_add_EventOnBattleTeamSetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleTeamSetAck") as LuaFunction);
					this.m_remove_EventOnBattleTeamSetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleTeamSetAck") as LuaFunction);
					this.m_add_EventOnBattleArmyRandomSeedGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleArmyRandomSeedGetAck") as LuaFunction);
					this.m_remove_EventOnBattleArmyRandomSeedGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleArmyRandomSeedGetAck") as LuaFunction);
					this.m_SendTeamBattleRoomCreateReq_hotfix = (luaObj.RawGet("SendTeamBattleRoomCreateReq") as LuaFunction);
					this.m_SendBattleRoomPlayerStatusChangeReqPlayerBattleStatus_hotfix = (luaObj.RawGet("SendBattleRoomPlayerStatusChangeReq") as LuaFunction);
					this.m_OnMessageBattleRoomQuitNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_SendBattleRoomHeroSetupReqInt32Int32_hotfix = (luaObj.RawGet("SendBattleRoomHeroSetupReq") as LuaFunction);
					this.m_SendBattleRoomHeroSwapReqInt32Int32_hotfix = (luaObj.RawGet("SendBattleRoomHeroSwapReq") as LuaFunction);
					this.m_SendBattleRoomHeroPutdownReqInt32_hotfix = (luaObj.RawGet("SendBattleRoomHeroPutdownReq") as LuaFunction);
					this.m_SendBattleRoomHeroProtectReqInt32_hotfix = (luaObj.RawGet("SendBattleRoomHeroProtectReq") as LuaFunction);
					this.m_SendBattleRoomHeroBanReqInt32_hotfix = (luaObj.RawGet("SendBattleRoomHeroBanReq") as LuaFunction);
					this.m_SendBattleRoomEndCurrentBPTurnReq_hotfix = (luaObj.RawGet("SendBattleRoomEndCurrentBPTurnReq") as LuaFunction);
					this.m_SendBattleRoomBattleCommandExecuteReqList`1_hotfix = (luaObj.RawGet("SendBattleRoomBattleCommandExecuteReq") as LuaFunction);
					this.m_SendBattleRoomQuitReq_hotfix = (luaObj.RawGet("SendBattleRoomQuitReq") as LuaFunction);
					this.m_SendBattleRoomPlayerActionBeginReq_hotfix = (luaObj.RawGet("SendBattleRoomPlayerActionBeginReq") as LuaFunction);
					this.m_SendBattleRoomGetReq_hotfix = (luaObj.RawGet("SendBattleRoomGetReq") as LuaFunction);
					this.m_SendBattleRoomBattleLogReqString_hotfix = (luaObj.RawGet("SendBattleRoomBattleLogReq") as LuaFunction);
					this.m_OnMessageBattleRoomCreateAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomPlayerStatusChangeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomHeroSetupAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomHeroSwapAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomHeroPutdownAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomHeroProtectAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomHeroBanAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomEndCurrentBPTurnAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomBattleCommandExecuteAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomQuitAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomPlayerActionBeginAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomTeamBattleJoinNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomPVPBattleJoinNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomRealTimePVPBattleJoinNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomGuildMassiveCombatBattleJoinNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomPlayerStatusChangedNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomHeroSetupNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomTeamBattleStartNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomPVPBattleStartNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomRealTimePVPBattleStartNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomBattleCommandExecuteNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomTeamBattleFinishNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomPVPBattleFinishNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomRealTimePVPBattleFinishNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleGuildMassiveCombatBattleFinishNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomPlayerBattleInfoInitNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattleRoomDataChangeNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsInBattleRoom_hotfix = (luaObj.RawGet("IsInBattleRoom") as LuaFunction);
					this.m_GetBattleRoom_hotfix = (luaObj.RawGet("GetBattleRoom") as LuaFunction);
					this.m_SetQuitBattleRoom_hotfix = (luaObj.RawGet("SetQuitBattleRoom") as LuaFunction);
					this.m_add_EventOnBattleRoomCreateAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomCreateAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomCreateAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomCreateAck") as LuaFunction);
					this.m_add_EventOnBattleRoomPlayerStatusChangeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPlayerStatusChangeAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomPlayerStatusChangeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPlayerStatusChangeAck") as LuaFunction);
					this.m_add_EventOnBattleRoomHeroSetupAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomHeroSetupAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomHeroSetupAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomHeroSetupAck") as LuaFunction);
					this.m_add_EventOnBattleRoomHeroSwapAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomHeroSwapAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomHeroSwapAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomHeroSwapAck") as LuaFunction);
					this.m_add_EventOnBattleRoomHeroPutdownAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomHeroPutdownAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomHeroPutdownAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomHeroPutdownAck") as LuaFunction);
					this.m_add_EventOnBattleRoomHeroProtectAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomHeroProtectAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomHeroProtectAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomHeroProtectAck") as LuaFunction);
					this.m_add_EventOnBattleRoomHeroBanAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomHeroBanAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomHeroBanAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomHeroBanAck") as LuaFunction);
					this.m_add_EventOnBattleRoomBattleCommandExecuteAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomBattleCommandExecuteAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomBattleCommandExecuteAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomBattleCommandExecuteAck") as LuaFunction);
					this.m_add_EventOnBattleRoomQuitAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomQuitAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomQuitAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomQuitAck") as LuaFunction);
					this.m_add_EventOnBattleRoomPlayerActionBeginAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPlayerActionBeginAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomPlayerActionBeginAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPlayerActionBeginAck") as LuaFunction);
					this.m_add_EventOnBattleRoomGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomGetAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomGetAck") as LuaFunction);
					this.m_add_EventOnBattleRoomEndCurrentBPTurnAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomEndCurrentBPTurnAck") as LuaFunction);
					this.m_remove_EventOnBattleRoomEndCurrentBPTurnAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomEndCurrentBPTurnAck") as LuaFunction);
					this.m_add_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomTeamBattleJoinNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomTeamBattleJoinNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPVPBattleJoinNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPVPBattleJoinNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomRealTimePVPBattleJoinNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomRealTimePVPBattleJoinNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomPlayerStatusChangedNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPlayerStatusChangedNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomPlayerStatusChangedNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPlayerStatusChangedNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomPlayerQuitNtfAction`2_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPlayerQuitNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomPlayerQuitNtfAction`2_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPlayerQuitNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomHeroSetupNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomHeroSetupNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomHeroSetupNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomHeroSetupNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomTeamBattleStartNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomTeamBattleStartNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomTeamBattleStartNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomTeamBattleStartNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomPVPBattleStartNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPVPBattleStartNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomPVPBattleStartNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPVPBattleStartNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomRealTimePVPBattleStartNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomRealTimePVPBattleStartNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomBattleCommandExecuteNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnBattleRoomBattleCommandExecuteNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomBattleCommandExecuteNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomBattleCommandExecuteNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomTeamBattleFinishNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomTeamBattleFinishNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPVPBattleFinishNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPVPBattleFinishNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomRealTimePVPBattleFinishNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomRealTimePVPBattleFinishNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomPlayerBattleInfoInitNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomPlayerBattleInfoInitNtf") as LuaFunction);
					this.m_add_EventOnBattleRoomDataChangeNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattleRoomDataChangeNtf") as LuaFunction);
					this.m_remove_EventOnBattleRoomDataChangeNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattleRoomDataChangeNtf") as LuaFunction);
					this.m_SendChatTextMessageChatChannelString_hotfix = (luaObj.RawGet("SendChatTextMessage") as LuaFunction);
					this.m_SendChatExpressionMessageChatChannelString_hotfix = (luaObj.RawGet("SendChatExpressionMessage") as LuaFunction);
					this.m_SendChatVoiceMessageChatChannelBytebeInt32Int32Int32StringString_hotfix = (luaObj.RawGet("SendChatVoiceMessage") as LuaFunction);
					this.m_SendGetVoiceContentMessageChatChannelUInt64_hotfix = (luaObj.RawGet("SendGetVoiceContentMessage") as LuaFunction);
					this.m_SendWorldEnterNewRoomMessageInt32_hotfix = (luaObj.RawGet("SendWorldEnterNewRoomMessage") as LuaFunction);
					this.m_SendGetChatContactUserSummaryInfoMessageList`1_hotfix = (luaObj.RawGet("SendGetChatContactUserSummaryInfoMessage") as LuaFunction);
					this.m_OnMessageChatContactUserSummaryInfoAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSChatNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatMessageNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatMessageSendAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatBannedNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatVoiceContentAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatWorldChannelRoomEnterAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGuildHistoryMessageNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetChatGroupNameString_hotfix = (luaObj.RawGet("GetChatGroupName") as LuaFunction);
					this.m_GetPrivateChatPlayeNameString_hotfix = (luaObj.RawGet("GetPrivateChatPlayeName") as LuaFunction);
					this.m_GetChatComponent_hotfix = (luaObj.RawGet("GetChatComponent") as LuaFunction);
					this.m_CanSendChatMessageInt32_hotfix = (luaObj.RawGet("CanSendChatMessage") as LuaFunction);
					this.m_GetChatMessageListChatChannel_hotfix = (luaObj.RawGet("GetChatMessageList") as LuaFunction);
					this.m_GetUnReadChatMsgCount4PointPlayerOrGroupChatChannelString_hotfix = (luaObj.RawGet("GetUnReadChatMsgCount4PointPlayerOrGroup") as LuaFunction);
					this.m_GetGroupChatId_hotfix = (luaObj.RawGet("GetGroupChatId") as LuaFunction);
					this.m_SetGroupChatTargetString_hotfix = (luaObj.RawGet("SetGroupChatTarget") as LuaFunction);
					this.m_ClearGroupChatTarget_hotfix = (luaObj.RawGet("ClearGroupChatTarget") as LuaFunction);
					this.m_SetPrivateChatTargetString_hotfix = (luaObj.RawGet("SetPrivateChatTarget") as LuaFunction);
					this.m_CleanPrivateChatTarget_hotfix = (luaObj.RawGet("CleanPrivateChatTarget") as LuaFunction);
					this.m_GetPrivateChatPlayerId_hotfix = (luaObj.RawGet("GetPrivateChatPlayerId") as LuaFunction);
					this.m_GetRecentPrivateChatIdList_hotfix = (luaObj.RawGet("GetRecentPrivateChatIdList") as LuaFunction);
					this.m_GetNewChatMsgCount_hotfix = (luaObj.RawGet("GetNewChatMsgCount") as LuaFunction);
					this.m_GetGroupUnreadChatMsgCount_hotfix = (luaObj.RawGet("GetGroupUnreadChatMsgCount") as LuaFunction);
					this.m_GetAssignGroupUnreadChatMsgCountString_hotfix = (luaObj.RawGet("GetAssignGroupUnreadChatMsgCount") as LuaFunction);
					this.m_GetAssignPrivateUnreadChatMsgCountString_hotfix = (luaObj.RawGet("GetAssignPrivateUnreadChatMsgCount") as LuaFunction);
					this.m_GetPrivateUnreadChatMsgCount_hotfix = (luaObj.RawGet("GetPrivateUnreadChatMsgCount") as LuaFunction);
					this.m_GetGuildUnreadChatMsgCount_hotfix = (luaObj.RawGet("GetGuildUnreadChatMsgCount") as LuaFunction);
					this.m_GetRoomIndex_hotfix = (luaObj.RawGet("GetRoomIndex") as LuaFunction);
					this.m_ReadChatChatChannel_hotfix = (luaObj.RawGet("ReadChat") as LuaFunction);
					this.m_ReadChatBeforeDateChatChannelDateTime_hotfix = (luaObj.RawGet("ReadChatBeforeDate") as LuaFunction);
					this.m_RefreshGuildChatLastReadTime_hotfix = (luaObj.RawGet("RefreshGuildChatLastReadTime") as LuaFunction);
					this.m_GetGuildChatLastReadTime_hotfix = (luaObj.RawGet("GetGuildChatLastReadTime") as LuaFunction);
					this.m_GetRecentChatTargetListChatChannel_hotfix = (luaObj.RawGet("GetRecentChatTargetList") as LuaFunction);
					this.m_ClearGuildChatContent_hotfix = (luaObj.RawGet("ClearGuildChatContent") as LuaFunction);
					this.m_GetWaitingNoticeStringListFirstNotice_hotfix = (luaObj.RawGet("GetWaitingNoticeStringListFirstNotice") as LuaFunction);
					this.m_GetGetWaitingNoticeStringListCount_hotfix = (luaObj.RawGet("GetGetWaitingNoticeStringListCount") as LuaFunction);
					this.m_AddNoticeToWaitingNoticeStringListNoticeText_hotfix = (luaObj.RawGet("AddNoticeToWaitingNoticeStringList") as LuaFunction);
					this.m_SetIsShowingNoticeFlagBoolean_hotfix = (luaObj.RawGet("SetIsShowingNoticeFlag") as LuaFunction);
					this.m_GetIsShowingNoticeFlag_hotfix = (luaObj.RawGet("GetIsShowingNoticeFlag") as LuaFunction);
					this.m_GetChatMsgWithBlacklistChatChannel_hotfix = (luaObj.RawGet("GetChatMsgWithBlacklist") as LuaFunction);
					this.m_add_EventOnChatMessageNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnChatMessageNtf") as LuaFunction);
					this.m_remove_EventOnChatMessageNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnChatMessageNtf") as LuaFunction);
					this.m_add_EventOnChatContactUserSummaryInfoAckAction_hotfix = (luaObj.RawGet("add_EventOnChatContactUserSummaryInfoAck") as LuaFunction);
					this.m_remove_EventOnChatContactUserSummaryInfoAckAction_hotfix = (luaObj.RawGet("remove_EventOnChatContactUserSummaryInfoAck") as LuaFunction);
					this.m_add_EventOnChatMessageAckAction`1_hotfix = (luaObj.RawGet("add_EventOnChatMessageAck") as LuaFunction);
					this.m_remove_EventOnChatMessageAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnChatMessageAck") as LuaFunction);
					this.m_add_EventOnChatGetVoiceContentAckAction`1_hotfix = (luaObj.RawGet("add_EventOnChatGetVoiceContentAck") as LuaFunction);
					this.m_remove_EventOnChatGetVoiceContentAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnChatGetVoiceContentAck") as LuaFunction);
					this.m_add_EventOnChatEnterRoomAckAction`2_hotfix = (luaObj.RawGet("add_EventOnChatEnterRoomAck") as LuaFunction);
					this.m_remove_EventOnChatEnterRoomAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnChatEnterRoomAck") as LuaFunction);
					this.m_SendChangeOwnerReqStringString_hotfix = (luaObj.RawGet("SendChangeOwnerReq") as LuaFunction);
					this.m_SendChangeNameReqStringString_hotfix = (luaObj.RawGet("SendChangeNameReq") as LuaFunction);
					this.m_SendCreateChatGroupReqStringList`1_hotfix = (luaObj.RawGet("SendCreateChatGroupReq") as LuaFunction);
					this.m_SendGetChatGroupMemberReqString_hotfix = (luaObj.RawGet("SendGetChatGroupMemberReq") as LuaFunction);
					this.m_SendGetAllChatGroupReq_hotfix = (luaObj.RawGet("SendGetAllChatGroupReq") as LuaFunction);
					this.m_SendInviteToChatGroupReqStringList`1_hotfix = (luaObj.RawGet("SendInviteToChatGroupReq") as LuaFunction);
					this.m_SendLeaveChatGroupReqString_hotfix = (luaObj.RawGet("SendLeaveChatGroupReq") as LuaFunction);
					this.m_SendKickUserReqStringString_hotfix = (luaObj.RawGet("SendKickUserReq") as LuaFunction);
					this.m_SendGetUserSummaryReqList`1Action`1_hotfix = (luaObj.RawGet("SendGetUserSummaryReq") as LuaFunction);
					this.m_OnMessageChatGroupChangeOwnerAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupChangeNameAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupCreateChatGroupAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupGetChatGroupAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupGetChatGroupMemberAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupInviteToChatGroupAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupLeaveChatGroupAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupKickUserAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendGetUserSummaryAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageChatGroupUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetGuildMemberSummaryList`1_hotfix = (luaObj.RawGet("GetGuildMemberSummary") as LuaFunction);
					this.m_OnGetGuildMemberSummaryFriendGetUserSummaryAck_hotfix = (luaObj.RawGet("OnGetGuildMemberSummary") as LuaFunction);
					this.m_add_EventOnCreateChatGroupAckAction`3_hotfix = (luaObj.RawGet("add_EventOnCreateChatGroupAck") as LuaFunction);
					this.m_remove_EventOnCreateChatGroupAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnCreateChatGroupAck") as LuaFunction);
					this.m_add_EventOnGetAllChatGroupAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGetAllChatGroupAck") as LuaFunction);
					this.m_remove_EventOnGetAllChatGroupAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGetAllChatGroupAck") as LuaFunction);
					this.m_add_EventOnGetChatGroupMemberAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGetChatGroupMemberAck") as LuaFunction);
					this.m_remove_EventOnGetChatGroupMemberAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGetChatGroupMemberAck") as LuaFunction);
					this.m_add_EventOnChatGroupChangeOwnerAckAction`1_hotfix = (luaObj.RawGet("add_EventOnChatGroupChangeOwnerAck") as LuaFunction);
					this.m_remove_EventOnChatGroupChangeOwnerAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnChatGroupChangeOwnerAck") as LuaFunction);
					this.m_add_EventOnChatGroupChangeNameAckAction`1_hotfix = (luaObj.RawGet("add_EventOnChatGroupChangeNameAck") as LuaFunction);
					this.m_remove_EventOnChatGroupChangeNameAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnChatGroupChangeNameAck") as LuaFunction);
					this.m_add_EventOnInviteToChatGroupAckAction`3_hotfix = (luaObj.RawGet("add_EventOnInviteToChatGroupAck") as LuaFunction);
					this.m_remove_EventOnInviteToChatGroupAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnInviteToChatGroupAck") as LuaFunction);
					this.m_add_EventOnLeaveChatGroupAckAction`1_hotfix = (luaObj.RawGet("add_EventOnLeaveChatGroupAck") as LuaFunction);
					this.m_remove_EventOnLeaveChatGroupAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnLeaveChatGroupAck") as LuaFunction);
					this.m_add_EventOnKickUserFromGroupAckAction`1_hotfix = (luaObj.RawGet("add_EventOnKickUserFromGroupAck") as LuaFunction);
					this.m_remove_EventOnKickUserFromGroupAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnKickUserFromGroupAck") as LuaFunction);
					this.m_add_EventOnGetUserSummaryAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGetUserSummaryAck") as LuaFunction);
					this.m_remove_EventOnGetUserSummaryAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGetUserSummaryAck") as LuaFunction);
					this.m_add_EventOnChatGroupUpdateNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnChatGroupUpdateNtf") as LuaFunction);
					this.m_remove_EventOnChatGroupUpdateNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnChatGroupUpdateNtf") as LuaFunction);
					this.m_SendClimbTowerGetReq_hotfix = (luaObj.RawGet("SendClimbTowerGetReq") as LuaFunction);
					this.m_SendClimbTowerLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendClimbTowerLevelAttackReq") as LuaFunction);
					this.m_SendClimbTowerLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendClimbTowerLevelBattleFinishedReq") as LuaFunction);
					this.m_SendClimbTowerRaidReq_hotfix = (luaObj.RawGet("SendClimbTowerRaidReq") as LuaFunction);
					this.m_OnMessageDSClimbTowerNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageClimbTowerGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageClimbTowerLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageClimbTowerLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageClimbTowerRaidAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_CanAttackClimbTowerFloorInt32_hotfix = (luaObj.RawGet("CanAttackClimbTowerFloor") as LuaFunction);
					this.m_GetClimbTowerNextFlushTime_hotfix = (luaObj.RawGet("GetClimbTowerNextFlushTime") as LuaFunction);
					this.m_GetClimbTowerMaxFloorId_hotfix = (luaObj.RawGet("GetClimbTowerMaxFloorId") as LuaFunction);
					this.m_GetClimbTowerFinishedFloorId_hotfix = (luaObj.RawGet("GetClimbTowerFinishedFloorId") as LuaFunction);
					this.m_GetClimbTowerRaidMaxFloorId_hotfix = (luaObj.RawGet("GetClimbTowerRaidMaxFloorId") as LuaFunction);
					this.m_GetClimbTowerHistoryMaxFloorId_hotfix = (luaObj.RawGet("GetClimbTowerHistoryMaxFloorId") as LuaFunction);
					this.m_ClimbTowerTryRaidInt32_Int32__hotfix = (luaObj.RawGet("ClimbTowerTryRaid") as LuaFunction);
					this.m_GetClimbTowerFloorInt32_hotfix = (luaObj.RawGet("GetClimbTowerFloor") as LuaFunction);
					this.m_add_EventOnClimbTowerGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnClimbTowerGetAck") as LuaFunction);
					this.m_remove_EventOnClimbTowerGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnClimbTowerGetAck") as LuaFunction);
					this.m_add_EventOnClimbTowerLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnClimbTowerLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnClimbTowerLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnClimbTowerLevelAttackAck") as LuaFunction);
					this.m_add_EventOnClimbTowerLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnClimbTowerLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnClimbTowerLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnClimbTowerLevelBattleFinishedAck") as LuaFunction);
					this.m_add_EventOnClimbTowerRaidAckAction`2_hotfix = (luaObj.RawGet("add_EventOnClimbTowerRaidAck") as LuaFunction);
					this.m_remove_EventOnClimbTowerRaidAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnClimbTowerRaidAck") as LuaFunction);
					this.m_SendGetHeroCommentReqInt32_hotfix = (luaObj.RawGet("SendGetHeroCommentReq") as LuaFunction);
					this.m_SendCommentHeroReqInt32String_hotfix = (luaObj.RawGet("SendCommentHeroReq") as LuaFunction);
					this.m_SendPraiseHeroCommentEntryReqInt32UInt64_hotfix = (luaObj.RawGet("SendPraiseHeroCommentEntryReq") as LuaFunction);
					this.m_SendViewCommenterHeroReqInt32String_hotfix = (luaObj.RawGet("SendViewCommenterHeroReq") as LuaFunction);
					this.m_OnMessageHeroCommentGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroCommentAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroCommentEntryPraiseAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageCommenterHeroViewAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_add_EventOnHeroCommentGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroCommentGetAck") as LuaFunction);
					this.m_remove_EventOnHeroCommentGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroCommentGetAck") as LuaFunction);
					this.m_add_EventOnHeroCommentSendAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroCommentSendAck") as LuaFunction);
					this.m_remove_EventOnHeroCommentSendAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroCommentSendAck") as LuaFunction);
					this.m_add_EventOnHeroCommentPraisedAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroCommentPraisedAck") as LuaFunction);
					this.m_remove_EventOnHeroCommentPraisedAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroCommentPraisedAck") as LuaFunction);
					this.m_add_EventOnCommenterHeroViewAckAction`2_hotfix = (luaObj.RawGet("add_EventOnCommenterHeroViewAck") as LuaFunction);
					this.m_remove_EventOnCommenterHeroViewAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnCommenterHeroViewAck") as LuaFunction);
					this.m_GetHeroCommentsInt32_hotfix = (luaObj.RawGet("GetHeroComments") as LuaFunction);
					this.m_CanPraiseHeroCommentEntryInt32UInt64_hotfix = (luaObj.RawGet("CanPraiseHeroCommentEntry") as LuaFunction);
					this.m_OnMessageDSCooperateBattleNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsCooperateBattleOpenedInt32_hotfix = (luaObj.RawGet("IsCooperateBattleOpened") as LuaFunction);
					this.m_IsCooperateBattleDisplayableInt32_hotfix = (luaObj.RawGet("IsCooperateBattleDisplayable") as LuaFunction);
					this.m_GetCooperateBattleDailyChallengeNumsInt32_hotfix = (luaObj.RawGet("GetCooperateBattleDailyChallengeNums") as LuaFunction);
					this.m_GetFirstOpenedCooperateBattle_hotfix = (luaObj.RawGet("GetFirstOpenedCooperateBattle") as LuaFunction);
					this.m_IsCooperateBattleLevelOpenedInt32_hotfix = (luaObj.RawGet("IsCooperateBattleLevelOpened") as LuaFunction);
					this.m_CanAttackCooperateBattleLevelInt32_hotfix = (luaObj.RawGet("CanAttackCooperateBattleLevel") as LuaFunction);
					this.m_SendLevelDanmakuGetReqInt32Int32_hotfix = (luaObj.RawGet("SendLevelDanmakuGetReq") as LuaFunction);
					this.m_SendLevelDanmakuPostReqInt32Int32List`1_hotfix = (luaObj.RawGet("SendLevelDanmakuPostReq") as LuaFunction);
					this.m_OnMessageLevelDanmakuGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageLevelDanmakuPostAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetLevelDanmaku_hotfix = (luaObj.RawGet("GetLevelDanmaku") as LuaFunction);
					this.m_GetPostedLevelDanmaku_hotfix = (luaObj.RawGet("GetPostedLevelDanmaku") as LuaFunction);
					this.m_PostLevelDanmakuPostDanmakuEntry_hotfix = (luaObj.RawGet("PostLevelDanmaku") as LuaFunction);
					this.m_CanGetLevelDanmakuInt32Int32_hotfix = (luaObj.RawGet("CanGetLevelDanmaku") as LuaFunction);
					this.m_CanPostLevelDanmakuInt32Int32List`1_hotfix = (luaObj.RawGet("CanPostLevelDanmaku") as LuaFunction);
					this.m_ClearLevelDanmaku_hotfix = (luaObj.RawGet("ClearLevelDanmaku") as LuaFunction);
					this.m_CanUseDanmaku_hotfix = (luaObj.RawGet("CanUseDanmaku") as LuaFunction);
					this.m_add_EventOnGetLevelDanmakuAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGetLevelDanmakuAck") as LuaFunction);
					this.m_remove_EventOnGetLevelDanmakuAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGetLevelDanmakuAck") as LuaFunction);
					this.m_add_EventOnSendLevelDanmakuAckAction`1_hotfix = (luaObj.RawGet("add_EventOnSendLevelDanmakuAck") as LuaFunction);
					this.m_remove_EventOnSendLevelDanmakuAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnSendLevelDanmakuAck") as LuaFunction);
					this.m_SendFixedStoreBuyStoreItemReqInt32Int32Int32_hotfix = (luaObj.RawGet("SendFixedStoreBuyStoreItemReq") as LuaFunction);
					this.m_OnMessageDSFixedStoreNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFixedStoreBuyStoreItemAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetSkinTicket_hotfix = (luaObj.RawGet("GetSkinTicket") as LuaFunction);
					this.m_GetMemoryEssence_hotfix = (luaObj.RawGet("GetMemoryEssence") as LuaFunction);
					this.m_FindFixedStoreByIDInt32_hotfix = (luaObj.RawGet("FindFixedStoreByID") as LuaFunction);
					this.m_GetFixedStoreItemListInt32_hotfix = (luaObj.RawGet("GetFixedStoreItemList") as LuaFunction);
					this.m_CanBuyFixedStoreGoodsInt32Int32Int32_hotfix = (luaObj.RawGet("CanBuyFixedStoreGoods") as LuaFunction);
					this.m_IsOnDiscountConfigDataFixedStoreItemInfo_hotfix = (luaObj.RawGet("IsOnDiscount") as LuaFunction);
					this.m_add_EventOnFixedStoreBuyStoreItemAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFixedStoreBuyStoreItemAck") as LuaFunction);
					this.m_remove_EventOnFixedStoreBuyStoreItemAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFixedStoreBuyStoreItemAck") as LuaFunction);
					this.m_SendHeroRandomActionSetReqBoolean_hotfix = (luaObj.RawGet("SendHeroRandomActionSetReq") as LuaFunction);
					this.m_SendLikesSendReqString_hotfix = (luaObj.RawGet("SendLikesSendReq") as LuaFunction);
					this.m_SendBusinessCardDescUpdateReqString_hotfix = (luaObj.RawGet("SendBusinessCardDescUpdateReq") as LuaFunction);
					this.m_SendBusinessCardHeroSetUpdateReqList`1_hotfix = (luaObj.RawGet("SendBusinessCardHeroSetUpdateReq") as LuaFunction);
					this.m_SendBusinessCardSelectReqString_hotfix = (luaObj.RawGet("SendBusinessCardSelectReq") as LuaFunction);
					this.m_SendGetSocialRelationReqFriendSocialRelationFlag_hotfix = (luaObj.RawGet("SendGetSocialRelationReq") as LuaFunction);
					this.m_SendFriendInivteReqList`1_hotfix = (luaObj.RawGet("SendFriendInivteReq") as LuaFunction);
					this.m_SendFriendAcceptReqList`1_hotfix = (luaObj.RawGet("SendFriendAcceptReq") as LuaFunction);
					this.m_SendFriendDeclineReqList`1_hotfix = (luaObj.RawGet("SendFriendDeclineReq") as LuaFunction);
					this.m_SendFriendDeleteReqString_hotfix = (luaObj.RawGet("SendFriendDeleteReq") as LuaFunction);
					this.m_SendPlayerBlockReqString_hotfix = (luaObj.RawGet("SendPlayerBlockReq") as LuaFunction);
					this.m_SendPlayerUnblockReqString_hotfix = (luaObj.RawGet("SendPlayerUnblockReq") as LuaFunction);
					this.m_SendPlayerFindReqInt32String_hotfix = (luaObj.RawGet("SendPlayerFindReq") as LuaFunction);
					this.m_SendSuggestedUserReq_hotfix = (luaObj.RawGet("SendSuggestedUserReq") as LuaFunction);
					this.m_SendBattlePracticeInviteReqString_hotfix = (luaObj.RawGet("SendBattlePracticeInviteReq") as LuaFunction);
					this.m_SendBattlePracticeAcceptReqString_hotfix = (luaObj.RawGet("SendBattlePracticeAcceptReq") as LuaFunction);
					this.m_SendBattlePracticeDeclineReqString_hotfix = (luaObj.RawGet("SendBattlePracticeDeclineReq") as LuaFunction);
					this.m_SendBattlePracticeCancelReq_hotfix = (luaObj.RawGet("SendBattlePracticeCancelReq") as LuaFunction);
					this.m_SendFriendshipPointsSendReqList`1_hotfix = (luaObj.RawGet("SendFriendshipPointsSendReq") as LuaFunction);
					this.m_SendFriendshipPointsClaimReqList`1_hotfix = (luaObj.RawGet("SendFriendshipPointsClaimReq") as LuaFunction);
					this.m_OnMessageHeroRandomActionSetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageLikesSendAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBusinessCardSelectAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBusinessCardDescUpdateAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBusinessCardHeroSetUpdateAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_UpdateMineBusinessCardBoolean_hotfix = (luaObj.RawGet("UpdateMineBusinessCard") as LuaFunction);
					this.m_OnMessageDSFriendNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendInfoUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendSocialRelationUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendInviteAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendInviteNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendInviteAcceptAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendInviteAcceptNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendInviteDeclineAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendInviteDeclineNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendDeleteAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendBlockAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendUnblockAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendFindAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendSuggestedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendSummaryUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattlePracticeInviteAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattlePracticeAcceptAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattlePracticeDeclineAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattlePracticeCancelAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattlePracticeInvitedNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattlePracticeFailNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBattlePracticeDeclinedNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendshipPointsSendAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFriendshipPointsClaimAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_CanSendLikesString_hotfix = (luaObj.RawGet("CanSendLikes") as LuaFunction);
					this.m_CanSendFriendshipPointString_hotfix = (luaObj.RawGet("CanSendFriendshipPoint") as LuaFunction);
					this.m_CanGetFriendshipPointString_hotfix = (luaObj.RawGet("CanGetFriendshipPoint") as LuaFunction);
					this.m_HasSentFriendShipPointsString_hotfix = (luaObj.RawGet("HasSentFriendShipPoints") as LuaFunction);
					this.m_HasReceivedFriendShipPointsString_hotfix = (luaObj.RawGet("HasReceivedFriendShipPoints") as LuaFunction);
					this.m_GetSendFriendShipPointsCountToday_hotfix = (luaObj.RawGet("GetSendFriendShipPointsCountToday") as LuaFunction);
					this.m_GetClaimedFriendShipPointsToday_hotfix = (luaObj.RawGet("GetClaimedFriendShipPointsToday") as LuaFunction);
					this.m_CanUpdateBusinessCardDescString_hotfix = (luaObj.RawGet("CanUpdateBusinessCardDesc") as LuaFunction);
					this.m_CanUpdateBusinessCardHeroSetsList`1_hotfix = (luaObj.RawGet("CanUpdateBusinessCardHeroSets") as LuaFunction);
					this.m_GetFriendList_hotfix = (luaObj.RawGet("GetFriendList") as LuaFunction);
					this.m_GetAcrossServerFriendList_hotfix = (luaObj.RawGet("GetAcrossServerFriendList") as LuaFunction);
					this.m_GetRecentChatPlayerList_hotfix = (luaObj.RawGet("GetRecentChatPlayerList") as LuaFunction);
					this.m_GetRecentTeamBattlePlayerList_hotfix = (luaObj.RawGet("GetRecentTeamBattlePlayerList") as LuaFunction);
					this.m_GetGuildPlayerList_hotfix = (luaObj.RawGet("GetGuildPlayerList") as LuaFunction);
					this.m_IsAcrossServerFriendString_hotfix = (luaObj.RawGet("IsAcrossServerFriend") as LuaFunction);
					this.m_GetBlackList_hotfix = (luaObj.RawGet("GetBlackList") as LuaFunction);
					this.m_GetFriendInvitedList_hotfix = (luaObj.RawGet("GetFriendInvitedList") as LuaFunction);
					this.m_GetFriendInviteList_hotfix = (luaObj.RawGet("GetFriendInviteList") as LuaFunction);
					this.m_GetRecommendFriendList_hotfix = (luaObj.RawGet("GetRecommendFriendList") as LuaFunction);
					this.m_GetFindFriendList_hotfix = (luaObj.RawGet("GetFindFriendList") as LuaFunction);
					this.m_SortUserSummaryListList`1_hotfix = (luaObj.RawGet("SortUserSummaryList") as LuaFunction);
					this.m_IsFriendString_hotfix = (luaObj.RawGet("IsFriend") as LuaFunction);
					this.m_GetFriendShipPoints_hotfix = (luaObj.RawGet("GetFriendShipPoints") as LuaFunction);
					this.m_IsFriendRedMarkShow_hotfix = (luaObj.RawGet("IsFriendRedMarkShow") as LuaFunction);
					this.m_GetPVPInviteInfos_hotfix = (luaObj.RawGet("GetPVPInviteInfos") as LuaFunction);
					this.m_RemovePVPInviteInfoString_hotfix = (luaObj.RawGet("RemovePVPInviteInfo") as LuaFunction);
					this.m_IsNeedGetFriendSocialRelation_hotfix = (luaObj.RawGet("IsNeedGetFriendSocialRelation") as LuaFunction);
					this.m_SetNeedGetFriendSocialRelationBoolean_hotfix = (luaObj.RawGet("SetNeedGetFriendSocialRelation") as LuaFunction);
					this.m_get_BusinessCard_hotfix = (luaObj.RawGet("get_BusinessCard") as LuaFunction);
					this.m_set_BusinessCardBusinessCard_hotfix = (luaObj.RawGet("set_BusinessCard") as LuaFunction);
					this.m_add_EventOnBusinessCardRandomShowChangeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBusinessCardRandomShowChangeAck") as LuaFunction);
					this.m_remove_EventOnBusinessCardRandomShowChangeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBusinessCardRandomShowChangeAck") as LuaFunction);
					this.m_add_EventOnLikeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnLikeAck") as LuaFunction);
					this.m_remove_EventOnLikeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnLikeAck") as LuaFunction);
					this.m_add_EventOnBusinessCardGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBusinessCardGetAck") as LuaFunction);
					this.m_remove_EventOnBusinessCardGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBusinessCardGetAck") as LuaFunction);
					this.m_add_EventOnBusinessCardDescUpdateAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBusinessCardDescUpdateAck") as LuaFunction);
					this.m_remove_EventOnBusinessCardDescUpdateAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBusinessCardDescUpdateAck") as LuaFunction);
					this.m_add_EventOnBusinessCardHeroSetUpdateAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBusinessCardHeroSetUpdateAck") as LuaFunction);
					this.m_remove_EventOnBusinessCardHeroSetUpdateAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBusinessCardHeroSetUpdateAck") as LuaFunction);
					this.m_add_EventOnFriendGetSocialRelationAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendGetSocialRelationAck") as LuaFunction);
					this.m_remove_EventOnFriendGetSocialRelationAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendGetSocialRelationAck") as LuaFunction);
					this.m_add_EventOnFriendInviteAckAction`2_hotfix = (luaObj.RawGet("add_EventOnFriendInviteAck") as LuaFunction);
					this.m_remove_EventOnFriendInviteAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnFriendInviteAck") as LuaFunction);
					this.m_add_EventOnFriendInviteNtfAction_hotfix = (luaObj.RawGet("add_EventOnFriendInviteNtf") as LuaFunction);
					this.m_remove_EventOnFriendInviteNtfAction_hotfix = (luaObj.RawGet("remove_EventOnFriendInviteNtf") as LuaFunction);
					this.m_add_EventOnFriendInviteAcceptAckAction`2_hotfix = (luaObj.RawGet("add_EventOnFriendInviteAcceptAck") as LuaFunction);
					this.m_remove_EventOnFriendInviteAcceptAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnFriendInviteAcceptAck") as LuaFunction);
					this.m_add_EventOnFriendInviteAcceptNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendInviteAcceptNtf") as LuaFunction);
					this.m_remove_EventOnFriendInviteAcceptNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendInviteAcceptNtf") as LuaFunction);
					this.m_add_EventOnFriendInviteDeclineAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendInviteDeclineAck") as LuaFunction);
					this.m_remove_EventOnFriendInviteDeclineAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendInviteDeclineAck") as LuaFunction);
					this.m_add_EventOnFriendInviteDeclineNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendInviteDeclineNtf") as LuaFunction);
					this.m_remove_EventOnFriendInviteDeclineNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendInviteDeclineNtf") as LuaFunction);
					this.m_add_EventOnFriendDeleteAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendDeleteAck") as LuaFunction);
					this.m_remove_EventOnFriendDeleteAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendDeleteAck") as LuaFunction);
					this.m_add_EventOnPlayerBlockAckAction`1_hotfix = (luaObj.RawGet("add_EventOnPlayerBlockAck") as LuaFunction);
					this.m_remove_EventOnPlayerBlockAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnPlayerBlockAck") as LuaFunction);
					this.m_add_EventOnPlayerUnblockAckAction`1_hotfix = (luaObj.RawGet("add_EventOnPlayerUnblockAck") as LuaFunction);
					this.m_remove_EventOnPlayerUnblockAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnPlayerUnblockAck") as LuaFunction);
					this.m_add_EventOnFriendFindAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendFindAck") as LuaFunction);
					this.m_remove_EventOnFriendFindAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendFindAck") as LuaFunction);
					this.m_add_EventOnFriendSuggestedAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendSuggestedAck") as LuaFunction);
					this.m_remove_EventOnFriendSuggestedAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendSuggestedAck") as LuaFunction);
					this.m_add_EventOnFriendSummaryUpdateNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendSummaryUpdateNtf") as LuaFunction);
					this.m_remove_EventOnFriendSummaryUpdateNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendSummaryUpdateNtf") as LuaFunction);
					this.m_add_EventOnBattlePracticeInviteAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattlePracticeInviteAck") as LuaFunction);
					this.m_remove_EventOnBattlePracticeInviteAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattlePracticeInviteAck") as LuaFunction);
					this.m_add_EventOnBattlePracticeAcceptAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattlePracticeAcceptAck") as LuaFunction);
					this.m_remove_EventOnBattlePracticeAcceptAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattlePracticeAcceptAck") as LuaFunction);
					this.m_add_EventOnBattlePracticeDeclineAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattlePracticeDeclineAck") as LuaFunction);
					this.m_remove_EventOnBattlePracticeDeclineAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattlePracticeDeclineAck") as LuaFunction);
					this.m_add_EventOnBattlePracticeCancelAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBattlePracticeCancelAck") as LuaFunction);
					this.m_remove_EventOnBattlePracticeCancelAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattlePracticeCancelAck") as LuaFunction);
					this.m_add_EventOnBattlePracticeInvitedNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnBattlePracticeInvitedNtf") as LuaFunction);
					this.m_remove_EventOnBattlePracticeInvitedNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnBattlePracticeInvitedNtf") as LuaFunction);
					this.m_add_EventOnBattlePracticeFailNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattlePracticeFailNtf") as LuaFunction);
					this.m_remove_EventOnBattlePracticeFailNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattlePracticeFailNtf") as LuaFunction);
					this.m_add_EventOnBattlePracticeDeclinedNtfAction_hotfix = (luaObj.RawGet("add_EventOnBattlePracticeDeclinedNtf") as LuaFunction);
					this.m_remove_EventOnBattlePracticeDeclinedNtfAction_hotfix = (luaObj.RawGet("remove_EventOnBattlePracticeDeclinedNtf") as LuaFunction);
					this.m_add_EventOnFriendshipPointsSendAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFriendshipPointsSendAck") as LuaFunction);
					this.m_remove_EventOnFriendshipPointsSendAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFriendshipPointsSendAck") as LuaFunction);
					this.m_add_EventOnFriendshipPointsClaimAckAction`2_hotfix = (luaObj.RawGet("add_EventOnFriendshipPointsClaimAck") as LuaFunction);
					this.m_remove_EventOnFriendshipPointsClaimAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnFriendshipPointsClaimAck") as LuaFunction);
					this.m_add_EventOnFriendshipPointsReceivedNtfAction_hotfix = (luaObj.RawGet("add_EventOnFriendshipPointsReceivedNtf") as LuaFunction);
					this.m_remove_EventOnFriendshipPointsReceivedNtfAction_hotfix = (luaObj.RawGet("remove_EventOnFriendshipPointsReceivedNtf") as LuaFunction);
					this.m_SendPullOrderRewardReqString_hotfix = (luaObj.RawGet("SendPullOrderRewardReq") as LuaFunction);
					this.m_SendGiftStoreCancelBuyReqInt32_hotfix = (luaObj.RawGet("SendGiftStoreCancelBuyReq") as LuaFunction);
					this.m_SendGiftStoreItemBuyReqInt32_hotfix = (luaObj.RawGet("SendGiftStoreItemBuyReq") as LuaFunction);
					this.m_SendGiftStoreAppleSubscribeReqInt32_hotfix = (luaObj.RawGet("SendGiftStoreAppleSubscribeReq") as LuaFunction);
					this.m_OnMessagePullOrderRewardAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSGiftStoreNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGiftStoreCancelBuyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGiftStoreBuyGoodsNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGiftStoreOperationalGoodsUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGiftStoreItemBuyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGiftStoreAppleSubscribeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetAllOrderRewards_hotfix = (luaObj.RawGet("GetAllOrderRewards") as LuaFunction);
					this.m_GetGiftStoreItemList_hotfix = (luaObj.RawGet("GetGiftStoreItemList") as LuaFunction);
					this.m_IsGiftStoreItemSellOutGiftStoreItem_hotfix = (luaObj.RawGet("IsGiftStoreItemSellOut") as LuaFunction);
					this.m_CanBuyGiftStoreGoodsInt32_hotfix = (luaObj.RawGet("CanBuyGiftStoreGoods") as LuaFunction);
					this.m_GetMonthCardLeftTimeInt32_hotfix = (luaObj.RawGet("GetMonthCardLeftTime") as LuaFunction);
					this.m_add_EventOnGiftStoreItemBuyAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGiftStoreItemBuyAck") as LuaFunction);
					this.m_remove_EventOnGiftStoreItemBuyAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGiftStoreItemBuyAck") as LuaFunction);
					this.m_add_EventOnGiftStoreAppleSubscribeAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGiftStoreAppleSubscribeAck") as LuaFunction);
					this.m_remove_EventOnGiftStoreAppleSubscribeAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGiftStoreAppleSubscribeAck") as LuaFunction);
					this.m_add_EventOnGiftStoreBuyGoodsNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnGiftStoreBuyGoodsNtf") as LuaFunction);
					this.m_remove_EventOnGiftStoreBuyGoodsNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnGiftStoreBuyGoodsNtf") as LuaFunction);
					this.m_add_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix = (luaObj.RawGet("add_EventOnGiftStoreOperationalGoodsUpdateNtf") as LuaFunction);
					this.m_remove_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix = (luaObj.RawGet("remove_EventOnGiftStoreOperationalGoodsUpdateNtf") as LuaFunction);
					this.m_add_EventOnGiftStoreItemCancelBuyAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGiftStoreItemCancelBuyAck") as LuaFunction);
					this.m_remove_EventOnGiftStoreItemCancelBuyAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGiftStoreItemCancelBuyAck") as LuaFunction);
					this.m_add_EventOnPullOrderRewardAckAction`3_hotfix = (luaObj.RawGet("add_EventOnPullOrderRewardAck") as LuaFunction);
					this.m_remove_EventOnPullOrderRewardAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnPullOrderRewardAck") as LuaFunction);
					this.m_SendGmCommandReqString_hotfix = (luaObj.RawGet("SendGmCommandReq") as LuaFunction);
					this.m_OnMessageGmCommandAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_add_EventOnGmCommandAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGmCommandAck") as LuaFunction);
					this.m_remove_EventOnGmCommandAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGmCommandAck") as LuaFunction);
					this.m_GuildCreateReqStringStringStringBooleanInt32_hotfix = (luaObj.RawGet("GuildCreateReq") as LuaFunction);
					this.m_GuildJoinApplyReqString_hotfix = (luaObj.RawGet("GuildJoinApplyReq") as LuaFunction);
					this.m_GuildJoinAdminConfirmReqString_hotfix = (luaObj.RawGet("GuildJoinAdminConfirmReq") as LuaFunction);
					this.m_GuildJoinApplyRefuseReqString_hotfix = (luaObj.RawGet("GuildJoinApplyRefuseReq") as LuaFunction);
					this.m_GuildJoinPlayerConfirmReqString_hotfix = (luaObj.RawGet("GuildJoinPlayerConfirmReq") as LuaFunction);
					this.m_GuildSearchReqString_hotfix = (luaObj.RawGet("GuildSearchReq") as LuaFunction);
					this.m_GuildRandomListReq_hotfix = (luaObj.RawGet("GuildRandomListReq") as LuaFunction);
					this.m_GuildQuitReq_hotfix = (luaObj.RawGet("GuildQuitReq") as LuaFunction);
					this.m_SendGuildInvitePlayerListReq_hotfix = (luaObj.RawGet("SendGuildInvitePlayerListReq") as LuaFunction);
					this.m_SendGuildHiringDeclarationSetReqString_hotfix = (luaObj.RawGet("SendGuildHiringDeclarationSetReq") as LuaFunction);
					this.m_SendGuildJoinInvitationGetReq_hotfix = (luaObj.RawGet("SendGuildJoinInvitationGetReq") as LuaFunction);
					this.m_SendGuildJoinInvitationRefuseReqString_hotfix = (luaObj.RawGet("SendGuildJoinInvitationRefuseReq") as LuaFunction);
					this.m_SendAllGuildJoinInvitationRefuseReq_hotfix = (luaObj.RawGet("SendAllGuildJoinInvitationRefuseReq") as LuaFunction);
					this.m_SendGuildGetReqString_hotfix = (luaObj.RawGet("SendGuildGetReq") as LuaFunction);
					this.m_SendGuildBasicSetReqBooleanInt32String_hotfix = (luaObj.RawGet("SendGuildBasicSetReq") as LuaFunction);
					this.m_SendGuildAnnouncementSetReqString_hotfix = (luaObj.RawGet("SendGuildAnnouncementSetReq") as LuaFunction);
					this.m_SendGuildJoinApplyGetReq_hotfix = (luaObj.RawGet("SendGuildJoinApplyGetReq") as LuaFunction);
					this.m_SendGuildNameChangeReqString_hotfix = (luaObj.RawGet("SendGuildNameChangeReq") as LuaFunction);
					this.m_SendGuildLogGetReq_hotfix = (luaObj.RawGet("SendGuildLogGetReq") as LuaFunction);
					this.m_SendGuildJoinInviteReqString_hotfix = (luaObj.RawGet("SendGuildJoinInviteReq") as LuaFunction);
					this.m_SendGuildVicePresidentAppointReqStringBoolean_hotfix = (luaObj.RawGet("SendGuildVicePresidentAppointReq") as LuaFunction);
					this.m_SendGuildKickOutReqString_hotfix = (luaObj.RawGet("SendGuildKickOutReq") as LuaFunction);
					this.m_SendGuildPresidentRelieveReqString_hotfix = (luaObj.RawGet("SendGuildPresidentRelieveReq") as LuaFunction);
					this.m_SendGuildPresidentAppointReqString_hotfix = (luaObj.RawGet("SendGuildPresidentAppointReq") as LuaFunction);
					this.m_SendAllGuildJoinApplyRefuseReq_hotfix = (luaObj.RawGet("SendAllGuildJoinApplyRefuseReq") as LuaFunction);
					this.m_OnMessageGuildUpdateAnnouncementNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSGuildNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildCreateAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinApplyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinApplyConfirmAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinApplyRefuseAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinInvitationConfirmAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildSearchAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildRandomListAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildQuitAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildInvitePlayerListAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildHiringDeclarationSetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinInvitationGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinInvitationRefuseAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageAllGuildJoinInvitationRefuseAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildBasicSetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildAnnouncementSetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinApplyGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildNameChangeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildLogGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinInviteAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildVicePresidentAppointAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildKickOutAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildPresidentRelieveAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildPresidentAppointAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageAllGuildJoinApplyRefuseAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinApplyAdminNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildJoinInvitationNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_CheckGuildCreateConditionStringStringInt32_hotfix = (luaObj.RawGet("CheckGuildCreateCondition") as LuaFunction);
					this.m_GetGuildInfo_hotfix = (luaObj.RawGet("GetGuildInfo") as LuaFunction);
					this.m_RefreshGuildListJoinStateString_hotfix = (luaObj.RawGet("RefreshGuildListJoinState") as LuaFunction);
					this.m_CanQuitGuild_hotfix = (luaObj.RawGet("CanQuitGuild") as LuaFunction);
					this.m_CanKickOutGuild_hotfix = (luaObj.RawGet("CanKickOutGuild") as LuaFunction);
					this.m_CheckGuildNameString_hotfix = (luaObj.RawGet("CheckGuildName") as LuaFunction);
					this.m_CanSetGuildHiringDeclarationString_hotfix = (luaObj.RawGet("CanSetGuildHiringDeclaration") as LuaFunction);
					this.m_CanSetGuildAnnouncementString_hotfix = (luaObj.RawGet("CanSetGuildAnnouncement") as LuaFunction);
					this.m_CheckGuildInvitePlayerList_hotfix = (luaObj.RawGet("CheckGuildInvitePlayerList") as LuaFunction);
					this.m_GetGuildJoinInvitationList_hotfix = (luaObj.RawGet("GetGuildJoinInvitationList") as LuaFunction);
					this.m_GetGuildJoinApplyList_hotfix = (luaObj.RawGet("GetGuildJoinApplyList") as LuaFunction);
					this.m_RemoveGuildJoinApplyListByIdString_hotfix = (luaObj.RawGet("RemoveGuildJoinApplyListById") as LuaFunction);
					this.m_CheckGuildSearchString_hotfix = (luaObj.RawGet("CheckGuildSearch") as LuaFunction);
					this.m_CheckGuildRandomList_hotfix = (luaObj.RawGet("CheckGuildRandomList") as LuaFunction);
					this.m_GetGuildRecommendList_hotfix = (luaObj.RawGet("GetGuildRecommendList") as LuaFunction);
					this.m_GetGuildId_hotfix = (luaObj.RawGet("GetGuildId") as LuaFunction);
					this.m_GetGuildLogContentGuildLog_hotfix = (luaObj.RawGet("GetGuildLogContent") as LuaFunction);
					this.m_AddUserIdToGuildInviteListString_hotfix = (luaObj.RawGet("AddUserIdToGuildInviteList") as LuaFunction);
					this.m_CanJoinGuildCDTime_hotfix = (luaObj.RawGet("CanJoinGuildCDTime") as LuaFunction);
					this.m_HasPlayerBeenInvitedByGuildString_hotfix = (luaObj.RawGet("HasPlayerBeenInvitedByGuild") as LuaFunction);
					this.m_ResetComponentGuildData_hotfix = (luaObj.RawGet("ResetComponentGuildData") as LuaFunction);
					this.m_add_EventOnGuildCreateAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildCreateAck") as LuaFunction);
					this.m_remove_EventOnGuildCreateAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildCreateAck") as LuaFunction);
					this.m_add_EventOnGuildJoinApplyAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildJoinApplyAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinApplyAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinApplyAck") as LuaFunction);
					this.m_add_EventOnGuildJoinAdminConfirmAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildJoinAdminConfirmAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinAdminConfirmAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinAdminConfirmAck") as LuaFunction);
					this.m_add_EventOnGuildJoinApplyRefuseAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildJoinApplyRefuseAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinApplyRefuseAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinApplyRefuseAck") as LuaFunction);
					this.m_add_EventOnGuildJoinPlayerConfirmAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildJoinPlayerConfirmAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinPlayerConfirmAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinPlayerConfirmAck") as LuaFunction);
					this.m_add_EventOnGuildSearchAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildSearchAck") as LuaFunction);
					this.m_remove_EventOnGuildSearchAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildSearchAck") as LuaFunction);
					this.m_add_EventOnGuildRandomListAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildRandomListAck") as LuaFunction);
					this.m_remove_EventOnGuildRandomListAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildRandomListAck") as LuaFunction);
					this.m_add_EventOnGuildQuitAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildQuitAck") as LuaFunction);
					this.m_remove_EventOnGuildQuitAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildQuitAck") as LuaFunction);
					this.m_add_EventOnGuildInvitePlayerListAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildInvitePlayerListAck") as LuaFunction);
					this.m_remove_EventOnGuildInvitePlayerListAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildInvitePlayerListAck") as LuaFunction);
					this.m_add_EventOnGuildHiringDeclarationSetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildHiringDeclarationSetAck") as LuaFunction);
					this.m_remove_EventOnGuildHiringDeclarationSetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildHiringDeclarationSetAck") as LuaFunction);
					this.m_add_EventOnGuildJoinInvitationGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildJoinInvitationGetAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinInvitationGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinInvitationGetAck") as LuaFunction);
					this.m_add_EventOnGuildJoinInvitationRefuseAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildJoinInvitationRefuseAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinInvitationRefuseAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinInvitationRefuseAck") as LuaFunction);
					this.m_add_EventOnAllGuildJoinInvitationRefuseAckAction`1_hotfix = (luaObj.RawGet("add_EventOnAllGuildJoinInvitationRefuseAck") as LuaFunction);
					this.m_remove_EventOnAllGuildJoinInvitationRefuseAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnAllGuildJoinInvitationRefuseAck") as LuaFunction);
					this.m_add_EventOnGuildGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildGetAck") as LuaFunction);
					this.m_remove_EventOnGuildGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildGetAck") as LuaFunction);
					this.m_add_EventOnGuildBasicSetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildBasicSetAck") as LuaFunction);
					this.m_remove_EventOnGuildBasicSetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildBasicSetAck") as LuaFunction);
					this.m_add_EventOnGuildAnnouncementSetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildAnnouncementSetAck") as LuaFunction);
					this.m_remove_EventOnGuildAnnouncementSetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildAnnouncementSetAck") as LuaFunction);
					this.m_add_EventOnGuildJoinApplyGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildJoinApplyGetAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinApplyGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinApplyGetAck") as LuaFunction);
					this.m_add_EventOnGuildNameChangeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildNameChangeAck") as LuaFunction);
					this.m_remove_EventOnGuildNameChangeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildNameChangeAck") as LuaFunction);
					this.m_add_EventOnGuildLogGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildLogGetAck") as LuaFunction);
					this.m_remove_EventOnGuildLogGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildLogGetAck") as LuaFunction);
					this.m_add_EventOnGuildJoinInviteAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildJoinInviteAck") as LuaFunction);
					this.m_remove_EventOnGuildJoinInviteAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildJoinInviteAck") as LuaFunction);
					this.m_add_EventOnGuildVicePresidentAppointAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildVicePresidentAppointAck") as LuaFunction);
					this.m_remove_EventOnGuildVicePresidentAppointAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildVicePresidentAppointAck") as LuaFunction);
					this.m_add_EventOnGuildKickOutAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildKickOutAck") as LuaFunction);
					this.m_remove_EventOnGuildKickOutAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildKickOutAck") as LuaFunction);
					this.m_add_EventOnGuildPresidentRelieveAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildPresidentRelieveAck") as LuaFunction);
					this.m_remove_EventOnGuildPresidentRelieveAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildPresidentRelieveAck") as LuaFunction);
					this.m_add_EventOnGuildPresidentAppointAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildPresidentAppointAck") as LuaFunction);
					this.m_remove_EventOnGuildPresidentAppointAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildPresidentAppointAck") as LuaFunction);
					this.m_add_EventOnAllGuildJoinApplyRefuseAckAction`1_hotfix = (luaObj.RawGet("add_EventOnAllGuildJoinApplyRefuseAck") as LuaFunction);
					this.m_remove_EventOnAllGuildJoinApplyRefuseAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnAllGuildJoinApplyRefuseAck") as LuaFunction);
					this.m_add_EventOnGuildUpdateInfoAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildUpdateInfo") as LuaFunction);
					this.m_remove_EventOnGuildUpdateInfoAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildUpdateInfo") as LuaFunction);
					this.m_SendGuildMassiveCombatDataReq_hotfix = (luaObj.RawGet("SendGuildMassiveCombatDataReq") as LuaFunction);
					this.m_SendGuildMassiveCombatStartReqInt32_hotfix = (luaObj.RawGet("SendGuildMassiveCombatStartReq") as LuaFunction);
					this.m_SendGuildMassiveCombatSurrenderReq_hotfix = (luaObj.RawGet("SendGuildMassiveCombatSurrenderReq") as LuaFunction);
					this.m_SendGuildMassiveCombatAttackReqInt32List`1_hotfix = (luaObj.RawGet("SendGuildMassiveCombatAttackReq") as LuaFunction);
					this.m_SendGuildMassiveCombatAttackFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendGuildMassiveCombatAttackFinishedReq") as LuaFunction);
					this.m_OnMessageGuildMassiveCombatDataAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildMassiveCombatNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildMassiveCombatPlayerNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildMassiveCombatStartAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildMassiveCombatSurrenderAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildMassiveCombatAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGuildMassiveCombatAttackFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetGuildMassiveCombatStrongholdEliminateRateGuildMassiveCombatStronghold_hotfix = (luaObj.RawGet("GetGuildMassiveCombatStrongholdEliminateRate") as LuaFunction);
					this.m_GetFinishedGuildMassiveCombatThisWeek_hotfix = (luaObj.RawGet("GetFinishedGuildMassiveCombatThisWeek") as LuaFunction);
					this.m_CanStartGuildMassiveCombat_hotfix = (luaObj.RawGet("CanStartGuildMassiveCombat") as LuaFunction);
					this.m_CanAttackGuildMassiveCombatSinglePVELevelInt32_hotfix = (luaObj.RawGet("CanAttackGuildMassiveCombatSinglePVELevel") as LuaFunction);
					this.m_GetGuildPlayerMassiveCombatInfo_hotfix = (luaObj.RawGet("GetGuildPlayerMassiveCombatInfo") as LuaFunction);
					this.m_GetGuildMassiveCombatStrongholdInt32_hotfix = (luaObj.RawGet("GetGuildMassiveCombatStronghold") as LuaFunction);
					this.m_FillGuildMassiveCombatMemberSummaryGuildMassiveCombatGeneralAction`1_hotfix = (luaObj.RawGet("FillGuildMassiveCombatMemberSummary") as LuaFunction);
					this.m_OnFillGuildMassiveCombatNtfSummaryFriendGetUserSummaryAck_hotfix = (luaObj.RawGet("OnFillGuildMassiveCombatNtfSummary") as LuaFunction);
					this.m_OnFillGuildMassiveGetDataSummaryInt32FriendGetUserSummaryAck_hotfix = (luaObj.RawGet("OnFillGuildMassiveGetDataSummary") as LuaFunction);
					this.m_GetCurrentGuildMassiveCombatInfo_hotfix = (luaObj.RawGet("GetCurrentGuildMassiveCombatInfo") as LuaFunction);
					this.m_GetGuildMassiveCombatEliminateRate_hotfix = (luaObj.RawGet("GetGuildMassiveCombatEliminateRate") as LuaFunction);
					this.m_add_EventOnGuildMassiveCombatAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildMassiveCombatAttackAck") as LuaFunction);
					this.m_remove_EventOnGuildMassiveCombatAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildMassiveCombatAttackAck") as LuaFunction);
					this.m_add_EventOnGuildMassiveCombatAttackFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnGuildMassiveCombatAttackFinishedAck") as LuaFunction);
					this.m_remove_EventOnGuildMassiveCombatAttackFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnGuildMassiveCombatAttackFinishedAck") as LuaFunction);
					this.m_add_EventOnGuildMassiveCombatDataAckAction`2_hotfix = (luaObj.RawGet("add_EventOnGuildMassiveCombatDataAck") as LuaFunction);
					this.m_remove_EventOnGuildMassiveCombatDataAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnGuildMassiveCombatDataAck") as LuaFunction);
					this.m_add_EventOnGuildMassiveCombatNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildMassiveCombatNtf") as LuaFunction);
					this.m_remove_EventOnGuildMassiveCombatNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildMassiveCombatNtf") as LuaFunction);
					this.m_add_EventOnGuildMassiveCombatPlayerNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildMassiveCombatPlayerNtf") as LuaFunction);
					this.m_remove_EventOnGuildMassiveCombatPlayerNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildMassiveCombatPlayerNtf") as LuaFunction);
					this.m_add_EventOnGuildMassiveCombatStartAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildMassiveCombatStartAck") as LuaFunction);
					this.m_remove_EventOnGuildMassiveCombatStartAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildMassiveCombatStartAck") as LuaFunction);
					this.m_add_EventOnGuildMassiveCombatSurrenderAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGuildMassiveCombatSurrenderAck") as LuaFunction);
					this.m_remove_EventOnGuildMassiveCombatSurrenderAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGuildMassiveCombatSurrenderAck") as LuaFunction);
					this.m_SendAutoTakeOffEquipmentsReqInt32_hotfix = (luaObj.RawGet("SendAutoTakeOffEquipmentsReq") as LuaFunction);
					this.m_SendExchangeHeroFragmentReq_hotfix = (luaObj.RawGet("SendExchangeHeroFragmentReq") as LuaFunction);
					this.m_SendHeroFavorabilityExpAddReqInt32GoodsTypeInt32Int32_hotfix = (luaObj.RawGet("SendHeroFavorabilityExpAddReq") as LuaFunction);
					this.m_SendHeroInteractReqInt32_hotfix = (luaObj.RawGet("SendHeroInteractReq") as LuaFunction);
					this.m_SendHeroConfessReqInt32_hotfix = (luaObj.RawGet("SendHeroConfessReq") as LuaFunction);
					this.m_SendSetProtagonistReqInt32_hotfix = (luaObj.RawGet("SendSetProtagonistReq") as LuaFunction);
					this.m_SendHeroJobTransferReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroJobTransferReq") as LuaFunction);
					this.m_SendHeroStarLevelUpReqInt32_hotfix = (luaObj.RawGet("SendHeroStarLevelUpReq") as LuaFunction);
					this.m_SendHeroJobLevelUpReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroJobLevelUpReq") as LuaFunction);
					this.m_SendHeroSkillsSelectReqInt32List`1_hotfix = (luaObj.RawGet("SendHeroSkillsSelectReq") as LuaFunction);
					this.m_SendHeroSoldierSelectReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroSoldierSelectReq") as LuaFunction);
					this.m_SendHeroComposeReqqInt32_hotfix = (luaObj.RawGet("SendHeroComposeReqq") as LuaFunction);
					this.m_SendHeroExpAddReqInt32GoodsTypeInt32Int32_hotfix = (luaObj.RawGet("SendHeroExpAddReq") as LuaFunction);
					this.m_SendHeroJobUnlockReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroJobUnlockReq") as LuaFunction);
					this.m_SendEquipmentWearReqInt32UInt64_hotfix = (luaObj.RawGet("SendEquipmentWearReq") as LuaFunction);
					this.m_SendEquipmentTakeOffReqInt32Int32_hotfix = (luaObj.RawGet("SendEquipmentTakeOffReq") as LuaFunction);
					this.m_SendAutoEquipReqInt32_hotfix = (luaObj.RawGet("SendAutoEquipReq") as LuaFunction);
					this.m_SendHeroFetterUnlockReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroFetterUnlockReq") as LuaFunction);
					this.m_SendHeroFetterLevelUpInt32Int32_hotfix = (luaObj.RawGet("SendHeroFetterLevelUp") as LuaFunction);
					this.m_SendCharSkinWearInt32Int32_hotfix = (luaObj.RawGet("SendCharSkinWear") as LuaFunction);
					this.m_SendCharSkinTakeOffInt32_hotfix = (luaObj.RawGet("SendCharSkinTakeOff") as LuaFunction);
					this.m_SendModelSkinWearInt32Int32Int32_hotfix = (luaObj.RawGet("SendModelSkinWear") as LuaFunction);
					this.m_SendModelSkinTakeOffInt32Int32_hotfix = (luaObj.RawGet("SendModelSkinTakeOff") as LuaFunction);
					this.m_SendSoldierSkinWearReqInt32Int32Int32Boolean_hotfix = (luaObj.RawGet("SendSoldierSkinWearReq") as LuaFunction);
					this.m_SendSoldierSkinTakeOffReqInt32Int32Boolean_hotfix = (luaObj.RawGet("SendSoldierSkinTakeOffReq") as LuaFunction);
					this.m_OnMessageAutoTakeOffEquipmentsAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageExchangeHeroFragmentAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSHeroNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroConfessAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroInteractAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroFavorabilityExpAddAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageSetProtagonistAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroJobTransferAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroStarLevelLevelUpAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroJobLevelUpAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroSkillsSelectAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroSoldierSelectAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroComposeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroExpAddAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroJobUnlockAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentWearAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentTakeOffAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageEquipmentAutoAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroFetterLevelUpAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroFetterUnlockAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageCharSkinWearAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageCharSkinTakeOffAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageModelSkinWearAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageModelSkinTakeOffAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageSoldierSkinWearAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageSoldierSkinTakeOffAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GmResetHeroJobInt32_hotfix = (luaObj.RawGet("GmResetHeroJob") as LuaFunction);
					this.m_GmLevelUpHeroFetter2SpecificLevelInt32Int32Int32_hotfix = (luaObj.RawGet("GmLevelUpHeroFetter2SpecificLevel") as LuaFunction);
					this.m_GetAdditiveHeroAddExpInt32_hotfix = (luaObj.RawGet("GetAdditiveHeroAddExp") as LuaFunction);
					this.m_GetAdditiveHeroFavourabilityAddExpInt32_hotfix = (luaObj.RawGet("GetAdditiveHeroFavourabilityAddExp") as LuaFunction);
					this.m_GetHeroFavorabilityUpLevelHeroConfigDataHeroInformationInfoInt32_hotfix = (luaObj.RawGet("GetHeroFavorabilityUpLevel") as LuaFunction);
					this.m_GetHeroInteractionInfoInt32_hotfix = (luaObj.RawGet("GetHeroInteractionInfo") as LuaFunction);
					this.m_GetHeroInteractHeroPerformanceIdInt32HeroInteractionResultType_hotfix = (luaObj.RawGet("GetHeroInteractHeroPerformanceId") as LuaFunction);
					this.m_InitAllDefaultConfigHeros_hotfix = (luaObj.RawGet("InitAllDefaultConfigHeros") as LuaFunction);
					this.m_GetHeroInt32_hotfix = (luaObj.RawGet("GetHero") as LuaFunction);
					this.m_GetHeros_hotfix = (luaObj.RawGet("GetHeros") as LuaFunction);
					this.m_GetAllDefaultHeros_hotfix = (luaObj.RawGet("GetAllDefaultHeros") as LuaFunction);
					this.m_GetUseableJobConnectionInfosInt32_hotfix = (luaObj.RawGet("GetUseableJobConnectionInfos") as LuaFunction);
					this.m_GetDefaultHeroInt32_hotfix = (luaObj.RawGet("GetDefaultHero") as LuaFunction);
					this.m_GetHeroNextLevelExpInt32_hotfix = (luaObj.RawGet("GetHeroNextLevelExp") as LuaFunction);
					this.m_GetHeroSkillPointMaxInt32_hotfix = (luaObj.RawGet("GetHeroSkillPointMax") as LuaFunction);
					this.m_GetHeroLevelMax_hotfix = (luaObj.RawGet("GetHeroLevelMax") as LuaFunction);
					this.m_IsHeroShowRedMarkInt32Int32_hotfix = (luaObj.RawGet("IsHeroShowRedMark") as LuaFunction);
					this.m_CanLevelUpHeroStarLevelInt32_hotfix = (luaObj.RawGet("CanLevelUpHeroStarLevel") as LuaFunction);
					this.m_IfWasteAddExpHeroInt32_hotfix = (luaObj.RawGet("IfWasteAddExp") as LuaFunction);
					this.m_CanLevelUpHeroJobLevelInt32Int32_hotfix = (luaObj.RawGet("CanLevelUpHeroJobLevel") as LuaFunction);
					this.m_CanHeroJobTransferInt32Int32_hotfix = (luaObj.RawGet("CanHeroJobTransfer") as LuaFunction);
					this.m_IsWorldHeroTabShowRedIcon_hotfix = (luaObj.RawGet("IsWorldHeroTabShowRedIcon") as LuaFunction);
					this.m_IsHeroHaveNewJobCanTransferInt32_hotfix = (luaObj.RawGet("IsHeroHaveNewJobCanTransfer") as LuaFunction);
					this.m_IsHeroJobNeedMagicStoneInt32Int32_hotfix = (luaObj.RawGet("IsHeroJobNeedMagicStone") as LuaFunction);
					this.m_CanComposeHeroInt32_hotfix = (luaObj.RawGet("CanComposeHero") as LuaFunction);
					this.m_IsSkillLimitToHeroJobInt32Int32_hotfix = (luaObj.RawGet("IsSkillLimitToHeroJob") as LuaFunction);
					this.m_GetProtagonistId_hotfix = (luaObj.RawGet("GetProtagonistId") as LuaFunction);
					this.m_IsProtagonistHeroInt32_hotfix = (luaObj.RawGet("IsProtagonistHero") as LuaFunction);
					this.m_IsProtagonistExist_hotfix = (luaObj.RawGet("IsProtagonistExist") as LuaFunction);
					this.m_IsCurrentLevelMaxHeroLevelInt32_hotfix = (luaObj.RawGet("IsCurrentLevelMaxHeroLevel") as LuaFunction);
					this.m_CanHeroSelectSoliderHeroInt32_hotfix = (luaObj.RawGet("CanHeroSelectSolider") as LuaFunction);
					this.m_GetHeroInteractNums_hotfix = (luaObj.RawGet("GetHeroInteractNums") as LuaFunction);
					this.m_GetHeroInteractNumsFlushTime_hotfix = (luaObj.RawGet("GetHeroInteractNumsFlushTime") as LuaFunction);
					this.m_IsHeroCanComposedInt32_hotfix = (luaObj.RawGet("IsHeroCanComposed") as LuaFunction);
					this.m_IsExistSoliderIdInt32_hotfix = (luaObj.RawGet("IsExistSoliderId") as LuaFunction);
					this.m_IsHeroAssignedInt32_hotfix = (luaObj.RawGet("IsHeroAssigned") as LuaFunction);
					this.m_GetAllStarLvlMaxHeroFragements_hotfix = (luaObj.RawGet("GetAllStarLvlMaxHeroFragements") as LuaFunction);
					this.m_IsShowJobLevelCanUpTipHero_hotfix = (luaObj.RawGet("IsShowJobLevelCanUpTip") as LuaFunction);
					this.m_IsEquipmentWearedUInt64_hotfix = (luaObj.RawGet("IsEquipmentWeared") as LuaFunction);
					this.m_GetWearedEquipmentHeroIdByEquipmentIdUInt64_hotfix = (luaObj.RawGet("GetWearedEquipmentHeroIdByEquipmentId") as LuaFunction);
					this.m_CanWearEquipmentInt32UInt64_hotfix = (luaObj.RawGet("CanWearEquipment") as LuaFunction);
					this.m_HasBetterEquipmentByHeroHero_hotfix = (luaObj.RawGet("HasBetterEquipmentByHero") as LuaFunction);
					this.m_HasBetterEquipmentBySlotIdInt32Int32_hotfix = (luaObj.RawGet("HasBetterEquipmentBySlotId") as LuaFunction);
					this.m_CanAutoEquipmentInt32_hotfix = (luaObj.RawGet("CanAutoEquipment") as LuaFunction);
					this.m_CanTakeOffEquipmentInt32Int32_hotfix = (luaObj.RawGet("CanTakeOffEquipment") as LuaFunction);
					this.m_CanUnlockHeroPerformanceInt32_hotfix = (luaObj.RawGet("CanUnlockHeroPerformance") as LuaFunction);
					this.m_CanUnlockHeroBiographyInt32_hotfix = (luaObj.RawGet("CanUnlockHeroBiography") as LuaFunction);
					this.m_CanReachFetterUnlockConditionHeroFetterCompletionCondition_hotfix = (luaObj.RawGet("CanReachFetterUnlockCondition") as LuaFunction);
					this.m_CanInteractHeroInt32_hotfix = (luaObj.RawGet("CanInteractHero") as LuaFunction);
					this.m_CanConfessHeroInt32_hotfix = (luaObj.RawGet("CanConfessHero") as LuaFunction);
					this.m_CanLevelUpHeroFetterInt32Int32_hotfix = (luaObj.RawGet("CanLevelUpHeroFetter") as LuaFunction);
					this.m_CanUnlockHeroFetterInt32Int32_hotfix = (luaObj.RawGet("CanUnlockHeroFetter") as LuaFunction);
					this.m_ImitateUseHeroFavorabilityExpItemInt32Int32Int32GoodsType_hotfix = (luaObj.RawGet("ImitateUseHeroFavorabilityExpItem") as LuaFunction);
					this.m_IsFullFavorabilityExpHero_hotfix = (luaObj.RawGet("IsFullFavorabilityExp") as LuaFunction);
					this.m_IsShowFetterRedMark_hotfix = (luaObj.RawGet("IsShowFetterRedMark") as LuaFunction);
					this.m_IsHeroFetterHasNewOrLevelUpHero_hotfix = (luaObj.RawGet("IsHeroFetterHasNewOrLevelUp") as LuaFunction);
					this.m_CanWearCharSkinInt32Int32_hotfix = (luaObj.RawGet("CanWearCharSkin") as LuaFunction);
					this.m_CanTakeOffCharSkinInt32_hotfix = (luaObj.RawGet("CanTakeOffCharSkin") as LuaFunction);
					this.m_CanWearModelSkinInt32Int32Int32_hotfix = (luaObj.RawGet("CanWearModelSkin") as LuaFunction);
					this.m_CanTakeOffModelSkinInt32Int32_hotfix = (luaObj.RawGet("CanTakeOffModelSkin") as LuaFunction);
					this.m_CanWearSoldierSkinInt32Int32Int32_hotfix = (luaObj.RawGet("CanWearSoldierSkin") as LuaFunction);
					this.m_CanTakeOffSoldierSkinInt32Int32_hotfix = (luaObj.RawGet("CanTakeOffSoldierSkin") as LuaFunction);
					this.m_IsShowSkinBeforeOnSaleInt32Boolean_hotfix = (luaObj.RawGet("IsShowSkinBeforeOnSale") as LuaFunction);
					this.m_add_EventOnSetProtagonistAckAction`1_hotfix = (luaObj.RawGet("add_EventOnSetProtagonistAck") as LuaFunction);
					this.m_remove_EventOnSetProtagonistAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnSetProtagonistAck") as LuaFunction);
					this.m_add_EventOnHeroJobTransferAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroJobTransferAck") as LuaFunction);
					this.m_remove_EventOnHeroJobTransferAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroJobTransferAck") as LuaFunction);
					this.m_add_EventOnHeroStarLevelUpAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroStarLevelUpAck") as LuaFunction);
					this.m_remove_EventOnHeroStarLevelUpAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroStarLevelUpAck") as LuaFunction);
					this.m_add_EventOnHeroJobLevelUpAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroJobLevelUpAck") as LuaFunction);
					this.m_remove_EventOnHeroJobLevelUpAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroJobLevelUpAck") as LuaFunction);
					this.m_add_EventOnHeroSkillsSelectAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroSkillsSelectAck") as LuaFunction);
					this.m_remove_EventOnHeroSkillsSelectAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroSkillsSelectAck") as LuaFunction);
					this.m_add_EventOnHeroSoldierSelectAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroSoldierSelectAck") as LuaFunction);
					this.m_remove_EventOnHeroSoldierSelectAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroSoldierSelectAck") as LuaFunction);
					this.m_add_EventOnHeroComposeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroComposeAck") as LuaFunction);
					this.m_remove_EventOnHeroComposeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroComposeAck") as LuaFunction);
					this.m_add_EventOnHeroExpAddAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroExpAddAck") as LuaFunction);
					this.m_remove_EventOnHeroExpAddAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroExpAddAck") as LuaFunction);
					this.m_add_EventOnHeroJobUnlockAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroJobUnlockAck") as LuaFunction);
					this.m_remove_EventOnHeroJobUnlockAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroJobUnlockAck") as LuaFunction);
					this.m_add_EventOnEquipmentWearAckAction`1_hotfix = (luaObj.RawGet("add_EventOnEquipmentWearAck") as LuaFunction);
					this.m_remove_EventOnEquipmentWearAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnEquipmentWearAck") as LuaFunction);
					this.m_add_EventOnEquipmentTakeOffAckAction`1_hotfix = (luaObj.RawGet("add_EventOnEquipmentTakeOffAck") as LuaFunction);
					this.m_remove_EventOnEquipmentTakeOffAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnEquipmentTakeOffAck") as LuaFunction);
					this.m_add_EventOnAutoEquipAckAction`1_hotfix = (luaObj.RawGet("add_EventOnAutoEquipAck") as LuaFunction);
					this.m_remove_EventOnAutoEquipAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnAutoEquipAck") as LuaFunction);
					this.m_add_EventOnHeroFetterLevelUpAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroFetterLevelUpAck") as LuaFunction);
					this.m_remove_EventOnHeroFetterLevelUpAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroFetterLevelUpAck") as LuaFunction);
					this.m_add_EventOnHeroConfessAckAction`2_hotfix = (luaObj.RawGet("add_EventOnHeroConfessAck") as LuaFunction);
					this.m_remove_EventOnHeroConfessAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnHeroConfessAck") as LuaFunction);
					this.m_add_EventOnHeroFavorabilityExpAddAckAction`2_hotfix = (luaObj.RawGet("add_EventOnHeroFavorabilityExpAddAck") as LuaFunction);
					this.m_remove_EventOnHeroFavorabilityExpAddAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnHeroFavorabilityExpAddAck") as LuaFunction);
					this.m_add_EventOnFetterUnlockAckAction`2_hotfix = (luaObj.RawGet("add_EventOnFetterUnlockAck") as LuaFunction);
					this.m_remove_EventOnFetterUnlockAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnFetterUnlockAck") as LuaFunction);
					this.m_add_EventOnHeroInteractAckAction`3_hotfix = (luaObj.RawGet("add_EventOnHeroInteractAck") as LuaFunction);
					this.m_remove_EventOnHeroInteractAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnHeroInteractAck") as LuaFunction);
					this.m_add_EventOnCharSkinWearAckAction`1_hotfix = (luaObj.RawGet("add_EventOnCharSkinWearAck") as LuaFunction);
					this.m_remove_EventOnCharSkinWearAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnCharSkinWearAck") as LuaFunction);
					this.m_add_EventOnCharSkinTakeOffAckAction`1_hotfix = (luaObj.RawGet("add_EventOnCharSkinTakeOffAck") as LuaFunction);
					this.m_remove_EventOnCharSkinTakeOffAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnCharSkinTakeOffAck") as LuaFunction);
					this.m_add_EventOnModelSkinWearAckAction`1_hotfix = (luaObj.RawGet("add_EventOnModelSkinWearAck") as LuaFunction);
					this.m_remove_EventOnModelSkinWearAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnModelSkinWearAck") as LuaFunction);
					this.m_add_EventOnModelSkinTakeOffAckAction`1_hotfix = (luaObj.RawGet("add_EventOnModelSkinTakeOffAck") as LuaFunction);
					this.m_remove_EventOnModelSkinTakeOffAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnModelSkinTakeOffAck") as LuaFunction);
					this.m_add_EventOnSoldierSkinWearAckAction`1_hotfix = (luaObj.RawGet("add_EventOnSoldierSkinWearAck") as LuaFunction);
					this.m_remove_EventOnSoldierSkinWearAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnSoldierSkinWearAck") as LuaFunction);
					this.m_add_EventOnSoldierSkinTakeOffAckAction`1_hotfix = (luaObj.RawGet("add_EventOnSoldierSkinTakeOffAck") as LuaFunction);
					this.m_remove_EventOnSoldierSkinTakeOffAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnSoldierSkinTakeOffAck") as LuaFunction);
					this.m_add_EventOnExchangeHeroFragementAckAction`2_hotfix = (luaObj.RawGet("add_EventOnExchangeHeroFragementAck") as LuaFunction);
					this.m_remove_EventOnExchangeHeroFragementAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnExchangeHeroFragementAck") as LuaFunction);
					this.m_add_EventOnAutoTakeOffEquipmentsAckAction`1_hotfix = (luaObj.RawGet("add_EventOnAutoTakeOffEquipmentsAck") as LuaFunction);
					this.m_remove_EventOnAutoTakeOffEquipmentsAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnAutoTakeOffEquipmentsAck") as LuaFunction);
					this.m_add_EventOnHeroChangeNtfAction_hotfix = (luaObj.RawGet("add_EventOnHeroChangeNtf") as LuaFunction);
					this.m_remove_EventOnHeroChangeNtfAction_hotfix = (luaObj.RawGet("remove_EventOnHeroChangeNtf") as LuaFunction);
					this.m_SendHeroAssistantAssignToTaskReqInt32Int32List`1Int32_hotfix = (luaObj.RawGet("SendHeroAssistantAssignToTaskReq") as LuaFunction);
					this.m_SendHeroAssistantCancelTaskReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroAssistantCancelTaskReq") as LuaFunction);
					this.m_SendHeroAssistantClaimRewardReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroAssistantClaimRewardReq") as LuaFunction);
					this.m_OnMessageDSHeroAssistantNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroAssistantAssignToTaskAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroAssistantCancelTaskAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroAssistantClaimRewardAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetAllTodayHeroAssistantsTask_hotfix = (luaObj.RawGet("GetAllTodayHeroAssistantsTask") as LuaFunction);
					this.m_GetHeroAssistantsTasksByWeekDayInt32_hotfix = (luaObj.RawGet("GetHeroAssistantsTasksByWeekDay") as LuaFunction);
					this.m_GetAssignedHeroAssistantsTask_hotfix = (luaObj.RawGet("GetAssignedHeroAssistantsTask") as LuaFunction);
					this.m_HaveFinishedAssistantTask_hotfix = (luaObj.RawGet("HaveFinishedAssistantTask") as LuaFunction);
					this.m_GetDropIdByTaskCompleteRateInt32Int32_hotfix = (luaObj.RawGet("GetDropIdByTaskCompleteRate") as LuaFunction);
					this.m_GetDropCountByTaskWorkSecondsInt32Int32_hotfix = (luaObj.RawGet("GetDropCountByTaskWorkSeconds") as LuaFunction);
					this.m_CanAssignHeroList`1Int32Int32Int32_hotfix = (luaObj.RawGet("CanAssignHero") as LuaFunction);
					this.m_CanCancelTaskInt32Int32_hotfix = (luaObj.RawGet("CanCancelTask") as LuaFunction);
					this.m_CanClaimRewardsInt32Int32_hotfix = (luaObj.RawGet("CanClaimRewards") as LuaFunction);
					this.m_GetTaskRemainingTimeInt32Int32_hotfix = (luaObj.RawGet("GetTaskRemainingTime") as LuaFunction);
					this.m_add_EventOnHeroAssistantAssignToTaskAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroAssistantAssignToTaskAck") as LuaFunction);
					this.m_remove_EventOnHeroAssistantAssignToTaskAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroAssistantAssignToTaskAck") as LuaFunction);
					this.m_add_EventOnHeroAssistantCancelTaskAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroAssistantCancelTaskAck") as LuaFunction);
					this.m_remove_EventOnHeroAssistantCancelTaskAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroAssistantCancelTaskAck") as LuaFunction);
					this.m_add_EventOnHeroAssistantClaimRewardAckAction`2_hotfix = (luaObj.RawGet("add_EventOnHeroAssistantClaimRewardAck") as LuaFunction);
					this.m_remove_EventOnHeroAssistantClaimRewardAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnHeroAssistantClaimRewardAck") as LuaFunction);
					this.m_SendHeroDungeonLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendHeroDungeonLevelAttackReq") as LuaFunction);
					this.m_SendHeroDungeonLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendHeroDungeonLevelBattleFinishedReq") as LuaFunction);
					this.m_SendHeroDungeonLevelRaidReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroDungeonLevelRaidReq") as LuaFunction);
					this.m_SendHeroDungeonChapterStarRewardGainReqInt32Int32_hotfix = (luaObj.RawGet("SendHeroDungeonChapterStarRewardGainReq") as LuaFunction);
					this.m_OnMessageDSHeroDungeonNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroDungeonLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroDungeonLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroDungeonLevelRaidAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroDungeonChapterStarRewardGainAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_CanUnLockHeroDungeonLevelInt32_hotfix = (luaObj.RawGet("CanUnLockHeroDungeonLevel") as LuaFunction);
					this.m_IsHeroDungeonLevelAttachUnlockLevelInt32_hotfix = (luaObj.RawGet("IsHeroDungeonLevelAttachUnlockLevel") as LuaFunction);
					this.m_CanAttackHeroDungeonLevelInt32_hotfix = (luaObj.RawGet("CanAttackHeroDungeonLevel") as LuaFunction);
					this.m_GetHeroDungeonLevelChallengeNumConfigDataHeroDungeonLevelInfo_hotfix = (luaObj.RawGet("GetHeroDungeonLevelChallengeNum") as LuaFunction);
					this.m_GetHeroDungeonLevelCanChallengeNumConfigDataHeroDungeonLevelInfo_hotfix = (luaObj.RawGet("GetHeroDungeonLevelCanChallengeNum") as LuaFunction);
					this.m_GetHeroDungeonLevelCanChallengeMaxNumConfigDataHeroDungeonLevelInfo_hotfix = (luaObj.RawGet("GetHeroDungeonLevelCanChallengeMaxNum") as LuaFunction);
					this.m_CanRaidHeroDungeonLevelInt32_hotfix = (luaObj.RawGet("CanRaidHeroDungeonLevel") as LuaFunction);
					this.m_GetHeroDungeonLevelStarsConfigDataHeroDungeonLevelInfo_hotfix = (luaObj.RawGet("GetHeroDungeonLevelStars") as LuaFunction);
					this.m_GetHeroDungeonLevelAchievementCountConfigDataHeroDungeonLevelInfo_hotfix = (luaObj.RawGet("GetHeroDungeonLevelAchievementCount") as LuaFunction);
					this.m_HasHeroDungeonLevelAchievementInt32_hotfix = (luaObj.RawGet("HasHeroDungeonLevelAchievement") as LuaFunction);
					this.m_GetHeroDungeonChapterGainStarsInt32_hotfix = (luaObj.RawGet("GetHeroDungeonChapterGainStars") as LuaFunction);
					this.m_GetHeroDungeonChapterAllStarsInt32_hotfix = (luaObj.RawGet("GetHeroDungeonChapterAllStars") as LuaFunction);
					this.m_GetHeroDungeonStarRewardStatusInt32Int32_hotfix = (luaObj.RawGet("GetHeroDungeonStarRewardStatus") as LuaFunction);
					this.m_CanGainHeroDungeonStarRewardInt32Int32_hotfix = (luaObj.RawGet("CanGainHeroDungeonStarReward") as LuaFunction);
					this.m_IsLevelChallengedInt32_hotfix = (luaObj.RawGet("IsLevelChallenged") as LuaFunction);
					this.m_IsHeroDungeonNewMarkShowInt32_hotfix = (luaObj.RawGet("IsHeroDungeonNewMarkShow") as LuaFunction);
					this.m_HeroDungeonProgressInt32_hotfix = (luaObj.RawGet("HeroDungeonProgress") as LuaFunction);
					this.m_GetHeroDungeonDailyChallengeMaxNums_hotfix = (luaObj.RawGet("GetHeroDungeonDailyChallengeMaxNums") as LuaFunction);
					this.m_add_EventOnHeroDungeonLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroDungeonLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnHeroDungeonLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroDungeonLevelAttackAck") as LuaFunction);
					this.m_add_EventOnHeroDungeonLevelRaidAckAction`3_hotfix = (luaObj.RawGet("add_EventOnHeroDungeonLevelRaidAck") as LuaFunction);
					this.m_remove_EventOnHeroDungeonLevelRaidAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnHeroDungeonLevelRaidAck") as LuaFunction);
					this.m_add_EventOnHeroDungeonRewardGainAckAction`2_hotfix = (luaObj.RawGet("add_EventOnHeroDungeonRewardGainAck") as LuaFunction);
					this.m_remove_EventOnHeroDungeonRewardGainAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnHeroDungeonRewardGainAck") as LuaFunction);
					this.m_add_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix = (luaObj.RawGet("add_EventOnHeroDungeonLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix = (luaObj.RawGet("remove_EventOnHeroDungeonLevelBattleFinishedAck") as LuaFunction);
					this.m_SendHeroPhantomAttackReqInt32_hotfix = (luaObj.RawGet("SendHeroPhantomAttackReq") as LuaFunction);
					this.m_SendHeroPhantomBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendHeroPhantomBattleFinishedReq") as LuaFunction);
					this.m_OnMessageDSHeroPhantomNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroPhantomAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroPhantomBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsHeroPhantomDisplayInt32_hotfix = (luaObj.RawGet("IsHeroPhantomDisplay") as LuaFunction);
					this.m_IsHeroPhantomOpenedInt32_hotfix = (luaObj.RawGet("IsHeroPhantomOpened") as LuaFunction);
					this.m_IsHeroPhantomLevelOpenedInt32_hotfix = (luaObj.RawGet("IsHeroPhantomLevelOpened") as LuaFunction);
					this.m_CanAttackHeroPhantomLevelInt32_hotfix = (luaObj.RawGet("CanAttackHeroPhantomLevel") as LuaFunction);
					this.m_IsHeroPhantomLevelFinihedInt32_hotfix = (luaObj.RawGet("IsHeroPhantomLevelFinihed") as LuaFunction);
					this.m_IsCompleteHeroPhantomLevelAchievementInt32_hotfix = (luaObj.RawGet("IsCompleteHeroPhantomLevelAchievement") as LuaFunction);
					this.m_GetHeroPhantomCompleteAchievementCountInt32_hotfix = (luaObj.RawGet("GetHeroPhantomCompleteAchievementCount") as LuaFunction);
					this.m_GetHeroPhantomLevelCompleteAchievementCountInt32_hotfix = (luaObj.RawGet("GetHeroPhantomLevelCompleteAchievementCount") as LuaFunction);
					this.m_IsHeroPhantomLevelFirstCleanCompleteInt32_hotfix = (luaObj.RawGet("IsHeroPhantomLevelFirstCleanComplete") as LuaFunction);
					this.m_add_EventOnHeroPhantomAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroPhantomAttackAck") as LuaFunction);
					this.m_remove_EventOnHeroPhantomAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroPhantomAttackAck") as LuaFunction);
					this.m_add_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix = (luaObj.RawGet("add_EventOnHeroPhantomBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix = (luaObj.RawGet("remove_EventOnHeroPhantomBattleFinishedAck") as LuaFunction);
					this.m_SendHeroTrainningLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendHeroTrainningLevelAttackReq") as LuaFunction);
					this.m_SendHeroTrainningLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendHeroTrainningLevelBattleFinishedReq") as LuaFunction);
					this.m_OnMessageDSHeroTrainningNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroTrainningLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeroTrainningLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsHeroTrainningOpenedInt32_hotfix = (luaObj.RawGet("IsHeroTrainningOpened") as LuaFunction);
					this.m_IsHeroTrainningLevelOpenedInt32_hotfix = (luaObj.RawGet("IsHeroTrainningLevelOpened") as LuaFunction);
					this.m_CanAttackHeroTrainningLevelInt32_hotfix = (luaObj.RawGet("CanAttackHeroTrainningLevel") as LuaFunction);
					this.m_GetHeroTrainningTicketCount_hotfix = (luaObj.RawGet("GetHeroTrainningTicketCount") as LuaFunction);
					this.m_IsHeroTrainningLevelFinishedInt32_hotfix = (luaObj.RawGet("IsHeroTrainningLevelFinished") as LuaFunction);
					this.m_GetHeroTrainingDailyRewardRestCount_hotfix = (luaObj.RawGet("GetHeroTrainingDailyRewardRestCount") as LuaFunction);
					this.m_add_EventOnHeroTrainningLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeroTrainningLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnHeroTrainningLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeroTrainningLevelAttackAck") as LuaFunction);
					this.m_add_EventOnHeroTrainningLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnHeroTrainningLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnHeroTrainningLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnHeroTrainningLevelBattleFinishedAck") as LuaFunction);
					this.m_SendLevelWayPointMoveReqInt32_hotfix = (luaObj.RawGet("SendLevelWayPointMoveReq") as LuaFunction);
					this.m_SendLevelScenarioHandleReqInt32_hotfix = (luaObj.RawGet("SendLevelScenarioHandleReq") as LuaFunction);
					this.m_SendLevelWayPointBattleFinishReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendLevelWayPointBattleFinishReq") as LuaFunction);
					this.m_OnMessageDSLevelNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageLevelWayPointMoveAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageLevelScenarioHandleAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageLevelWayPointBattleFinishAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRandomEventNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_AppendChangedGoodsToRewardsList`1List`1_hotfix = (luaObj.RawGet("AppendChangedGoodsToRewards") as LuaFunction);
					this.m_GetNotBagItemCountGoods_hotfix = (luaObj.RawGet("GetNotBagItemCount") as LuaFunction);
					this.m_IsRegionOpenInt32_hotfix = (luaObj.RawGet("IsRegionOpen") as LuaFunction);
					this.m_GetCurrentWorldMapInfo_hotfix = (luaObj.RawGet("GetCurrentWorldMapInfo") as LuaFunction);
					this.m_GetPlayerCurrentWaypointInfo_hotfix = (luaObj.RawGet("GetPlayerCurrentWaypointInfo") as LuaFunction);
					this.m_GetWaypointStatusInt32_hotfix = (luaObj.RawGet("GetWaypointStatus") as LuaFunction);
					this.m_GetWaypointEventInt32ConfigDataEventInfo_RandomEvent__hotfix = (luaObj.RawGet("GetWaypointEvent") as LuaFunction);
					this.m_CanAttackEventWaypointInt32_hotfix = (luaObj.RawGet("CanAttackEventWaypoint") as LuaFunction);
					this.m_CanAttackScenarioInt32_hotfix = (luaObj.RawGet("CanAttackScenario") as LuaFunction);
					this.m_GetLastFinishedScenarioInfo_hotfix = (luaObj.RawGet("GetLastFinishedScenarioInfo") as LuaFunction);
					this.m_GetNextScenarioInfo_hotfix = (luaObj.RawGet("GetNextScenarioInfo") as LuaFunction);
					this.m_IsScenarioFinishedInt32_hotfix = (luaObj.RawGet("IsScenarioFinished") as LuaFunction);
					this.m_CanUnlockScenarioInt32_hotfix = (luaObj.RawGet("CanUnlockScenario") as LuaFunction);
					this.m_InitCurrentScenarioInfo_hotfix = (luaObj.RawGet("InitCurrentScenarioInfo") as LuaFunction);
					this.m_CheckChangeCurrentScenario_hotfix = (luaObj.RawGet("CheckChangeCurrentScenario") as LuaFunction);
					this.m_GetCurrentScenarioInfo_hotfix = (luaObj.RawGet("GetCurrentScenarioInfo") as LuaFunction);
					this.m_UpdateCurrentWaypointEvents_hotfix = (luaObj.RawGet("UpdateCurrentWaypointEvents") as LuaFunction);
					this.m_GetCurrentWaypointEvents_hotfix = (luaObj.RawGet("GetCurrentWaypointEvents") as LuaFunction);
					this.m_GetCurrentWaypointEventInfoInt32_hotfix = (luaObj.RawGet("GetCurrentWaypointEventInfo") as LuaFunction);
					this.m_GetCurrentWaypointRandomEventInt32_hotfix = (luaObj.RawGet("GetCurrentWaypointRandomEvent") as LuaFunction);
					this.m_add_EventOnLevelWayPointMoveAckAction`2_hotfix = (luaObj.RawGet("add_EventOnLevelWayPointMoveAck") as LuaFunction);
					this.m_remove_EventOnLevelWayPointMoveAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnLevelWayPointMoveAck") as LuaFunction);
					this.m_add_EventOnLevelScenarioHandleAckAction`2_hotfix = (luaObj.RawGet("add_EventOnLevelScenarioHandleAck") as LuaFunction);
					this.m_remove_EventOnLevelScenarioHandleAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnLevelScenarioHandleAck") as LuaFunction);
					this.m_add_EventOnLevelWayPointBattleFinishAckAction`3_hotfix = (luaObj.RawGet("add_EventOnLevelWayPointBattleFinishAck") as LuaFunction);
					this.m_remove_EventOnLevelWayPointBattleFinishAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnLevelWayPointBattleFinishAck") as LuaFunction);
					this.m_add_EventOnRandomEventNtfAction_hotfix = (luaObj.RawGet("add_EventOnRandomEventNtf") as LuaFunction);
					this.m_remove_EventOnRandomEventNtfAction_hotfix = (luaObj.RawGet("remove_EventOnRandomEventNtf") as LuaFunction);
					this.m_SendMailsGetReq_hotfix = (luaObj.RawGet("SendMailsGetReq") as LuaFunction);
					this.m_SendMailReadReqUInt64_hotfix = (luaObj.RawGet("SendMailReadReq") as LuaFunction);
					this.m_SendMailAttachmentsGetReqUInt64_hotfix = (luaObj.RawGet("SendMailAttachmentsGetReq") as LuaFunction);
					this.m_SendMailAttachmentAutoGetReq_hotfix = (luaObj.RawGet("SendMailAttachmentAutoGetReq") as LuaFunction);
					this.m_OnMessageDSMailNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMailsGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMailsChangedNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMailReadAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMailAttachmentsGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMailAttachmentAutoGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetMails_hotfix = (luaObj.RawGet("GetMails") as LuaFunction);
					this.m_IsMailReadedMail_hotfix = (luaObj.RawGet("IsMailReaded") as LuaFunction);
					this.m_IsExistMailAttacmentsMail_hotfix = (luaObj.RawGet("IsExistMailAttacments") as LuaFunction);
					this.m_HasGotMailAttachmentsMail_hotfix = (luaObj.RawGet("HasGotMailAttachments") as LuaFunction);
					this.m_GetMailExpiredTimeMail_hotfix = (luaObj.RawGet("GetMailExpiredTime") as LuaFunction);
					this.m_GetUnReadMailCount_hotfix = (luaObj.RawGet("GetUnReadMailCount") as LuaFunction);
					this.m_CanGetMailAttachmentUInt64_hotfix = (luaObj.RawGet("CanGetMailAttachment") as LuaFunction);
					this.m_CanAutoGetMailAttachment_hotfix = (luaObj.RawGet("CanAutoGetMailAttachment") as LuaFunction);
					this.m_IsOfficialMailMail_hotfix = (luaObj.RawGet("IsOfficialMail") as LuaFunction);
					this.m_get_IsHaveMailList_hotfix = (luaObj.RawGet("get_IsHaveMailList") as LuaFunction);
					this.m_set_IsHaveMailListBoolean_hotfix = (luaObj.RawGet("set_IsHaveMailList") as LuaFunction);
					this.m_add_EventOnMailsGetAckAction_hotfix = (luaObj.RawGet("add_EventOnMailsGetAck") as LuaFunction);
					this.m_remove_EventOnMailsGetAckAction_hotfix = (luaObj.RawGet("remove_EventOnMailsGetAck") as LuaFunction);
					this.m_add_EventOnMailsChangedNtfAction_hotfix = (luaObj.RawGet("add_EventOnMailsChangedNtf") as LuaFunction);
					this.m_remove_EventOnMailsChangedNtfAction_hotfix = (luaObj.RawGet("remove_EventOnMailsChangedNtf") as LuaFunction);
					this.m_add_EventOnMailReadAckAction`1_hotfix = (luaObj.RawGet("add_EventOnMailReadAck") as LuaFunction);
					this.m_remove_EventOnMailReadAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnMailReadAck") as LuaFunction);
					this.m_add_EventOnMailAttachmentsGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnMailAttachmentsGetAck") as LuaFunction);
					this.m_remove_EventOnMailAttachmentsGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnMailAttachmentsGetAck") as LuaFunction);
					this.m_add_EventOnMailAttachmentsAutoGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnMailAttachmentsAutoGetAck") as LuaFunction);
					this.m_remove_EventOnMailAttachmentsAutoGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnMailAttachmentsAutoGetAck") as LuaFunction);
					this.m_SendMemoryCorridorLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendMemoryCorridorLevelAttackReq") as LuaFunction);
					this.m_SendMemoryCorridorLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendMemoryCorridorLevelBattleFinishedReq") as LuaFunction);
					this.m_OnMessageDSMemoryCorridorNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMemoryCorridorLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMemoryCorridorLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsMemoryCorridorOpenedInt32_hotfix = (luaObj.RawGet("IsMemoryCorridorOpened") as LuaFunction);
					this.m_IsMemoryCorridorLevelOpenedInt32_hotfix = (luaObj.RawGet("IsMemoryCorridorLevelOpened") as LuaFunction);
					this.m_CanAttackMemoryCorridorLevelInt32_hotfix = (luaObj.RawGet("CanAttackMemoryCorridorLevel") as LuaFunction);
					this.m_GetMemoryCorridorTicketCount_hotfix = (luaObj.RawGet("GetMemoryCorridorTicketCount") as LuaFunction);
					this.m_IsMemoryCorridorLevelFinishedInt32_hotfix = (luaObj.RawGet("IsMemoryCorridorLevelFinished") as LuaFunction);
					this.m_GetMemoryCorridorDailyRewardRestCount_hotfix = (luaObj.RawGet("GetMemoryCorridorDailyRewardRestCount") as LuaFunction);
					this.m_add_EventOnMemoryCorridorLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnMemoryCorridorLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnMemoryCorridorLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnMemoryCorridorLevelAttackAck") as LuaFunction);
					this.m_add_EventOnMemoryCorridorLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnMemoryCorridorLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnMemoryCorridorLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnMemoryCorridorLevelBattleFinishedAck") as LuaFunction);
					this.m_SendGetMissionRewardReqInt32_hotfix = (luaObj.RawGet("SendGetMissionRewardReq") as LuaFunction);
					this.m_OnMessageDirectelyActivitedMissionUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSMissionNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGetMissionRewardAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_add_EventOnMissionRewardGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnMissionRewardGetAck") as LuaFunction);
					this.m_remove_EventOnMissionRewardGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnMissionRewardGetAck") as LuaFunction);
					this.m_GetAllProcessingMissionList_hotfix = (luaObj.RawGet("GetAllProcessingMissionList") as LuaFunction);
					this.m_GetAllCompletedMissionList_hotfix = (luaObj.RawGet("GetAllCompletedMissionList") as LuaFunction);
					this.m_GetAllFinishedMissionList_hotfix = (luaObj.RawGet("GetAllFinishedMissionList") as LuaFunction);
					this.m_GetMissionMaxProcessMission_hotfix = (luaObj.RawGet("GetMissionMaxProcess") as LuaFunction);
					this.m_GetMissionCompleteProcessMission_hotfix = (luaObj.RawGet("GetMissionCompleteProcess") as LuaFunction);
					this.m_IsExistMissionCompleted_hotfix = (luaObj.RawGet("IsExistMissionCompleted") as LuaFunction);
					this.m_CanGainMissionRewardInt32_hotfix = (luaObj.RawGet("CanGainMissionReward") as LuaFunction);
					this.m_CanGetMissionRewardingMission_hotfix = (luaObj.RawGet("CanGetMissionRewarding") as LuaFunction);
					this.m_SendNoviceClaimRewardReqInt32_hotfix = (luaObj.RawGet("SendNoviceClaimRewardReq") as LuaFunction);
					this.m_OnMessageDSNoviceNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageNoviceClaimRewardAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetDaysAfterCreation_hotfix = (luaObj.RawGet("GetDaysAfterCreation") as LuaFunction);
					this.m_GetNoviceMissions_hotfix = (luaObj.RawGet("GetNoviceMissions") as LuaFunction);
					this.m_GetNoviceProcessingMissions_hotfix = (luaObj.RawGet("GetNoviceProcessingMissions") as LuaFunction);
					this.m_IsShowRedMarkOnOpenServiceButton_hotfix = (luaObj.RawGet("IsShowRedMarkOnOpenServiceButton") as LuaFunction);
					this.m_HaveFinishedNotGetNoviceMissions_hotfix = (luaObj.RawGet("HaveFinishedNotGetNoviceMissions") as LuaFunction);
					this.m_HaveFinishedNotGetNoiviceMissionsByDayInt32_hotfix = (luaObj.RawGet("HaveFinishedNotGetNoiviceMissionsByDay") as LuaFunction);
					this.m_GetFinishedAndGetRewardNoviceMissions_hotfix = (luaObj.RawGet("GetFinishedAndGetRewardNoviceMissions") as LuaFunction);
					this.m_GetNoviceMissionPoints_hotfix = (luaObj.RawGet("GetNoviceMissionPoints") as LuaFunction);
					this.m_GetNovicePointsRewardsConfig_hotfix = (luaObj.RawGet("GetNovicePointsRewardsConfig") as LuaFunction);
					this.m_CanClaimNoviceRewardInt32_hotfix = (luaObj.RawGet("CanClaimNoviceReward") as LuaFunction);
					this.m_GetNoviceMissionsEndTime_hotfix = (luaObj.RawGet("GetNoviceMissionsEndTime") as LuaFunction);
					this.m_add_EventOnNoviceClaimRewardAckAction`2_hotfix = (luaObj.RawGet("add_EventOnNoviceClaimRewardAck") as LuaFunction);
					this.m_remove_EventOnNoviceClaimRewardAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnNoviceClaimRewardAck") as LuaFunction);
					this.m_SendOperationalActivityGainRewardReqUInt64Int32_hotfix = (luaObj.RawGet("SendOperationalActivityGainRewardReq") as LuaFunction);
					this.m_SendOperationalActivityExchangeItemGroupReqUInt64Int32_hotfix = (luaObj.RawGet("SendOperationalActivityExchangeItemGroupReq") as LuaFunction);
					this.m_SendRedeemInfoReq_hotfix = (luaObj.RawGet("SendRedeemInfoReq") as LuaFunction);
					this.m_SendRedeemClaimReq_hotfix = (luaObj.RawGet("SendRedeemClaimReq") as LuaFunction);
					this.m_SendFansRewardsFromPBTCBTInfoReq_hotfix = (luaObj.RawGet("SendFansRewardsFromPBTCBTInfoReq") as LuaFunction);
					this.m_SendFansRewardsFromPBTCBTClaimReq_hotfix = (luaObj.RawGet("SendFansRewardsFromPBTCBTClaimReq") as LuaFunction);
					this.m_OnMessageOperationalActivityGainRewardAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageOperationalActivityExchangeItemGroupAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageAdvertisementFlowLayoutUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSOperationalActivityNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRemoveAnnouncementNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSAnnouncementNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageNewOperationalActivityNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageNewAnnouncementNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageUpdateOperationalActivityNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageNewMarqueeNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRedeemInfoAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRedeemClaimAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFansRewardsFromPBTCBTInfoAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFansRewardsFromPBTCBTClaimAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetAllCurrentAnnouncements_hotfix = (luaObj.RawGet("GetAllCurrentAnnouncements") as LuaFunction);
					this.m_SetRedeemInfoRedeemInfoAck_hotfix = (luaObj.RawGet("SetRedeemInfo") as LuaFunction);
					this.m_SetRedeemClaimed_hotfix = (luaObj.RawGet("SetRedeemClaimed") as LuaFunction);
					this.m_GetRedeemInfo_hotfix = (luaObj.RawGet("GetRedeemInfo") as LuaFunction);
					this.m_IsRedeemClaimed_hotfix = (luaObj.RawGet("IsRedeemClaimed") as LuaFunction);
					this.m_GetAllCurrentActivity_hotfix = (luaObj.RawGet("GetAllCurrentActivity") as LuaFunction);
					this.m_CanShowActivityOperationalActivityBase_hotfix = (luaObj.RawGet("CanShowActivity") as LuaFunction);
					this.m_CanActivityGainRewardOperationalActivityBaseInt32_hotfix = (luaObj.RawGet("CanActivityGainReward") as LuaFunction);
					this.m_CanActivityGainRewardResultOperationalActivityBaseInt32_hotfix = (luaObj.RawGet("CanActivityGainRewardResult") as LuaFunction);
					this.m_FindOperationalActivityByIdUInt64_hotfix = (luaObj.RawGet("FindOperationalActivityById") as LuaFunction);
					this.m_CanExchangeGoodsResultOperationalActivityBaseInt32_hotfix = (luaObj.RawGet("CanExchangeGoodsResult") as LuaFunction);
					this.m_IsTabRedPointShowOperationalActivityBase_hotfix = (luaObj.RawGet("IsTabRedPointShow") as LuaFunction);
					this.m_IsActivityRedPointShow_hotfix = (luaObj.RawGet("IsActivityRedPointShow") as LuaFunction);
					this.m_GetAllAdvertisementFlowLayouts_hotfix = (luaObj.RawGet("GetAllAdvertisementFlowLayouts") as LuaFunction);
					this.m_IsFirstTryToOpenActivityNoticeUI_hotfix = (luaObj.RawGet("IsFirstTryToOpenActivityNoticeUI") as LuaFunction);
					this.m_HaveActivityNotice_hotfix = (luaObj.RawGet("HaveActivityNotice") as LuaFunction);
					this.m_SetBuyGuideActivityViewed_hotfix = (luaObj.RawGet("SetBuyGuideActivityViewed") as LuaFunction);
					this.m_add_EventOnActivityGainRewardAckAction`1_hotfix = (luaObj.RawGet("add_EventOnActivityGainRewardAck") as LuaFunction);
					this.m_remove_EventOnActivityGainRewardAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnActivityGainRewardAck") as LuaFunction);
					this.m_add_EventOnActivityExchangeItemGroupAckAction`1_hotfix = (luaObj.RawGet("add_EventOnActivityExchangeItemGroupAck") as LuaFunction);
					this.m_remove_EventOnActivityExchangeItemGroupAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnActivityExchangeItemGroupAck") as LuaFunction);
					this.m_add_EventOnNewMarqueeNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnNewMarqueeNtf") as LuaFunction);
					this.m_remove_EventOnNewMarqueeNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnNewMarqueeNtf") as LuaFunction);
					this.m_add_EventOnActivityRedeemClaimAckAction`1_hotfix = (luaObj.RawGet("add_EventOnActivityRedeemClaimAck") as LuaFunction);
					this.m_remove_EventOnActivityRedeemClaimAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnActivityRedeemClaimAck") as LuaFunction);
					this.m_add_EventOnActivityFansRewardsFromPBTCBTAction`2_hotfix = (luaObj.RawGet("add_EventOnActivityFansRewardsFromPBTCBT") as LuaFunction);
					this.m_remove_EventOnActivityFansRewardsFromPBTCBTAction`2_hotfix = (luaObj.RawGet("remove_EventOnActivityFansRewardsFromPBTCBT") as LuaFunction);
					this.m_SendOpenMemoryStoreReq_hotfix = (luaObj.RawGet("SendOpenMemoryStoreReq") as LuaFunction);
					this.m_SendShareReqInt32Int32_hotfix = (luaObj.RawGet("SendShareReq") as LuaFunction);
					this.m_SendCheckOnlineReq_hotfix = (luaObj.RawGet("SendCheckOnlineReq") as LuaFunction);
					this.m_SendPlayerInfoInitReq_hotfix = (luaObj.RawGet("SendPlayerInfoInitReq") as LuaFunction);
					this.m_SendPlayerInfoReqOnReloginBySessionBoolean_hotfix = (luaObj.RawGet("SendPlayerInfoReqOnReloginBySession") as LuaFunction);
					this.m_BuildPlayerInfoInitReqBoolean_hotfix = (luaObj.RawGet("BuildPlayerInfoInitReq") as LuaFunction);
					this.m_SendCreateCharactorReqString_hotfix = (luaObj.RawGet("SendCreateCharactorReq") as LuaFunction);
					this.m_SendBuyEnergyReq_hotfix = (luaObj.RawGet("SendBuyEnergyReq") as LuaFunction);
					this.m_SendBuyArenaTicketsReq_hotfix = (luaObj.RawGet("SendBuyArenaTicketsReq") as LuaFunction);
					this.m_SendHeadPortraitSetReqInt32_hotfix = (luaObj.RawGet("SendHeadPortraitSetReq") as LuaFunction);
					this.m_SendHeadFrameSetReqInt32_hotfix = (luaObj.RawGet("SendHeadFrameSetReq") as LuaFunction);
					this.m_SendHeadPortraitAndHeadFrameSetReqInt32Int32_hotfix = (luaObj.RawGet("SendHeadPortraitAndHeadFrameSetReq") as LuaFunction);
					this.m_SendChangePlayerNameReqString_hotfix = (luaObj.RawGet("SendChangePlayerNameReq") as LuaFunction);
					this.m_SendExchangeGiftCDKeyReqString_hotfix = (luaObj.RawGet("SendExchangeGiftCDKeyReq") as LuaFunction);
					this.m_SendClientHeartBeatNtf_hotfix = (luaObj.RawGet("SendClientHeartBeatNtf") as LuaFunction);
					this.m_SendClientAppPauseNtf_hotfix = (luaObj.RawGet("SendClientAppPauseNtf") as LuaFunction);
					this.m_SendClientAppResumeNtf_hotfix = (luaObj.RawGet("SendClientAppResumeNtf") as LuaFunction);
					this.m_SendOpenGameRatingReq_hotfix = (luaObj.RawGet("SendOpenGameRatingReq") as LuaFunction);
					this.m_OnMessageOpenMemoryStoreAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDailyFlushNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageShareAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageHeadPortraitAndHeadFrameSetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRMBUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageFlushConfigNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageExchangeGiftCDKeyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessagePlayerInfoInitAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageCreateCharactorAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSPlayerBasicNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessagePlayerInfoInitEndNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageProChangedGoodsNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBuyEnergyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageArenaTicketsBuyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessagePlayerNameChangeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGameRatingOpenAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageCheckOnlineAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_SetChangedGoodsListStatusList`1_hotfix = (luaObj.RawGet("SetChangedGoodsListStatus") as LuaFunction);
					this.m_SetChangedGoodsStatusProGoodsBoolean_Boolean_Boolean__hotfix = (luaObj.RawGet("SetChangedGoodsStatus") as LuaFunction);
					this.m_SetBagItemPropertyChangesProGoods_hotfix = (luaObj.RawGet("SetBagItemPropertyChanges") as LuaFunction);
					this.m_IsMemoryStoreOpen_hotfix = (luaObj.RawGet("IsMemoryStoreOpen") as LuaFunction);
					this.m_GetEnergyReachMaxTime_hotfix = (luaObj.RawGet("GetEnergyReachMaxTime") as LuaFunction);
					this.m_GetArenaTicketNextGivenTime_hotfix = (luaObj.RawGet("GetArenaTicketNextGivenTime") as LuaFunction);
					this.m_GetBlackMarketNextFlushTime_hotfix = (luaObj.RawGet("GetBlackMarketNextFlushTime") as LuaFunction);
					this.m_OnMessageUpdateServerTimeNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_InitPlayerInfoPlayerInfoInitAck_hotfix = (luaObj.RawGet("InitPlayerInfo") as LuaFunction);
					this.m_UpdateServerTimeInt64_hotfix = (luaObj.RawGet("UpdateServerTime") as LuaFunction);
					this.m_InitPlayerBasicDSPlayerBasicNtf_hotfix = (luaObj.RawGet("InitPlayerBasic") as LuaFunction);
					this.m_GetGold_hotfix = (luaObj.RawGet("GetGold") as LuaFunction);
					this.m_GetRechargeRMB_hotfix = (luaObj.RawGet("GetRechargeRMB") as LuaFunction);
					this.m_GetCrystal_hotfix = (luaObj.RawGet("GetCrystal") as LuaFunction);
					this.m_GetGuildMedal_hotfix = (luaObj.RawGet("GetGuildMedal") as LuaFunction);
					this.m_GetMithralStone_hotfix = (luaObj.RawGet("GetMithralStone") as LuaFunction);
					this.m_GetBrillianceMithralStone_hotfix = (luaObj.RawGet("GetBrillianceMithralStone") as LuaFunction);
					this.m_GetEnergy_hotfix = (luaObj.RawGet("GetEnergy") as LuaFunction);
					this.m_GetEnergyMax_hotfix = (luaObj.RawGet("GetEnergyMax") as LuaFunction);
					this.m_GetCreateTime_hotfix = (luaObj.RawGet("GetCreateTime") as LuaFunction);
					this.m_GetCreateTimeUtc_hotfix = (luaObj.RawGet("GetCreateTimeUtc") as LuaFunction);
					this.m_CanBuyEnergy_hotfix = (luaObj.RawGet("CanBuyEnergy") as LuaFunction);
					this.m_GetBuyEnergyNums_hotfix = (luaObj.RawGet("GetBuyEnergyNums") as LuaFunction);
					this.m_GetEnergyFlushTime_hotfix = (luaObj.RawGet("GetEnergyFlushTime") as LuaFunction);
					this.m_CanBuyArenaTickets_hotfix = (luaObj.RawGet("CanBuyArenaTickets") as LuaFunction);
					this.m_GetBuyArenaTicketsNums_hotfix = (luaObj.RawGet("GetBuyArenaTicketsNums") as LuaFunction);
					this.m_GetPlayerLevel_hotfix = (luaObj.RawGet("GetPlayerLevel") as LuaFunction);
					this.m_GetPlayerExp_hotfix = (luaObj.RawGet("GetPlayerExp") as LuaFunction);
					this.m_GetPlayerNextLevelExp_hotfix = (luaObj.RawGet("GetPlayerNextLevelExp") as LuaFunction);
					this.m_GetPlayerVip_hotfix = (luaObj.RawGet("GetPlayerVip") as LuaFunction);
					this.m_GetPlayerHeadIcon_hotfix = (luaObj.RawGet("GetPlayerHeadIcon") as LuaFunction);
					this.m_GetPlayerHeadPortrait_hotfix = (luaObj.RawGet("GetPlayerHeadPortrait") as LuaFunction);
					this.m_GetPlayerHeadFrame_hotfix = (luaObj.RawGet("GetPlayerHeadFrame") as LuaFunction);
					this.m_SetUserGuideList`1_hotfix = (luaObj.RawGet("SetUserGuide") as LuaFunction);
					this.m_GetPlayerName_hotfix = (luaObj.RawGet("GetPlayerName") as LuaFunction);
					this.m_CheckPlayerNameString_hotfix = (luaObj.RawGet("CheckPlayerName") as LuaFunction);
					this.m_CanChangePlayerNameString_hotfix = (luaObj.RawGet("CanChangePlayerName") as LuaFunction);
					this.m_GetUserId_hotfix = (luaObj.RawGet("GetUserId") as LuaFunction);
					this.m_IsMeString_hotfix = (luaObj.RawGet("IsMe") as LuaFunction);
					this.m_SetNeedBattleReportLogBoolean_hotfix = (luaObj.RawGet("SetNeedBattleReportLog") as LuaFunction);
					this.m_HasHeadFrameIdInt32_hotfix = (luaObj.RawGet("HasHeadFrameId") as LuaFunction);
					this.m_GetHeadFrameSourceInt32_hotfix = (luaObj.RawGet("GetHeadFrameSource") as LuaFunction);
					this.m_GetAllValidMonthCards_hotfix = (luaObj.RawGet("GetAllValidMonthCards") as LuaFunction);
					this.m_HasValidMonthCards_hotfix = (luaObj.RawGet("HasValidMonthCards") as LuaFunction);
					this.m_get_IsNeedBattleReportLog_hotfix = (luaObj.RawGet("get_IsNeedBattleReportLog") as LuaFunction);
					this.m_set_IsNeedBattleReportLogBoolean_hotfix = (luaObj.RawGet("set_IsNeedBattleReportLog") as LuaFunction);
					this.m_ResetPushNotification_hotfix = (luaObj.RawGet("ResetPushNotification") as LuaFunction);
					this.m_add_EventOnExchangeGiftCDKeyAckAction`2_hotfix = (luaObj.RawGet("add_EventOnExchangeGiftCDKeyAck") as LuaFunction);
					this.m_remove_EventOnExchangeGiftCDKeyAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnExchangeGiftCDKeyAck") as LuaFunction);
					this.m_add_EventOnPlayerInfoInitAckAction`1_hotfix = (luaObj.RawGet("add_EventOnPlayerInfoInitAck") as LuaFunction);
					this.m_remove_EventOnPlayerInfoInitAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnPlayerInfoInitAck") as LuaFunction);
					this.m_add_EventOnPlayerInfoInitEndAction_hotfix = (luaObj.RawGet("add_EventOnPlayerInfoInitEnd") as LuaFunction);
					this.m_remove_EventOnPlayerInfoInitEndAction_hotfix = (luaObj.RawGet("remove_EventOnPlayerInfoInitEnd") as LuaFunction);
					this.m_add_EventOnCreateCharactorAckAction`1_hotfix = (luaObj.RawGet("add_EventOnCreateCharactorAck") as LuaFunction);
					this.m_remove_EventOnCreateCharactorAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnCreateCharactorAck") as LuaFunction);
					this.m_add_EventOnBuyEnergyAckAction`1_hotfix = (luaObj.RawGet("add_EventOnBuyEnergyAck") as LuaFunction);
					this.m_remove_EventOnBuyEnergyAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnBuyEnergyAck") as LuaFunction);
					this.m_add_EventOnHeadPortraitAndHeadFrameSetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnHeadPortraitAndHeadFrameSetAck") as LuaFunction);
					this.m_remove_EventOnHeadPortraitAndHeadFrameSetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnHeadPortraitAndHeadFrameSetAck") as LuaFunction);
					this.m_add_EventOnPlayerNameChangeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnPlayerNameChangeAck") as LuaFunction);
					this.m_remove_EventOnPlayerNameChangeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnPlayerNameChangeAck") as LuaFunction);
					this.m_add_EventOnPlayerInfoChangeNtfAction_hotfix = (luaObj.RawGet("add_EventOnPlayerInfoChangeNtf") as LuaFunction);
					this.m_remove_EventOnPlayerInfoChangeNtfAction_hotfix = (luaObj.RawGet("remove_EventOnPlayerInfoChangeNtf") as LuaFunction);
					this.m_add_EventOnArenaTicketsBuyAckAction`1_hotfix = (luaObj.RawGet("add_EventOnArenaTicketsBuyAck") as LuaFunction);
					this.m_remove_EventOnArenaTicketsBuyAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnArenaTicketsBuyAck") as LuaFunction);
					this.m_add_EventOnOpenGameRatingAckAction_hotfix = (luaObj.RawGet("add_EventOnOpenGameRatingAck") as LuaFunction);
					this.m_remove_EventOnOpenGameRatingAckAction_hotfix = (luaObj.RawGet("remove_EventOnOpenGameRatingAck") as LuaFunction);
					this.m_add_EventOnShareAckAction_hotfix = (luaObj.RawGet("add_EventOnShareAck") as LuaFunction);
					this.m_remove_EventOnShareAckAction_hotfix = (luaObj.RawGet("remove_EventOnShareAck") as LuaFunction);
					this.m_add_EventOnCheckOnlineAckAction_hotfix = (luaObj.RawGet("add_EventOnCheckOnlineAck") as LuaFunction);
					this.m_remove_EventOnCheckOnlineAckAction_hotfix = (luaObj.RawGet("remove_EventOnCheckOnlineAck") as LuaFunction);
					this.m_add_EventOnSendClientHeartBeatNtfFailAction_hotfix = (luaObj.RawGet("add_EventOnSendClientHeartBeatNtfFail") as LuaFunction);
					this.m_remove_EventOnSendClientHeartBeatNtfFailAction_hotfix = (luaObj.RawGet("remove_EventOnSendClientHeartBeatNtfFail") as LuaFunction);
					this.m_add_EventOnSendClientAppResumeNtfFailAction_hotfix = (luaObj.RawGet("add_EventOnSendClientAppResumeNtfFail") as LuaFunction);
					this.m_remove_EventOnSendClientAppResumeNtfFailAction_hotfix = (luaObj.RawGet("remove_EventOnSendClientAppResumeNtfFail") as LuaFunction);
					this.m_add_EventOpenMemoryStoreAckAction_hotfix = (luaObj.RawGet("add_EventOpenMemoryStoreAck") as LuaFunction);
					this.m_remove_EventOpenMemoryStoreAckAction_hotfix = (luaObj.RawGet("remove_EventOpenMemoryStoreAck") as LuaFunction);
					this.m_add_EventOnResetPushNotificationAction_hotfix = (luaObj.RawGet("add_EventOnResetPushNotification") as LuaFunction);
					this.m_remove_EventOnResetPushNotificationAction_hotfix = (luaObj.RawGet("remove_EventOnResetPushNotification") as LuaFunction);
					this.m_SendRaffleDrawReqInt32_hotfix = (luaObj.RawGet("SendRaffleDrawReq") as LuaFunction);
					this.m_OnMessageDSRaffleNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRaffleDrawAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetRafflePoolInt32_hotfix = (luaObj.RawGet("GetRafflePool") as LuaFunction);
					this.m_GetRaffleItemRafflePoolInt32_hotfix = (luaObj.RawGet("GetRaffleItem") as LuaFunction);
					this.m_GetDrawItemCostRafflePool_hotfix = (luaObj.RawGet("GetDrawItemCost") as LuaFunction);
					this.m_CanDrawInt32_hotfix = (luaObj.RawGet("CanDraw") as LuaFunction);
					this.m_IsRafflePoolOnActivityTimeInt32_hotfix = (luaObj.RawGet("IsRafflePoolOnActivityTime") as LuaFunction);
					this.m_add_EventOnRaffleDrawAckAction`3_hotfix = (luaObj.RawGet("add_EventOnRaffleDrawAck") as LuaFunction);
					this.m_remove_EventOnRaffleDrawAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnRaffleDrawAck") as LuaFunction);
					this.m_SendGetRandomStoreReqInt32_hotfix = (luaObj.RawGet("SendGetRandomStoreReq") as LuaFunction);
					this.m_SendFlushRandomStoreReqInt32_hotfix = (luaObj.RawGet("SendFlushRandomStoreReq") as LuaFunction);
					this.m_SendBuyRandomStoreItemReqInt32Int32Int32_hotfix = (luaObj.RawGet("SendBuyRandomStoreItemReq") as LuaFunction);
					this.m_OnMessageDSRandomStoreNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRandomStoreGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRandomStoreFlushAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRandomStoreBuyStoreItemAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetRandomStoreListInt32_hotfix = (luaObj.RawGet("GetRandomStoreList") as LuaFunction);
					this.m_GetNextFlushTimeInt32_hotfix = (luaObj.RawGet("GetNextFlushTime") as LuaFunction);
					this.m_CanManualRefreshRandomStoreInt32_hotfix = (luaObj.RawGet("CanManualRefreshRandomStore") as LuaFunction);
					this.m_FindRandomStoreByIDInt32_hotfix = (luaObj.RawGet("FindRandomStoreByID") as LuaFunction);
					this.m_CanBuyRandomStoreGoodsInt32Int32Int32_hotfix = (luaObj.RawGet("CanBuyRandomStoreGoods") as LuaFunction);
					this.m_GetManualFlushNumsInt32_hotfix = (luaObj.RawGet("GetManualFlushNums") as LuaFunction);
					this.m_add_EventOnGetRandomStoreListAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGetRandomStoreListAck") as LuaFunction);
					this.m_remove_EventOnGetRandomStoreListAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGetRandomStoreListAck") as LuaFunction);
					this.m_add_EventOnFlushRandomStoreAckAction`1_hotfix = (luaObj.RawGet("add_EventOnFlushRandomStoreAck") as LuaFunction);
					this.m_remove_EventOnFlushRandomStoreAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnFlushRandomStoreAck") as LuaFunction);
					this.m_add_EventOnRandomStoreBuyStoreItemAckAction`1_hotfix = (luaObj.RawGet("add_EventOnRandomStoreBuyStoreItemAck") as LuaFunction);
					this.m_remove_EventOnRandomStoreBuyStoreItemAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnRandomStoreBuyStoreItemAck") as LuaFunction);
					this.m_SendRankingListInfoQueryReqRankingListTypeInt32_hotfix = (luaObj.RawGet("SendRankingListInfoQueryReq") as LuaFunction);
					this.m_OnMessageRankingListInfoQueryAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsAbleQueryRankingListInfoRankingListTypeInt32__hotfix = (luaObj.RawGet("IsAbleQueryRankingListInfo") as LuaFunction);
					this.m_GetRankingListInfoByTypeRankingListType_hotfix = (luaObj.RawGet("GetRankingListInfoByType") as LuaFunction);
					this.m_IsRankingListInfoValidRankingListType_hotfix = (luaObj.RawGet("IsRankingListInfoValid") as LuaFunction);
					this.m_IsSingleHeroRankingListInfoValidInt32_hotfix = (luaObj.RawGet("IsSingleHeroRankingListInfoValid") as LuaFunction);
					this.m_GetSingleHeroRankingListInfoByHeroIdInt32_hotfix = (luaObj.RawGet("GetSingleHeroRankingListInfoByHeroId") as LuaFunction);
					this.m_add_EventOnRankingListInfoQueryAckAction`1_hotfix = (luaObj.RawGet("add_EventOnRankingListInfoQueryAck") as LuaFunction);
					this.m_remove_EventOnRankingListInfoQueryAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnRankingListInfoQueryAck") as LuaFunction);
					this.m_SendRealTimePVPWaitingForOpponentReqBattleMode_hotfix = (luaObj.RawGet("SendRealTimePVPWaitingForOpponentReq") as LuaFunction);
					this.m_SendRealTimePVPCancelWaitingForOpponentReq_hotfix = (luaObj.RawGet("SendRealTimePVPCancelWaitingForOpponentReq") as LuaFunction);
					this.m_SendRealTimePVPGetInfoReq_hotfix = (luaObj.RawGet("SendRealTimePVPGetInfoReq") as LuaFunction);
					this.m_SendRealTimePVPGetTopPlayersReqInt32Boolean_hotfix = (luaObj.RawGet("SendRealTimePVPGetTopPlayersReq") as LuaFunction);
					this.m_SendRealTimePVPAcquireWinsBonusReqInt32_hotfix = (luaObj.RawGet("SendRealTimePVPAcquireWinsBonusReq") as LuaFunction);
					this.m_OnMessageDSRealTimePVPNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSRealTimePVPPromotionBattleReportNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSRealTimePVPBattleReportNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRealTimePVPWaitingForOpponentAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRealTimePVPMatchupNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRealTimePVPCancelWaitingForOpponentAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRealTimePVPGetInfoAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRealTimePVPGetTopPlayersAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRealTimePVPAcquireWinsBonusAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRealTimePVPLeaderboardInfoNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsEmptyRealTimePVPPlayerInfo_hotfix = (luaObj.RawGet("IsEmptyRealTimePVPPlayerInfo") as LuaFunction);
					this.m_IsNeedGetRealTimePVPPlayerInfo_hotfix = (luaObj.RawGet("IsNeedGetRealTimePVPPlayerInfo") as LuaFunction);
					this.m_GetPlayerRealTimePVPScore_hotfix = (luaObj.RawGet("GetPlayerRealTimePVPScore") as LuaFunction);
					this.m_GetPlayerRealTimePVPDan_hotfix = (luaObj.RawGet("GetPlayerRealTimePVPDan") as LuaFunction);
					this.m_GetPlayerRealTimePVPRankBoolean_hotfix = (luaObj.RawGet("GetPlayerRealTimePVPRank") as LuaFunction);
					this.m_GetRealTimePVPLeaderboardPlayerInfosBoolean_hotfix = (luaObj.RawGet("GetRealTimePVPLeaderboardPlayerInfos") as LuaFunction);
					this.m_GetRealTimePVPLeaderboardUserSummarysBoolean_hotfix = (luaObj.RawGet("GetRealTimePVPLeaderboardUserSummarys") as LuaFunction);
					this.m_GetRealTimePVPBattleReports_hotfix = (luaObj.RawGet("GetRealTimePVPBattleReports") as LuaFunction);
					this.m_GetRealTimePVPPromotionBattleReports_hotfix = (luaObj.RawGet("GetRealTimePVPPromotionBattleReports") as LuaFunction);
					this.m_IsRealTimePVPPromotion_hotfix = (luaObj.RawGet("IsRealTimePVPPromotion") as LuaFunction);
					this.m_GetRealTimePVPConsecutiveWinsBattleMode_hotfix = (luaObj.RawGet("GetRealTimePVPConsecutiveWins") as LuaFunction);
					this.m_CheckRealTimePVPAcquireWinsBonusInt32_hotfix = (luaObj.RawGet("CheckRealTimePVPAcquireWinsBonus") as LuaFunction);
					this.m_GetRealTimePVPWinsBonusStatusInt32_hotfix = (luaObj.RawGet("GetRealTimePVPWinsBonusStatus") as LuaFunction);
					this.m_GetRealTimePVPLadderMatchStats_hotfix = (luaObj.RawGet("GetRealTimePVPLadderMatchStats") as LuaFunction);
					this.m_GetRealTimePVPFriendlyMatchStats_hotfix = (luaObj.RawGet("GetRealTimePVPFriendlyMatchStats") as LuaFunction);
					this.m_GetRealTimePVPHonour_hotfix = (luaObj.RawGet("GetRealTimePVPHonour") as LuaFunction);
					this.m_IsRealTimePVPArenaAvailableBattleMode_hotfix = (luaObj.RawGet("IsRealTimePVPArenaAvailable") as LuaFunction);
					this.m_IsRealTimePVPWillMatchBotBattleMode_hotfix = (luaObj.RawGet("IsRealTimePVPWillMatchBot") as LuaFunction);
					this.m_add_EventOnRealTimePVPWaitingForOpponentAckAction`2_hotfix = (luaObj.RawGet("add_EventOnRealTimePVPWaitingForOpponentAck") as LuaFunction);
					this.m_remove_EventOnRealTimePVPWaitingForOpponentAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnRealTimePVPWaitingForOpponentAck") as LuaFunction);
					this.m_add_EventOnRealTimePVPMatchupNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnRealTimePVPMatchupNtf") as LuaFunction);
					this.m_remove_EventOnRealTimePVPMatchupNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnRealTimePVPMatchupNtf") as LuaFunction);
					this.m_add_EventOnRealTimePVPCancelWaitingForOpponentAckAction`1_hotfix = (luaObj.RawGet("add_EventOnRealTimePVPCancelWaitingForOpponentAck") as LuaFunction);
					this.m_remove_EventOnRealTimePVPCancelWaitingForOpponentAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnRealTimePVPCancelWaitingForOpponentAck") as LuaFunction);
					this.m_add_EventOnRealTimePVPGetInfoAckAction`1_hotfix = (luaObj.RawGet("add_EventOnRealTimePVPGetInfoAck") as LuaFunction);
					this.m_remove_EventOnRealTimePVPGetInfoAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnRealTimePVPGetInfoAck") as LuaFunction);
					this.m_add_EventOnRealTimePVPGetTopPlayersAckAction`1_hotfix = (luaObj.RawGet("add_EventOnRealTimePVPGetTopPlayersAck") as LuaFunction);
					this.m_remove_EventOnRealTimePVPGetTopPlayersAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnRealTimePVPGetTopPlayersAck") as LuaFunction);
					this.m_add_EventOnRealTimePVPAcquireWinsBonusAckAction`2_hotfix = (luaObj.RawGet("add_EventOnRealTimePVPAcquireWinsBonusAck") as LuaFunction);
					this.m_remove_EventOnRealTimePVPAcquireWinsBonusAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnRealTimePVPAcquireWinsBonusAck") as LuaFunction);
					this.m_add_EventOnRealTimePVPLeaderboardInfoNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnRealTimePVPLeaderboardInfoNtf") as LuaFunction);
					this.m_remove_EventOnRealTimePVPLeaderboardInfoNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnRealTimePVPLeaderboardInfoNtf") as LuaFunction);
					this.m_SendRechargeStoreCancelBuyReqInt32_hotfix = (luaObj.RawGet("SendRechargeStoreCancelBuyReq") as LuaFunction);
					this.m_SendRechargeStoreBuyGoodsReqInt32_hotfix = (luaObj.RawGet("SendRechargeStoreBuyGoodsReq") as LuaFunction);
					this.m_OnMessageRechargeStoreCancelBuyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageBoughtRechargeStoreItemNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRechargeStoreBuyGoodsAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageDSRechargeStoreNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsRechargeGoodsBoughtInt32_hotfix = (luaObj.RawGet("IsRechargeGoodsBought") as LuaFunction);
					this.m_CaculateGotCrystalNumsInt32_hotfix = (luaObj.RawGet("CaculateGotCrystalNums") as LuaFunction);
					this.m_GetRechargeCrystalOriginalNumsInt32_hotfix = (luaObj.RawGet("GetRechargeCrystalOriginalNums") as LuaFunction);
					this.m_GetRechargeCrystalFirstBoughtRewardNumsInt32_hotfix = (luaObj.RawGet("GetRechargeCrystalFirstBoughtRewardNums") as LuaFunction);
					this.m_GetRechargeCrystalRepeatlyBoughtRewardNumsInt32_hotfix = (luaObj.RawGet("GetRechargeCrystalRepeatlyBoughtRewardNums") as LuaFunction);
					this.m_GetRechargeGoodsIconInt32_hotfix = (luaObj.RawGet("GetRechargeGoodsIcon") as LuaFunction);
					this.m_add_EventOnRechargeBoughtSuccessNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnRechargeBoughtSuccessNtf") as LuaFunction);
					this.m_remove_EventOnRechargeBoughtSuccessNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnRechargeBoughtSuccessNtf") as LuaFunction);
					this.m_add_EventOnRechargeStoreItemBuyAckAction`2_hotfix = (luaObj.RawGet("add_EventOnRechargeStoreItemBuyAck") as LuaFunction);
					this.m_remove_EventOnRechargeStoreItemBuyAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnRechargeStoreItemBuyAck") as LuaFunction);
					this.m_add_EventOnRechargeStoreCancelBuyAckAction`2_hotfix = (luaObj.RawGet("add_EventOnRechargeStoreCancelBuyAck") as LuaFunction);
					this.m_remove_EventOnRechargeStoreCancelBuyAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnRechargeStoreCancelBuyAck") as LuaFunction);
					this.m_OnMessageDSResourceNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageMonthCardUpdateNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_SendRiftLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendRiftLevelAttackReq") as LuaFunction);
					this.m_SendRiftLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendRiftLevelBattleFinishedReq") as LuaFunction);
					this.m_SendRiftLevelRaidReqInt32Int32_hotfix = (luaObj.RawGet("SendRiftLevelRaidReq") as LuaFunction);
					this.m_SendRiftChapterRewardGainReqInt32Int32_hotfix = (luaObj.RawGet("SendRiftChapterRewardGainReq") as LuaFunction);
					this.m_OnMessageDSRiftNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRiftLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRiftLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRiftLevelRaidAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageRiftChapterRewardGainAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_CanUnlockRiftChapterInt32_hotfix = (luaObj.RawGet("CanUnlockRiftChapter") as LuaFunction);
					this.m_GetRiftChapterTotalStarsInt32_hotfix = (luaObj.RawGet("GetRiftChapterTotalStars") as LuaFunction);
					this.m_GetRiftChapterTotalStarsMaxInt32_hotfix = (luaObj.RawGet("GetRiftChapterTotalStarsMax") as LuaFunction);
					this.m_GetRiftChapterTotalAchievementCountInt32_hotfix = (luaObj.RawGet("GetRiftChapterTotalAchievementCount") as LuaFunction);
					this.m_GetRiftChapterTotalAchievementCountMaxInt32_hotfix = (luaObj.RawGet("GetRiftChapterTotalAchievementCountMax") as LuaFunction);
					this.m_GetRiftChapterTotalBattleTreasureCountInt32_hotfix = (luaObj.RawGet("GetRiftChapterTotalBattleTreasureCount") as LuaFunction);
					this.m_GetRiftChapterTotalBattleTreasureCountMaxInt32_hotfix = (luaObj.RawGet("GetRiftChapterTotalBattleTreasureCountMax") as LuaFunction);
					this.m_IsRiftChapterUnlockConditionCompletedInt32RiftChapterUnlockConditionTypeInt32_hotfix = (luaObj.RawGet("IsRiftChapterUnlockConditionCompleted") as LuaFunction);
					this.m_CanUnlockRiftLevelInt32_hotfix = (luaObj.RawGet("CanUnlockRiftLevel") as LuaFunction);
					this.m_CanAttackRiftLevelInt32_hotfix = (luaObj.RawGet("CanAttackRiftLevel") as LuaFunction);
					this.m_CanRaidRiftLevelInt32_hotfix = (luaObj.RawGet("CanRaidRiftLevel") as LuaFunction);
					this.m_GetRiftLevelStatusInt32_hotfix = (luaObj.RawGet("GetRiftLevelStatus") as LuaFunction);
					this.m_GetEventRiftLevelStatusInt32_hotfix = (luaObj.RawGet("GetEventRiftLevelStatus") as LuaFunction);
					this.m_IsRiftLevelUnlockConditionCompletedInt32RiftLevelUnlockConditionTypeInt32_hotfix = (luaObj.RawGet("IsRiftLevelUnlockConditionCompleted") as LuaFunction);
					this.m_GetRiftLevelChallengeNumInt32_hotfix = (luaObj.RawGet("GetRiftLevelChallengeNum") as LuaFunction);
					this.m_GetRiftLevelCanChallengeNumsConfigDataRiftLevelInfo_hotfix = (luaObj.RawGet("GetRiftLevelCanChallengeNums") as LuaFunction);
					this.m_GetRiftLevelCanChallengeMaxNumsConfigDataRiftLevelInfo_hotfix = (luaObj.RawGet("GetRiftLevelCanChallengeMaxNums") as LuaFunction);
					this.m_IsRiftLevelChallengedInt32_hotfix = (luaObj.RawGet("IsRiftLevelChallenged") as LuaFunction);
					this.m_GetRiftLevelStarsInt32_hotfix = (luaObj.RawGet("GetRiftLevelStars") as LuaFunction);
					this.m_GetRiftLevelAchievementCountInt32_hotfix = (luaObj.RawGet("GetRiftLevelAchievementCount") as LuaFunction);
					this.m_HasRiftLevelAchievementInt32_hotfix = (luaObj.RawGet("HasRiftLevelAchievement") as LuaFunction);
					this.m_CanGainRiftChapterStarRewardInt32Int32_hotfix = (luaObj.RawGet("CanGainRiftChapterStarReward") as LuaFunction);
					this.m_GetRiftChapterStarRewardStatusInt32Int32_hotfix = (luaObj.RawGet("GetRiftChapterStarRewardStatus") as LuaFunction);
					this.m_GetRiftLevelFinishedInt32_hotfix = (luaObj.RawGet("GetRiftLevelFinished") as LuaFunction);
					this.m_InitOpenedRiftChapters_hotfix = (luaObj.RawGet("InitOpenedRiftChapters") as LuaFunction);
					this.m_CheckChangeOpenedRiftChapterInt32_hotfix = (luaObj.RawGet("CheckChangeOpenedRiftChapter") as LuaFunction);
					this.m_CheckChangeLastOpenedRiftChapter_hotfix = (luaObj.RawGet("CheckChangeLastOpenedRiftChapter") as LuaFunction);
					this.m_GetLastOpenedRiftChapterInfo_hotfix = (luaObj.RawGet("GetLastOpenedRiftChapterInfo") as LuaFunction);
					this.m_add_EventOnRiftLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnRiftLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnRiftLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnRiftLevelAttackAck") as LuaFunction);
					this.m_add_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix = (luaObj.RawGet("add_EventOnRiftLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix = (luaObj.RawGet("remove_EventOnRiftLevelBattleFinishedAck") as LuaFunction);
					this.m_add_EventOnRiftLevelRaidAckAction`3_hotfix = (luaObj.RawGet("add_EventOnRiftLevelRaidAck") as LuaFunction);
					this.m_remove_EventOnRiftLevelRaidAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnRiftLevelRaidAck") as LuaFunction);
					this.m_add_EventOnRiftChapterRewardGainAckAction`2_hotfix = (luaObj.RawGet("add_EventOnRiftChapterRewardGainAck") as LuaFunction);
					this.m_remove_EventOnRiftChapterRewardGainAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnRiftChapterRewardGainAck") as LuaFunction);
					this.m_SendSelectCardReqInt32BooleanBoolean_hotfix = (luaObj.RawGet("SendSelectCardReq") as LuaFunction);
					this.m_OnMessageDSSelectCardNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageSelectCardAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_add_EventOnCardSelectAckAction`2_hotfix = (luaObj.RawGet("add_EventOnCardSelectAck") as LuaFunction);
					this.m_remove_EventOnCardSelectAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnCardSelectAck") as LuaFunction);
					this.m_GetSelectRewardsIsFirstGetArray_hotfix = (luaObj.RawGet("GetSelectRewardsIsFirstGetArray") as LuaFunction);
					this.m_SetRewardFlagsList`1_hotfix = (luaObj.RawGet("SetRewardFlags") as LuaFunction);
					this.m_GetIsSelectHeroRewardTransferToFragmentDict_hotfix = (luaObj.RawGet("GetIsSelectHeroRewardTransferToFragmentDict") as LuaFunction);
					this.m_SetHeroRewardToFragmentDictList`1_hotfix = (luaObj.RawGet("SetHeroRewardToFragmentDict") as LuaFunction);
					this.m_GetCardPoolByIdInt32_hotfix = (luaObj.RawGet("GetCardPoolById") as LuaFunction);
					this.m_GetActivityCardPoolList_hotfix = (luaObj.RawGet("GetActivityCardPoolList") as LuaFunction);
					this.m_GetActivityTimeByPoolIdInt32_hotfix = (luaObj.RawGet("GetActivityTimeByPoolId") as LuaFunction);
					this.m_FindOperationalActivityByActivityCardPoolIdInt32_hotfix = (luaObj.RawGet("FindOperationalActivityByActivityCardPoolId") as LuaFunction);
					this.m_IsActivityCardPoolOnActivityTimeInt32_hotfix = (luaObj.RawGet("IsActivityCardPoolOnActivityTime") as LuaFunction);
					this.m_GetActivityCardPoolLastDaysCardPool_hotfix = (luaObj.RawGet("GetActivityCardPoolLastDays") as LuaFunction);
					this.m_CanSelectCardInt32BooleanBoolean_hotfix = (luaObj.RawGet("CanSelectCard") as LuaFunction);
					this.m_SendEverydaySignReq_hotfix = (luaObj.RawGet("SendEverydaySignReq") as LuaFunction);
					this.m_OnMessageEverydaySignAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_CanSignToday_hotfix = (luaObj.RawGet("CanSignToday") as LuaFunction);
					this.m_GetSignDaysMonth_hotfix = (luaObj.RawGet("GetSignDaysMonth") as LuaFunction);
					this.m_GetMonthRewardListInt32_hotfix = (luaObj.RawGet("GetMonthRewardList") as LuaFunction);
					this.m_GetSignRewardMonthListInt32_hotfix = (luaObj.RawGet("GetSignRewardMonthList") as LuaFunction);
					this.m_TodayIsSigned_hotfix = (luaObj.RawGet("TodayIsSigned") as LuaFunction);
					this.m_GetTodaySignReward_hotfix = (luaObj.RawGet("GetTodaySignReward") as LuaFunction);
					this.m_GetOneDaySignRewardInt32Int32_hotfix = (luaObj.RawGet("GetOneDaySignReward") as LuaFunction);
					this.m_add_EventOnEverydaySignAckAction`2_hotfix = (luaObj.RawGet("add_EventOnEverydaySignAck") as LuaFunction);
					this.m_remove_EventOnEverydaySignAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnEverydaySignAck") as LuaFunction);
					this.m_SendOpenSurveyReq_hotfix = (luaObj.RawGet("SendOpenSurveyReq") as LuaFunction);
					this.m_SendGetSurveyRewardReq_hotfix = (luaObj.RawGet("SendGetSurveyRewardReq") as LuaFunction);
					this.m_OnMessageDSSurveyNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageNewSurveyNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageUpdateSurveyNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageGetSurveyRewardAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageOpenSurveyAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetCurrentSurveyStatus_hotfix = (luaObj.RawGet("GetCurrentSurveyStatus") as LuaFunction);
					this.m_add_EventOnOpenSurveyAckAction`1_hotfix = (luaObj.RawGet("add_EventOnOpenSurveyAck") as LuaFunction);
					this.m_remove_EventOnOpenSurveyAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnOpenSurveyAck") as LuaFunction);
					this.m_add_EventOnGetSurveyRewardAckAction`1_hotfix = (luaObj.RawGet("add_EventOnGetSurveyRewardAck") as LuaFunction);
					this.m_remove_EventOnGetSurveyRewardAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnGetSurveyRewardAck") as LuaFunction);
					this.m_CanGainSurveyReward_hotfix = (luaObj.RawGet("CanGainSurveyReward") as LuaFunction);
					this.m_SendTeamRoomCreateReqTeamRoomSetting_hotfix = (luaObj.RawGet("SendTeamRoomCreateReq") as LuaFunction);
					this.m_SendTeamRoomViewReqGameFunctionTypeInt32Int32_hotfix = (luaObj.RawGet("SendTeamRoomViewReq") as LuaFunction);
					this.m_SendTeamRoomAutoMatchReqGameFunctionTypeInt32_hotfix = (luaObj.RawGet("SendTeamRoomAutoMatchReq") as LuaFunction);
					this.m_SendTeamRoomAutoMatchCancelReq_hotfix = (luaObj.RawGet("SendTeamRoomAutoMatchCancelReq") as LuaFunction);
					this.m_SendTeamRoomAuthorityChangeReqTeamRoomAuthority_hotfix = (luaObj.RawGet("SendTeamRoomAuthorityChangeReq") as LuaFunction);
					this.m_SendTeamRoomJoinReqInt32GameFunctionTypeInt32UInt64_hotfix = (luaObj.RawGet("SendTeamRoomJoinReq") as LuaFunction);
					this.m_SendTeamRoomQuitReq_hotfix = (luaObj.RawGet("SendTeamRoomQuitReq") as LuaFunction);
					this.m_SendTeamRoomGetReq_hotfix = (luaObj.RawGet("SendTeamRoomGetReq") as LuaFunction);
					this.m_SendTeamRoomInviteReqList`1_hotfix = (luaObj.RawGet("SendTeamRoomInviteReq") as LuaFunction);
					this.m_SendTeamRoomInvitationRefusedReqUInt64Int32Int32_hotfix = (luaObj.RawGet("SendTeamRoomInvitationRefusedReq") as LuaFunction);
					this.m_SendTeamRoomInviteeInfoGetReqList`1TeamRoomInviteeInfoType_hotfix = (luaObj.RawGet("SendTeamRoomInviteeInfoGetReq") as LuaFunction);
					this.m_SendTeamRoomPlayerPositionChangeReqList`1_hotfix = (luaObj.RawGet("SendTeamRoomPlayerPositionChangeReq") as LuaFunction);
					this.m_OnMessageDSTeamNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomCreateAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomViewAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomAutoMatchAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomAutoMatchCancelAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomAuthorityChangeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomJoinAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomQuitAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomInviteAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomInvitationRefusedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomInviteeInfoGetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomPlayerPositionChangeAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomPlayerJoinNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomPlayerQuitNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomAuthorityChangeNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomAutoMatchInfoNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomInviteNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomInvitationRefusedNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomSelfKickOutNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomInviteeLevelInfoNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTeamRoomPlayerPositionChangeNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetTeamRoom_hotfix = (luaObj.RawGet("GetTeamRoom") as LuaFunction);
					this.m_IsInTeamRoom_hotfix = (luaObj.RawGet("IsInTeamRoom") as LuaFunction);
					this.m_IsInTeamRoomAutoMatchWaitingList_hotfix = (luaObj.RawGet("IsInTeamRoomAutoMatchWaitingList") as LuaFunction);
					this.m_GetTeamRoomInviteInfos_hotfix = (luaObj.RawGet("GetTeamRoomInviteInfos") as LuaFunction);
					this.m_RemoveTeamRoomAInviteInfoUInt64Int32_hotfix = (luaObj.RawGet("RemoveTeamRoomAInviteInfo") as LuaFunction);
					this.m_CanUnlockTeamBattleGameFunctionTypeInt32_hotfix = (luaObj.RawGet("CanUnlockTeamBattle") as LuaFunction);
					this.m_SetTeamRoomInviteAgainBoolean_hotfix = (luaObj.RawGet("SetTeamRoomInviteAgain") as LuaFunction);
					this.m_IsTeamRoomInviteAgain_hotfix = (luaObj.RawGet("IsTeamRoomInviteAgain") as LuaFunction);
					this.m_CanCreateTeamTeamRoomSetting_hotfix = (luaObj.RawGet("CanCreateTeam") as LuaFunction);
					this.m_CanViewTeamRoomGameFunctionTypeInt32Int32_hotfix = (luaObj.RawGet("CanViewTeamRoom") as LuaFunction);
					this.m_CanJoinTeamRoomGameFunctionTypeInt32_hotfix = (luaObj.RawGet("CanJoinTeamRoom") as LuaFunction);
					this.m_CanAutoMatchTeamRoomGameFunctionTypeInt32_hotfix = (luaObj.RawGet("CanAutoMatchTeamRoom") as LuaFunction);
					this.m_CanCancelAutoMatchTeamRoom_hotfix = (luaObj.RawGet("CanCancelAutoMatchTeamRoom") as LuaFunction);
					this.m_add_EventOnTeamRoomCreateAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomCreateAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomCreateAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomCreateAck") as LuaFunction);
					this.m_add_EventOnTeamRoomViewAckAction`2_hotfix = (luaObj.RawGet("add_EventOnTeamRoomViewAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomViewAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomViewAck") as LuaFunction);
					this.m_add_EventOnTeamRoomAutoMatchAckAction`3_hotfix = (luaObj.RawGet("add_EventOnTeamRoomAutoMatchAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomAutoMatchAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomAutoMatchAck") as LuaFunction);
					this.m_add_EventOnTeamRoomAutoMatchCancelAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomAutoMatchCancelAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomAutoMatchCancelAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomAutoMatchCancelAck") as LuaFunction);
					this.m_add_EventOnTeamRoomAuthorityChangeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomAuthorityChangeAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomAuthorityChangeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomAuthorityChangeAck") as LuaFunction);
					this.m_add_EventOnTeamRoomJoinAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomJoinAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomJoinAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomJoinAck") as LuaFunction);
					this.m_add_EventOnTeamRoomQuitAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomQuitAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomQuitAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomQuitAck") as LuaFunction);
					this.m_add_EventOnTeamRoomGetAckAction`2_hotfix = (luaObj.RawGet("add_EventOnTeamRoomGetAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomGetAckAction`2_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomGetAck") as LuaFunction);
					this.m_add_EventOnTeamRoomInviteAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomInviteAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomInviteAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomInviteAck") as LuaFunction);
					this.m_add_EventOnTeamRoomInvitationRefusedAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomInvitationRefusedAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomInvitationRefusedAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomInvitationRefusedAck") as LuaFunction);
					this.m_add_EventOnTeamRoomInviteeInfoGetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomInviteeInfoGetAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomInviteeInfoGetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomInviteeInfoGetAck") as LuaFunction);
					this.m_add_EventOnTeamRoomPlayerJoinNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomPlayerJoinNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomPlayerJoinNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomPlayerJoinNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomPlayerQuitNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomPlayerQuitNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomPlayerQuitNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomPlayerQuitNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix = (luaObj.RawGet("add_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomAuthorityChangeNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomAuthorityChangeNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomAuthorityChangeNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomAuthorityChangeNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomAutoMatchInfoNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomAutoMatchInfoNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomAutoMatchInfoNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomAutoMatchInfoNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomInviteNtfAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomInviteNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomInviteNtfAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomInviteNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomInvitationRefusedNtfAction`2_hotfix = (luaObj.RawGet("add_EventOnTeamRoomInvitationRefusedNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomInvitationRefusedNtfAction`2_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomInvitationRefusedNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomSelfKickOutNtfAction_hotfix = (luaObj.RawGet("add_EventOnTeamRoomSelfKickOutNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomSelfKickOutNtfAction_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomSelfKickOutNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomInviteeInfoNtfAction`3_hotfix = (luaObj.RawGet("add_EventOnTeamRoomInviteeInfoNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomInviteeInfoNtfAction`3_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomInviteeInfoNtf") as LuaFunction);
					this.m_add_EventOnTeamRoomPlayerPositionChangeAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTeamRoomPlayerPositionChangeAck") as LuaFunction);
					this.m_remove_EventOnTeamRoomPlayerPositionChangeAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomPlayerPositionChangeAck") as LuaFunction);
					this.m_add_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix = (luaObj.RawGet("add_EventOnTeamRoomPlayerPositionChangeNtf") as LuaFunction);
					this.m_remove_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix = (luaObj.RawGet("remove_EventOnTeamRoomPlayerPositionChangeNtf") as LuaFunction);
					this.m_SendThearchyTrialLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendThearchyTrialLevelAttackReq") as LuaFunction);
					this.m_SendThearchyTrialLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendThearchyTrialLevelBattleFinishedReq") as LuaFunction);
					this.m_OnMessageDSThearchyTrialNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageThearchyTrialLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageThearchyTrialLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsThearchyOpenedInt32_hotfix = (luaObj.RawGet("IsThearchyOpened") as LuaFunction);
					this.m_IsThearchyLevelOpenedInt32_hotfix = (luaObj.RawGet("IsThearchyLevelOpened") as LuaFunction);
					this.m_CanAttackThearchyLevelInt32_hotfix = (luaObj.RawGet("CanAttackThearchyLevel") as LuaFunction);
					this.m_GetThearchyTicketCount_hotfix = (luaObj.RawGet("GetThearchyTicketCount") as LuaFunction);
					this.m_IsThearchyTrialLevelFinishedInt32_hotfix = (luaObj.RawGet("IsThearchyTrialLevelFinished") as LuaFunction);
					this.m_GetThearchyDailyRewardRestCount_hotfix = (luaObj.RawGet("GetThearchyDailyRewardRestCount") as LuaFunction);
					this.m_add_EventOnThearchyTrialLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnThearchyTrialLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnThearchyTrialLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnThearchyTrialLevelAttackAck") as LuaFunction);
					this.m_add_EventOnThearchyTrialLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnThearchyTrialLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnThearchyTrialLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnThearchyTrialLevelBattleFinishedAck") as LuaFunction);
					this.m_SendTechLevelupReqInt32Int32_hotfix = (luaObj.RawGet("SendTechLevelupReq") as LuaFunction);
					this.m_OnMessageDSTrainingGroundNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTrainingGroundTechLevelupAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_GetTrainingRoomByIdInt32_hotfix = (luaObj.RawGet("GetTrainingRoomById") as LuaFunction);
					this.m_CanTechLevelupInt32_hotfix = (luaObj.RawGet("CanTechLevelup") as LuaFunction);
					this.m_CanTrainingCourseLevelupTrainingCourse_hotfix = (luaObj.RawGet("CanTrainingCourseLevelup") as LuaFunction);
					this.m_CanTrainingRoomLevelupTrainingRoom_hotfix = (luaObj.RawGet("CanTrainingRoomLevelup") as LuaFunction);
					this.m_GetTrainingGroundAvailableTechs_hotfix = (luaObj.RawGet("GetTrainingGroundAvailableTechs") as LuaFunction);
					this.m_GetTrainingTechByIdInt32_hotfix = (luaObj.RawGet("GetTrainingTechById") as LuaFunction);
					this.m_GetTechMaxLevelInt32_hotfix = (luaObj.RawGet("GetTechMaxLevel") as LuaFunction);
					this.m_IsTechLockedInt32_hotfix = (luaObj.RawGet("IsTechLocked") as LuaFunction);
					this.m_CanLevelupInt32Int32_hotfix = (luaObj.RawGet("CanLevelup") as LuaFunction);
					this.m_GetResourceRequirementsByLevelInt32Int32_hotfix = (luaObj.RawGet("GetResourceRequirementsByLevel") as LuaFunction);
					this.m_GetTrainingCourseIdByTechIdInt32_hotfix = (luaObj.RawGet("GetTrainingCourseIdByTechId") as LuaFunction);
					this.m_GetTrainingRoomIdByTechIdInt32_hotfix = (luaObj.RawGet("GetTrainingRoomIdByTechId") as LuaFunction);
					this.m_CanGoToGetSoldierTechInt32_hotfix = (luaObj.RawGet("CanGoToGetSoldierTech") as LuaFunction);
					this.m_add_EventOnTrainingGroundTechLevelupAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTrainingGroundTechLevelupAck") as LuaFunction);
					this.m_remove_EventOnTrainingGroundTechLevelupAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTrainingGroundTechLevelupAck") as LuaFunction);
					this.m_SendTreasureLevelAttackReqInt32_hotfix = (luaObj.RawGet("SendTreasureLevelAttackReq") as LuaFunction);
					this.m_SendTreasureLevelBattleFinishedReqInt32ProBattleReport_hotfix = (luaObj.RawGet("SendTreasureLevelBattleFinishedReq") as LuaFunction);
					this.m_OnMessageDSTreasureMapNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTreasureLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageTreasureLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsTreasureLevelOpenedInt32_hotfix = (luaObj.RawGet("IsTreasureLevelOpened") as LuaFunction);
					this.m_CanAttackTreasureLevelInt32_hotfix = (luaObj.RawGet("CanAttackTreasureLevel") as LuaFunction);
					this.m_GetTreasureTicketCount_hotfix = (luaObj.RawGet("GetTreasureTicketCount") as LuaFunction);
					this.m_IsTreasureLevelFinishedInt32_hotfix = (luaObj.RawGet("IsTreasureLevelFinished") as LuaFunction);
					this.m_add_EventOnTreasureLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnTreasureLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnTreasureLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnTreasureLevelAttackAck") as LuaFunction);
					this.m_add_EventOnTreasureLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnTreasureLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnTreasureLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnTreasureLevelBattleFinishedAck") as LuaFunction);
					this.m_SendUnchartedScoreChallengeLevelAttackReqInt32Int32_hotfix = (luaObj.RawGet("SendUnchartedScoreChallengeLevelAttackReq") as LuaFunction);
					this.m_SendUnchartedScoreChallengeLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix = (luaObj.RawGet("SendUnchartedScoreChallengeLevelBattleFinishedReq") as LuaFunction);
					this.m_SendUnchartedScoreScoreLevelAttackReqInt32Int32_hotfix = (luaObj.RawGet("SendUnchartedScoreScoreLevelAttackReq") as LuaFunction);
					this.m_SendUnchartedScoreScoreLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix = (luaObj.RawGet("SendUnchartedScoreScoreLevelBattleFinishedReq") as LuaFunction);
					this.m_OnMessageDSUnchartedScoreNtf_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageUnchartedScoreChallengeLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageUnchartedScoreChallengeLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageUnchartedScoreScoreLevelAttackAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_OnMessageUnchartedScoreScoreLevelBattleFinishedAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsUnchartedScoreOpenedInt32_hotfix = (luaObj.RawGet("IsUnchartedScoreOpened") as LuaFunction);
					this.m_IsUnchartedScoreDisplayInt32_hotfix = (luaObj.RawGet("IsUnchartedScoreDisplay") as LuaFunction);
					this.m_GetUnchartedScoreOpenTimeInt32DateTime_DateTime__hotfix = (luaObj.RawGet("GetUnchartedScoreOpenTime") as LuaFunction);
					this.m_IsUnchartedScoreLevelTimeUnlockInt32Int32_hotfix = (luaObj.RawGet("IsUnchartedScoreLevelTimeUnlock") as LuaFunction);
					this.m_IsUnchartedScoreLevelPlayerLevelVaildInt32_hotfix = (luaObj.RawGet("IsUnchartedScoreLevelPlayerLevelVaild") as LuaFunction);
					this.m_IsUnchartedChallengePrevLevelCompleteInt32Int32_hotfix = (luaObj.RawGet("IsUnchartedChallengePrevLevelComplete") as LuaFunction);
					this.m_GetUnchartedChallengeLevelTimeUnlockDayInt32Int32_hotfix = (luaObj.RawGet("GetUnchartedChallengeLevelTimeUnlockDay") as LuaFunction);
					this.m_CanAttackUnchartedScoreLevelInt32Int32_hotfix = (luaObj.RawGet("CanAttackUnchartedScoreLevel") as LuaFunction);
					this.m_CanAttackUnchartedChallengeLevelInt32Int32_hotfix = (luaObj.RawGet("CanAttackUnchartedChallengeLevel") as LuaFunction);
					this.m_IsUnchartedScoreLevelFinishedInt32Int32_hotfix = (luaObj.RawGet("IsUnchartedScoreLevelFinished") as LuaFunction);
					this.m_IsUnchartedChallengeLevelFinishedInt32Int32_hotfix = (luaObj.RawGet("IsUnchartedChallengeLevelFinished") as LuaFunction);
					this.m_IsUnchartedScoreRewardGotInt32Int32_hotfix = (luaObj.RawGet("IsUnchartedScoreRewardGot") as LuaFunction);
					this.m_GetUnchartedScoreScoreInt32_hotfix = (luaObj.RawGet("GetUnchartedScoreScore") as LuaFunction);
					this.m_GetUnchartedScoreDailyRewardRestCountInt32_hotfix = (luaObj.RawGet("GetUnchartedScoreDailyRewardRestCount") as LuaFunction);
					this.m_add_EventOnUnchartedScoreChallengeLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnUnchartedScoreChallengeLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnUnchartedScoreChallengeLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnUnchartedScoreChallengeLevelAttackAck") as LuaFunction);
					this.m_add_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnUnchartedScoreChallengeLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnUnchartedScoreChallengeLevelBattleFinishedAck") as LuaFunction);
					this.m_add_EventOnUnchartedScoreScoreLevelAttackAckAction`1_hotfix = (luaObj.RawGet("add_EventOnUnchartedScoreScoreLevelAttackAck") as LuaFunction);
					this.m_remove_EventOnUnchartedScoreScoreLevelAttackAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnUnchartedScoreScoreLevelAttackAck") as LuaFunction);
					this.m_add_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("add_EventOnUnchartedScoreScoreLevelBattleFinishedAck") as LuaFunction);
					this.m_remove_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction`3_hotfix = (luaObj.RawGet("remove_EventOnUnchartedScoreScoreLevelBattleFinishedAck") as LuaFunction);
					this.m_SendUserGuideSetReqInt32_hotfix = (luaObj.RawGet("SendUserGuideSetReq") as LuaFunction);
					this.m_SendUserGuideSetReqInt32be_hotfix = (luaObj.RawGet("SendUserGuideSetReq") as LuaFunction);
					this.m_SendUserGuideClearReq_hotfix = (luaObj.RawGet("SendUserGuideClearReq") as LuaFunction);
					this.m_OnMessageUserGuideSetAck_hotfix = (luaObj.RawGet("OnMessage") as LuaFunction);
					this.m_IsGameFunctionOpenedGameFunctionType_hotfix = (luaObj.RawGet("IsGameFunctionOpened") as LuaFunction);
					this.m_IsUserGuideCompleteInt32_hotfix = (luaObj.RawGet("IsUserGuideComplete") as LuaFunction);
					this.m_add_EventOnUserGuideSetAckAction`1_hotfix = (luaObj.RawGet("add_EventOnUserGuideSetAck") as LuaFunction);
					this.m_remove_EventOnUserGuideSetAckAction`1_hotfix = (luaObj.RawGet("remove_EventOnUserGuideSetAck") as LuaFunction);
					result = true;
				}
			}
			return result;
		}

		// Token: 0x060081BF RID: 33215 RVA: 0x00263B6C File Offset: 0x00261D6C
		private bool TryInitHotFix(string luaModuleName)
		{
			bool result;
			if (this.m_hotfixState != ObjectLuaHotFixState.Uninit)
			{
				result = (this.m_hotfixState == ObjectLuaHotFixState.InitAvialable);
			}
			else
			{
				bool flag = LuaManager.TryInitHotfixForObj(this, luaModuleName, typeof(ProjectLPlayerContext));
				this.m_hotfixState = ((!flag) ? ObjectLuaHotFixState.InitUnavialable : ObjectLuaHotFixState.InitAvialable);
				result = flag;
			}
			return result;
		}

		// Token: 0x0400569E RID: 22174
		private float m_testMarqueeTime;

		// Token: 0x0400569F RID: 22175
		private float m_testChatTime;

		// Token: 0x040056A0 RID: 22176
		protected long m_serverTime;

		// Token: 0x040056A1 RID: 22177
		private IConfigDataLoader m_configDataLoader;

		// Token: 0x040056A2 RID: 22178
		private ComponenetManager<IComponentBase> m_components;

		// Token: 0x040056A3 RID: 22179
		public PlayerBasicInfoComponent m_playerBasicInfoComponent;

		// Token: 0x040056A4 RID: 22180
		private HeroComponent m_heroComponent;

		// Token: 0x040056A5 RID: 22181
		private BagComponent m_bagComponent;

		// Token: 0x040056A6 RID: 22182
		private BattleComponent m_battleComponent;

		// Token: 0x040056A7 RID: 22183
		private LevelComponent m_levelComponent;

		// Token: 0x040056A8 RID: 22184
		private RiftComponent m_riftComponent;

		// Token: 0x040056A9 RID: 22185
		private HeroDungeonComponent m_heroDungeonComponent;

		// Token: 0x040056AA RID: 22186
		private ThearchyTrialComponent m_thearchyTrialComponent;

		// Token: 0x040056AB RID: 22187
		private AnikiGymComponent m_anikiGymComponent;

		// Token: 0x040056AC RID: 22188
		private TreasureMapComponent m_treasureMapComponent;

		// Token: 0x040056AD RID: 22189
		private MemoryCorridorCompoment m_memoryCorridorComponent;

		// Token: 0x040056AE RID: 22190
		private MailComponent m_mailComponent;

		// Token: 0x040056AF RID: 22191
		private FixedStoreComponent m_fixedStoreComponent;

		// Token: 0x040056B0 RID: 22192
		private RandomStoreComponent m_randomStoreComponent;

		// Token: 0x040056B1 RID: 22193
		private SelectCardComponent m_selectCardComponent;

		// Token: 0x040056B2 RID: 22194
		private RaffleComponent m_raffleComponent;

		// Token: 0x040056B3 RID: 22195
		private ChatComponent m_chatComponent;

		// Token: 0x040056B4 RID: 22196
		private ChatGroupComponent m_chatGroupComponent;

		// Token: 0x040056B5 RID: 22197
		private MissionComponent m_missionComponent;

		// Token: 0x040056B6 RID: 22198
		private CommentComponent m_commentComponent;

		// Token: 0x040056B7 RID: 22199
		private TrainingGroundCompoment m_trainingGroundComponent;

		// Token: 0x040056B8 RID: 22200
		private ArenaComponent m_arenaComponent;

		// Token: 0x040056B9 RID: 22201
		private OperationalActivityCompoment m_operationalActivityComponent;

		// Token: 0x040056BA RID: 22202
		private SurveyComponent m_surveyComponent;

		// Token: 0x040056BB RID: 22203
		private DanmakuComponent m_danmakuComponent;

		// Token: 0x040056BC RID: 22204
		private HeroTrainningComponent m_heroTrainningComponent;

		// Token: 0x040056BD RID: 22205
		private FriendComponent m_friendComponent;

		// Token: 0x040056BE RID: 22206
		private GlobalRankingListComponent m_globalRankingListComponent;

		// Token: 0x040056BF RID: 22207
		private TeamComponent m_teamComponent;

		// Token: 0x040056C0 RID: 22208
		private HeroAssistantsCompoment m_heroAssistantsComponent;

		// Token: 0x040056C1 RID: 22209
		private HeroPhantomCompoment m_heroPhantomComponent;

		// Token: 0x040056C2 RID: 22210
		private CooperateBattleCompoment m_cooperateBattleComponent;

		// Token: 0x040056C3 RID: 22211
		private NoviceComponent m_noviceComponent;

		// Token: 0x040056C4 RID: 22212
		private RechargeStoreComponent m_rechargeStoreComponent;

		// Token: 0x040056C5 RID: 22213
		private ResourceComponent m_resourceComponent;

		// Token: 0x040056C6 RID: 22214
		private RealTimePVPComponent m_realTimePVPComponent;

		// Token: 0x040056C7 RID: 22215
		private GiftStoreComponent m_giftStoreComponent;

		// Token: 0x040056C8 RID: 22216
		private GuildComponent m_guildComponent;

		// Token: 0x040056C9 RID: 22217
		private UnchartedScoreComponent m_unchartedScoreComponent;

		// Token: 0x040056CA RID: 22218
		private ClimbTowerComponent m_climbTowerComponent;

		// Token: 0x040056CB RID: 22219
		private TimeSpan m_diffToServerTime;

		// Token: 0x040056CC RID: 22220
		private DateTime? m_serverTimeSynced;

		// Token: 0x040056CD RID: 22221
		private float m_realtimeSinceStartupAtServerTimeSynced;

		// Token: 0x040056CE RID: 22222
		private bool m_isPlayerInfoInitEnd;

		// Token: 0x040056CF RID: 22223
		private bool m_isDataError;

		// Token: 0x040056D0 RID: 22224
		private bool m_initOpenStates = true;

		// Token: 0x040056D1 RID: 22225
		private Happening m_happening;

		// Token: 0x040056D2 RID: 22226
		private CurrentBattle m_currentBattle;

		// Token: 0x040056E6 RID: 22246
		private int m_playerArenaRank;

		// Token: 0x040056E7 RID: 22247
		private bool m_isNeedGetArenaPlayerInfo = true;

		// Token: 0x040056E8 RID: 22248
		private List<ProArenaTopRankPlayer> m_arenaTopRankPlayers = new List<ProArenaTopRankPlayer>();

		// Token: 0x040056F2 RID: 22258
		private bool ShowEnchantCancelConfirmPanel = true;

		// Token: 0x040056F3 RID: 22259
		private bool ShowEnchantSaveConfirmPanel = true;

		// Token: 0x040056F7 RID: 22263
		private RewardPlayerStatus m_beforeRewardPlayerStatus = new RewardPlayerStatus();

		// Token: 0x040056F8 RID: 22264
		private List<RewardHeroStatus> m_beforeRewardHeroStatus = new List<RewardHeroStatus>();

		// Token: 0x040056F9 RID: 22265
		private List<int> m_battleHeroIDs = new List<int>();

		// Token: 0x040056FA RID: 22266
		private bool m_isNeedRebuildBattle;

		// Token: 0x040056FB RID: 22267
		private int m_battleRegretCount;

		// Token: 0x040056FC RID: 22268
		private ConfigDataBattleInfo m_firstBattleInfo;

		// Token: 0x0400571A RID: 22298
		private List<NoticeText> m_waitingNoticeStringList = new List<NoticeText>();

		// Token: 0x0400571B RID: 22299
		private bool m_isShowingNotice;

		// Token: 0x0400572B RID: 22315
		public Action<FriendGetUserSummaryAck>[] EventsOnGetUserSummaryAck = new Action<FriendGetUserSummaryAck>[1024];

		// Token: 0x0400572C RID: 22316
		private int summaryToken;

		// Token: 0x04005739 RID: 22329
		private bool m_needGetFriendSocialRelation = true;

		// Token: 0x0400573A RID: 22330
		private List<UserSummary> m_friendList = new List<UserSummary>();

		// Token: 0x0400573B RID: 22331
		private List<UserSummary> m_acrossServerFriendList = new List<UserSummary>();

		// Token: 0x0400573C RID: 22332
		private List<UserSummary> m_findFriendList = new List<UserSummary>();

		// Token: 0x0400573D RID: 22333
		private List<UserSummary> m_recommendFriendList = new List<UserSummary>();

		// Token: 0x0400579C RID: 22428
		private Dictionary<int, Hero> m_allDefaultHeros;

		// Token: 0x040057AC RID: 22444
		private ConfigDataScenarioInfo m_currentScenarioInfo;

		// Token: 0x040057AD RID: 22445
		private Dictionary<int, ProjectLPlayerContext.CurrentWaypointEvent> m_currentWaypointEvents = new Dictionary<int, ProjectLPlayerContext.CurrentWaypointEvent>();

		// Token: 0x040057B8 RID: 22456
		private List<ulong> ReadAnnounceActivityList = new List<ulong>();

		// Token: 0x040057B9 RID: 22457
		private bool m_isBuyGuideActivityViewed;

		// Token: 0x040057BA RID: 22458
		private const string OpenActivityNoticeUIFlag = "OpenActivityNoticeUIFlag";

		// Token: 0x040057BB RID: 22459
		private RedeemInfoAck m_RedeemInfo;

		// Token: 0x040057BC RID: 22460
		private const int RedeemActivityConfigId = 17;

		// Token: 0x040057BD RID: 22461
		private const int FansRewardsFromPBTCBTActivityId = 30;

		// Token: 0x040057E0 RID: 22496
		private ProRealTimePVPLeaderboardPlayerInfo m_realtimePVPPlayerInfo;

		// Token: 0x040057E1 RID: 22497
		private ProRealTimePVPUserInfo m_realtimePVPOpponentPlayerInfo;

		// Token: 0x040057E2 RID: 22498
		private List<ProRealTimePVPLeaderboardPlayerInfo> m_realtimePVPLocalLeaderboardPlayerInfos = new List<ProRealTimePVPLeaderboardPlayerInfo>();

		// Token: 0x040057E3 RID: 22499
		private List<ProUserSummary> m_realtimePVPLocalLeaderboardUserSummarys = new List<ProUserSummary>();

		// Token: 0x040057E4 RID: 22500
		private List<ProRealTimePVPLeaderboardPlayerInfo> m_realtimePVPGlobalLeaderboardPlayerInfos = new List<ProRealTimePVPLeaderboardPlayerInfo>();

		// Token: 0x040057E5 RID: 22501
		private List<ProUserSummary> m_realtimePVPGlobalLeaderboardUserSummarys = new List<ProUserSummary>();

		// Token: 0x040057E6 RID: 22502
		private bool m_isRealTimePVPGetTopPlayersReqGlobal;

		// Token: 0x040057EE RID: 22510
		private List<int> m_opendRiftChapterIds = new List<int>();

		// Token: 0x040057EF RID: 22511
		private ConfigDataRiftChapterInfo m_lastOpenedRiftChapterInfo;

		// Token: 0x040057F1 RID: 22513
		private bool[] m_rewardFlags = new bool[10];

		// Token: 0x040057F2 RID: 22514
		private Dictionary<int, bool> m_isSelectHeroRewardTransferToFragmentDict = new Dictionary<int, bool>();

		// Token: 0x04005816 RID: 22550
		[DoNotToLua]
		private ProjectLPlayerContext.LuaExportHelper luaExportHelper;

		// Token: 0x04005817 RID: 22551
		[CompilerGenerated]
		private static Comparison<GeneralInviteInfo> <>f__mg$cache0;

		// Token: 0x0400581C RID: 22556
		private BJLuaObjHelper m_luaObjHelper;

		// Token: 0x0400581D RID: 22557
		private ObjectLuaHotFixState m_hotfixState;

		// Token: 0x0400581E RID: 22558
		private LuaFunction m_ctor_hotfix;

		// Token: 0x0400581F RID: 22559
		private LuaFunction m_SendMessageObject_hotfix;

		// Token: 0x04005820 RID: 22560
		private LuaFunction m_OnGameServerMessageObjectInt32_hotfix;

		// Token: 0x04005821 RID: 22561
		private LuaFunction m_OnMessageServerHeartBeatNtf_hotfix;

		// Token: 0x04005822 RID: 22562
		private LuaFunction m_OnMessageServerDisconnectNtf_hotfix;

		// Token: 0x04005823 RID: 22563
		private LuaFunction m_OnMessageClientCheatNtf_hotfix;

		// Token: 0x04005824 RID: 22564
		private LuaFunction m_RemoveOwnerComponent_hotfix;

		// Token: 0x04005825 RID: 22565
		private LuaFunction m_GetOwnerComponent_hotfix;

		// Token: 0x04005826 RID: 22566
		private LuaFunction m_GetOwnerComponentString_hotfix;

		// Token: 0x04005827 RID: 22567
		private LuaFunction m_Tick_hotfix;

		// Token: 0x04005828 RID: 22568
		private LuaFunction m_TestMarquee_hotfix;

		// Token: 0x04005829 RID: 22569
		private LuaFunction m_TestChat_hotfix;

		// Token: 0x0400582A RID: 22570
		private LuaFunction m_GetSessionToken_hotfix;

		// Token: 0x0400582B RID: 22571
		private LuaFunction m_GetDeviceId_hotfix;

		// Token: 0x0400582C RID: 22572
		private LuaFunction m_GetClientVersion_hotfix;

		// Token: 0x0400582D RID: 22573
		private LuaFunction m_IsDataCacheDirtyByPlayerInfoInitAckObjectBoolean__hotfix;

		// Token: 0x0400582E RID: 22574
		private LuaFunction m_IsPlayerInfoInitAck4CheckOnlyObject_hotfix;

		// Token: 0x0400582F RID: 22575
		private LuaFunction m_IsLocalGame_hotfix;

		// Token: 0x04005830 RID: 22576
		private LuaFunction m_GetLocalTime_hotfix;

		// Token: 0x04005831 RID: 22577
		private LuaFunction m_GetServerTime_Bug_hotfix;

		// Token: 0x04005832 RID: 22578
		private LuaFunction m_GetServerTime_hotfix;

		// Token: 0x04005833 RID: 22579
		private LuaFunction m_LocalTimeToServerTimeDateTime_hotfix;

		// Token: 0x04005834 RID: 22580
		private LuaFunction m_ServerTimeToLocalTimeDateTime_hotfix;

		// Token: 0x04005835 RID: 22581
		private LuaFunction m_DataErrorInt32_hotfix;

		// Token: 0x04005836 RID: 22582
		private LuaFunction m_IsDataError_hotfix;

		// Token: 0x04005837 RID: 22583
		private LuaFunction m_get_Happening_hotfix;

		// Token: 0x04005838 RID: 22584
		private LuaFunction m_get_CurrentBattle_hotfix;

		// Token: 0x04005839 RID: 22585
		private LuaFunction m_add_EventOnClientCheatNtfAction_hotfix;

		// Token: 0x0400583A RID: 22586
		private LuaFunction m_remove_EventOnClientCheatNtfAction_hotfix;

		// Token: 0x0400583B RID: 22587
		private LuaFunction m_add_EventOnServerDisconnectNtfAction;

		// Token: 0x0400583C RID: 22588
		private LuaFunction m_remove_EventOnServerDisconnectNtfAction;

		// Token: 0x0400583D RID: 22589
		private LuaFunction m_SendAnikiGymLevelAttackReqInt32_hotfix;

		// Token: 0x0400583E RID: 22590
		private LuaFunction m_SendAnikiGymLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x0400583F RID: 22591
		private LuaFunction m_OnMessageDSAnikiGymNtf_hotfix;

		// Token: 0x04005840 RID: 22592
		private LuaFunction m_OnMessageAnikiGymLevelAttackAck_hotfix;

		// Token: 0x04005841 RID: 22593
		private LuaFunction m_OnMessageAnikiGymLevelBattleFinishedAck_hotfix;

		// Token: 0x04005842 RID: 22594
		private LuaFunction m_IsAnikiGymOpenedInt32_hotfix;

		// Token: 0x04005843 RID: 22595
		private LuaFunction m_IsAnikiLevelOpenedInt32_hotfix;

		// Token: 0x04005844 RID: 22596
		private LuaFunction m_CanAttackAnikiLevelInt32_hotfix;

		// Token: 0x04005845 RID: 22597
		private LuaFunction m_GetAnikiTicketCount_hotfix;

		// Token: 0x04005846 RID: 22598
		private LuaFunction m_IsAnikiLevelFinishedInt32_hotfix;

		// Token: 0x04005847 RID: 22599
		private LuaFunction m_GetAnikiDailyRewardRestCount_hotfix;

		// Token: 0x04005848 RID: 22600
		private LuaFunction m_add_EventOnAnikiGymLevelAttackAckAction;

		// Token: 0x04005849 RID: 22601
		private LuaFunction m_remove_EventOnAnikiGymLevelAttackAckAction;

		// Token: 0x0400584A RID: 22602
		private LuaFunction m_add_EventOnAnikiGymLevelBattleFinishedAckAction;

		// Token: 0x0400584B RID: 22603
		private LuaFunction m_remove_EventOnAnikiGymLevelBattleFinishedAckAction;

		// Token: 0x0400584C RID: 22604
		private LuaFunction m_SendArenaPlayerInfoGetReq_hotfix;

		// Token: 0x0400584D RID: 22605
		private LuaFunction m_SendArenaOpponentViewReqInt32_hotfix;

		// Token: 0x0400584E RID: 22606
		private LuaFunction m_SendArenaOpponentAttackReqBoolean_hotfix;

		// Token: 0x0400584F RID: 22607
		private LuaFunction m_SendArenaRevengeOpponentGetReqUInt64_hotfix;

		// Token: 0x04005850 RID: 22608
		private LuaFunction m_SendArenaOpponentRevengeReqUInt64Boolean_hotfix;

		// Token: 0x04005851 RID: 22609
		private LuaFunction m_SendArenaOpponentAttackFightingReq_hotfix;

		// Token: 0x04005852 RID: 22610
		private LuaFunction m_SendArenaBattleFinishedReqProBattleReport_hotfix;

		// Token: 0x04005853 RID: 22611
		private LuaFunction m_SendArenaPlayerSetDefensiveTeamReqInt32Int32List;

		// Token: 0x04005854 RID: 22612
		private LuaFunction m_SendArenaVictoryPointsRewardGainReqInt32_hotfix;

		// Token: 0x04005855 RID: 22613
		private LuaFunction m_SendArenaBattleReportBaiscDataGetReq_hotfix;

		// Token: 0x04005856 RID: 22614
		private LuaFunction m_SendArenaBattleReportPlayBackDataGetReqUInt64_hotfix;

		// Token: 0x04005857 RID: 22615
		private LuaFunction m_SendArenaTopRankPlayersGetReq_hotfix;

		// Token: 0x04005858 RID: 22616
		private LuaFunction m_SendArenaBattleReconnectReq_hotfix;

		// Token: 0x04005859 RID: 22617
		private LuaFunction m_OnMessageDSArenaNtf_hotfix;

		// Token: 0x0400585A RID: 22618
		private LuaFunction m_OnMessageArenaPlayerInfoGetAck_hotfix;

		// Token: 0x0400585B RID: 22619
		private LuaFunction m_OnMessageArenaOpponentViewAck_hotfix;

		// Token: 0x0400585C RID: 22620
		private LuaFunction m_OnMessageArenaOpponentAttackAck_hotfix;

		// Token: 0x0400585D RID: 22621
		private LuaFunction m_OnMessageArenaRevengeOpponentGetAck_hotfix;

		// Token: 0x0400585E RID: 22622
		private LuaFunction m_OnMessageArenaOpponentRevengeAck_hotfix;

		// Token: 0x0400585F RID: 22623
		private LuaFunction m_OnMessageArenaOpponentAttackFightingAck_hotfix;

		// Token: 0x04005860 RID: 22624
		private LuaFunction m_OnMessageArenaBattleFinishedAck_hotfix;

		// Token: 0x04005861 RID: 22625
		private LuaFunction m_OnMessageArenaPlayerSetDefensiveTeamAck_hotfix;

		// Token: 0x04005862 RID: 22626
		private LuaFunction m_OnMessageArenaVictoryPointsRewardGainAck_hotfix;

		// Token: 0x04005863 RID: 22627
		private LuaFunction m_OnMessageArenaBattleReportBasicDataGetAck_hotfix;

		// Token: 0x04005864 RID: 22628
		private LuaFunction m_OnMessageArenaBattleReportPlayBackDataGetAck_hotfix;

		// Token: 0x04005865 RID: 22629
		private LuaFunction m_OnMessageArenaTopRankPlayersGetAck_hotfix;

		// Token: 0x04005866 RID: 22630
		private LuaFunction m_OnMessageArenaBattleReconnectAck_hotfix;

		// Token: 0x04005867 RID: 22631
		private LuaFunction m_OnMessageArenaBattleReportNtf_hotfix;

		// Token: 0x04005868 RID: 22632
		private LuaFunction m_OnMessageArenaFlushOpponentsNtf_hotfix;

		// Token: 0x04005869 RID: 22633
		private LuaFunction m_IsEmptyArenaPlayerInfo_hotfix;

		// Token: 0x0400586A RID: 22634
		private LuaFunction m_IsNeedGetArenaPlayerInfo_hotfix;

		// Token: 0x0400586B RID: 22635
		private LuaFunction m_GetPlayerArenaLevelId_hotfix;

		// Token: 0x0400586C RID: 22636
		private LuaFunction m_GetPlayerArenaPoints_hotfix;

		// Token: 0x0400586D RID: 22637
		private LuaFunction m_GetPlayerArenaVictoryPoints_hotfix;

		// Token: 0x0400586E RID: 22638
		private LuaFunction m_GetArenaThisWeekVictoryNums_hotfix;

		// Token: 0x0400586F RID: 22639
		private LuaFunction m_GetArenaThisWeekTotalBattleNums_hotfix;

		// Token: 0x04005870 RID: 22640
		private LuaFunction m_IsArenaAutoBattle_hotfix;

		// Token: 0x04005871 RID: 22641
		private LuaFunction m_GetArenaTicketCount_hotfix;

		// Token: 0x04005872 RID: 22642
		private LuaFunction m_GetArenaHonour_hotfix;

		// Token: 0x04005873 RID: 22643
		private LuaFunction m_CanGetArenaVictoryPointsRewardInt32_hotfix;

		// Token: 0x04005874 RID: 22644
		private LuaFunction m_GetArenaVictoryPointsRewardStatusInt32_hotfix;

		// Token: 0x04005875 RID: 22645
		private LuaFunction m_GetArenaThisWeekDefendBattleIds_hotfix;

		// Token: 0x04005876 RID: 22646
		private LuaFunction m_CanAttackArenaOpponent_hotfix;

		// Token: 0x04005877 RID: 22647
		private LuaFunction m_CanRevengeArenaOpponentUInt64_hotfix;

		// Token: 0x04005878 RID: 22648
		private LuaFunction m_GetArenaOpponents_hotfix;

		// Token: 0x04005879 RID: 22649
		private LuaFunction m_GetArenaOpponentNextFlushTime_hotfix;

		// Token: 0x0400587A RID: 22650
		private LuaFunction m_GetArenaOpponentDefensiveBattleInfo_hotfix;

		// Token: 0x0400587B RID: 22651
		private LuaFunction m_GetArenaPlayerDefensiveTeam_hotfix;

		// Token: 0x0400587C RID: 22652
		private LuaFunction m_IsArenaInSettleTime_hotfix;

		// Token: 0x0400587D RID: 22653
		private LuaFunction m_GetAllArenaBattleReports_hotfix;

		// Token: 0x0400587E RID: 22654
		private LuaFunction m_GetArenaPointChangeValueUInt64_hotfix;

		// Token: 0x0400587F RID: 22655
		private LuaFunction m_GetPlayerArenaRank_hotfix;

		// Token: 0x04005880 RID: 22656
		private LuaFunction m_GetArenaTopRankPlayers_hotfix;

		// Token: 0x04005881 RID: 22657
		private LuaFunction m_CanReconnectArenaBattle_hotfix;

		// Token: 0x04005882 RID: 22658
		private LuaFunction m_add_EventOnArenaPlayerInfoGetAckAction;

		// Token: 0x04005883 RID: 22659
		private LuaFunction m_remove_EventOnArenaPlayerInfoGetAckAction;

		// Token: 0x04005884 RID: 22660
		private LuaFunction m_add_EventOnArenaOpponentViewAckAction;

		// Token: 0x04005885 RID: 22661
		private LuaFunction m_remove_EventOnArenaOpponentViewAckAction;

		// Token: 0x04005886 RID: 22662
		private LuaFunction m_add_EventOnArenaOpponentAttackAckAction;

		// Token: 0x04005887 RID: 22663
		private LuaFunction m_remove_EventOnArenaOpponentAttackAckAction;

		// Token: 0x04005888 RID: 22664
		private LuaFunction m_add_EventOnArenaRevengeOpponentGetAckAction;

		// Token: 0x04005889 RID: 22665
		private LuaFunction m_remove_EventOnArenaRevengeOpponentGetAckAction;

		// Token: 0x0400588A RID: 22666
		private LuaFunction m_add_EventOnArenaOpponentRevengeAckAction;

		// Token: 0x0400588B RID: 22667
		private LuaFunction m_remove_EventOnArenaOpponentRevengeAckAction;

		// Token: 0x0400588C RID: 22668
		private LuaFunction m_add_EventOnArenaOpponentAttackFightingAckAction;

		// Token: 0x0400588D RID: 22669
		private LuaFunction m_remove_EventOnArenaOpponentAttackFightingAckAction;

		// Token: 0x0400588E RID: 22670
		private LuaFunction m_add_EventOnArenaBattleFinishedAckAction;

		// Token: 0x0400588F RID: 22671
		private LuaFunction m_remove_EventOnArenaBattleFinishedAckAction;

		// Token: 0x04005890 RID: 22672
		private LuaFunction m_add_EventOnArenaPlayerSetDefensiveTeamAckAction;

		// Token: 0x04005891 RID: 22673
		private LuaFunction m_remove_EventOnArenaPlayerSetDefensiveTeamAckAction;

		// Token: 0x04005892 RID: 22674
		private LuaFunction m_add_EventOnArenaVictoryPointsRewardGainAckAction;

		// Token: 0x04005893 RID: 22675
		private LuaFunction m_remove_EventOnArenaVictoryPointsRewardGainAckAction;

		// Token: 0x04005894 RID: 22676
		private LuaFunction m_add_EventOnArenaBattleReportBasicDataGetAckAction;

		// Token: 0x04005895 RID: 22677
		private LuaFunction m_remove_EventOnArenaBattleReportBasicDataGetAckAction;

		// Token: 0x04005896 RID: 22678
		private LuaFunction m_add_EventOnArenaBattleReportPlayBackDataGetAckAction;

		// Token: 0x04005897 RID: 22679
		private LuaFunction m_remove_EventOnArenaBattleReportPlayBackDataGetAckAction;

		// Token: 0x04005898 RID: 22680
		private LuaFunction m_add_EventOnArenaTopRankPlayersGetAckAction;

		// Token: 0x04005899 RID: 22681
		private LuaFunction m_remove_EventOnArenaTopRankPlayersGetAckAction;

		// Token: 0x0400589A RID: 22682
		private LuaFunction m_add_EventOnArenaBattleReconnectAckAction;

		// Token: 0x0400589B RID: 22683
		private LuaFunction m_remove_EventOnArenaBattleReconnectAckAction;

		// Token: 0x0400589C RID: 22684
		private LuaFunction m_add_EventOnArenaBattleReportNtfAction_hotfix;

		// Token: 0x0400589D RID: 22685
		private LuaFunction m_remove_EventOnArenaBattleReportNtfAction_hotfix;

		// Token: 0x0400589E RID: 22686
		private LuaFunction m_add_EventOnArenaFlushOpponentsNtfAction_hotfix;

		// Token: 0x0400589F RID: 22687
		private LuaFunction m_remove_EventOnArenaFlushOpponentsNtfAction_hotfix;

		// Token: 0x040058A0 RID: 22688
		private LuaFunction m_SendUseBagItemReqGoodsTypeInt32Int32Int32_hotfix;

		// Token: 0x040058A1 RID: 22689
		private LuaFunction m_SendSellBagItemReqUInt64Int32_hotfix;

		// Token: 0x040058A2 RID: 22690
		private LuaFunction m_SendLockAndUnLockEquipmentReqUInt64_hotfix;

		// Token: 0x040058A3 RID: 22691
		private LuaFunction m_SendEquipmentEnhanceReqUInt64List;

		// Token: 0x040058A4 RID: 22692
		private LuaFunction m_SendEquipmentStarLevelUpReqUInt64UInt64_hotfix;

		// Token: 0x040058A5 RID: 22693
		private LuaFunction m_SendBagItemDecomposeReqList;

		// Token: 0x040058A6 RID: 22694
		private LuaFunction m_SendEquipmentEnchantReqUInt64UInt64_hotfix;

		// Token: 0x040058A7 RID: 22695
		private LuaFunction m_SendEquipmentEnchantSaveReq_hotfix;

		// Token: 0x040058A8 RID: 22696
		private LuaFunction m_OnMessageDSBagNtf_hotfix;

		// Token: 0x040058A9 RID: 22697
		private LuaFunction m_OnMessageDSBagExtraNtf_hotfix;

		// Token: 0x040058AA RID: 22698
		private LuaFunction m_OnMessageUseBagItemAck_hotfix;

		// Token: 0x040058AB RID: 22699
		private LuaFunction m_OnMessageSellBagItemAck_hotfix;

		// Token: 0x040058AC RID: 22700
		private LuaFunction m_OnMessageEquipmentLockAndUnLockAck_hotfix;

		// Token: 0x040058AD RID: 22701
		private LuaFunction m_OnMessageEquipmentEnhanceAck_hotfix;

		// Token: 0x040058AE RID: 22702
		private LuaFunction m_OnMessageEquipmentStarLevelUpAck_hotfix;

		// Token: 0x040058AF RID: 22703
		private LuaFunction m_OnMessageBagItemDecomposeAck_hotfix;

		// Token: 0x040058B0 RID: 22704
		private LuaFunction m_OnMessageEquipmentEnchantAck_hotfix;

		// Token: 0x040058B1 RID: 22705
		private LuaFunction m_OnMessageEquipmentEnchantSaveAck_hotfix;

		// Token: 0x040058B2 RID: 22706
		private LuaFunction m_CanEnchantEquipmentUInt64UInt64_hotfix;

		// Token: 0x040058B3 RID: 22707
		private LuaFunction m_GetBagItems_hotfix;

		// Token: 0x040058B4 RID: 22708
		private LuaFunction m_GetBagSize_hotfix;

		// Token: 0x040058B5 RID: 22709
		private LuaFunction m_GetBagItemGoodsTypeInt32UInt64_hotfix;

		// Token: 0x040058B6 RID: 22710
		private LuaFunction m_GetBagItemByTypeGoodsTypeInt32_hotfix;

		// Token: 0x040058B7 RID: 22711
		private LuaFunction m_IsExistBagItemIgnoreInstanceDifferenceGoodsTypeInt32_hotfix;

		// Token: 0x040058B8 RID: 22712
		private LuaFunction m_GetBagItemByInstanceIdUInt64_hotfix;

		// Token: 0x040058B9 RID: 22713
		private LuaFunction m_GetBagItemCountGoodsTypeInt32UInt64_hotfix;

		// Token: 0x040058BA RID: 22714
		private LuaFunction m_GetBagItemCountByTypeGoodsTypeInt32_hotfix;

		// Token: 0x040058BB RID: 22715
		private LuaFunction m_GetBagItemCountByTypeAndIDGoodsTypeInt32_hotfix;

		// Token: 0x040058BC RID: 22716
		private LuaFunction m_GetInstanceBagItemInstanceIdsByContentIdInt32_hotfix;

		// Token: 0x040058BD RID: 22717
		private LuaFunction m_GetBagItemCountByInstanceIdUInt64_hotfix;

		// Token: 0x040058BE RID: 22718
		private LuaFunction m_CanUseEnergyMedicineInt32Int32_hotfix;

		// Token: 0x040058BF RID: 22719
		private LuaFunction m_CalculateEnhanceEquipmentExpList;

		// Token: 0x040058C0 RID: 22720
		private LuaFunction m_CalculateEnhanceEquipmentGoldInt32_hotfix;

		// Token: 0x040058C1 RID: 22721
		private LuaFunction m_CaculateEquipmentNextLevelExpEquipmentBagItem_hotfix;

		// Token: 0x040058C2 RID: 22722
		private LuaFunction m_CaculateEquipmentNextLevelExpInt32Int32_hotfix;

		// Token: 0x040058C3 RID: 22723
		private LuaFunction m_CanEnhanceEquipmentUInt64List;

		// Token: 0x040058C4 RID: 22724
		private LuaFunction m_CanLevelUpEquipmentStarUInt64UInt64_hotfix;

		// Token: 0x040058C5 RID: 22725
		private LuaFunction m_IsLevelTicketsMaxInMissionList;

		// Token: 0x040058C6 RID: 22726
		private LuaFunction m_CalcEquipmentDecomposeReturnGoldEquipmentBagItem_hotfix;

		// Token: 0x040058C7 RID: 22727
		private LuaFunction m_GetEquipmentResonanceNumsUInt64_hotfix;

		// Token: 0x040058C8 RID: 22728
		private LuaFunction m_GetEquipmentResonanceNumsByHeroIdUInt64Int32_hotfix;

		// Token: 0x040058C9 RID: 22729
		private LuaFunction m_RemoveBagItemByTypeGoodsTypeInt32Int32GameFunctionTypeString_hotfix;

		// Token: 0x040058CA RID: 22730
		private LuaFunction m_IsShowEnchantCancelConfirmPanel_hotfix;

		// Token: 0x040058CB RID: 22731
		private LuaFunction m_SetEnchantCancelConfirmFlagBoolean_hotfix;

		// Token: 0x040058CC RID: 22732
		private LuaFunction m_IsShowEnchantSaveConfirmPanel_hotfix;

		// Token: 0x040058CD RID: 22733
		private LuaFunction m_SetEnchantSaveConfirmFlagBoolean_hotfix;

		// Token: 0x040058CE RID: 22734
		private LuaFunction m_HasOwnGoodsTypeInt32_hotfix;

		// Token: 0x040058CF RID: 22735
		private LuaFunction m_NeedUpdatePlayerResourceGoodsTypeInt32_hotfix;

		// Token: 0x040058D0 RID: 22736
		private LuaFunction m_add_EventOnBagItemChangeNtfAction_hotfix;

		// Token: 0x040058D1 RID: 22737
		private LuaFunction m_remove_EventOnBagItemChangeNtfAction_hotfix;

		// Token: 0x040058D2 RID: 22738
		private LuaFunction m_add_EventOnUseBagItemAckAction;

		// Token: 0x040058D3 RID: 22739
		private LuaFunction m_remove_EventOnUseBagItemAckAction;

		// Token: 0x040058D4 RID: 22740
		private LuaFunction m_add_EventOnSellBagItemAckAction;

		// Token: 0x040058D5 RID: 22741
		private LuaFunction m_remove_EventOnSellBagItemAckAction;

		// Token: 0x040058D6 RID: 22742
		private LuaFunction m_add_EventOnEquipmentLockAndUnLockAckAction;

		// Token: 0x040058D7 RID: 22743
		private LuaFunction m_remove_EventOnEquipmentLockAndUnLockAckAction;

		// Token: 0x040058D8 RID: 22744
		private LuaFunction m_add_EventOnEquipmentEnhanceAckAction;

		// Token: 0x040058D9 RID: 22745
		private LuaFunction m_remove_EventOnEquipmentEnhanceAckAction;

		// Token: 0x040058DA RID: 22746
		private LuaFunction m_add_EventOnEquipmentStarLevelUpAckAction;

		// Token: 0x040058DB RID: 22747
		private LuaFunction m_remove_EventOnEquipmentStarLevelUpAckAction;

		// Token: 0x040058DC RID: 22748
		private LuaFunction m_add_EventOnBagItemDecomposeAckAction;

		// Token: 0x040058DD RID: 22749
		private LuaFunction m_remove_EventOnBagItemDecomposeAckAction;

		// Token: 0x040058DE RID: 22750
		private LuaFunction m_add_EventOnEquipmentEnchantAckAction;

		// Token: 0x040058DF RID: 22751
		private LuaFunction m_remove_EventOnEquipmentEnchantAckAction;

		// Token: 0x040058E0 RID: 22752
		private LuaFunction m_add_EventOnEquipmentEnchantSaveAckAction;

		// Token: 0x040058E1 RID: 22753
		private LuaFunction m_remove_EventOnEquipmentEnchantSaveAckAction;

		// Token: 0x040058E2 RID: 22754
		private LuaFunction m_SendBattleCancelReq_hotfix;

		// Token: 0x040058E3 RID: 22755
		private LuaFunction m_SendBattleTeamSetReqBattleTypeInt32List;

		// Token: 0x040058E4 RID: 22756
		private LuaFunction m_SendBattleArmyRandomSeedGetReqInt32_hotfix;

		// Token: 0x040058E5 RID: 22757
		private LuaFunction m_OnMessageDSBattleNtf_hotfix;

		// Token: 0x040058E6 RID: 22758
		private LuaFunction m_OnMessageBattleCancelAck_hotfix;

		// Token: 0x040058E7 RID: 22759
		private LuaFunction m_OnMessageBattleTeamSetAck_hotfix;

		// Token: 0x040058E8 RID: 22760
		private LuaFunction m_OnMessageBattleArmyRandomSeedGetAck_hotfix;

		// Token: 0x040058E9 RID: 22761
		private LuaFunction m_IsGameFunctionOpenByMonthCardGameFunctionType_hotfix;

		// Token: 0x040058EA RID: 22762
		private LuaFunction m_GetDailyBonusMaxNumsGameFunctionType_hotfix;

		// Token: 0x040058EB RID: 22763
		private LuaFunction m_SetBattleBaseBattleBase_hotfix;

		// Token: 0x040058EC RID: 22764
		private LuaFunction m_SetCurrentBattleConfigDataBattleInfoBattleType_hotfix;

		// Token: 0x040058ED RID: 22765
		private LuaFunction m_SetCurrentArenaBattleConfigDataArenaBattleInfoConfigDataArenaDefendRuleInfoInt32List`1List;

		// Token: 0x040058EE RID: 22766
		private LuaFunction m_SetCurrentArenaBattleReportArenaBattleReport_hotfix;

		// Token: 0x040058EF RID: 22767
		private LuaFunction m_SetCurrentPVPBattleConfigDataPVPBattleInfo_hotfix;

		// Token: 0x040058F0 RID: 22768
		private LuaFunction m_SetCurrentRealTimePVPBattleConfigDataRealTimePVPBattleInfo_hotfix;

		// Token: 0x040058F1 RID: 22769
		private LuaFunction m_SetCurrentRealTimePVPBattleReportRealTimePVPBattleReport_hotfix;

		// Token: 0x040058F2 RID: 22770
		private LuaFunction m_IsCurrentBattleFirstBattle_hotfix;

		// Token: 0x040058F3 RID: 22771
		private LuaFunction m_GetBattleTeamBattleType_hotfix;

		// Token: 0x040058F4 RID: 22772
		private LuaFunction m_CreateBattleHeroFromMyHeroHero_hotfix;

		// Token: 0x040058F5 RID: 22773
		private LuaFunction m_CreateDefaultBattleHeroInt32_hotfix;

		// Token: 0x040058F6 RID: 22774
		private LuaFunction m_SaveBeforeRewardStatus_hotfix;

		// Token: 0x040058F7 RID: 22775
		private LuaFunction m_SaveBattleHeroIdsList;

		// Token: 0x040058F8 RID: 22776
		private LuaFunction m_GetBeforeRewardPlayerStatus_hotfix;

		// Token: 0x040058F9 RID: 22777
		private LuaFunction m_GetBeforeRewardHeroStatusInt32_hotfix;

		// Token: 0x040058FA RID: 22778
		private LuaFunction m_GetProcessingBattle_hotfix;

		// Token: 0x040058FB RID: 22779
		private LuaFunction m_GetArenaBattleStatus_hotfix;

		// Token: 0x040058FC RID: 22780
		private LuaFunction m_GetArenaBattleId_hotfix;

		// Token: 0x040058FD RID: 22781
		private LuaFunction m_SetNeedRebuildBattleBoolean_hotfix;

		// Token: 0x040058FE RID: 22782
		private LuaFunction m_IsNeedRebuildBattle_hotfix;

		// Token: 0x040058FF RID: 22783
		private LuaFunction m_GetGainBattleTreasrueIds_hotfix;

		// Token: 0x04005900 RID: 22784
		private LuaFunction m_GetGainBattleTreasureCountConfigDataBattleInfo_hotfix;

		// Token: 0x04005901 RID: 22785
		private LuaFunction m_ComputeBattlePowerHero_hotfix;

		// Token: 0x04005902 RID: 22786
		private LuaFunction m_ComputeBattlePowerBattleHeroList;

		// Token: 0x04005903 RID: 22787
		private LuaFunction m_SetBattleRandomSeedInt32_hotfix;

		// Token: 0x04005904 RID: 22788
		private LuaFunction m_GetBattleRandomSeed_hotfix;

		// Token: 0x04005905 RID: 22789
		private LuaFunction m_SetArenaBattleRandomSeedInt32_hotfix;

		// Token: 0x04005906 RID: 22790
		private LuaFunction m_GetArenaBattleRandomSeed_hotfix;

		// Token: 0x04005907 RID: 22791
		private LuaFunction m_SetBattleArmyRandomSeedInt32_hotfix;

		// Token: 0x04005908 RID: 22792
		private LuaFunction m_GetBattleArmyRandomSeed_hotfix;

		// Token: 0x04005909 RID: 22793
		private LuaFunction m_BattleFinishedErrorInt32_hotfix;

		// Token: 0x0400590A RID: 22794
		private LuaFunction m_GetDeadEnemyHeroIds_hotfix;

		// Token: 0x0400590B RID: 22795
		private LuaFunction m_UpdateGeneralInviteInfosList;

		// Token: 0x0400590C RID: 22796
		private LuaFunction m_SetRemainBattleRegretCountInt32_hotfix;

		// Token: 0x0400590D RID: 22797
		private LuaFunction m_GetRemainBattleRegretCount_hotfix;

		// Token: 0x0400590E RID: 22798
		private LuaFunction m_UseBattleRegret_hotfix;

		// Token: 0x0400590F RID: 22799
		private LuaFunction m_GetCurrentBattleFailEnergyCost_hotfix;

		// Token: 0x04005910 RID: 22800
		private LuaFunction m_add_EventOnBattleCancelAckAction;

		// Token: 0x04005911 RID: 22801
		private LuaFunction m_remove_EventOnBattleCancelAckAction;

		// Token: 0x04005912 RID: 22802
		private LuaFunction m_add_EventOnBattleTeamSetAckAction;

		// Token: 0x04005913 RID: 22803
		private LuaFunction m_remove_EventOnBattleTeamSetAckAction;

		// Token: 0x04005914 RID: 22804
		private LuaFunction m_add_EventOnBattleArmyRandomSeedGetAckAction;

		// Token: 0x04005915 RID: 22805
		private LuaFunction m_remove_EventOnBattleArmyRandomSeedGetAckAction;

		// Token: 0x04005916 RID: 22806
		private LuaFunction m_SendTeamBattleRoomCreateReq_hotfix;

		// Token: 0x04005917 RID: 22807
		private LuaFunction m_SendBattleRoomPlayerStatusChangeReqPlayerBattleStatus_hotfix;

		// Token: 0x04005918 RID: 22808
		private LuaFunction m_OnMessageBattleRoomQuitNtf_hotfix;

		// Token: 0x04005919 RID: 22809
		private LuaFunction m_SendBattleRoomHeroSetupReqInt32Int32_hotfix;

		// Token: 0x0400591A RID: 22810
		private LuaFunction m_SendBattleRoomHeroSwapReqInt32Int32_hotfix;

		// Token: 0x0400591B RID: 22811
		private LuaFunction m_SendBattleRoomHeroPutdownReqInt32_hotfix;

		// Token: 0x0400591C RID: 22812
		private LuaFunction m_SendBattleRoomHeroProtectReqInt32_hotfix;

		// Token: 0x0400591D RID: 22813
		private LuaFunction m_SendBattleRoomHeroBanReqInt32_hotfix;

		// Token: 0x0400591E RID: 22814
		private LuaFunction m_SendBattleRoomEndCurrentBPTurnReq_hotfix;

		// Token: 0x0400591F RID: 22815
		private LuaFunction m_SendBattleRoomBattleCommandExecuteReqList;

		// Token: 0x04005920 RID: 22816
		private LuaFunction m_SendBattleRoomQuitReq_hotfix;

		// Token: 0x04005921 RID: 22817
		private LuaFunction m_SendBattleRoomPlayerActionBeginReq_hotfix;

		// Token: 0x04005922 RID: 22818
		private LuaFunction m_SendBattleRoomGetReq_hotfix;

		// Token: 0x04005923 RID: 22819
		private LuaFunction m_SendBattleRoomBattleLogReqString_hotfix;

		// Token: 0x04005924 RID: 22820
		private LuaFunction m_OnMessageBattleRoomCreateAck_hotfix;

		// Token: 0x04005925 RID: 22821
		private LuaFunction m_OnMessageBattleRoomPlayerStatusChangeAck_hotfix;

		// Token: 0x04005926 RID: 22822
		private LuaFunction m_OnMessageBattleRoomHeroSetupAck_hotfix;

		// Token: 0x04005927 RID: 22823
		private LuaFunction m_OnMessageBattleRoomHeroSwapAck_hotfix;

		// Token: 0x04005928 RID: 22824
		private LuaFunction m_OnMessageBattleRoomHeroPutdownAck_hotfix;

		// Token: 0x04005929 RID: 22825
		private LuaFunction m_OnMessageBattleRoomHeroProtectAck_hotfix;

		// Token: 0x0400592A RID: 22826
		private LuaFunction m_OnMessageBattleRoomHeroBanAck_hotfix;

		// Token: 0x0400592B RID: 22827
		private LuaFunction m_OnMessageBattleRoomEndCurrentBPTurnAck_hotfix;

		// Token: 0x0400592C RID: 22828
		private LuaFunction m_OnMessageBattleRoomBattleCommandExecuteAck_hotfix;

		// Token: 0x0400592D RID: 22829
		private LuaFunction m_OnMessageBattleRoomQuitAck_hotfix;

		// Token: 0x0400592E RID: 22830
		private LuaFunction m_OnMessageBattleRoomPlayerActionBeginAck_hotfix;

		// Token: 0x0400592F RID: 22831
		private LuaFunction m_OnMessageBattleRoomGetAck_hotfix;

		// Token: 0x04005930 RID: 22832
		private LuaFunction m_OnMessageBattleRoomTeamBattleJoinNtf_hotfix;

		// Token: 0x04005931 RID: 22833
		private LuaFunction m_OnMessageBattleRoomPVPBattleJoinNtf_hotfix;

		// Token: 0x04005932 RID: 22834
		private LuaFunction m_OnMessageBattleRoomRealTimePVPBattleJoinNtf_hotfix;

		// Token: 0x04005933 RID: 22835
		private LuaFunction m_OnMessageBattleRoomGuildMassiveCombatBattleJoinNtf_hotfix;

		// Token: 0x04005934 RID: 22836
		private LuaFunction m_OnMessageBattleRoomPlayerStatusChangedNtf_hotfix;

		// Token: 0x04005935 RID: 22837
		private LuaFunction m_OnMessageBattleRoomHeroSetupNtf_hotfix;

		// Token: 0x04005936 RID: 22838
		private LuaFunction m_OnMessageBattleRoomTeamBattleStartNtf_hotfix;

		// Token: 0x04005937 RID: 22839
		private LuaFunction m_OnMessageBattleRoomPVPBattleStartNtf_hotfix;

		// Token: 0x04005938 RID: 22840
		private LuaFunction m_OnMessageBattleRoomRealTimePVPBattleStartNtf_hotfix;

		// Token: 0x04005939 RID: 22841
		private LuaFunction m_OnMessageBattleRoomBattleCommandExecuteNtf_hotfix;

		// Token: 0x0400593A RID: 22842
		private LuaFunction m_OnMessageBattleRoomTeamBattleFinishNtf_hotfix;

		// Token: 0x0400593B RID: 22843
		private LuaFunction m_OnMessageBattleRoomPVPBattleFinishNtf_hotfix;

		// Token: 0x0400593C RID: 22844
		private LuaFunction m_OnMessageBattleRoomRealTimePVPBattleFinishNtf_hotfix;

		// Token: 0x0400593D RID: 22845
		private LuaFunction m_OnMessageBattleGuildMassiveCombatBattleFinishNtf_hotfix;

		// Token: 0x0400593E RID: 22846
		private LuaFunction m_OnMessageBattleRoomPlayerBattleInfoInitNtf_hotfix;

		// Token: 0x0400593F RID: 22847
		private LuaFunction m_OnMessageBattleRoomDataChangeNtf_hotfix;

		// Token: 0x04005940 RID: 22848
		private LuaFunction m_IsInBattleRoom_hotfix;

		// Token: 0x04005941 RID: 22849
		private LuaFunction m_GetBattleRoom_hotfix;

		// Token: 0x04005942 RID: 22850
		private LuaFunction m_SetQuitBattleRoom_hotfix;

		// Token: 0x04005943 RID: 22851
		private LuaFunction m_add_EventOnBattleRoomCreateAckAction;

		// Token: 0x04005944 RID: 22852
		private LuaFunction m_remove_EventOnBattleRoomCreateAckAction;

		// Token: 0x04005945 RID: 22853
		private LuaFunction m_add_EventOnBattleRoomPlayerStatusChangeAckAction;

		// Token: 0x04005946 RID: 22854
		private LuaFunction m_remove_EventOnBattleRoomPlayerStatusChangeAckAction;

		// Token: 0x04005947 RID: 22855
		private LuaFunction m_add_EventOnBattleRoomHeroSetupAckAction;

		// Token: 0x04005948 RID: 22856
		private LuaFunction m_remove_EventOnBattleRoomHeroSetupAckAction;

		// Token: 0x04005949 RID: 22857
		private LuaFunction m_add_EventOnBattleRoomHeroSwapAckAction;

		// Token: 0x0400594A RID: 22858
		private LuaFunction m_remove_EventOnBattleRoomHeroSwapAckAction;

		// Token: 0x0400594B RID: 22859
		private LuaFunction m_add_EventOnBattleRoomHeroPutdownAckAction;

		// Token: 0x0400594C RID: 22860
		private LuaFunction m_remove_EventOnBattleRoomHeroPutdownAckAction;

		// Token: 0x0400594D RID: 22861
		private LuaFunction m_add_EventOnBattleRoomHeroProtectAckAction;

		// Token: 0x0400594E RID: 22862
		private LuaFunction m_remove_EventOnBattleRoomHeroProtectAckAction;

		// Token: 0x0400594F RID: 22863
		private LuaFunction m_add_EventOnBattleRoomHeroBanAckAction;

		// Token: 0x04005950 RID: 22864
		private LuaFunction m_remove_EventOnBattleRoomHeroBanAckAction;

		// Token: 0x04005951 RID: 22865
		private LuaFunction m_add_EventOnBattleRoomBattleCommandExecuteAckAction;

		// Token: 0x04005952 RID: 22866
		private LuaFunction m_remove_EventOnBattleRoomBattleCommandExecuteAckAction;

		// Token: 0x04005953 RID: 22867
		private LuaFunction m_add_EventOnBattleRoomQuitAckAction;

		// Token: 0x04005954 RID: 22868
		private LuaFunction m_remove_EventOnBattleRoomQuitAckAction;

		// Token: 0x04005955 RID: 22869
		private LuaFunction m_add_EventOnBattleRoomPlayerActionBeginAckAction;

		// Token: 0x04005956 RID: 22870
		private LuaFunction m_remove_EventOnBattleRoomPlayerActionBeginAckAction;

		// Token: 0x04005957 RID: 22871
		private LuaFunction m_add_EventOnBattleRoomGetAckAction;

		// Token: 0x04005958 RID: 22872
		private LuaFunction m_remove_EventOnBattleRoomGetAckAction;

		// Token: 0x04005959 RID: 22873
		private LuaFunction m_add_EventOnBattleRoomEndCurrentBPTurnAckAction;

		// Token: 0x0400595A RID: 22874
		private LuaFunction m_remove_EventOnBattleRoomEndCurrentBPTurnAckAction;

		// Token: 0x0400595B RID: 22875
		private LuaFunction m_add_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix;

		// Token: 0x0400595C RID: 22876
		private LuaFunction m_remove_EventOnBattleRoomTeamBattleJoinNtfAction_hotfix;

		// Token: 0x0400595D RID: 22877
		private LuaFunction m_add_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix;

		// Token: 0x0400595E RID: 22878
		private LuaFunction m_remove_EventOnBattleRoomPVPBattleJoinNtfAction_hotfix;

		// Token: 0x0400595F RID: 22879
		private LuaFunction m_add_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix;

		// Token: 0x04005960 RID: 22880
		private LuaFunction m_remove_EventOnBattleRoomRealTimePVPBattleJoinNtfAction_hotfix;

		// Token: 0x04005961 RID: 22881
		private LuaFunction m_add_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix;

		// Token: 0x04005962 RID: 22882
		private LuaFunction m_remove_EventOnBattleRoomGuildMassiveCombatBattleJoinNtfAction_hotfix;

		// Token: 0x04005963 RID: 22883
		private LuaFunction m_add_EventOnBattleRoomPlayerStatusChangedNtfAction;

		// Token: 0x04005964 RID: 22884
		private LuaFunction m_remove_EventOnBattleRoomPlayerStatusChangedNtfAction;

		// Token: 0x04005965 RID: 22885
		private LuaFunction m_add_EventOnBattleRoomPlayerQuitNtfAction;

		// Token: 0x04005966 RID: 22886
		private LuaFunction m_remove_EventOnBattleRoomPlayerQuitNtfAction;

		// Token: 0x04005967 RID: 22887
		private LuaFunction m_add_EventOnBattleRoomHeroSetupNtfAction;

		// Token: 0x04005968 RID: 22888
		private LuaFunction m_remove_EventOnBattleRoomHeroSetupNtfAction;

		// Token: 0x04005969 RID: 22889
		private LuaFunction m_add_EventOnBattleRoomTeamBattleStartNtfAction_hotfix;

		// Token: 0x0400596A RID: 22890
		private LuaFunction m_remove_EventOnBattleRoomTeamBattleStartNtfAction_hotfix;

		// Token: 0x0400596B RID: 22891
		private LuaFunction m_add_EventOnBattleRoomPVPBattleStartNtfAction_hotfix;

		// Token: 0x0400596C RID: 22892
		private LuaFunction m_remove_EventOnBattleRoomPVPBattleStartNtfAction_hotfix;

		// Token: 0x0400596D RID: 22893
		private LuaFunction m_add_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix;

		// Token: 0x0400596E RID: 22894
		private LuaFunction m_remove_EventOnBattleRoomRealTimePVPBattleStartNtfAction_hotfix;

		// Token: 0x0400596F RID: 22895
		private LuaFunction m_add_EventOnBattleRoomBattleCommandExecuteNtfAction;

		// Token: 0x04005970 RID: 22896
		private LuaFunction m_remove_EventOnBattleRoomBattleCommandExecuteNtfAction;

		// Token: 0x04005971 RID: 22897
		private LuaFunction m_add_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix;

		// Token: 0x04005972 RID: 22898
		private LuaFunction m_remove_EventOnBattleRoomTeamBattleFinishNtfAction_hotfix;

		// Token: 0x04005973 RID: 22899
		private LuaFunction m_add_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix;

		// Token: 0x04005974 RID: 22900
		private LuaFunction m_remove_EventOnBattleRoomPVPBattleFinishNtfAction_hotfix;

		// Token: 0x04005975 RID: 22901
		private LuaFunction m_add_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix;

		// Token: 0x04005976 RID: 22902
		private LuaFunction m_remove_EventOnBattleRoomRealTimePVPBattleFinishNtfAction_hotfix;

		// Token: 0x04005977 RID: 22903
		private LuaFunction m_add_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix;

		// Token: 0x04005978 RID: 22904
		private LuaFunction m_remove_EventOnBattleRoomGuildMassiveCombatBattleFinishNtfAction_hotfix;

		// Token: 0x04005979 RID: 22905
		private LuaFunction m_add_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix;

		// Token: 0x0400597A RID: 22906
		private LuaFunction m_remove_EventOnBattleRoomPlayerBattleInfoInitNtfAction_hotfix;

		// Token: 0x0400597B RID: 22907
		private LuaFunction m_add_EventOnBattleRoomDataChangeNtfAction_hotfix;

		// Token: 0x0400597C RID: 22908
		private LuaFunction m_remove_EventOnBattleRoomDataChangeNtfAction_hotfix;

		// Token: 0x0400597D RID: 22909
		private LuaFunction m_SendChatTextMessageChatChannelString_hotfix;

		// Token: 0x0400597E RID: 22910
		private LuaFunction m_SendChatExpressionMessageChatChannelString_hotfix;

		// Token: 0x0400597F RID: 22911
		private LuaFunction m_SendChatVoiceMessageChatChannelBytebeInt32Int32Int32StringString_hotfix;

		// Token: 0x04005980 RID: 22912
		private LuaFunction m_SendGetVoiceContentMessageChatChannelUInt64_hotfix;

		// Token: 0x04005981 RID: 22913
		private LuaFunction m_SendWorldEnterNewRoomMessageInt32_hotfix;

		// Token: 0x04005982 RID: 22914
		private LuaFunction m_SendGetChatContactUserSummaryInfoMessageList;

		// Token: 0x04005983 RID: 22915
		private LuaFunction m_OnMessageChatContactUserSummaryInfoAck_hotfix;

		// Token: 0x04005984 RID: 22916
		private LuaFunction m_OnMessageDSChatNtf_hotfix;

		// Token: 0x04005985 RID: 22917
		private LuaFunction m_OnMessageChatMessageNtf_hotfix;

		// Token: 0x04005986 RID: 22918
		private LuaFunction m_OnMessageChatMessageSendAck_hotfix;

		// Token: 0x04005987 RID: 22919
		private LuaFunction m_OnMessageChatBannedNtf_hotfix;

		// Token: 0x04005988 RID: 22920
		private LuaFunction m_OnMessageChatVoiceContentAck_hotfix;

		// Token: 0x04005989 RID: 22921
		private LuaFunction m_OnMessageChatWorldChannelRoomEnterAck_hotfix;

		// Token: 0x0400598A RID: 22922
		private LuaFunction m_OnMessageChatGuildHistoryMessageNtf_hotfix;

		// Token: 0x0400598B RID: 22923
		private LuaFunction m_GetChatGroupNameString_hotfix;

		// Token: 0x0400598C RID: 22924
		private LuaFunction m_GetPrivateChatPlayeNameString_hotfix;

		// Token: 0x0400598D RID: 22925
		private LuaFunction m_GetChatComponent_hotfix;

		// Token: 0x0400598E RID: 22926
		private LuaFunction m_CanSendChatMessageInt32_hotfix;

		// Token: 0x0400598F RID: 22927
		private LuaFunction m_GetChatMessageListChatChannel_hotfix;

		// Token: 0x04005990 RID: 22928
		private LuaFunction m_GetUnReadChatMsgCount4PointPlayerOrGroupChatChannelString_hotfix;

		// Token: 0x04005991 RID: 22929
		private LuaFunction m_GetGroupChatId_hotfix;

		// Token: 0x04005992 RID: 22930
		private LuaFunction m_SetGroupChatTargetString_hotfix;

		// Token: 0x04005993 RID: 22931
		private LuaFunction m_ClearGroupChatTarget_hotfix;

		// Token: 0x04005994 RID: 22932
		private LuaFunction m_SetPrivateChatTargetString_hotfix;

		// Token: 0x04005995 RID: 22933
		private LuaFunction m_CleanPrivateChatTarget_hotfix;

		// Token: 0x04005996 RID: 22934
		private LuaFunction m_GetPrivateChatPlayerId_hotfix;

		// Token: 0x04005997 RID: 22935
		private LuaFunction m_GetRecentPrivateChatIdList_hotfix;

		// Token: 0x04005998 RID: 22936
		private LuaFunction m_GetNewChatMsgCount_hotfix;

		// Token: 0x04005999 RID: 22937
		private LuaFunction m_GetGroupUnreadChatMsgCount_hotfix;

		// Token: 0x0400599A RID: 22938
		private LuaFunction m_GetAssignGroupUnreadChatMsgCountString_hotfix;

		// Token: 0x0400599B RID: 22939
		private LuaFunction m_GetAssignPrivateUnreadChatMsgCountString_hotfix;

		// Token: 0x0400599C RID: 22940
		private LuaFunction m_GetPrivateUnreadChatMsgCount_hotfix;

		// Token: 0x0400599D RID: 22941
		private LuaFunction m_GetGuildUnreadChatMsgCount_hotfix;

		// Token: 0x0400599E RID: 22942
		private LuaFunction m_GetRoomIndex_hotfix;

		// Token: 0x0400599F RID: 22943
		private LuaFunction m_ReadChatChatChannel_hotfix;

		// Token: 0x040059A0 RID: 22944
		private LuaFunction m_ReadChatBeforeDateChatChannelDateTime_hotfix;

		// Token: 0x040059A1 RID: 22945
		private LuaFunction m_RefreshGuildChatLastReadTime_hotfix;

		// Token: 0x040059A2 RID: 22946
		private LuaFunction m_GetGuildChatLastReadTime_hotfix;

		// Token: 0x040059A3 RID: 22947
		private LuaFunction m_GetRecentChatTargetListChatChannel_hotfix;

		// Token: 0x040059A4 RID: 22948
		private LuaFunction m_ClearGuildChatContent_hotfix;

		// Token: 0x040059A5 RID: 22949
		private LuaFunction m_GetWaitingNoticeStringListFirstNotice_hotfix;

		// Token: 0x040059A6 RID: 22950
		private LuaFunction m_GetGetWaitingNoticeStringListCount_hotfix;

		// Token: 0x040059A7 RID: 22951
		private LuaFunction m_AddNoticeToWaitingNoticeStringListNoticeText_hotfix;

		// Token: 0x040059A8 RID: 22952
		private LuaFunction m_SetIsShowingNoticeFlagBoolean_hotfix;

		// Token: 0x040059A9 RID: 22953
		private LuaFunction m_GetIsShowingNoticeFlag_hotfix;

		// Token: 0x040059AA RID: 22954
		private LuaFunction m_GetChatMsgWithBlacklistChatChannel_hotfix;

		// Token: 0x040059AB RID: 22955
		private LuaFunction m_add_EventOnChatMessageNtfAction;

		// Token: 0x040059AC RID: 22956
		private LuaFunction m_remove_EventOnChatMessageNtfAction;

		// Token: 0x040059AD RID: 22957
		private LuaFunction m_add_EventOnChatContactUserSummaryInfoAckAction_hotfix;

		// Token: 0x040059AE RID: 22958
		private LuaFunction m_remove_EventOnChatContactUserSummaryInfoAckAction_hotfix;

		// Token: 0x040059AF RID: 22959
		private LuaFunction m_add_EventOnChatMessageAckAction;

		// Token: 0x040059B0 RID: 22960
		private LuaFunction m_remove_EventOnChatMessageAckAction;

		// Token: 0x040059B1 RID: 22961
		private LuaFunction m_add_EventOnChatGetVoiceContentAckAction;

		// Token: 0x040059B2 RID: 22962
		private LuaFunction m_remove_EventOnChatGetVoiceContentAckAction;

		// Token: 0x040059B3 RID: 22963
		private LuaFunction m_add_EventOnChatEnterRoomAckAction;

		// Token: 0x040059B4 RID: 22964
		private LuaFunction m_remove_EventOnChatEnterRoomAckAction;

		// Token: 0x040059B5 RID: 22965
		private LuaFunction m_SendChangeOwnerReqStringString_hotfix;

		// Token: 0x040059B6 RID: 22966
		private LuaFunction m_SendChangeNameReqStringString_hotfix;

		// Token: 0x040059B7 RID: 22967
		private LuaFunction m_SendCreateChatGroupReqStringList;

		// Token: 0x040059B8 RID: 22968
		private LuaFunction m_SendGetChatGroupMemberReqString_hotfix;

		// Token: 0x040059B9 RID: 22969
		private LuaFunction m_SendGetAllChatGroupReq_hotfix;

		// Token: 0x040059BA RID: 22970
		private LuaFunction m_SendInviteToChatGroupReqStringList;

		// Token: 0x040059BB RID: 22971
		private LuaFunction m_SendLeaveChatGroupReqString_hotfix;

		// Token: 0x040059BC RID: 22972
		private LuaFunction m_SendKickUserReqStringString_hotfix;

		// Token: 0x040059BD RID: 22973
		private LuaFunction m_SendGetUserSummaryReqList`1Action;

		// Token: 0x040059BE RID: 22974
		private LuaFunction m_OnMessageChatGroupChangeOwnerAck_hotfix;

		// Token: 0x040059BF RID: 22975
		private LuaFunction m_OnMessageChatGroupChangeNameAck_hotfix;

		// Token: 0x040059C0 RID: 22976
		private LuaFunction m_OnMessageChatGroupCreateChatGroupAck_hotfix;

		// Token: 0x040059C1 RID: 22977
		private LuaFunction m_OnMessageChatGroupGetChatGroupAck_hotfix;

		// Token: 0x040059C2 RID: 22978
		private LuaFunction m_OnMessageChatGroupGetChatGroupMemberAck_hotfix;

		// Token: 0x040059C3 RID: 22979
		private LuaFunction m_OnMessageChatGroupInviteToChatGroupAck_hotfix;

		// Token: 0x040059C4 RID: 22980
		private LuaFunction m_OnMessageChatGroupLeaveChatGroupAck_hotfix;

		// Token: 0x040059C5 RID: 22981
		private LuaFunction m_OnMessageChatGroupKickUserAck_hotfix;

		// Token: 0x040059C6 RID: 22982
		private LuaFunction m_OnMessageFriendGetUserSummaryAck_hotfix;

		// Token: 0x040059C7 RID: 22983
		private LuaFunction m_OnMessageChatGroupUpdateNtf_hotfix;

		// Token: 0x040059C8 RID: 22984
		private LuaFunction m_GetGuildMemberSummaryList;

		// Token: 0x040059C9 RID: 22985
		private LuaFunction m_OnGetGuildMemberSummaryFriendGetUserSummaryAck_hotfix;

		// Token: 0x040059CA RID: 22986
		private LuaFunction m_add_EventOnCreateChatGroupAckAction;

		// Token: 0x040059CB RID: 22987
		private LuaFunction m_remove_EventOnCreateChatGroupAckAction;

		// Token: 0x040059CC RID: 22988
		private LuaFunction m_add_EventOnGetAllChatGroupAckAction;

		// Token: 0x040059CD RID: 22989
		private LuaFunction m_remove_EventOnGetAllChatGroupAckAction;

		// Token: 0x040059CE RID: 22990
		private LuaFunction m_add_EventOnGetChatGroupMemberAckAction;

		// Token: 0x040059CF RID: 22991
		private LuaFunction m_remove_EventOnGetChatGroupMemberAckAction;

		// Token: 0x040059D0 RID: 22992
		private LuaFunction m_add_EventOnChatGroupChangeOwnerAckAction;

		// Token: 0x040059D1 RID: 22993
		private LuaFunction m_remove_EventOnChatGroupChangeOwnerAckAction;

		// Token: 0x040059D2 RID: 22994
		private LuaFunction m_add_EventOnChatGroupChangeNameAckAction;

		// Token: 0x040059D3 RID: 22995
		private LuaFunction m_remove_EventOnChatGroupChangeNameAckAction;

		// Token: 0x040059D4 RID: 22996
		private LuaFunction m_add_EventOnInviteToChatGroupAckAction;

		// Token: 0x040059D5 RID: 22997
		private LuaFunction m_remove_EventOnInviteToChatGroupAckAction;

		// Token: 0x040059D6 RID: 22998
		private LuaFunction m_add_EventOnLeaveChatGroupAckAction;

		// Token: 0x040059D7 RID: 22999
		private LuaFunction m_remove_EventOnLeaveChatGroupAckAction;

		// Token: 0x040059D8 RID: 23000
		private LuaFunction m_add_EventOnKickUserFromGroupAckAction;

		// Token: 0x040059D9 RID: 23001
		private LuaFunction m_remove_EventOnKickUserFromGroupAckAction;

		// Token: 0x040059DA RID: 23002
		private LuaFunction m_add_EventOnGetUserSummaryAckAction;

		// Token: 0x040059DB RID: 23003
		private LuaFunction m_remove_EventOnGetUserSummaryAckAction;

		// Token: 0x040059DC RID: 23004
		private LuaFunction m_add_EventOnChatGroupUpdateNtfAction;

		// Token: 0x040059DD RID: 23005
		private LuaFunction m_remove_EventOnChatGroupUpdateNtfAction;

		// Token: 0x040059DE RID: 23006
		private LuaFunction m_SendClimbTowerGetReq_hotfix;

		// Token: 0x040059DF RID: 23007
		private LuaFunction m_SendClimbTowerLevelAttackReqInt32_hotfix;

		// Token: 0x040059E0 RID: 23008
		private LuaFunction m_SendClimbTowerLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x040059E1 RID: 23009
		private LuaFunction m_SendClimbTowerRaidReq_hotfix;

		// Token: 0x040059E2 RID: 23010
		private LuaFunction m_OnMessageDSClimbTowerNtf_hotfix;

		// Token: 0x040059E3 RID: 23011
		private LuaFunction m_OnMessageClimbTowerGetAck_hotfix;

		// Token: 0x040059E4 RID: 23012
		private LuaFunction m_OnMessageClimbTowerLevelAttackAck_hotfix;

		// Token: 0x040059E5 RID: 23013
		private LuaFunction m_OnMessageClimbTowerLevelBattleFinishedAck_hotfix;

		// Token: 0x040059E6 RID: 23014
		private LuaFunction m_OnMessageClimbTowerRaidAck_hotfix;

		// Token: 0x040059E7 RID: 23015
		private LuaFunction m_CanAttackClimbTowerFloorInt32_hotfix;

		// Token: 0x040059E8 RID: 23016
		private LuaFunction m_GetClimbTowerNextFlushTime_hotfix;

		// Token: 0x040059E9 RID: 23017
		private LuaFunction m_GetClimbTowerMaxFloorId_hotfix;

		// Token: 0x040059EA RID: 23018
		private LuaFunction m_GetClimbTowerFinishedFloorId_hotfix;

		// Token: 0x040059EB RID: 23019
		private LuaFunction m_GetClimbTowerRaidMaxFloorId_hotfix;

		// Token: 0x040059EC RID: 23020
		private LuaFunction m_GetClimbTowerHistoryMaxFloorId_hotfix;

		// Token: 0x040059ED RID: 23021
		private LuaFunction m_ClimbTowerTryRaidInt32_Int32__hotfix;

		// Token: 0x040059EE RID: 23022
		private LuaFunction m_GetClimbTowerFloorInt32_hotfix;

		// Token: 0x040059EF RID: 23023
		private LuaFunction m_add_EventOnClimbTowerGetAckAction;

		// Token: 0x040059F0 RID: 23024
		private LuaFunction m_remove_EventOnClimbTowerGetAckAction;

		// Token: 0x040059F1 RID: 23025
		private LuaFunction m_add_EventOnClimbTowerLevelAttackAckAction;

		// Token: 0x040059F2 RID: 23026
		private LuaFunction m_remove_EventOnClimbTowerLevelAttackAckAction;

		// Token: 0x040059F3 RID: 23027
		private LuaFunction m_add_EventOnClimbTowerLevelBattleFinishedAckAction;

		// Token: 0x040059F4 RID: 23028
		private LuaFunction m_remove_EventOnClimbTowerLevelBattleFinishedAckAction;

		// Token: 0x040059F5 RID: 23029
		private LuaFunction m_add_EventOnClimbTowerRaidAckAction;

		// Token: 0x040059F6 RID: 23030
		private LuaFunction m_remove_EventOnClimbTowerRaidAckAction;

		// Token: 0x040059F7 RID: 23031
		private LuaFunction m_SendGetHeroCommentReqInt32_hotfix;

		// Token: 0x040059F8 RID: 23032
		private LuaFunction m_SendCommentHeroReqInt32String_hotfix;

		// Token: 0x040059F9 RID: 23033
		private LuaFunction m_SendPraiseHeroCommentEntryReqInt32UInt64_hotfix;

		// Token: 0x040059FA RID: 23034
		private LuaFunction m_SendViewCommenterHeroReqInt32String_hotfix;

		// Token: 0x040059FB RID: 23035
		private LuaFunction m_OnMessageHeroCommentGetAck_hotfix;

		// Token: 0x040059FC RID: 23036
		private LuaFunction m_OnMessageHeroCommentAck_hotfix;

		// Token: 0x040059FD RID: 23037
		private LuaFunction m_OnMessageHeroCommentEntryPraiseAck_hotfix;

		// Token: 0x040059FE RID: 23038
		private LuaFunction m_OnMessageCommenterHeroViewAck_hotfix;

		// Token: 0x040059FF RID: 23039
		private LuaFunction m_add_EventOnHeroCommentGetAckAction;

		// Token: 0x04005A00 RID: 23040
		private LuaFunction m_remove_EventOnHeroCommentGetAckAction;

		// Token: 0x04005A01 RID: 23041
		private LuaFunction m_add_EventOnHeroCommentSendAckAction;

		// Token: 0x04005A02 RID: 23042
		private LuaFunction m_remove_EventOnHeroCommentSendAckAction;

		// Token: 0x04005A03 RID: 23043
		private LuaFunction m_add_EventOnHeroCommentPraisedAckAction;

		// Token: 0x04005A04 RID: 23044
		private LuaFunction m_remove_EventOnHeroCommentPraisedAckAction;

		// Token: 0x04005A05 RID: 23045
		private LuaFunction m_add_EventOnCommenterHeroViewAckAction;

		// Token: 0x04005A06 RID: 23046
		private LuaFunction m_remove_EventOnCommenterHeroViewAckAction;

		// Token: 0x04005A07 RID: 23047
		private LuaFunction m_GetHeroCommentsInt32_hotfix;

		// Token: 0x04005A08 RID: 23048
		private LuaFunction m_CanPraiseHeroCommentEntryInt32UInt64_hotfix;

		// Token: 0x04005A09 RID: 23049
		private LuaFunction m_OnMessageDSCooperateBattleNtf_hotfix;

		// Token: 0x04005A0A RID: 23050
		private LuaFunction m_IsCooperateBattleOpenedInt32_hotfix;

		// Token: 0x04005A0B RID: 23051
		private LuaFunction m_IsCooperateBattleDisplayableInt32_hotfix;

		// Token: 0x04005A0C RID: 23052
		private LuaFunction m_GetCooperateBattleDailyChallengeNumsInt32_hotfix;

		// Token: 0x04005A0D RID: 23053
		private LuaFunction m_GetFirstOpenedCooperateBattle_hotfix;

		// Token: 0x04005A0E RID: 23054
		private LuaFunction m_IsCooperateBattleLevelOpenedInt32_hotfix;

		// Token: 0x04005A0F RID: 23055
		private LuaFunction m_CanAttackCooperateBattleLevelInt32_hotfix;

		// Token: 0x04005A10 RID: 23056
		private LuaFunction m_SendLevelDanmakuGetReqInt32Int32_hotfix;

		// Token: 0x04005A11 RID: 23057
		private LuaFunction m_SendLevelDanmakuPostReqInt32Int32List;

		// Token: 0x04005A12 RID: 23058
		private LuaFunction m_OnMessageLevelDanmakuGetAck_hotfix;

		// Token: 0x04005A13 RID: 23059
		private LuaFunction m_OnMessageLevelDanmakuPostAck_hotfix;

		// Token: 0x04005A14 RID: 23060
		private LuaFunction m_GetLevelDanmaku_hotfix;

		// Token: 0x04005A15 RID: 23061
		private LuaFunction m_GetPostedLevelDanmaku_hotfix;

		// Token: 0x04005A16 RID: 23062
		private LuaFunction m_PostLevelDanmakuPostDanmakuEntry_hotfix;

		// Token: 0x04005A17 RID: 23063
		private LuaFunction m_CanGetLevelDanmakuInt32Int32_hotfix;

		// Token: 0x04005A18 RID: 23064
		private LuaFunction m_CanPostLevelDanmakuInt32Int32List;

		// Token: 0x04005A19 RID: 23065
		private LuaFunction m_ClearLevelDanmaku_hotfix;

		// Token: 0x04005A1A RID: 23066
		private LuaFunction m_CanUseDanmaku_hotfix;

		// Token: 0x04005A1B RID: 23067
		private LuaFunction m_add_EventOnGetLevelDanmakuAckAction;

		// Token: 0x04005A1C RID: 23068
		private LuaFunction m_remove_EventOnGetLevelDanmakuAckAction;

		// Token: 0x04005A1D RID: 23069
		private LuaFunction m_add_EventOnSendLevelDanmakuAckAction;

		// Token: 0x04005A1E RID: 23070
		private LuaFunction m_remove_EventOnSendLevelDanmakuAckAction;

		// Token: 0x04005A1F RID: 23071
		private LuaFunction m_SendFixedStoreBuyStoreItemReqInt32Int32Int32_hotfix;

		// Token: 0x04005A20 RID: 23072
		private LuaFunction m_OnMessageDSFixedStoreNtf_hotfix;

		// Token: 0x04005A21 RID: 23073
		private LuaFunction m_OnMessageFixedStoreBuyStoreItemAck_hotfix;

		// Token: 0x04005A22 RID: 23074
		private LuaFunction m_GetSkinTicket_hotfix;

		// Token: 0x04005A23 RID: 23075
		private LuaFunction m_GetMemoryEssence_hotfix;

		// Token: 0x04005A24 RID: 23076
		private LuaFunction m_FindFixedStoreByIDInt32_hotfix;

		// Token: 0x04005A25 RID: 23077
		private LuaFunction m_GetFixedStoreItemListInt32_hotfix;

		// Token: 0x04005A26 RID: 23078
		private LuaFunction m_CanBuyFixedStoreGoodsInt32Int32Int32_hotfix;

		// Token: 0x04005A27 RID: 23079
		private LuaFunction m_IsOnDiscountConfigDataFixedStoreItemInfo_hotfix;

		// Token: 0x04005A28 RID: 23080
		private LuaFunction m_add_EventOnFixedStoreBuyStoreItemAckAction;

		// Token: 0x04005A29 RID: 23081
		private LuaFunction m_remove_EventOnFixedStoreBuyStoreItemAckAction;

		// Token: 0x04005A2A RID: 23082
		private LuaFunction m_SendHeroRandomActionSetReqBoolean_hotfix;

		// Token: 0x04005A2B RID: 23083
		private LuaFunction m_SendLikesSendReqString_hotfix;

		// Token: 0x04005A2C RID: 23084
		private LuaFunction m_SendBusinessCardDescUpdateReqString_hotfix;

		// Token: 0x04005A2D RID: 23085
		private LuaFunction m_SendBusinessCardHeroSetUpdateReqList;

		// Token: 0x04005A2E RID: 23086
		private LuaFunction m_SendBusinessCardSelectReqString_hotfix;

		// Token: 0x04005A2F RID: 23087
		private LuaFunction m_SendGetSocialRelationReqFriendSocialRelationFlag_hotfix;

		// Token: 0x04005A30 RID: 23088
		private LuaFunction m_SendFriendInivteReqList;

		// Token: 0x04005A31 RID: 23089
		private LuaFunction m_SendFriendAcceptReqList;

		// Token: 0x04005A32 RID: 23090
		private LuaFunction m_SendFriendDeclineReqList;

		// Token: 0x04005A33 RID: 23091
		private LuaFunction m_SendFriendDeleteReqString_hotfix;

		// Token: 0x04005A34 RID: 23092
		private LuaFunction m_SendPlayerBlockReqString_hotfix;

		// Token: 0x04005A35 RID: 23093
		private LuaFunction m_SendPlayerUnblockReqString_hotfix;

		// Token: 0x04005A36 RID: 23094
		private LuaFunction m_SendPlayerFindReqInt32String_hotfix;

		// Token: 0x04005A37 RID: 23095
		private LuaFunction m_SendSuggestedUserReq_hotfix;

		// Token: 0x04005A38 RID: 23096
		private LuaFunction m_SendBattlePracticeInviteReqString_hotfix;

		// Token: 0x04005A39 RID: 23097
		private LuaFunction m_SendBattlePracticeAcceptReqString_hotfix;

		// Token: 0x04005A3A RID: 23098
		private LuaFunction m_SendBattlePracticeDeclineReqString_hotfix;

		// Token: 0x04005A3B RID: 23099
		private LuaFunction m_SendBattlePracticeCancelReq_hotfix;

		// Token: 0x04005A3C RID: 23100
		private LuaFunction m_SendFriendshipPointsSendReqList;

		// Token: 0x04005A3D RID: 23101
		private LuaFunction m_SendFriendshipPointsClaimReqList;

		// Token: 0x04005A3E RID: 23102
		private LuaFunction m_OnMessageHeroRandomActionSetAck_hotfix;

		// Token: 0x04005A3F RID: 23103
		private LuaFunction m_OnMessageLikesSendAck_hotfix;

		// Token: 0x04005A40 RID: 23104
		private LuaFunction m_OnMessageBusinessCardSelectAck_hotfix;

		// Token: 0x04005A41 RID: 23105
		private LuaFunction m_OnMessageBusinessCardDescUpdateAck_hotfix;

		// Token: 0x04005A42 RID: 23106
		private LuaFunction m_OnMessageBusinessCardHeroSetUpdateAck_hotfix;

		// Token: 0x04005A43 RID: 23107
		private LuaFunction m_UpdateMineBusinessCardBoolean_hotfix;

		// Token: 0x04005A44 RID: 23108
		private LuaFunction m_OnMessageDSFriendNtf_hotfix;

		// Token: 0x04005A45 RID: 23109
		private LuaFunction m_OnMessageFriendInfoUpdateNtf_hotfix;

		// Token: 0x04005A46 RID: 23110
		private LuaFunction m_OnMessageFriendSocialRelationUpdateNtf_hotfix;

		// Token: 0x04005A47 RID: 23111
		private LuaFunction m_OnMessageFriendInviteAck_hotfix;

		// Token: 0x04005A48 RID: 23112
		private LuaFunction m_OnMessageFriendInviteNtf_hotfix;

		// Token: 0x04005A49 RID: 23113
		private LuaFunction m_OnMessageFriendInviteAcceptAck_hotfix;

		// Token: 0x04005A4A RID: 23114
		private LuaFunction m_OnMessageFriendInviteAcceptNtf_hotfix;

		// Token: 0x04005A4B RID: 23115
		private LuaFunction m_OnMessageFriendInviteDeclineAck_hotfix;

		// Token: 0x04005A4C RID: 23116
		private LuaFunction m_OnMessageFriendInviteDeclineNtf_hotfix;

		// Token: 0x04005A4D RID: 23117
		private LuaFunction m_OnMessageFriendDeleteAck_hotfix;

		// Token: 0x04005A4E RID: 23118
		private LuaFunction m_OnMessageFriendBlockAck_hotfix;

		// Token: 0x04005A4F RID: 23119
		private LuaFunction m_OnMessageFriendUnblockAck_hotfix;

		// Token: 0x04005A50 RID: 23120
		private LuaFunction m_OnMessageFriendFindAck_hotfix;

		// Token: 0x04005A51 RID: 23121
		private LuaFunction m_OnMessageFriendSuggestedAck_hotfix;

		// Token: 0x04005A52 RID: 23122
		private LuaFunction m_OnMessageFriendSummaryUpdateNtf_hotfix;

		// Token: 0x04005A53 RID: 23123
		private LuaFunction m_OnMessageBattlePracticeInviteAck_hotfix;

		// Token: 0x04005A54 RID: 23124
		private LuaFunction m_OnMessageBattlePracticeAcceptAck_hotfix;

		// Token: 0x04005A55 RID: 23125
		private LuaFunction m_OnMessageBattlePracticeDeclineAck_hotfix;

		// Token: 0x04005A56 RID: 23126
		private LuaFunction m_OnMessageBattlePracticeCancelAck_hotfix;

		// Token: 0x04005A57 RID: 23127
		private LuaFunction m_OnMessageBattlePracticeInvitedNtf_hotfix;

		// Token: 0x04005A58 RID: 23128
		private LuaFunction m_OnMessageBattlePracticeFailNtf_hotfix;

		// Token: 0x04005A59 RID: 23129
		private LuaFunction m_OnMessageBattlePracticeDeclinedNtf_hotfix;

		// Token: 0x04005A5A RID: 23130
		private LuaFunction m_OnMessageFriendshipPointsSendAck_hotfix;

		// Token: 0x04005A5B RID: 23131
		private LuaFunction m_OnMessageFriendshipPointsClaimAck_hotfix;

		// Token: 0x04005A5C RID: 23132
		private LuaFunction m_CanSendLikesString_hotfix;

		// Token: 0x04005A5D RID: 23133
		private LuaFunction m_CanSendFriendshipPointString_hotfix;

		// Token: 0x04005A5E RID: 23134
		private LuaFunction m_CanGetFriendshipPointString_hotfix;

		// Token: 0x04005A5F RID: 23135
		private LuaFunction m_HasSentFriendShipPointsString_hotfix;

		// Token: 0x04005A60 RID: 23136
		private LuaFunction m_HasReceivedFriendShipPointsString_hotfix;

		// Token: 0x04005A61 RID: 23137
		private LuaFunction m_GetSendFriendShipPointsCountToday_hotfix;

		// Token: 0x04005A62 RID: 23138
		private LuaFunction m_GetClaimedFriendShipPointsToday_hotfix;

		// Token: 0x04005A63 RID: 23139
		private LuaFunction m_CanUpdateBusinessCardDescString_hotfix;

		// Token: 0x04005A64 RID: 23140
		private LuaFunction m_CanUpdateBusinessCardHeroSetsList;

		// Token: 0x04005A65 RID: 23141
		private LuaFunction m_GetFriendList_hotfix;

		// Token: 0x04005A66 RID: 23142
		private LuaFunction m_GetAcrossServerFriendList_hotfix;

		// Token: 0x04005A67 RID: 23143
		private LuaFunction m_GetRecentChatPlayerList_hotfix;

		// Token: 0x04005A68 RID: 23144
		private LuaFunction m_GetRecentTeamBattlePlayerList_hotfix;

		// Token: 0x04005A69 RID: 23145
		private LuaFunction m_GetGuildPlayerList_hotfix;

		// Token: 0x04005A6A RID: 23146
		private LuaFunction m_IsAcrossServerFriendString_hotfix;

		// Token: 0x04005A6B RID: 23147
		private LuaFunction m_GetBlackList_hotfix;

		// Token: 0x04005A6C RID: 23148
		private LuaFunction m_GetFriendInvitedList_hotfix;

		// Token: 0x04005A6D RID: 23149
		private LuaFunction m_GetFriendInviteList_hotfix;

		// Token: 0x04005A6E RID: 23150
		private LuaFunction m_GetRecommendFriendList_hotfix;

		// Token: 0x04005A6F RID: 23151
		private LuaFunction m_GetFindFriendList_hotfix;

		// Token: 0x04005A70 RID: 23152
		private LuaFunction m_SortUserSummaryListList;

		// Token: 0x04005A71 RID: 23153
		private LuaFunction m_IsFriendString_hotfix;

		// Token: 0x04005A72 RID: 23154
		private LuaFunction m_GetFriendShipPoints_hotfix;

		// Token: 0x04005A73 RID: 23155
		private LuaFunction m_IsFriendRedMarkShow_hotfix;

		// Token: 0x04005A74 RID: 23156
		private LuaFunction m_GetPVPInviteInfos_hotfix;

		// Token: 0x04005A75 RID: 23157
		private LuaFunction m_RemovePVPInviteInfoString_hotfix;

		// Token: 0x04005A76 RID: 23158
		private LuaFunction m_IsNeedGetFriendSocialRelation_hotfix;

		// Token: 0x04005A77 RID: 23159
		private LuaFunction m_SetNeedGetFriendSocialRelationBoolean_hotfix;

		// Token: 0x04005A78 RID: 23160
		private LuaFunction m_get_BusinessCard_hotfix;

		// Token: 0x04005A79 RID: 23161
		private LuaFunction m_set_BusinessCardBusinessCard_hotfix;

		// Token: 0x04005A7A RID: 23162
		private LuaFunction m_add_EventOnBusinessCardRandomShowChangeAckAction;

		// Token: 0x04005A7B RID: 23163
		private LuaFunction m_remove_EventOnBusinessCardRandomShowChangeAckAction;

		// Token: 0x04005A7C RID: 23164
		private LuaFunction m_add_EventOnLikeAckAction;

		// Token: 0x04005A7D RID: 23165
		private LuaFunction m_remove_EventOnLikeAckAction;

		// Token: 0x04005A7E RID: 23166
		private LuaFunction m_add_EventOnBusinessCardGetAckAction;

		// Token: 0x04005A7F RID: 23167
		private LuaFunction m_remove_EventOnBusinessCardGetAckAction;

		// Token: 0x04005A80 RID: 23168
		private LuaFunction m_add_EventOnBusinessCardDescUpdateAckAction;

		// Token: 0x04005A81 RID: 23169
		private LuaFunction m_remove_EventOnBusinessCardDescUpdateAckAction;

		// Token: 0x04005A82 RID: 23170
		private LuaFunction m_add_EventOnBusinessCardHeroSetUpdateAckAction;

		// Token: 0x04005A83 RID: 23171
		private LuaFunction m_remove_EventOnBusinessCardHeroSetUpdateAckAction;

		// Token: 0x04005A84 RID: 23172
		private LuaFunction m_add_EventOnFriendGetSocialRelationAckAction;

		// Token: 0x04005A85 RID: 23173
		private LuaFunction m_remove_EventOnFriendGetSocialRelationAckAction;

		// Token: 0x04005A86 RID: 23174
		private LuaFunction m_add_EventOnFriendInviteAckAction;

		// Token: 0x04005A87 RID: 23175
		private LuaFunction m_remove_EventOnFriendInviteAckAction;

		// Token: 0x04005A88 RID: 23176
		private LuaFunction m_add_EventOnFriendInviteNtfAction_hotfix;

		// Token: 0x04005A89 RID: 23177
		private LuaFunction m_remove_EventOnFriendInviteNtfAction_hotfix;

		// Token: 0x04005A8A RID: 23178
		private LuaFunction m_add_EventOnFriendInviteAcceptAckAction;

		// Token: 0x04005A8B RID: 23179
		private LuaFunction m_remove_EventOnFriendInviteAcceptAckAction;

		// Token: 0x04005A8C RID: 23180
		private LuaFunction m_add_EventOnFriendInviteAcceptNtfAction;

		// Token: 0x04005A8D RID: 23181
		private LuaFunction m_remove_EventOnFriendInviteAcceptNtfAction;

		// Token: 0x04005A8E RID: 23182
		private LuaFunction m_add_EventOnFriendInviteDeclineAckAction;

		// Token: 0x04005A8F RID: 23183
		private LuaFunction m_remove_EventOnFriendInviteDeclineAckAction;

		// Token: 0x04005A90 RID: 23184
		private LuaFunction m_add_EventOnFriendInviteDeclineNtfAction;

		// Token: 0x04005A91 RID: 23185
		private LuaFunction m_remove_EventOnFriendInviteDeclineNtfAction;

		// Token: 0x04005A92 RID: 23186
		private LuaFunction m_add_EventOnFriendDeleteAckAction;

		// Token: 0x04005A93 RID: 23187
		private LuaFunction m_remove_EventOnFriendDeleteAckAction;

		// Token: 0x04005A94 RID: 23188
		private LuaFunction m_add_EventOnPlayerBlockAckAction;

		// Token: 0x04005A95 RID: 23189
		private LuaFunction m_remove_EventOnPlayerBlockAckAction;

		// Token: 0x04005A96 RID: 23190
		private LuaFunction m_add_EventOnPlayerUnblockAckAction;

		// Token: 0x04005A97 RID: 23191
		private LuaFunction m_remove_EventOnPlayerUnblockAckAction;

		// Token: 0x04005A98 RID: 23192
		private LuaFunction m_add_EventOnFriendFindAckAction;

		// Token: 0x04005A99 RID: 23193
		private LuaFunction m_remove_EventOnFriendFindAckAction;

		// Token: 0x04005A9A RID: 23194
		private LuaFunction m_add_EventOnFriendSuggestedAckAction;

		// Token: 0x04005A9B RID: 23195
		private LuaFunction m_remove_EventOnFriendSuggestedAckAction;

		// Token: 0x04005A9C RID: 23196
		private LuaFunction m_add_EventOnFriendSummaryUpdateNtfAction;

		// Token: 0x04005A9D RID: 23197
		private LuaFunction m_remove_EventOnFriendSummaryUpdateNtfAction;

		// Token: 0x04005A9E RID: 23198
		private LuaFunction m_add_EventOnBattlePracticeInviteAckAction;

		// Token: 0x04005A9F RID: 23199
		private LuaFunction m_remove_EventOnBattlePracticeInviteAckAction;

		// Token: 0x04005AA0 RID: 23200
		private LuaFunction m_add_EventOnBattlePracticeAcceptAckAction;

		// Token: 0x04005AA1 RID: 23201
		private LuaFunction m_remove_EventOnBattlePracticeAcceptAckAction;

		// Token: 0x04005AA2 RID: 23202
		private LuaFunction m_add_EventOnBattlePracticeDeclineAckAction;

		// Token: 0x04005AA3 RID: 23203
		private LuaFunction m_remove_EventOnBattlePracticeDeclineAckAction;

		// Token: 0x04005AA4 RID: 23204
		private LuaFunction m_add_EventOnBattlePracticeCancelAckAction;

		// Token: 0x04005AA5 RID: 23205
		private LuaFunction m_remove_EventOnBattlePracticeCancelAckAction;

		// Token: 0x04005AA6 RID: 23206
		private LuaFunction m_add_EventOnBattlePracticeInvitedNtfAction;

		// Token: 0x04005AA7 RID: 23207
		private LuaFunction m_remove_EventOnBattlePracticeInvitedNtfAction;

		// Token: 0x04005AA8 RID: 23208
		private LuaFunction m_add_EventOnBattlePracticeFailNtfAction_hotfix;

		// Token: 0x04005AA9 RID: 23209
		private LuaFunction m_remove_EventOnBattlePracticeFailNtfAction_hotfix;

		// Token: 0x04005AAA RID: 23210
		private LuaFunction m_add_EventOnBattlePracticeDeclinedNtfAction_hotfix;

		// Token: 0x04005AAB RID: 23211
		private LuaFunction m_remove_EventOnBattlePracticeDeclinedNtfAction_hotfix;

		// Token: 0x04005AAC RID: 23212
		private LuaFunction m_add_EventOnFriendshipPointsSendAckAction;

		// Token: 0x04005AAD RID: 23213
		private LuaFunction m_remove_EventOnFriendshipPointsSendAckAction;

		// Token: 0x04005AAE RID: 23214
		private LuaFunction m_add_EventOnFriendshipPointsClaimAckAction;

		// Token: 0x04005AAF RID: 23215
		private LuaFunction m_remove_EventOnFriendshipPointsClaimAckAction;

		// Token: 0x04005AB0 RID: 23216
		private LuaFunction m_add_EventOnFriendshipPointsReceivedNtfAction_hotfix;

		// Token: 0x04005AB1 RID: 23217
		private LuaFunction m_remove_EventOnFriendshipPointsReceivedNtfAction_hotfix;

		// Token: 0x04005AB2 RID: 23218
		private LuaFunction m_SendPullOrderRewardReqString_hotfix;

		// Token: 0x04005AB3 RID: 23219
		private LuaFunction m_SendGiftStoreCancelBuyReqInt32_hotfix;

		// Token: 0x04005AB4 RID: 23220
		private LuaFunction m_SendGiftStoreItemBuyReqInt32_hotfix;

		// Token: 0x04005AB5 RID: 23221
		private LuaFunction m_SendGiftStoreAppleSubscribeReqInt32_hotfix;

		// Token: 0x04005AB6 RID: 23222
		private LuaFunction m_OnMessagePullOrderRewardAck_hotfix;

		// Token: 0x04005AB7 RID: 23223
		private LuaFunction m_OnMessageDSGiftStoreNtf_hotfix;

		// Token: 0x04005AB8 RID: 23224
		private LuaFunction m_OnMessageGiftStoreCancelBuyAck_hotfix;

		// Token: 0x04005AB9 RID: 23225
		private LuaFunction m_OnMessageGiftStoreBuyGoodsNtf_hotfix;

		// Token: 0x04005ABA RID: 23226
		private LuaFunction m_OnMessageGiftStoreOperationalGoodsUpdateNtf_hotfix;

		// Token: 0x04005ABB RID: 23227
		private LuaFunction m_OnMessageGiftStoreItemBuyAck_hotfix;

		// Token: 0x04005ABC RID: 23228
		private LuaFunction m_OnMessageGiftStoreAppleSubscribeAck_hotfix;

		// Token: 0x04005ABD RID: 23229
		private LuaFunction m_GetAllOrderRewards_hotfix;

		// Token: 0x04005ABE RID: 23230
		private LuaFunction m_GetGiftStoreItemList_hotfix;

		// Token: 0x04005ABF RID: 23231
		private LuaFunction m_IsGiftStoreItemSellOutGiftStoreItem_hotfix;

		// Token: 0x04005AC0 RID: 23232
		private LuaFunction m_CanBuyGiftStoreGoodsInt32_hotfix;

		// Token: 0x04005AC1 RID: 23233
		private LuaFunction m_GetMonthCardLeftTimeInt32_hotfix;

		// Token: 0x04005AC2 RID: 23234
		private LuaFunction m_add_EventOnGiftStoreItemBuyAckAction;

		// Token: 0x04005AC3 RID: 23235
		private LuaFunction m_remove_EventOnGiftStoreItemBuyAckAction;

		// Token: 0x04005AC4 RID: 23236
		private LuaFunction m_add_EventOnGiftStoreAppleSubscribeAckAction;

		// Token: 0x04005AC5 RID: 23237
		private LuaFunction m_remove_EventOnGiftStoreAppleSubscribeAckAction;

		// Token: 0x04005AC6 RID: 23238
		private LuaFunction m_add_EventOnGiftStoreBuyGoodsNtfAction;

		// Token: 0x04005AC7 RID: 23239
		private LuaFunction m_remove_EventOnGiftStoreBuyGoodsNtfAction;

		// Token: 0x04005AC8 RID: 23240
		private LuaFunction m_add_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix;

		// Token: 0x04005AC9 RID: 23241
		private LuaFunction m_remove_EventOnGiftStoreOperationalGoodsUpdateNtfAction_hotfix;

		// Token: 0x04005ACA RID: 23242
		private LuaFunction m_add_EventOnGiftStoreItemCancelBuyAckAction;

		// Token: 0x04005ACB RID: 23243
		private LuaFunction m_remove_EventOnGiftStoreItemCancelBuyAckAction;

		// Token: 0x04005ACC RID: 23244
		private LuaFunction m_add_EventOnPullOrderRewardAckAction;

		// Token: 0x04005ACD RID: 23245
		private LuaFunction m_remove_EventOnPullOrderRewardAckAction;

		// Token: 0x04005ACE RID: 23246
		private LuaFunction m_SendGmCommandReqString_hotfix;

		// Token: 0x04005ACF RID: 23247
		private LuaFunction m_OnMessageGmCommandAck_hotfix;

		// Token: 0x04005AD0 RID: 23248
		private LuaFunction m_add_EventOnGmCommandAckAction;

		// Token: 0x04005AD1 RID: 23249
		private LuaFunction m_remove_EventOnGmCommandAckAction;

		// Token: 0x04005AD2 RID: 23250
		private LuaFunction m_GuildCreateReqStringStringStringBooleanInt32_hotfix;

		// Token: 0x04005AD3 RID: 23251
		private LuaFunction m_GuildJoinApplyReqString_hotfix;

		// Token: 0x04005AD4 RID: 23252
		private LuaFunction m_GuildJoinAdminConfirmReqString_hotfix;

		// Token: 0x04005AD5 RID: 23253
		private LuaFunction m_GuildJoinApplyRefuseReqString_hotfix;

		// Token: 0x04005AD6 RID: 23254
		private LuaFunction m_GuildJoinPlayerConfirmReqString_hotfix;

		// Token: 0x04005AD7 RID: 23255
		private LuaFunction m_GuildSearchReqString_hotfix;

		// Token: 0x04005AD8 RID: 23256
		private LuaFunction m_GuildRandomListReq_hotfix;

		// Token: 0x04005AD9 RID: 23257
		private LuaFunction m_GuildQuitReq_hotfix;

		// Token: 0x04005ADA RID: 23258
		private LuaFunction m_SendGuildInvitePlayerListReq_hotfix;

		// Token: 0x04005ADB RID: 23259
		private LuaFunction m_SendGuildHiringDeclarationSetReqString_hotfix;

		// Token: 0x04005ADC RID: 23260
		private LuaFunction m_SendGuildJoinInvitationGetReq_hotfix;

		// Token: 0x04005ADD RID: 23261
		private LuaFunction m_SendGuildJoinInvitationRefuseReqString_hotfix;

		// Token: 0x04005ADE RID: 23262
		private LuaFunction m_SendAllGuildJoinInvitationRefuseReq_hotfix;

		// Token: 0x04005ADF RID: 23263
		private LuaFunction m_SendGuildGetReqString_hotfix;

		// Token: 0x04005AE0 RID: 23264
		private LuaFunction m_SendGuildBasicSetReqBooleanInt32String_hotfix;

		// Token: 0x04005AE1 RID: 23265
		private LuaFunction m_SendGuildAnnouncementSetReqString_hotfix;

		// Token: 0x04005AE2 RID: 23266
		private LuaFunction m_SendGuildJoinApplyGetReq_hotfix;

		// Token: 0x04005AE3 RID: 23267
		private LuaFunction m_SendGuildNameChangeReqString_hotfix;

		// Token: 0x04005AE4 RID: 23268
		private LuaFunction m_SendGuildLogGetReq_hotfix;

		// Token: 0x04005AE5 RID: 23269
		private LuaFunction m_SendGuildJoinInviteReqString_hotfix;

		// Token: 0x04005AE6 RID: 23270
		private LuaFunction m_SendGuildVicePresidentAppointReqStringBoolean_hotfix;

		// Token: 0x04005AE7 RID: 23271
		private LuaFunction m_SendGuildKickOutReqString_hotfix;

		// Token: 0x04005AE8 RID: 23272
		private LuaFunction m_SendGuildPresidentRelieveReqString_hotfix;

		// Token: 0x04005AE9 RID: 23273
		private LuaFunction m_SendGuildPresidentAppointReqString_hotfix;

		// Token: 0x04005AEA RID: 23274
		private LuaFunction m_SendAllGuildJoinApplyRefuseReq_hotfix;

		// Token: 0x04005AEB RID: 23275
		private LuaFunction m_OnMessageGuildUpdateAnnouncementNtf_hotfix;

		// Token: 0x04005AEC RID: 23276
		private LuaFunction m_OnMessageDSGuildNtf_hotfix;

		// Token: 0x04005AED RID: 23277
		private LuaFunction m_OnMessageGuildCreateAck_hotfix;

		// Token: 0x04005AEE RID: 23278
		private LuaFunction m_OnMessageGuildJoinApplyAck_hotfix;

		// Token: 0x04005AEF RID: 23279
		private LuaFunction m_OnMessageGuildJoinApplyConfirmAck_hotfix;

		// Token: 0x04005AF0 RID: 23280
		private LuaFunction m_OnMessageGuildJoinApplyRefuseAck_hotfix;

		// Token: 0x04005AF1 RID: 23281
		private LuaFunction m_OnMessageGuildJoinInvitationConfirmAck_hotfix;

		// Token: 0x04005AF2 RID: 23282
		private LuaFunction m_OnMessageGuildSearchAck_hotfix;

		// Token: 0x04005AF3 RID: 23283
		private LuaFunction m_OnMessageGuildRandomListAck_hotfix;

		// Token: 0x04005AF4 RID: 23284
		private LuaFunction m_OnMessageGuildQuitAck_hotfix;

		// Token: 0x04005AF5 RID: 23285
		private LuaFunction m_OnMessageGuildInvitePlayerListAck_hotfix;

		// Token: 0x04005AF6 RID: 23286
		private LuaFunction m_OnMessageGuildHiringDeclarationSetAck_hotfix;

		// Token: 0x04005AF7 RID: 23287
		private LuaFunction m_OnMessageGuildJoinInvitationGetAck_hotfix;

		// Token: 0x04005AF8 RID: 23288
		private LuaFunction m_OnMessageGuildJoinInvitationRefuseAck_hotfix;

		// Token: 0x04005AF9 RID: 23289
		private LuaFunction m_OnMessageAllGuildJoinInvitationRefuseAck_hotfix;

		// Token: 0x04005AFA RID: 23290
		private LuaFunction m_OnMessageGuildGetAck_hotfix;

		// Token: 0x04005AFB RID: 23291
		private LuaFunction m_OnMessageGuildBasicSetAck_hotfix;

		// Token: 0x04005AFC RID: 23292
		private LuaFunction m_OnMessageGuildAnnouncementSetAck_hotfix;

		// Token: 0x04005AFD RID: 23293
		private LuaFunction m_OnMessageGuildJoinApplyGetAck_hotfix;

		// Token: 0x04005AFE RID: 23294
		private LuaFunction m_OnMessageGuildNameChangeAck_hotfix;

		// Token: 0x04005AFF RID: 23295
		private LuaFunction m_OnMessageGuildLogGetAck_hotfix;

		// Token: 0x04005B00 RID: 23296
		private LuaFunction m_OnMessageGuildJoinInviteAck_hotfix;

		// Token: 0x04005B01 RID: 23297
		private LuaFunction m_OnMessageGuildVicePresidentAppointAck_hotfix;

		// Token: 0x04005B02 RID: 23298
		private LuaFunction m_OnMessageGuildKickOutAck_hotfix;

		// Token: 0x04005B03 RID: 23299
		private LuaFunction m_OnMessageGuildPresidentRelieveAck_hotfix;

		// Token: 0x04005B04 RID: 23300
		private LuaFunction m_OnMessageGuildPresidentAppointAck_hotfix;

		// Token: 0x04005B05 RID: 23301
		private LuaFunction m_OnMessageAllGuildJoinApplyRefuseAck_hotfix;

		// Token: 0x04005B06 RID: 23302
		private LuaFunction m_OnMessageGuildJoinApplyAdminNtf_hotfix;

		// Token: 0x04005B07 RID: 23303
		private LuaFunction m_OnMessageGuildJoinInvitationNtf_hotfix;

		// Token: 0x04005B08 RID: 23304
		private LuaFunction m_CheckGuildCreateConditionStringStringInt32_hotfix;

		// Token: 0x04005B09 RID: 23305
		private LuaFunction m_GetGuildInfo_hotfix;

		// Token: 0x04005B0A RID: 23306
		private LuaFunction m_RefreshGuildListJoinStateString_hotfix;

		// Token: 0x04005B0B RID: 23307
		private LuaFunction m_CanQuitGuild_hotfix;

		// Token: 0x04005B0C RID: 23308
		private LuaFunction m_CanKickOutGuild_hotfix;

		// Token: 0x04005B0D RID: 23309
		private LuaFunction m_CheckGuildNameString_hotfix;

		// Token: 0x04005B0E RID: 23310
		private LuaFunction m_CanSetGuildHiringDeclarationString_hotfix;

		// Token: 0x04005B0F RID: 23311
		private LuaFunction m_CanSetGuildAnnouncementString_hotfix;

		// Token: 0x04005B10 RID: 23312
		private LuaFunction m_CheckGuildInvitePlayerList_hotfix;

		// Token: 0x04005B11 RID: 23313
		private LuaFunction m_GetGuildJoinInvitationList_hotfix;

		// Token: 0x04005B12 RID: 23314
		private LuaFunction m_GetGuildJoinApplyList_hotfix;

		// Token: 0x04005B13 RID: 23315
		private LuaFunction m_RemoveGuildJoinApplyListByIdString_hotfix;

		// Token: 0x04005B14 RID: 23316
		private LuaFunction m_CheckGuildSearchString_hotfix;

		// Token: 0x04005B15 RID: 23317
		private LuaFunction m_CheckGuildRandomList_hotfix;

		// Token: 0x04005B16 RID: 23318
		private LuaFunction m_GetGuildRecommendList_hotfix;

		// Token: 0x04005B17 RID: 23319
		private LuaFunction m_GetGuildId_hotfix;

		// Token: 0x04005B18 RID: 23320
		private LuaFunction m_GetGuildLogContentGuildLog_hotfix;

		// Token: 0x04005B19 RID: 23321
		private LuaFunction m_AddUserIdToGuildInviteListString_hotfix;

		// Token: 0x04005B1A RID: 23322
		private LuaFunction m_CanJoinGuildCDTime_hotfix;

		// Token: 0x04005B1B RID: 23323
		private LuaFunction m_HasPlayerBeenInvitedByGuildString_hotfix;

		// Token: 0x04005B1C RID: 23324
		private LuaFunction m_ResetComponentGuildData_hotfix;

		// Token: 0x04005B1D RID: 23325
		private LuaFunction m_add_EventOnGuildCreateAckAction;

		// Token: 0x04005B1E RID: 23326
		private LuaFunction m_remove_EventOnGuildCreateAckAction;

		// Token: 0x04005B1F RID: 23327
		private LuaFunction m_add_EventOnGuildJoinApplyAckAction;

		// Token: 0x04005B20 RID: 23328
		private LuaFunction m_remove_EventOnGuildJoinApplyAckAction;

		// Token: 0x04005B21 RID: 23329
		private LuaFunction m_add_EventOnGuildJoinAdminConfirmAckAction;

		// Token: 0x04005B22 RID: 23330
		private LuaFunction m_remove_EventOnGuildJoinAdminConfirmAckAction;

		// Token: 0x04005B23 RID: 23331
		private LuaFunction m_add_EventOnGuildJoinApplyRefuseAckAction;

		// Token: 0x04005B24 RID: 23332
		private LuaFunction m_remove_EventOnGuildJoinApplyRefuseAckAction;

		// Token: 0x04005B25 RID: 23333
		private LuaFunction m_add_EventOnGuildJoinPlayerConfirmAckAction;

		// Token: 0x04005B26 RID: 23334
		private LuaFunction m_remove_EventOnGuildJoinPlayerConfirmAckAction;

		// Token: 0x04005B27 RID: 23335
		private LuaFunction m_add_EventOnGuildSearchAckAction;

		// Token: 0x04005B28 RID: 23336
		private LuaFunction m_remove_EventOnGuildSearchAckAction;

		// Token: 0x04005B29 RID: 23337
		private LuaFunction m_add_EventOnGuildRandomListAckAction;

		// Token: 0x04005B2A RID: 23338
		private LuaFunction m_remove_EventOnGuildRandomListAckAction;

		// Token: 0x04005B2B RID: 23339
		private LuaFunction m_add_EventOnGuildQuitAckAction;

		// Token: 0x04005B2C RID: 23340
		private LuaFunction m_remove_EventOnGuildQuitAckAction;

		// Token: 0x04005B2D RID: 23341
		private LuaFunction m_add_EventOnGuildInvitePlayerListAckAction;

		// Token: 0x04005B2E RID: 23342
		private LuaFunction m_remove_EventOnGuildInvitePlayerListAckAction;

		// Token: 0x04005B2F RID: 23343
		private LuaFunction m_add_EventOnGuildHiringDeclarationSetAckAction;

		// Token: 0x04005B30 RID: 23344
		private LuaFunction m_remove_EventOnGuildHiringDeclarationSetAckAction;

		// Token: 0x04005B31 RID: 23345
		private LuaFunction m_add_EventOnGuildJoinInvitationGetAckAction;

		// Token: 0x04005B32 RID: 23346
		private LuaFunction m_remove_EventOnGuildJoinInvitationGetAckAction;

		// Token: 0x04005B33 RID: 23347
		private LuaFunction m_add_EventOnGuildJoinInvitationRefuseAckAction;

		// Token: 0x04005B34 RID: 23348
		private LuaFunction m_remove_EventOnGuildJoinInvitationRefuseAckAction;

		// Token: 0x04005B35 RID: 23349
		private LuaFunction m_add_EventOnAllGuildJoinInvitationRefuseAckAction;

		// Token: 0x04005B36 RID: 23350
		private LuaFunction m_remove_EventOnAllGuildJoinInvitationRefuseAckAction;

		// Token: 0x04005B37 RID: 23351
		private LuaFunction m_add_EventOnGuildGetAckAction;

		// Token: 0x04005B38 RID: 23352
		private LuaFunction m_remove_EventOnGuildGetAckAction;

		// Token: 0x04005B39 RID: 23353
		private LuaFunction m_add_EventOnGuildBasicSetAckAction;

		// Token: 0x04005B3A RID: 23354
		private LuaFunction m_remove_EventOnGuildBasicSetAckAction;

		// Token: 0x04005B3B RID: 23355
		private LuaFunction m_add_EventOnGuildAnnouncementSetAckAction;

		// Token: 0x04005B3C RID: 23356
		private LuaFunction m_remove_EventOnGuildAnnouncementSetAckAction;

		// Token: 0x04005B3D RID: 23357
		private LuaFunction m_add_EventOnGuildJoinApplyGetAckAction;

		// Token: 0x04005B3E RID: 23358
		private LuaFunction m_remove_EventOnGuildJoinApplyGetAckAction;

		// Token: 0x04005B3F RID: 23359
		private LuaFunction m_add_EventOnGuildNameChangeAckAction;

		// Token: 0x04005B40 RID: 23360
		private LuaFunction m_remove_EventOnGuildNameChangeAckAction;

		// Token: 0x04005B41 RID: 23361
		private LuaFunction m_add_EventOnGuildLogGetAckAction;

		// Token: 0x04005B42 RID: 23362
		private LuaFunction m_remove_EventOnGuildLogGetAckAction;

		// Token: 0x04005B43 RID: 23363
		private LuaFunction m_add_EventOnGuildJoinInviteAckAction;

		// Token: 0x04005B44 RID: 23364
		private LuaFunction m_remove_EventOnGuildJoinInviteAckAction;

		// Token: 0x04005B45 RID: 23365
		private LuaFunction m_add_EventOnGuildVicePresidentAppointAckAction;

		// Token: 0x04005B46 RID: 23366
		private LuaFunction m_remove_EventOnGuildVicePresidentAppointAckAction;

		// Token: 0x04005B47 RID: 23367
		private LuaFunction m_add_EventOnGuildKickOutAckAction;

		// Token: 0x04005B48 RID: 23368
		private LuaFunction m_remove_EventOnGuildKickOutAckAction;

		// Token: 0x04005B49 RID: 23369
		private LuaFunction m_add_EventOnGuildPresidentRelieveAckAction;

		// Token: 0x04005B4A RID: 23370
		private LuaFunction m_remove_EventOnGuildPresidentRelieveAckAction;

		// Token: 0x04005B4B RID: 23371
		private LuaFunction m_add_EventOnGuildPresidentAppointAckAction;

		// Token: 0x04005B4C RID: 23372
		private LuaFunction m_remove_EventOnGuildPresidentAppointAckAction;

		// Token: 0x04005B4D RID: 23373
		private LuaFunction m_add_EventOnAllGuildJoinApplyRefuseAckAction;

		// Token: 0x04005B4E RID: 23374
		private LuaFunction m_remove_EventOnAllGuildJoinApplyRefuseAckAction;

		// Token: 0x04005B4F RID: 23375
		private LuaFunction m_add_EventOnGuildUpdateInfoAction;

		// Token: 0x04005B50 RID: 23376
		private LuaFunction m_remove_EventOnGuildUpdateInfoAction;

		// Token: 0x04005B51 RID: 23377
		private LuaFunction m_SendGuildMassiveCombatDataReq_hotfix;

		// Token: 0x04005B52 RID: 23378
		private LuaFunction m_SendGuildMassiveCombatStartReqInt32_hotfix;

		// Token: 0x04005B53 RID: 23379
		private LuaFunction m_SendGuildMassiveCombatSurrenderReq_hotfix;

		// Token: 0x04005B54 RID: 23380
		private LuaFunction m_SendGuildMassiveCombatAttackReqInt32List;

		// Token: 0x04005B55 RID: 23381
		private LuaFunction m_SendGuildMassiveCombatAttackFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005B56 RID: 23382
		private LuaFunction m_OnMessageGuildMassiveCombatDataAck_hotfix;

		// Token: 0x04005B57 RID: 23383
		private LuaFunction m_OnMessageGuildMassiveCombatNtf_hotfix;

		// Token: 0x04005B58 RID: 23384
		private LuaFunction m_OnMessageGuildMassiveCombatPlayerNtf_hotfix;

		// Token: 0x04005B59 RID: 23385
		private LuaFunction m_OnMessageGuildMassiveCombatStartAck_hotfix;

		// Token: 0x04005B5A RID: 23386
		private LuaFunction m_OnMessageGuildMassiveCombatSurrenderAck_hotfix;

		// Token: 0x04005B5B RID: 23387
		private LuaFunction m_OnMessageGuildMassiveCombatAttackAck_hotfix;

		// Token: 0x04005B5C RID: 23388
		private LuaFunction m_OnMessageGuildMassiveCombatAttackFinishedAck_hotfix;

		// Token: 0x04005B5D RID: 23389
		private LuaFunction m_GetGuildMassiveCombatStrongholdEliminateRateGuildMassiveCombatStronghold_hotfix;

		// Token: 0x04005B5E RID: 23390
		private LuaFunction m_GetFinishedGuildMassiveCombatThisWeek_hotfix;

		// Token: 0x04005B5F RID: 23391
		private LuaFunction m_CanStartGuildMassiveCombat_hotfix;

		// Token: 0x04005B60 RID: 23392
		private LuaFunction m_CanAttackGuildMassiveCombatSinglePVELevelInt32_hotfix;

		// Token: 0x04005B61 RID: 23393
		private LuaFunction m_GetGuildPlayerMassiveCombatInfo_hotfix;

		// Token: 0x04005B62 RID: 23394
		private LuaFunction m_GetGuildMassiveCombatStrongholdInt32_hotfix;

		// Token: 0x04005B63 RID: 23395
		private LuaFunction m_FillGuildMassiveCombatMemberSummaryGuildMassiveCombatGeneralAction;

		// Token: 0x04005B64 RID: 23396
		private LuaFunction m_OnFillGuildMassiveCombatNtfSummaryFriendGetUserSummaryAck_hotfix;

		// Token: 0x04005B65 RID: 23397
		private LuaFunction m_OnFillGuildMassiveGetDataSummaryInt32FriendGetUserSummaryAck_hotfix;

		// Token: 0x04005B66 RID: 23398
		private LuaFunction m_GetCurrentGuildMassiveCombatInfo_hotfix;

		// Token: 0x04005B67 RID: 23399
		private LuaFunction m_GetGuildMassiveCombatEliminateRate_hotfix;

		// Token: 0x04005B68 RID: 23400
		private LuaFunction m_add_EventOnGuildMassiveCombatAttackAckAction;

		// Token: 0x04005B69 RID: 23401
		private LuaFunction m_remove_EventOnGuildMassiveCombatAttackAckAction;

		// Token: 0x04005B6A RID: 23402
		private LuaFunction m_add_EventOnGuildMassiveCombatAttackFinishedAckAction;

		// Token: 0x04005B6B RID: 23403
		private LuaFunction m_remove_EventOnGuildMassiveCombatAttackFinishedAckAction;

		// Token: 0x04005B6C RID: 23404
		private LuaFunction m_add_EventOnGuildMassiveCombatDataAckAction;

		// Token: 0x04005B6D RID: 23405
		private LuaFunction m_remove_EventOnGuildMassiveCombatDataAckAction;

		// Token: 0x04005B6E RID: 23406
		private LuaFunction m_add_EventOnGuildMassiveCombatNtfAction;

		// Token: 0x04005B6F RID: 23407
		private LuaFunction m_remove_EventOnGuildMassiveCombatNtfAction;

		// Token: 0x04005B70 RID: 23408
		private LuaFunction m_add_EventOnGuildMassiveCombatPlayerNtfAction;

		// Token: 0x04005B71 RID: 23409
		private LuaFunction m_remove_EventOnGuildMassiveCombatPlayerNtfAction;

		// Token: 0x04005B72 RID: 23410
		private LuaFunction m_add_EventOnGuildMassiveCombatStartAckAction;

		// Token: 0x04005B73 RID: 23411
		private LuaFunction m_remove_EventOnGuildMassiveCombatStartAckAction;

		// Token: 0x04005B74 RID: 23412
		private LuaFunction m_add_EventOnGuildMassiveCombatSurrenderAckAction;

		// Token: 0x04005B75 RID: 23413
		private LuaFunction m_remove_EventOnGuildMassiveCombatSurrenderAckAction;

		// Token: 0x04005B76 RID: 23414
		private LuaFunction m_SendAutoTakeOffEquipmentsReqInt32_hotfix;

		// Token: 0x04005B77 RID: 23415
		private LuaFunction m_SendExchangeHeroFragmentReq_hotfix;

		// Token: 0x04005B78 RID: 23416
		private LuaFunction m_SendHeroFavorabilityExpAddReqInt32GoodsTypeInt32Int32_hotfix;

		// Token: 0x04005B79 RID: 23417
		private LuaFunction m_SendHeroInteractReqInt32_hotfix;

		// Token: 0x04005B7A RID: 23418
		private LuaFunction m_SendHeroConfessReqInt32_hotfix;

		// Token: 0x04005B7B RID: 23419
		private LuaFunction m_SendSetProtagonistReqInt32_hotfix;

		// Token: 0x04005B7C RID: 23420
		private LuaFunction m_SendHeroJobTransferReqInt32Int32_hotfix;

		// Token: 0x04005B7D RID: 23421
		private LuaFunction m_SendHeroStarLevelUpReqInt32_hotfix;

		// Token: 0x04005B7E RID: 23422
		private LuaFunction m_SendHeroJobLevelUpReqInt32Int32_hotfix;

		// Token: 0x04005B7F RID: 23423
		private LuaFunction m_SendHeroSkillsSelectReqInt32List;

		// Token: 0x04005B80 RID: 23424
		private LuaFunction m_SendHeroSoldierSelectReqInt32Int32_hotfix;

		// Token: 0x04005B81 RID: 23425
		private LuaFunction m_SendHeroComposeReqqInt32_hotfix;

		// Token: 0x04005B82 RID: 23426
		private LuaFunction m_SendHeroExpAddReqInt32GoodsTypeInt32Int32_hotfix;

		// Token: 0x04005B83 RID: 23427
		private LuaFunction m_SendHeroJobUnlockReqInt32Int32_hotfix;

		// Token: 0x04005B84 RID: 23428
		private LuaFunction m_SendEquipmentWearReqInt32UInt64_hotfix;

		// Token: 0x04005B85 RID: 23429
		private LuaFunction m_SendEquipmentTakeOffReqInt32Int32_hotfix;

		// Token: 0x04005B86 RID: 23430
		private LuaFunction m_SendAutoEquipReqInt32_hotfix;

		// Token: 0x04005B87 RID: 23431
		private LuaFunction m_SendHeroFetterUnlockReqInt32Int32_hotfix;

		// Token: 0x04005B88 RID: 23432
		private LuaFunction m_SendHeroFetterLevelUpInt32Int32_hotfix;

		// Token: 0x04005B89 RID: 23433
		private LuaFunction m_SendCharSkinWearInt32Int32_hotfix;

		// Token: 0x04005B8A RID: 23434
		private LuaFunction m_SendCharSkinTakeOffInt32_hotfix;

		// Token: 0x04005B8B RID: 23435
		private LuaFunction m_SendModelSkinWearInt32Int32Int32_hotfix;

		// Token: 0x04005B8C RID: 23436
		private LuaFunction m_SendModelSkinTakeOffInt32Int32_hotfix;

		// Token: 0x04005B8D RID: 23437
		private LuaFunction m_SendSoldierSkinWearReqInt32Int32Int32Boolean_hotfix;

		// Token: 0x04005B8E RID: 23438
		private LuaFunction m_SendSoldierSkinTakeOffReqInt32Int32Boolean_hotfix;

		// Token: 0x04005B8F RID: 23439
		private LuaFunction m_OnMessageAutoTakeOffEquipmentsAck_hotfix;

		// Token: 0x04005B90 RID: 23440
		private LuaFunction m_OnMessageExchangeHeroFragmentAck_hotfix;

		// Token: 0x04005B91 RID: 23441
		private LuaFunction m_OnMessageDSHeroNtf_hotfix;

		// Token: 0x04005B92 RID: 23442
		private LuaFunction m_OnMessageHeroConfessAck_hotfix;

		// Token: 0x04005B93 RID: 23443
		private LuaFunction m_OnMessageHeroInteractAck_hotfix;

		// Token: 0x04005B94 RID: 23444
		private LuaFunction m_OnMessageHeroFavorabilityExpAddAck_hotfix;

		// Token: 0x04005B95 RID: 23445
		private LuaFunction m_OnMessageSetProtagonistAck_hotfix;

		// Token: 0x04005B96 RID: 23446
		private LuaFunction m_OnMessageHeroJobTransferAck_hotfix;

		// Token: 0x04005B97 RID: 23447
		private LuaFunction m_OnMessageHeroStarLevelLevelUpAck_hotfix;

		// Token: 0x04005B98 RID: 23448
		private LuaFunction m_OnMessageHeroJobLevelUpAck_hotfix;

		// Token: 0x04005B99 RID: 23449
		private LuaFunction m_OnMessageHeroSkillsSelectAck_hotfix;

		// Token: 0x04005B9A RID: 23450
		private LuaFunction m_OnMessageHeroSoldierSelectAck_hotfix;

		// Token: 0x04005B9B RID: 23451
		private LuaFunction m_OnMessageHeroComposeAck_hotfix;

		// Token: 0x04005B9C RID: 23452
		private LuaFunction m_OnMessageHeroExpAddAck_hotfix;

		// Token: 0x04005B9D RID: 23453
		private LuaFunction m_OnMessageHeroJobUnlockAck_hotfix;

		// Token: 0x04005B9E RID: 23454
		private LuaFunction m_OnMessageEquipmentWearAck_hotfix;

		// Token: 0x04005B9F RID: 23455
		private LuaFunction m_OnMessageEquipmentTakeOffAck_hotfix;

		// Token: 0x04005BA0 RID: 23456
		private LuaFunction m_OnMessageEquipmentAutoAck_hotfix;

		// Token: 0x04005BA1 RID: 23457
		private LuaFunction m_OnMessageHeroFetterLevelUpAck_hotfix;

		// Token: 0x04005BA2 RID: 23458
		private LuaFunction m_OnMessageHeroFetterUnlockAck_hotfix;

		// Token: 0x04005BA3 RID: 23459
		private LuaFunction m_OnMessageCharSkinWearAck_hotfix;

		// Token: 0x04005BA4 RID: 23460
		private LuaFunction m_OnMessageCharSkinTakeOffAck_hotfix;

		// Token: 0x04005BA5 RID: 23461
		private LuaFunction m_OnMessageModelSkinWearAck_hotfix;

		// Token: 0x04005BA6 RID: 23462
		private LuaFunction m_OnMessageModelSkinTakeOffAck_hotfix;

		// Token: 0x04005BA7 RID: 23463
		private LuaFunction m_OnMessageSoldierSkinWearAck_hotfix;

		// Token: 0x04005BA8 RID: 23464
		private LuaFunction m_OnMessageSoldierSkinTakeOffAck_hotfix;

		// Token: 0x04005BA9 RID: 23465
		private LuaFunction m_GmResetHeroJobInt32_hotfix;

		// Token: 0x04005BAA RID: 23466
		private LuaFunction m_GmLevelUpHeroFetter2SpecificLevelInt32Int32Int32_hotfix;

		// Token: 0x04005BAB RID: 23467
		private LuaFunction m_GetAdditiveHeroAddExpInt32_hotfix;

		// Token: 0x04005BAC RID: 23468
		private LuaFunction m_GetAdditiveHeroFavourabilityAddExpInt32_hotfix;

		// Token: 0x04005BAD RID: 23469
		private LuaFunction m_GetHeroFavorabilityUpLevelHeroConfigDataHeroInformationInfoInt32_hotfix;

		// Token: 0x04005BAE RID: 23470
		private LuaFunction m_GetHeroInteractionInfoInt32_hotfix;

		// Token: 0x04005BAF RID: 23471
		private LuaFunction m_GetHeroInteractHeroPerformanceIdInt32HeroInteractionResultType_hotfix;

		// Token: 0x04005BB0 RID: 23472
		private LuaFunction m_InitAllDefaultConfigHeros_hotfix;

		// Token: 0x04005BB1 RID: 23473
		private LuaFunction m_GetHeroInt32_hotfix;

		// Token: 0x04005BB2 RID: 23474
		private LuaFunction m_GetHeros_hotfix;

		// Token: 0x04005BB3 RID: 23475
		private LuaFunction m_GetAllDefaultHeros_hotfix;

		// Token: 0x04005BB4 RID: 23476
		private LuaFunction m_GetUseableJobConnectionInfosInt32_hotfix;

		// Token: 0x04005BB5 RID: 23477
		private LuaFunction m_GetDefaultHeroInt32_hotfix;

		// Token: 0x04005BB6 RID: 23478
		private LuaFunction m_GetHeroNextLevelExpInt32_hotfix;

		// Token: 0x04005BB7 RID: 23479
		private LuaFunction m_GetHeroSkillPointMaxInt32_hotfix;

		// Token: 0x04005BB8 RID: 23480
		private LuaFunction m_GetHeroLevelMax_hotfix;

		// Token: 0x04005BB9 RID: 23481
		private LuaFunction m_IsHeroShowRedMarkInt32Int32_hotfix;

		// Token: 0x04005BBA RID: 23482
		private LuaFunction m_CanLevelUpHeroStarLevelInt32_hotfix;

		// Token: 0x04005BBB RID: 23483
		private LuaFunction m_IfWasteAddExpHeroInt32_hotfix;

		// Token: 0x04005BBC RID: 23484
		private LuaFunction m_CanLevelUpHeroJobLevelInt32Int32_hotfix;

		// Token: 0x04005BBD RID: 23485
		private LuaFunction m_CanHeroJobTransferInt32Int32_hotfix;

		// Token: 0x04005BBE RID: 23486
		private LuaFunction m_IsWorldHeroTabShowRedIcon_hotfix;

		// Token: 0x04005BBF RID: 23487
		private LuaFunction m_IsHeroHaveNewJobCanTransferInt32_hotfix;

		// Token: 0x04005BC0 RID: 23488
		private LuaFunction m_IsHeroJobNeedMagicStoneInt32Int32_hotfix;

		// Token: 0x04005BC1 RID: 23489
		private LuaFunction m_CanComposeHeroInt32_hotfix;

		// Token: 0x04005BC2 RID: 23490
		private LuaFunction m_IsSkillLimitToHeroJobInt32Int32_hotfix;

		// Token: 0x04005BC3 RID: 23491
		private LuaFunction m_GetProtagonistId_hotfix;

		// Token: 0x04005BC4 RID: 23492
		private LuaFunction m_IsProtagonistHeroInt32_hotfix;

		// Token: 0x04005BC5 RID: 23493
		private LuaFunction m_IsProtagonistExist_hotfix;

		// Token: 0x04005BC6 RID: 23494
		private LuaFunction m_IsCurrentLevelMaxHeroLevelInt32_hotfix;

		// Token: 0x04005BC7 RID: 23495
		private LuaFunction m_CanHeroSelectSoliderHeroInt32_hotfix;

		// Token: 0x04005BC8 RID: 23496
		private LuaFunction m_GetHeroInteractNums_hotfix;

		// Token: 0x04005BC9 RID: 23497
		private LuaFunction m_GetHeroInteractNumsFlushTime_hotfix;

		// Token: 0x04005BCA RID: 23498
		private LuaFunction m_IsHeroCanComposedInt32_hotfix;

		// Token: 0x04005BCB RID: 23499
		private LuaFunction m_IsExistSoliderIdInt32_hotfix;

		// Token: 0x04005BCC RID: 23500
		private LuaFunction m_IsHeroAssignedInt32_hotfix;

		// Token: 0x04005BCD RID: 23501
		private LuaFunction m_GetAllStarLvlMaxHeroFragements_hotfix;

		// Token: 0x04005BCE RID: 23502
		private LuaFunction m_IsShowJobLevelCanUpTipHero_hotfix;

		// Token: 0x04005BCF RID: 23503
		private LuaFunction m_IsEquipmentWearedUInt64_hotfix;

		// Token: 0x04005BD0 RID: 23504
		private LuaFunction m_GetWearedEquipmentHeroIdByEquipmentIdUInt64_hotfix;

		// Token: 0x04005BD1 RID: 23505
		private LuaFunction m_CanWearEquipmentInt32UInt64_hotfix;

		// Token: 0x04005BD2 RID: 23506
		private LuaFunction m_HasBetterEquipmentByHeroHero_hotfix;

		// Token: 0x04005BD3 RID: 23507
		private LuaFunction m_HasBetterEquipmentBySlotIdInt32Int32_hotfix;

		// Token: 0x04005BD4 RID: 23508
		private LuaFunction m_CanAutoEquipmentInt32_hotfix;

		// Token: 0x04005BD5 RID: 23509
		private LuaFunction m_CanTakeOffEquipmentInt32Int32_hotfix;

		// Token: 0x04005BD6 RID: 23510
		private LuaFunction m_CanUnlockHeroPerformanceInt32_hotfix;

		// Token: 0x04005BD7 RID: 23511
		private LuaFunction m_CanUnlockHeroBiographyInt32_hotfix;

		// Token: 0x04005BD8 RID: 23512
		private LuaFunction m_CanReachFetterUnlockConditionHeroFetterCompletionCondition_hotfix;

		// Token: 0x04005BD9 RID: 23513
		private LuaFunction m_CanInteractHeroInt32_hotfix;

		// Token: 0x04005BDA RID: 23514
		private LuaFunction m_CanConfessHeroInt32_hotfix;

		// Token: 0x04005BDB RID: 23515
		private LuaFunction m_CanLevelUpHeroFetterInt32Int32_hotfix;

		// Token: 0x04005BDC RID: 23516
		private LuaFunction m_CanUnlockHeroFetterInt32Int32_hotfix;

		// Token: 0x04005BDD RID: 23517
		private LuaFunction m_ImitateUseHeroFavorabilityExpItemInt32Int32Int32GoodsType_hotfix;

		// Token: 0x04005BDE RID: 23518
		private LuaFunction m_IsFullFavorabilityExpHero_hotfix;

		// Token: 0x04005BDF RID: 23519
		private LuaFunction m_IsShowFetterRedMark_hotfix;

		// Token: 0x04005BE0 RID: 23520
		private LuaFunction m_IsHeroFetterHasNewOrLevelUpHero_hotfix;

		// Token: 0x04005BE1 RID: 23521
		private LuaFunction m_CanWearCharSkinInt32Int32_hotfix;

		// Token: 0x04005BE2 RID: 23522
		private LuaFunction m_CanTakeOffCharSkinInt32_hotfix;

		// Token: 0x04005BE3 RID: 23523
		private LuaFunction m_CanWearModelSkinInt32Int32Int32_hotfix;

		// Token: 0x04005BE4 RID: 23524
		private LuaFunction m_CanTakeOffModelSkinInt32Int32_hotfix;

		// Token: 0x04005BE5 RID: 23525
		private LuaFunction m_CanWearSoldierSkinInt32Int32Int32_hotfix;

		// Token: 0x04005BE6 RID: 23526
		private LuaFunction m_CanTakeOffSoldierSkinInt32Int32_hotfix;

		// Token: 0x04005BE7 RID: 23527
		private LuaFunction m_IsShowSkinBeforeOnSaleInt32Boolean_hotfix;

		// Token: 0x04005BE8 RID: 23528
		private LuaFunction m_add_EventOnSetProtagonistAckAction;

		// Token: 0x04005BE9 RID: 23529
		private LuaFunction m_remove_EventOnSetProtagonistAckAction;

		// Token: 0x04005BEA RID: 23530
		private LuaFunction m_add_EventOnHeroJobTransferAckAction;

		// Token: 0x04005BEB RID: 23531
		private LuaFunction m_remove_EventOnHeroJobTransferAckAction;

		// Token: 0x04005BEC RID: 23532
		private LuaFunction m_add_EventOnHeroStarLevelUpAckAction;

		// Token: 0x04005BED RID: 23533
		private LuaFunction m_remove_EventOnHeroStarLevelUpAckAction;

		// Token: 0x04005BEE RID: 23534
		private LuaFunction m_add_EventOnHeroJobLevelUpAckAction;

		// Token: 0x04005BEF RID: 23535
		private LuaFunction m_remove_EventOnHeroJobLevelUpAckAction;

		// Token: 0x04005BF0 RID: 23536
		private LuaFunction m_add_EventOnHeroSkillsSelectAckAction;

		// Token: 0x04005BF1 RID: 23537
		private LuaFunction m_remove_EventOnHeroSkillsSelectAckAction;

		// Token: 0x04005BF2 RID: 23538
		private LuaFunction m_add_EventOnHeroSoldierSelectAckAction;

		// Token: 0x04005BF3 RID: 23539
		private LuaFunction m_remove_EventOnHeroSoldierSelectAckAction;

		// Token: 0x04005BF4 RID: 23540
		private LuaFunction m_add_EventOnHeroComposeAckAction;

		// Token: 0x04005BF5 RID: 23541
		private LuaFunction m_remove_EventOnHeroComposeAckAction;

		// Token: 0x04005BF6 RID: 23542
		private LuaFunction m_add_EventOnHeroExpAddAckAction;

		// Token: 0x04005BF7 RID: 23543
		private LuaFunction m_remove_EventOnHeroExpAddAckAction;

		// Token: 0x04005BF8 RID: 23544
		private LuaFunction m_add_EventOnHeroJobUnlockAckAction;

		// Token: 0x04005BF9 RID: 23545
		private LuaFunction m_remove_EventOnHeroJobUnlockAckAction;

		// Token: 0x04005BFA RID: 23546
		private LuaFunction m_add_EventOnEquipmentWearAckAction;

		// Token: 0x04005BFB RID: 23547
		private LuaFunction m_remove_EventOnEquipmentWearAckAction;

		// Token: 0x04005BFC RID: 23548
		private LuaFunction m_add_EventOnEquipmentTakeOffAckAction;

		// Token: 0x04005BFD RID: 23549
		private LuaFunction m_remove_EventOnEquipmentTakeOffAckAction;

		// Token: 0x04005BFE RID: 23550
		private LuaFunction m_add_EventOnAutoEquipAckAction;

		// Token: 0x04005BFF RID: 23551
		private LuaFunction m_remove_EventOnAutoEquipAckAction;

		// Token: 0x04005C00 RID: 23552
		private LuaFunction m_add_EventOnHeroFetterLevelUpAckAction;

		// Token: 0x04005C01 RID: 23553
		private LuaFunction m_remove_EventOnHeroFetterLevelUpAckAction;

		// Token: 0x04005C02 RID: 23554
		private LuaFunction m_add_EventOnHeroConfessAckAction;

		// Token: 0x04005C03 RID: 23555
		private LuaFunction m_remove_EventOnHeroConfessAckAction;

		// Token: 0x04005C04 RID: 23556
		private LuaFunction m_add_EventOnHeroFavorabilityExpAddAckAction;

		// Token: 0x04005C05 RID: 23557
		private LuaFunction m_remove_EventOnHeroFavorabilityExpAddAckAction;

		// Token: 0x04005C06 RID: 23558
		private LuaFunction m_add_EventOnFetterUnlockAckAction;

		// Token: 0x04005C07 RID: 23559
		private LuaFunction m_remove_EventOnFetterUnlockAckAction;

		// Token: 0x04005C08 RID: 23560
		private LuaFunction m_add_EventOnHeroInteractAckAction;

		// Token: 0x04005C09 RID: 23561
		private LuaFunction m_remove_EventOnHeroInteractAckAction;

		// Token: 0x04005C0A RID: 23562
		private LuaFunction m_add_EventOnCharSkinWearAckAction;

		// Token: 0x04005C0B RID: 23563
		private LuaFunction m_remove_EventOnCharSkinWearAckAction;

		// Token: 0x04005C0C RID: 23564
		private LuaFunction m_add_EventOnCharSkinTakeOffAckAction;

		// Token: 0x04005C0D RID: 23565
		private LuaFunction m_remove_EventOnCharSkinTakeOffAckAction;

		// Token: 0x04005C0E RID: 23566
		private LuaFunction m_add_EventOnModelSkinWearAckAction;

		// Token: 0x04005C0F RID: 23567
		private LuaFunction m_remove_EventOnModelSkinWearAckAction;

		// Token: 0x04005C10 RID: 23568
		private LuaFunction m_add_EventOnModelSkinTakeOffAckAction;

		// Token: 0x04005C11 RID: 23569
		private LuaFunction m_remove_EventOnModelSkinTakeOffAckAction;

		// Token: 0x04005C12 RID: 23570
		private LuaFunction m_add_EventOnSoldierSkinWearAckAction;

		// Token: 0x04005C13 RID: 23571
		private LuaFunction m_remove_EventOnSoldierSkinWearAckAction;

		// Token: 0x04005C14 RID: 23572
		private LuaFunction m_add_EventOnSoldierSkinTakeOffAckAction;

		// Token: 0x04005C15 RID: 23573
		private LuaFunction m_remove_EventOnSoldierSkinTakeOffAckAction;

		// Token: 0x04005C16 RID: 23574
		private LuaFunction m_add_EventOnExchangeHeroFragementAckAction;

		// Token: 0x04005C17 RID: 23575
		private LuaFunction m_remove_EventOnExchangeHeroFragementAckAction;

		// Token: 0x04005C18 RID: 23576
		private LuaFunction m_add_EventOnAutoTakeOffEquipmentsAckAction;

		// Token: 0x04005C19 RID: 23577
		private LuaFunction m_remove_EventOnAutoTakeOffEquipmentsAckAction;

		// Token: 0x04005C1A RID: 23578
		private LuaFunction m_add_EventOnHeroChangeNtfAction_hotfix;

		// Token: 0x04005C1B RID: 23579
		private LuaFunction m_remove_EventOnHeroChangeNtfAction_hotfix;

		// Token: 0x04005C1C RID: 23580
		private LuaFunction m_SendHeroAssistantAssignToTaskReqInt32Int32List;

		// Token: 0x04005C1D RID: 23581
		private LuaFunction m_SendHeroAssistantCancelTaskReqInt32Int32_hotfix;

		// Token: 0x04005C1E RID: 23582
		private LuaFunction m_SendHeroAssistantClaimRewardReqInt32Int32_hotfix;

		// Token: 0x04005C1F RID: 23583
		private LuaFunction m_OnMessageDSHeroAssistantNtf_hotfix;

		// Token: 0x04005C20 RID: 23584
		private LuaFunction m_OnMessageHeroAssistantAssignToTaskAck_hotfix;

		// Token: 0x04005C21 RID: 23585
		private LuaFunction m_OnMessageHeroAssistantCancelTaskAck_hotfix;

		// Token: 0x04005C22 RID: 23586
		private LuaFunction m_OnMessageHeroAssistantClaimRewardAck_hotfix;

		// Token: 0x04005C23 RID: 23587
		private LuaFunction m_GetAllTodayHeroAssistantsTask_hotfix;

		// Token: 0x04005C24 RID: 23588
		private LuaFunction m_GetHeroAssistantsTasksByWeekDayInt32_hotfix;

		// Token: 0x04005C25 RID: 23589
		private LuaFunction m_GetAssignedHeroAssistantsTask_hotfix;

		// Token: 0x04005C26 RID: 23590
		private LuaFunction m_HaveFinishedAssistantTask_hotfix;

		// Token: 0x04005C27 RID: 23591
		private LuaFunction m_GetDropIdByTaskCompleteRateInt32Int32_hotfix;

		// Token: 0x04005C28 RID: 23592
		private LuaFunction m_GetDropCountByTaskWorkSecondsInt32Int32_hotfix;

		// Token: 0x04005C29 RID: 23593
		private LuaFunction m_CanAssignHeroList;

		// Token: 0x04005C2A RID: 23594
		private LuaFunction m_CanCancelTaskInt32Int32_hotfix;

		// Token: 0x04005C2B RID: 23595
		private LuaFunction m_CanClaimRewardsInt32Int32_hotfix;

		// Token: 0x04005C2C RID: 23596
		private LuaFunction m_GetTaskRemainingTimeInt32Int32_hotfix;

		// Token: 0x04005C2D RID: 23597
		private LuaFunction m_add_EventOnHeroAssistantAssignToTaskAckAction;

		// Token: 0x04005C2E RID: 23598
		private LuaFunction m_remove_EventOnHeroAssistantAssignToTaskAckAction;

		// Token: 0x04005C2F RID: 23599
		private LuaFunction m_add_EventOnHeroAssistantCancelTaskAckAction;

		// Token: 0x04005C30 RID: 23600
		private LuaFunction m_remove_EventOnHeroAssistantCancelTaskAckAction;

		// Token: 0x04005C31 RID: 23601
		private LuaFunction m_add_EventOnHeroAssistantClaimRewardAckAction;

		// Token: 0x04005C32 RID: 23602
		private LuaFunction m_remove_EventOnHeroAssistantClaimRewardAckAction;

		// Token: 0x04005C33 RID: 23603
		private LuaFunction m_SendHeroDungeonLevelAttackReqInt32_hotfix;

		// Token: 0x04005C34 RID: 23604
		private LuaFunction m_SendHeroDungeonLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005C35 RID: 23605
		private LuaFunction m_SendHeroDungeonLevelRaidReqInt32Int32_hotfix;

		// Token: 0x04005C36 RID: 23606
		private LuaFunction m_SendHeroDungeonChapterStarRewardGainReqInt32Int32_hotfix;

		// Token: 0x04005C37 RID: 23607
		private LuaFunction m_OnMessageDSHeroDungeonNtf_hotfix;

		// Token: 0x04005C38 RID: 23608
		private LuaFunction m_OnMessageHeroDungeonLevelAttackAck_hotfix;

		// Token: 0x04005C39 RID: 23609
		private LuaFunction m_OnMessageHeroDungeonLevelBattleFinishedAck_hotfix;

		// Token: 0x04005C3A RID: 23610
		private LuaFunction m_OnMessageHeroDungeonLevelRaidAck_hotfix;

		// Token: 0x04005C3B RID: 23611
		private LuaFunction m_OnMessageHeroDungeonChapterStarRewardGainAck_hotfix;

		// Token: 0x04005C3C RID: 23612
		private LuaFunction m_CanUnLockHeroDungeonLevelInt32_hotfix;

		// Token: 0x04005C3D RID: 23613
		private LuaFunction m_IsHeroDungeonLevelAttachUnlockLevelInt32_hotfix;

		// Token: 0x04005C3E RID: 23614
		private LuaFunction m_CanAttackHeroDungeonLevelInt32_hotfix;

		// Token: 0x04005C3F RID: 23615
		private LuaFunction m_GetHeroDungeonLevelChallengeNumConfigDataHeroDungeonLevelInfo_hotfix;

		// Token: 0x04005C40 RID: 23616
		private LuaFunction m_GetHeroDungeonLevelCanChallengeNumConfigDataHeroDungeonLevelInfo_hotfix;

		// Token: 0x04005C41 RID: 23617
		private LuaFunction m_GetHeroDungeonLevelCanChallengeMaxNumConfigDataHeroDungeonLevelInfo_hotfix;

		// Token: 0x04005C42 RID: 23618
		private LuaFunction m_CanRaidHeroDungeonLevelInt32_hotfix;

		// Token: 0x04005C43 RID: 23619
		private LuaFunction m_GetHeroDungeonLevelStarsConfigDataHeroDungeonLevelInfo_hotfix;

		// Token: 0x04005C44 RID: 23620
		private LuaFunction m_GetHeroDungeonLevelAchievementCountConfigDataHeroDungeonLevelInfo_hotfix;

		// Token: 0x04005C45 RID: 23621
		private LuaFunction m_HasHeroDungeonLevelAchievementInt32_hotfix;

		// Token: 0x04005C46 RID: 23622
		private LuaFunction m_GetHeroDungeonChapterGainStarsInt32_hotfix;

		// Token: 0x04005C47 RID: 23623
		private LuaFunction m_GetHeroDungeonChapterAllStarsInt32_hotfix;

		// Token: 0x04005C48 RID: 23624
		private LuaFunction m_GetHeroDungeonStarRewardStatusInt32Int32_hotfix;

		// Token: 0x04005C49 RID: 23625
		private LuaFunction m_CanGainHeroDungeonStarRewardInt32Int32_hotfix;

		// Token: 0x04005C4A RID: 23626
		private LuaFunction m_IsLevelChallengedInt32_hotfix;

		// Token: 0x04005C4B RID: 23627
		private LuaFunction m_IsHeroDungeonNewMarkShowInt32_hotfix;

		// Token: 0x04005C4C RID: 23628
		private LuaFunction m_HeroDungeonProgressInt32_hotfix;

		// Token: 0x04005C4D RID: 23629
		private LuaFunction m_GetHeroDungeonDailyChallengeMaxNums_hotfix;

		// Token: 0x04005C4E RID: 23630
		private LuaFunction m_add_EventOnHeroDungeonLevelAttackAckAction;

		// Token: 0x04005C4F RID: 23631
		private LuaFunction m_remove_EventOnHeroDungeonLevelAttackAckAction;

		// Token: 0x04005C50 RID: 23632
		private LuaFunction m_add_EventOnHeroDungeonLevelRaidAckAction;

		// Token: 0x04005C51 RID: 23633
		private LuaFunction m_remove_EventOnHeroDungeonLevelRaidAckAction;

		// Token: 0x04005C52 RID: 23634
		private LuaFunction m_add_EventOnHeroDungeonRewardGainAckAction;

		// Token: 0x04005C53 RID: 23635
		private LuaFunction m_remove_EventOnHeroDungeonRewardGainAckAction;

		// Token: 0x04005C54 RID: 23636
		private LuaFunction m_add_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix;

		// Token: 0x04005C55 RID: 23637
		private LuaFunction m_remove_EventOnHeroDungeonLevelBattleFinishedAckHeroDungeonLevelBattleFinishedAckCallback_hotfix;

		// Token: 0x04005C56 RID: 23638
		private LuaFunction m_SendHeroPhantomAttackReqInt32_hotfix;

		// Token: 0x04005C57 RID: 23639
		private LuaFunction m_SendHeroPhantomBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005C58 RID: 23640
		private LuaFunction m_OnMessageDSHeroPhantomNtf_hotfix;

		// Token: 0x04005C59 RID: 23641
		private LuaFunction m_OnMessageHeroPhantomAttackAck_hotfix;

		// Token: 0x04005C5A RID: 23642
		private LuaFunction m_OnMessageHeroPhantomBattleFinishedAck_hotfix;

		// Token: 0x04005C5B RID: 23643
		private LuaFunction m_IsHeroPhantomDisplayInt32_hotfix;

		// Token: 0x04005C5C RID: 23644
		private LuaFunction m_IsHeroPhantomOpenedInt32_hotfix;

		// Token: 0x04005C5D RID: 23645
		private LuaFunction m_IsHeroPhantomLevelOpenedInt32_hotfix;

		// Token: 0x04005C5E RID: 23646
		private LuaFunction m_CanAttackHeroPhantomLevelInt32_hotfix;

		// Token: 0x04005C5F RID: 23647
		private LuaFunction m_IsHeroPhantomLevelFinihedInt32_hotfix;

		// Token: 0x04005C60 RID: 23648
		private LuaFunction m_IsCompleteHeroPhantomLevelAchievementInt32_hotfix;

		// Token: 0x04005C61 RID: 23649
		private LuaFunction m_GetHeroPhantomCompleteAchievementCountInt32_hotfix;

		// Token: 0x04005C62 RID: 23650
		private LuaFunction m_GetHeroPhantomLevelCompleteAchievementCountInt32_hotfix;

		// Token: 0x04005C63 RID: 23651
		private LuaFunction m_IsHeroPhantomLevelFirstCleanCompleteInt32_hotfix;

		// Token: 0x04005C64 RID: 23652
		private LuaFunction m_add_EventOnHeroPhantomAttackAckAction;

		// Token: 0x04005C65 RID: 23653
		private LuaFunction m_remove_EventOnHeroPhantomAttackAckAction;

		// Token: 0x04005C66 RID: 23654
		private LuaFunction m_add_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix;

		// Token: 0x04005C67 RID: 23655
		private LuaFunction m_remove_EventOnHeroPhantomBattleFinishedAckHeroPhantomBattleFinishedAckCallback_hotfix;

		// Token: 0x04005C68 RID: 23656
		private LuaFunction m_SendHeroTrainningLevelAttackReqInt32_hotfix;

		// Token: 0x04005C69 RID: 23657
		private LuaFunction m_SendHeroTrainningLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005C6A RID: 23658
		private LuaFunction m_OnMessageDSHeroTrainningNtf_hotfix;

		// Token: 0x04005C6B RID: 23659
		private LuaFunction m_OnMessageHeroTrainningLevelAttackAck_hotfix;

		// Token: 0x04005C6C RID: 23660
		private LuaFunction m_OnMessageHeroTrainningLevelBattleFinishedAck_hotfix;

		// Token: 0x04005C6D RID: 23661
		private LuaFunction m_IsHeroTrainningOpenedInt32_hotfix;

		// Token: 0x04005C6E RID: 23662
		private LuaFunction m_IsHeroTrainningLevelOpenedInt32_hotfix;

		// Token: 0x04005C6F RID: 23663
		private LuaFunction m_CanAttackHeroTrainningLevelInt32_hotfix;

		// Token: 0x04005C70 RID: 23664
		private LuaFunction m_GetHeroTrainningTicketCount_hotfix;

		// Token: 0x04005C71 RID: 23665
		private LuaFunction m_IsHeroTrainningLevelFinishedInt32_hotfix;

		// Token: 0x04005C72 RID: 23666
		private LuaFunction m_GetHeroTrainingDailyRewardRestCount_hotfix;

		// Token: 0x04005C73 RID: 23667
		private LuaFunction m_add_EventOnHeroTrainningLevelAttackAckAction;

		// Token: 0x04005C74 RID: 23668
		private LuaFunction m_remove_EventOnHeroTrainningLevelAttackAckAction;

		// Token: 0x04005C75 RID: 23669
		private LuaFunction m_add_EventOnHeroTrainningLevelBattleFinishedAckAction;

		// Token: 0x04005C76 RID: 23670
		private LuaFunction m_remove_EventOnHeroTrainningLevelBattleFinishedAckAction;

		// Token: 0x04005C77 RID: 23671
		private LuaFunction m_SendLevelWayPointMoveReqInt32_hotfix;

		// Token: 0x04005C78 RID: 23672
		private LuaFunction m_SendLevelScenarioHandleReqInt32_hotfix;

		// Token: 0x04005C79 RID: 23673
		private LuaFunction m_SendLevelWayPointBattleFinishReqInt32ProBattleReport_hotfix;

		// Token: 0x04005C7A RID: 23674
		private LuaFunction m_OnMessageDSLevelNtf_hotfix;

		// Token: 0x04005C7B RID: 23675
		private LuaFunction m_OnMessageLevelWayPointMoveAck_hotfix;

		// Token: 0x04005C7C RID: 23676
		private LuaFunction m_OnMessageLevelScenarioHandleAck_hotfix;

		// Token: 0x04005C7D RID: 23677
		private LuaFunction m_OnMessageLevelWayPointBattleFinishAck_hotfix;

		// Token: 0x04005C7E RID: 23678
		private LuaFunction m_OnMessageRandomEventNtf_hotfix;

		// Token: 0x04005C7F RID: 23679
		private LuaFunction m_AppendChangedGoodsToRewardsList`1List;

		// Token: 0x04005C80 RID: 23680
		private LuaFunction m_GetNotBagItemCountGoods_hotfix;

		// Token: 0x04005C81 RID: 23681
		private LuaFunction m_IsRegionOpenInt32_hotfix;

		// Token: 0x04005C82 RID: 23682
		private LuaFunction m_GetCurrentWorldMapInfo_hotfix;

		// Token: 0x04005C83 RID: 23683
		private LuaFunction m_GetPlayerCurrentWaypointInfo_hotfix;

		// Token: 0x04005C84 RID: 23684
		private LuaFunction m_GetWaypointStatusInt32_hotfix;

		// Token: 0x04005C85 RID: 23685
		private LuaFunction m_GetWaypointEventInt32ConfigDataEventInfo_RandomEvent__hotfix;

		// Token: 0x04005C86 RID: 23686
		private LuaFunction m_CanAttackEventWaypointInt32_hotfix;

		// Token: 0x04005C87 RID: 23687
		private LuaFunction m_CanAttackScenarioInt32_hotfix;

		// Token: 0x04005C88 RID: 23688
		private LuaFunction m_GetLastFinishedScenarioInfo_hotfix;

		// Token: 0x04005C89 RID: 23689
		private LuaFunction m_GetNextScenarioInfo_hotfix;

		// Token: 0x04005C8A RID: 23690
		private LuaFunction m_IsScenarioFinishedInt32_hotfix;

		// Token: 0x04005C8B RID: 23691
		private LuaFunction m_CanUnlockScenarioInt32_hotfix;

		// Token: 0x04005C8C RID: 23692
		private LuaFunction m_InitCurrentScenarioInfo_hotfix;

		// Token: 0x04005C8D RID: 23693
		private LuaFunction m_CheckChangeCurrentScenario_hotfix;

		// Token: 0x04005C8E RID: 23694
		private LuaFunction m_GetCurrentScenarioInfo_hotfix;

		// Token: 0x04005C8F RID: 23695
		private LuaFunction m_UpdateCurrentWaypointEvents_hotfix;

		// Token: 0x04005C90 RID: 23696
		private LuaFunction m_GetCurrentWaypointEvents_hotfix;

		// Token: 0x04005C91 RID: 23697
		private LuaFunction m_GetCurrentWaypointEventInfoInt32_hotfix;

		// Token: 0x04005C92 RID: 23698
		private LuaFunction m_GetCurrentWaypointRandomEventInt32_hotfix;

		// Token: 0x04005C93 RID: 23699
		private LuaFunction m_add_EventOnLevelWayPointMoveAckAction;

		// Token: 0x04005C94 RID: 23700
		private LuaFunction m_remove_EventOnLevelWayPointMoveAckAction;

		// Token: 0x04005C95 RID: 23701
		private LuaFunction m_add_EventOnLevelScenarioHandleAckAction;

		// Token: 0x04005C96 RID: 23702
		private LuaFunction m_remove_EventOnLevelScenarioHandleAckAction;

		// Token: 0x04005C97 RID: 23703
		private LuaFunction m_add_EventOnLevelWayPointBattleFinishAckAction;

		// Token: 0x04005C98 RID: 23704
		private LuaFunction m_remove_EventOnLevelWayPointBattleFinishAckAction;

		// Token: 0x04005C99 RID: 23705
		private LuaFunction m_add_EventOnRandomEventNtfAction_hotfix;

		// Token: 0x04005C9A RID: 23706
		private LuaFunction m_remove_EventOnRandomEventNtfAction_hotfix;

		// Token: 0x04005C9B RID: 23707
		private LuaFunction m_SendMailsGetReq_hotfix;

		// Token: 0x04005C9C RID: 23708
		private LuaFunction m_SendMailReadReqUInt64_hotfix;

		// Token: 0x04005C9D RID: 23709
		private LuaFunction m_SendMailAttachmentsGetReqUInt64_hotfix;

		// Token: 0x04005C9E RID: 23710
		private LuaFunction m_SendMailAttachmentAutoGetReq_hotfix;

		// Token: 0x04005C9F RID: 23711
		private LuaFunction m_OnMessageDSMailNtf_hotfix;

		// Token: 0x04005CA0 RID: 23712
		private LuaFunction m_OnMessageMailsGetAck_hotfix;

		// Token: 0x04005CA1 RID: 23713
		private LuaFunction m_OnMessageMailsChangedNtf_hotfix;

		// Token: 0x04005CA2 RID: 23714
		private LuaFunction m_OnMessageMailReadAck_hotfix;

		// Token: 0x04005CA3 RID: 23715
		private LuaFunction m_OnMessageMailAttachmentsGetAck_hotfix;

		// Token: 0x04005CA4 RID: 23716
		private LuaFunction m_OnMessageMailAttachmentAutoGetAck_hotfix;

		// Token: 0x04005CA5 RID: 23717
		private LuaFunction m_GetMails_hotfix;

		// Token: 0x04005CA6 RID: 23718
		private LuaFunction m_IsMailReadedMail_hotfix;

		// Token: 0x04005CA7 RID: 23719
		private LuaFunction m_IsExistMailAttacmentsMail_hotfix;

		// Token: 0x04005CA8 RID: 23720
		private LuaFunction m_HasGotMailAttachmentsMail_hotfix;

		// Token: 0x04005CA9 RID: 23721
		private LuaFunction m_GetMailExpiredTimeMail_hotfix;

		// Token: 0x04005CAA RID: 23722
		private LuaFunction m_GetUnReadMailCount_hotfix;

		// Token: 0x04005CAB RID: 23723
		private LuaFunction m_CanGetMailAttachmentUInt64_hotfix;

		// Token: 0x04005CAC RID: 23724
		private LuaFunction m_CanAutoGetMailAttachment_hotfix;

		// Token: 0x04005CAD RID: 23725
		private LuaFunction m_IsOfficialMailMail_hotfix;

		// Token: 0x04005CAE RID: 23726
		private LuaFunction m_get_IsHaveMailList_hotfix;

		// Token: 0x04005CAF RID: 23727
		private LuaFunction m_set_IsHaveMailListBoolean_hotfix;

		// Token: 0x04005CB0 RID: 23728
		private LuaFunction m_add_EventOnMailsGetAckAction_hotfix;

		// Token: 0x04005CB1 RID: 23729
		private LuaFunction m_remove_EventOnMailsGetAckAction_hotfix;

		// Token: 0x04005CB2 RID: 23730
		private LuaFunction m_add_EventOnMailsChangedNtfAction_hotfix;

		// Token: 0x04005CB3 RID: 23731
		private LuaFunction m_remove_EventOnMailsChangedNtfAction_hotfix;

		// Token: 0x04005CB4 RID: 23732
		private LuaFunction m_add_EventOnMailReadAckAction;

		// Token: 0x04005CB5 RID: 23733
		private LuaFunction m_remove_EventOnMailReadAckAction;

		// Token: 0x04005CB6 RID: 23734
		private LuaFunction m_add_EventOnMailAttachmentsGetAckAction;

		// Token: 0x04005CB7 RID: 23735
		private LuaFunction m_remove_EventOnMailAttachmentsGetAckAction;

		// Token: 0x04005CB8 RID: 23736
		private LuaFunction m_add_EventOnMailAttachmentsAutoGetAckAction;

		// Token: 0x04005CB9 RID: 23737
		private LuaFunction m_remove_EventOnMailAttachmentsAutoGetAckAction;

		// Token: 0x04005CBA RID: 23738
		private LuaFunction m_SendMemoryCorridorLevelAttackReqInt32_hotfix;

		// Token: 0x04005CBB RID: 23739
		private LuaFunction m_SendMemoryCorridorLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005CBC RID: 23740
		private LuaFunction m_OnMessageDSMemoryCorridorNtf_hotfix;

		// Token: 0x04005CBD RID: 23741
		private LuaFunction m_OnMessageMemoryCorridorLevelAttackAck_hotfix;

		// Token: 0x04005CBE RID: 23742
		private LuaFunction m_OnMessageMemoryCorridorLevelBattleFinishedAck_hotfix;

		// Token: 0x04005CBF RID: 23743
		private LuaFunction m_IsMemoryCorridorOpenedInt32_hotfix;

		// Token: 0x04005CC0 RID: 23744
		private LuaFunction m_IsMemoryCorridorLevelOpenedInt32_hotfix;

		// Token: 0x04005CC1 RID: 23745
		private LuaFunction m_CanAttackMemoryCorridorLevelInt32_hotfix;

		// Token: 0x04005CC2 RID: 23746
		private LuaFunction m_GetMemoryCorridorTicketCount_hotfix;

		// Token: 0x04005CC3 RID: 23747
		private LuaFunction m_IsMemoryCorridorLevelFinishedInt32_hotfix;

		// Token: 0x04005CC4 RID: 23748
		private LuaFunction m_GetMemoryCorridorDailyRewardRestCount_hotfix;

		// Token: 0x04005CC5 RID: 23749
		private LuaFunction m_add_EventOnMemoryCorridorLevelAttackAckAction;

		// Token: 0x04005CC6 RID: 23750
		private LuaFunction m_remove_EventOnMemoryCorridorLevelAttackAckAction;

		// Token: 0x04005CC7 RID: 23751
		private LuaFunction m_add_EventOnMemoryCorridorLevelBattleFinishedAckAction;

		// Token: 0x04005CC8 RID: 23752
		private LuaFunction m_remove_EventOnMemoryCorridorLevelBattleFinishedAckAction;

		// Token: 0x04005CC9 RID: 23753
		private LuaFunction m_SendGetMissionRewardReqInt32_hotfix;

		// Token: 0x04005CCA RID: 23754
		private LuaFunction m_OnMessageDirectelyActivitedMissionUpdateNtf_hotfix;

		// Token: 0x04005CCB RID: 23755
		private LuaFunction m_OnMessageDSMissionNtf_hotfix;

		// Token: 0x04005CCC RID: 23756
		private LuaFunction m_OnMessageGetMissionRewardAck_hotfix;

		// Token: 0x04005CCD RID: 23757
		private LuaFunction m_add_EventOnMissionRewardGetAckAction;

		// Token: 0x04005CCE RID: 23758
		private LuaFunction m_remove_EventOnMissionRewardGetAckAction;

		// Token: 0x04005CCF RID: 23759
		private LuaFunction m_GetAllProcessingMissionList_hotfix;

		// Token: 0x04005CD0 RID: 23760
		private LuaFunction m_GetAllCompletedMissionList_hotfix;

		// Token: 0x04005CD1 RID: 23761
		private LuaFunction m_GetAllFinishedMissionList_hotfix;

		// Token: 0x04005CD2 RID: 23762
		private LuaFunction m_GetMissionMaxProcessMission_hotfix;

		// Token: 0x04005CD3 RID: 23763
		private LuaFunction m_GetMissionCompleteProcessMission_hotfix;

		// Token: 0x04005CD4 RID: 23764
		private LuaFunction m_IsExistMissionCompleted_hotfix;

		// Token: 0x04005CD5 RID: 23765
		private LuaFunction m_CanGainMissionRewardInt32_hotfix;

		// Token: 0x04005CD6 RID: 23766
		private LuaFunction m_CanGetMissionRewardingMission_hotfix;

		// Token: 0x04005CD7 RID: 23767
		private LuaFunction m_SendNoviceClaimRewardReqInt32_hotfix;

		// Token: 0x04005CD8 RID: 23768
		private LuaFunction m_OnMessageDSNoviceNtf_hotfix;

		// Token: 0x04005CD9 RID: 23769
		private LuaFunction m_OnMessageNoviceClaimRewardAck_hotfix;

		// Token: 0x04005CDA RID: 23770
		private LuaFunction m_GetDaysAfterCreation_hotfix;

		// Token: 0x04005CDB RID: 23771
		private LuaFunction m_GetNoviceMissions_hotfix;

		// Token: 0x04005CDC RID: 23772
		private LuaFunction m_GetNoviceProcessingMissions_hotfix;

		// Token: 0x04005CDD RID: 23773
		private LuaFunction m_IsShowRedMarkOnOpenServiceButton_hotfix;

		// Token: 0x04005CDE RID: 23774
		private LuaFunction m_HaveFinishedNotGetNoviceMissions_hotfix;

		// Token: 0x04005CDF RID: 23775
		private LuaFunction m_HaveFinishedNotGetNoiviceMissionsByDayInt32_hotfix;

		// Token: 0x04005CE0 RID: 23776
		private LuaFunction m_GetFinishedAndGetRewardNoviceMissions_hotfix;

		// Token: 0x04005CE1 RID: 23777
		private LuaFunction m_GetNoviceMissionPoints_hotfix;

		// Token: 0x04005CE2 RID: 23778
		private LuaFunction m_GetNovicePointsRewardsConfig_hotfix;

		// Token: 0x04005CE3 RID: 23779
		private LuaFunction m_CanClaimNoviceRewardInt32_hotfix;

		// Token: 0x04005CE4 RID: 23780
		private LuaFunction m_GetNoviceMissionsEndTime_hotfix;

		// Token: 0x04005CE5 RID: 23781
		private LuaFunction m_add_EventOnNoviceClaimRewardAckAction;

		// Token: 0x04005CE6 RID: 23782
		private LuaFunction m_remove_EventOnNoviceClaimRewardAckAction;

		// Token: 0x04005CE7 RID: 23783
		private LuaFunction m_SendOperationalActivityGainRewardReqUInt64Int32_hotfix;

		// Token: 0x04005CE8 RID: 23784
		private LuaFunction m_SendOperationalActivityExchangeItemGroupReqUInt64Int32_hotfix;

		// Token: 0x04005CE9 RID: 23785
		private LuaFunction m_SendRedeemInfoReq_hotfix;

		// Token: 0x04005CEA RID: 23786
		private LuaFunction m_SendRedeemClaimReq_hotfix;

		// Token: 0x04005CEB RID: 23787
		private LuaFunction m_SendFansRewardsFromPBTCBTInfoReq_hotfix;

		// Token: 0x04005CEC RID: 23788
		private LuaFunction m_SendFansRewardsFromPBTCBTClaimReq_hotfix;

		// Token: 0x04005CED RID: 23789
		private LuaFunction m_OnMessageOperationalActivityGainRewardAck_hotfix;

		// Token: 0x04005CEE RID: 23790
		private LuaFunction m_OnMessageOperationalActivityExchangeItemGroupAck_hotfix;

		// Token: 0x04005CEF RID: 23791
		private LuaFunction m_OnMessageAdvertisementFlowLayoutUpdateNtf_hotfix;

		// Token: 0x04005CF0 RID: 23792
		private LuaFunction m_OnMessageDSOperationalActivityNtf_hotfix;

		// Token: 0x04005CF1 RID: 23793
		private LuaFunction m_OnMessageRemoveAnnouncementNtf_hotfix;

		// Token: 0x04005CF2 RID: 23794
		private LuaFunction m_OnMessageDSAnnouncementNtf_hotfix;

		// Token: 0x04005CF3 RID: 23795
		private LuaFunction m_OnMessageNewOperationalActivityNtf_hotfix;

		// Token: 0x04005CF4 RID: 23796
		private LuaFunction m_OnMessageNewAnnouncementNtf_hotfix;

		// Token: 0x04005CF5 RID: 23797
		private LuaFunction m_OnMessageUpdateOperationalActivityNtf_hotfix;

		// Token: 0x04005CF6 RID: 23798
		private LuaFunction m_OnMessageNewMarqueeNtf_hotfix;

		// Token: 0x04005CF7 RID: 23799
		private LuaFunction m_OnMessageRedeemInfoAck_hotfix;

		// Token: 0x04005CF8 RID: 23800
		private LuaFunction m_OnMessageRedeemClaimAck_hotfix;

		// Token: 0x04005CF9 RID: 23801
		private LuaFunction m_OnMessageFansRewardsFromPBTCBTInfoAck_hotfix;

		// Token: 0x04005CFA RID: 23802
		private LuaFunction m_OnMessageFansRewardsFromPBTCBTClaimAck_hotfix;

		// Token: 0x04005CFB RID: 23803
		private LuaFunction m_GetAllCurrentAnnouncements_hotfix;

		// Token: 0x04005CFC RID: 23804
		private LuaFunction m_SetRedeemInfoRedeemInfoAck_hotfix;

		// Token: 0x04005CFD RID: 23805
		private LuaFunction m_SetRedeemClaimed_hotfix;

		// Token: 0x04005CFE RID: 23806
		private LuaFunction m_GetRedeemInfo_hotfix;

		// Token: 0x04005CFF RID: 23807
		private LuaFunction m_IsRedeemClaimed_hotfix;

		// Token: 0x04005D00 RID: 23808
		private LuaFunction m_GetAllCurrentActivity_hotfix;

		// Token: 0x04005D01 RID: 23809
		private LuaFunction m_CanShowActivityOperationalActivityBase_hotfix;

		// Token: 0x04005D02 RID: 23810
		private LuaFunction m_CanActivityGainRewardOperationalActivityBaseInt32_hotfix;

		// Token: 0x04005D03 RID: 23811
		private LuaFunction m_CanActivityGainRewardResultOperationalActivityBaseInt32_hotfix;

		// Token: 0x04005D04 RID: 23812
		private LuaFunction m_FindOperationalActivityByIdUInt64_hotfix;

		// Token: 0x04005D05 RID: 23813
		private LuaFunction m_CanExchangeGoodsResultOperationalActivityBaseInt32_hotfix;

		// Token: 0x04005D06 RID: 23814
		private LuaFunction m_IsTabRedPointShowOperationalActivityBase_hotfix;

		// Token: 0x04005D07 RID: 23815
		private LuaFunction m_IsActivityRedPointShow_hotfix;

		// Token: 0x04005D08 RID: 23816
		private LuaFunction m_GetAllAdvertisementFlowLayouts_hotfix;

		// Token: 0x04005D09 RID: 23817
		private LuaFunction m_IsFirstTryToOpenActivityNoticeUI_hotfix;

		// Token: 0x04005D0A RID: 23818
		private LuaFunction m_HaveActivityNotice_hotfix;

		// Token: 0x04005D0B RID: 23819
		private LuaFunction m_SetBuyGuideActivityViewed_hotfix;

		// Token: 0x04005D0C RID: 23820
		private LuaFunction m_add_EventOnActivityGainRewardAckAction;

		// Token: 0x04005D0D RID: 23821
		private LuaFunction m_remove_EventOnActivityGainRewardAckAction;

		// Token: 0x04005D0E RID: 23822
		private LuaFunction m_add_EventOnActivityExchangeItemGroupAckAction;

		// Token: 0x04005D0F RID: 23823
		private LuaFunction m_remove_EventOnActivityExchangeItemGroupAckAction;

		// Token: 0x04005D10 RID: 23824
		private LuaFunction m_add_EventOnNewMarqueeNtfAction;

		// Token: 0x04005D11 RID: 23825
		private LuaFunction m_remove_EventOnNewMarqueeNtfAction;

		// Token: 0x04005D12 RID: 23826
		private LuaFunction m_add_EventOnActivityRedeemClaimAckAction;

		// Token: 0x04005D13 RID: 23827
		private LuaFunction m_remove_EventOnActivityRedeemClaimAckAction;

		// Token: 0x04005D14 RID: 23828
		private LuaFunction m_add_EventOnActivityFansRewardsFromPBTCBTAction;

		// Token: 0x04005D15 RID: 23829
		private LuaFunction m_remove_EventOnActivityFansRewardsFromPBTCBTAction;

		// Token: 0x04005D16 RID: 23830
		private LuaFunction m_SendOpenMemoryStoreReq_hotfix;

		// Token: 0x04005D17 RID: 23831
		private LuaFunction m_SendShareReqInt32Int32_hotfix;

		// Token: 0x04005D18 RID: 23832
		private LuaFunction m_SendCheckOnlineReq_hotfix;

		// Token: 0x04005D19 RID: 23833
		private LuaFunction m_SendPlayerInfoInitReq_hotfix;

		// Token: 0x04005D1A RID: 23834
		private LuaFunction m_SendPlayerInfoReqOnReloginBySessionBoolean_hotfix;

		// Token: 0x04005D1B RID: 23835
		private LuaFunction m_BuildPlayerInfoInitReqBoolean_hotfix;

		// Token: 0x04005D1C RID: 23836
		private LuaFunction m_SendCreateCharactorReqString_hotfix;

		// Token: 0x04005D1D RID: 23837
		private LuaFunction m_SendBuyEnergyReq_hotfix;

		// Token: 0x04005D1E RID: 23838
		private LuaFunction m_SendBuyArenaTicketsReq_hotfix;

		// Token: 0x04005D1F RID: 23839
		private LuaFunction m_SendHeadPortraitSetReqInt32_hotfix;

		// Token: 0x04005D20 RID: 23840
		private LuaFunction m_SendHeadFrameSetReqInt32_hotfix;

		// Token: 0x04005D21 RID: 23841
		private LuaFunction m_SendHeadPortraitAndHeadFrameSetReqInt32Int32_hotfix;

		// Token: 0x04005D22 RID: 23842
		private LuaFunction m_SendChangePlayerNameReqString_hotfix;

		// Token: 0x04005D23 RID: 23843
		private LuaFunction m_SendExchangeGiftCDKeyReqString_hotfix;

		// Token: 0x04005D24 RID: 23844
		private LuaFunction m_SendClientHeartBeatNtf_hotfix;

		// Token: 0x04005D25 RID: 23845
		private LuaFunction m_SendClientAppPauseNtf_hotfix;

		// Token: 0x04005D26 RID: 23846
		private LuaFunction m_SendClientAppResumeNtf_hotfix;

		// Token: 0x04005D27 RID: 23847
		private LuaFunction m_SendOpenGameRatingReq_hotfix;

		// Token: 0x04005D28 RID: 23848
		private LuaFunction m_OnMessageOpenMemoryStoreAck_hotfix;

		// Token: 0x04005D29 RID: 23849
		private LuaFunction m_OnMessageDailyFlushNtf_hotfix;

		// Token: 0x04005D2A RID: 23850
		private LuaFunction m_OnMessageShareAck_hotfix;

		// Token: 0x04005D2B RID: 23851
		private LuaFunction m_OnMessageHeadPortraitAndHeadFrameSetAck_hotfix;

		// Token: 0x04005D2C RID: 23852
		private LuaFunction m_OnMessageRMBUpdateNtf_hotfix;

		// Token: 0x04005D2D RID: 23853
		private LuaFunction m_OnMessageFlushConfigNtf_hotfix;

		// Token: 0x04005D2E RID: 23854
		private LuaFunction m_OnMessageExchangeGiftCDKeyAck_hotfix;

		// Token: 0x04005D2F RID: 23855
		private LuaFunction m_OnMessagePlayerInfoInitAck_hotfix;

		// Token: 0x04005D30 RID: 23856
		private LuaFunction m_OnMessageCreateCharactorAck_hotfix;

		// Token: 0x04005D31 RID: 23857
		private LuaFunction m_OnMessageDSPlayerBasicNtf_hotfix;

		// Token: 0x04005D32 RID: 23858
		private LuaFunction m_OnMessagePlayerInfoInitEndNtf_hotfix;

		// Token: 0x04005D33 RID: 23859
		private LuaFunction m_OnMessageProChangedGoodsNtf_hotfix;

		// Token: 0x04005D34 RID: 23860
		private LuaFunction m_OnMessageBuyEnergyAck_hotfix;

		// Token: 0x04005D35 RID: 23861
		private LuaFunction m_OnMessageArenaTicketsBuyAck_hotfix;

		// Token: 0x04005D36 RID: 23862
		private LuaFunction m_OnMessagePlayerNameChangeAck_hotfix;

		// Token: 0x04005D37 RID: 23863
		private LuaFunction m_OnMessageGameRatingOpenAck_hotfix;

		// Token: 0x04005D38 RID: 23864
		private LuaFunction m_OnMessageCheckOnlineAck_hotfix;

		// Token: 0x04005D39 RID: 23865
		private LuaFunction m_SetChangedGoodsListStatusList;

		// Token: 0x04005D3A RID: 23866
		private LuaFunction m_SetChangedGoodsStatusProGoodsBoolean_Boolean_Boolean__hotfix;

		// Token: 0x04005D3B RID: 23867
		private LuaFunction m_SetBagItemPropertyChangesProGoods_hotfix;

		// Token: 0x04005D3C RID: 23868
		private LuaFunction m_IsMemoryStoreOpen_hotfix;

		// Token: 0x04005D3D RID: 23869
		private LuaFunction m_GetEnergyReachMaxTime_hotfix;

		// Token: 0x04005D3E RID: 23870
		private LuaFunction m_GetArenaTicketNextGivenTime_hotfix;

		// Token: 0x04005D3F RID: 23871
		private LuaFunction m_GetBlackMarketNextFlushTime_hotfix;

		// Token: 0x04005D40 RID: 23872
		private LuaFunction m_OnMessageUpdateServerTimeNtf_hotfix;

		// Token: 0x04005D41 RID: 23873
		private LuaFunction m_InitPlayerInfoPlayerInfoInitAck_hotfix;

		// Token: 0x04005D42 RID: 23874
		private LuaFunction m_UpdateServerTimeInt64_hotfix;

		// Token: 0x04005D43 RID: 23875
		private LuaFunction m_InitPlayerBasicDSPlayerBasicNtf_hotfix;

		// Token: 0x04005D44 RID: 23876
		private LuaFunction m_GetGold_hotfix;

		// Token: 0x04005D45 RID: 23877
		private LuaFunction m_GetRechargeRMB_hotfix;

		// Token: 0x04005D46 RID: 23878
		private LuaFunction m_GetCrystal_hotfix;

		// Token: 0x04005D47 RID: 23879
		private LuaFunction m_GetGuildMedal_hotfix;

		// Token: 0x04005D48 RID: 23880
		private LuaFunction m_GetMithralStone_hotfix;

		// Token: 0x04005D49 RID: 23881
		private LuaFunction m_GetBrillianceMithralStone_hotfix;

		// Token: 0x04005D4A RID: 23882
		private LuaFunction m_GetEnergy_hotfix;

		// Token: 0x04005D4B RID: 23883
		private LuaFunction m_GetEnergyMax_hotfix;

		// Token: 0x04005D4C RID: 23884
		private LuaFunction m_GetCreateTime_hotfix;

		// Token: 0x04005D4D RID: 23885
		private LuaFunction m_GetCreateTimeUtc_hotfix;

		// Token: 0x04005D4E RID: 23886
		private LuaFunction m_CanBuyEnergy_hotfix;

		// Token: 0x04005D4F RID: 23887
		private LuaFunction m_GetBuyEnergyNums_hotfix;

		// Token: 0x04005D50 RID: 23888
		private LuaFunction m_GetEnergyFlushTime_hotfix;

		// Token: 0x04005D51 RID: 23889
		private LuaFunction m_CanBuyArenaTickets_hotfix;

		// Token: 0x04005D52 RID: 23890
		private LuaFunction m_GetBuyArenaTicketsNums_hotfix;

		// Token: 0x04005D53 RID: 23891
		private LuaFunction m_GetPlayerLevel_hotfix;

		// Token: 0x04005D54 RID: 23892
		private LuaFunction m_GetPlayerExp_hotfix;

		// Token: 0x04005D55 RID: 23893
		private LuaFunction m_GetPlayerNextLevelExp_hotfix;

		// Token: 0x04005D56 RID: 23894
		private LuaFunction m_GetPlayerVip_hotfix;

		// Token: 0x04005D57 RID: 23895
		private LuaFunction m_GetPlayerHeadIcon_hotfix;

		// Token: 0x04005D58 RID: 23896
		private LuaFunction m_GetPlayerHeadPortrait_hotfix;

		// Token: 0x04005D59 RID: 23897
		private LuaFunction m_GetPlayerHeadFrame_hotfix;

		// Token: 0x04005D5A RID: 23898
		private LuaFunction m_SetUserGuideList;

		// Token: 0x04005D5B RID: 23899
		private LuaFunction m_GetPlayerName_hotfix;

		// Token: 0x04005D5C RID: 23900
		private LuaFunction m_CheckPlayerNameString_hotfix;

		// Token: 0x04005D5D RID: 23901
		private LuaFunction m_CanChangePlayerNameString_hotfix;

		// Token: 0x04005D5E RID: 23902
		private LuaFunction m_GetUserId_hotfix;

		// Token: 0x04005D5F RID: 23903
		private LuaFunction m_IsMeString_hotfix;

		// Token: 0x04005D60 RID: 23904
		private LuaFunction m_SetNeedBattleReportLogBoolean_hotfix;

		// Token: 0x04005D61 RID: 23905
		private LuaFunction m_HasHeadFrameIdInt32_hotfix;

		// Token: 0x04005D62 RID: 23906
		private LuaFunction m_GetHeadFrameSourceInt32_hotfix;

		// Token: 0x04005D63 RID: 23907
		private LuaFunction m_GetAllValidMonthCards_hotfix;

		// Token: 0x04005D64 RID: 23908
		private LuaFunction m_HasValidMonthCards_hotfix;

		// Token: 0x04005D65 RID: 23909
		private LuaFunction m_get_IsNeedBattleReportLog_hotfix;

		// Token: 0x04005D66 RID: 23910
		private LuaFunction m_set_IsNeedBattleReportLogBoolean_hotfix;

		// Token: 0x04005D67 RID: 23911
		private LuaFunction m_ResetPushNotification_hotfix;

		// Token: 0x04005D68 RID: 23912
		private LuaFunction m_add_EventOnExchangeGiftCDKeyAckAction;

		// Token: 0x04005D69 RID: 23913
		private LuaFunction m_remove_EventOnExchangeGiftCDKeyAckAction;

		// Token: 0x04005D6A RID: 23914
		private LuaFunction m_add_EventOnPlayerInfoInitAckAction;

		// Token: 0x04005D6B RID: 23915
		private LuaFunction m_remove_EventOnPlayerInfoInitAckAction;

		// Token: 0x04005D6C RID: 23916
		private LuaFunction m_add_EventOnPlayerInfoInitEndAction_hotfix;

		// Token: 0x04005D6D RID: 23917
		private LuaFunction m_remove_EventOnPlayerInfoInitEndAction_hotfix;

		// Token: 0x04005D6E RID: 23918
		private LuaFunction m_add_EventOnCreateCharactorAckAction;

		// Token: 0x04005D6F RID: 23919
		private LuaFunction m_remove_EventOnCreateCharactorAckAction;

		// Token: 0x04005D70 RID: 23920
		private LuaFunction m_add_EventOnBuyEnergyAckAction;

		// Token: 0x04005D71 RID: 23921
		private LuaFunction m_remove_EventOnBuyEnergyAckAction;

		// Token: 0x04005D72 RID: 23922
		private LuaFunction m_add_EventOnHeadPortraitAndHeadFrameSetAckAction;

		// Token: 0x04005D73 RID: 23923
		private LuaFunction m_remove_EventOnHeadPortraitAndHeadFrameSetAckAction;

		// Token: 0x04005D74 RID: 23924
		private LuaFunction m_add_EventOnPlayerNameChangeAckAction;

		// Token: 0x04005D75 RID: 23925
		private LuaFunction m_remove_EventOnPlayerNameChangeAckAction;

		// Token: 0x04005D76 RID: 23926
		private LuaFunction m_add_EventOnPlayerInfoChangeNtfAction_hotfix;

		// Token: 0x04005D77 RID: 23927
		private LuaFunction m_remove_EventOnPlayerInfoChangeNtfAction_hotfix;

		// Token: 0x04005D78 RID: 23928
		private LuaFunction m_add_EventOnArenaTicketsBuyAckAction;

		// Token: 0x04005D79 RID: 23929
		private LuaFunction m_remove_EventOnArenaTicketsBuyAckAction;

		// Token: 0x04005D7A RID: 23930
		private LuaFunction m_add_EventOnOpenGameRatingAckAction_hotfix;

		// Token: 0x04005D7B RID: 23931
		private LuaFunction m_remove_EventOnOpenGameRatingAckAction_hotfix;

		// Token: 0x04005D7C RID: 23932
		private LuaFunction m_add_EventOnShareAckAction_hotfix;

		// Token: 0x04005D7D RID: 23933
		private LuaFunction m_remove_EventOnShareAckAction_hotfix;

		// Token: 0x04005D7E RID: 23934
		private LuaFunction m_add_EventOnCheckOnlineAckAction_hotfix;

		// Token: 0x04005D7F RID: 23935
		private LuaFunction m_remove_EventOnCheckOnlineAckAction_hotfix;

		// Token: 0x04005D80 RID: 23936
		private LuaFunction m_add_EventOnSendClientHeartBeatNtfFailAction_hotfix;

		// Token: 0x04005D81 RID: 23937
		private LuaFunction m_remove_EventOnSendClientHeartBeatNtfFailAction_hotfix;

		// Token: 0x04005D82 RID: 23938
		private LuaFunction m_add_EventOnSendClientAppResumeNtfFailAction_hotfix;

		// Token: 0x04005D83 RID: 23939
		private LuaFunction m_remove_EventOnSendClientAppResumeNtfFailAction_hotfix;

		// Token: 0x04005D84 RID: 23940
		private LuaFunction m_add_EventOpenMemoryStoreAckAction_hotfix;

		// Token: 0x04005D85 RID: 23941
		private LuaFunction m_remove_EventOpenMemoryStoreAckAction_hotfix;

		// Token: 0x04005D86 RID: 23942
		private LuaFunction m_add_EventOnResetPushNotificationAction_hotfix;

		// Token: 0x04005D87 RID: 23943
		private LuaFunction m_remove_EventOnResetPushNotificationAction_hotfix;

		// Token: 0x04005D88 RID: 23944
		private LuaFunction m_SendRaffleDrawReqInt32_hotfix;

		// Token: 0x04005D89 RID: 23945
		private LuaFunction m_OnMessageDSRaffleNtf_hotfix;

		// Token: 0x04005D8A RID: 23946
		private LuaFunction m_OnMessageRaffleDrawAck_hotfix;

		// Token: 0x04005D8B RID: 23947
		private LuaFunction m_GetRafflePoolInt32_hotfix;

		// Token: 0x04005D8C RID: 23948
		private LuaFunction m_GetRaffleItemRafflePoolInt32_hotfix;

		// Token: 0x04005D8D RID: 23949
		private LuaFunction m_GetDrawItemCostRafflePool_hotfix;

		// Token: 0x04005D8E RID: 23950
		private LuaFunction m_CanDrawInt32_hotfix;

		// Token: 0x04005D8F RID: 23951
		private LuaFunction m_IsRafflePoolOnActivityTimeInt32_hotfix;

		// Token: 0x04005D90 RID: 23952
		private LuaFunction m_add_EventOnRaffleDrawAckAction;

		// Token: 0x04005D91 RID: 23953
		private LuaFunction m_remove_EventOnRaffleDrawAckAction;

		// Token: 0x04005D92 RID: 23954
		private LuaFunction m_SendGetRandomStoreReqInt32_hotfix;

		// Token: 0x04005D93 RID: 23955
		private LuaFunction m_SendFlushRandomStoreReqInt32_hotfix;

		// Token: 0x04005D94 RID: 23956
		private LuaFunction m_SendBuyRandomStoreItemReqInt32Int32Int32_hotfix;

		// Token: 0x04005D95 RID: 23957
		private LuaFunction m_OnMessageDSRandomStoreNtf_hotfix;

		// Token: 0x04005D96 RID: 23958
		private LuaFunction m_OnMessageRandomStoreGetAck_hotfix;

		// Token: 0x04005D97 RID: 23959
		private LuaFunction m_OnMessageRandomStoreFlushAck_hotfix;

		// Token: 0x04005D98 RID: 23960
		private LuaFunction m_OnMessageRandomStoreBuyStoreItemAck_hotfix;

		// Token: 0x04005D99 RID: 23961
		private LuaFunction m_GetRandomStoreListInt32_hotfix;

		// Token: 0x04005D9A RID: 23962
		private LuaFunction m_GetNextFlushTimeInt32_hotfix;

		// Token: 0x04005D9B RID: 23963
		private LuaFunction m_CanManualRefreshRandomStoreInt32_hotfix;

		// Token: 0x04005D9C RID: 23964
		private LuaFunction m_FindRandomStoreByIDInt32_hotfix;

		// Token: 0x04005D9D RID: 23965
		private LuaFunction m_CanBuyRandomStoreGoodsInt32Int32Int32_hotfix;

		// Token: 0x04005D9E RID: 23966
		private LuaFunction m_GetManualFlushNumsInt32_hotfix;

		// Token: 0x04005D9F RID: 23967
		private LuaFunction m_add_EventOnGetRandomStoreListAckAction;

		// Token: 0x04005DA0 RID: 23968
		private LuaFunction m_remove_EventOnGetRandomStoreListAckAction;

		// Token: 0x04005DA1 RID: 23969
		private LuaFunction m_add_EventOnFlushRandomStoreAckAction;

		// Token: 0x04005DA2 RID: 23970
		private LuaFunction m_remove_EventOnFlushRandomStoreAckAction;

		// Token: 0x04005DA3 RID: 23971
		private LuaFunction m_add_EventOnRandomStoreBuyStoreItemAckAction;

		// Token: 0x04005DA4 RID: 23972
		private LuaFunction m_remove_EventOnRandomStoreBuyStoreItemAckAction;

		// Token: 0x04005DA5 RID: 23973
		private LuaFunction m_SendRankingListInfoQueryReqRankingListTypeInt32_hotfix;

		// Token: 0x04005DA6 RID: 23974
		private LuaFunction m_OnMessageRankingListInfoQueryAck_hotfix;

		// Token: 0x04005DA7 RID: 23975
		private LuaFunction m_IsAbleQueryRankingListInfoRankingListTypeInt32__hotfix;

		// Token: 0x04005DA8 RID: 23976
		private LuaFunction m_GetRankingListInfoByTypeRankingListType_hotfix;

		// Token: 0x04005DA9 RID: 23977
		private LuaFunction m_IsRankingListInfoValidRankingListType_hotfix;

		// Token: 0x04005DAA RID: 23978
		private LuaFunction m_IsSingleHeroRankingListInfoValidInt32_hotfix;

		// Token: 0x04005DAB RID: 23979
		private LuaFunction m_GetSingleHeroRankingListInfoByHeroIdInt32_hotfix;

		// Token: 0x04005DAC RID: 23980
		private LuaFunction m_add_EventOnRankingListInfoQueryAckAction;

		// Token: 0x04005DAD RID: 23981
		private LuaFunction m_remove_EventOnRankingListInfoQueryAckAction;

		// Token: 0x04005DAE RID: 23982
		private LuaFunction m_SendRealTimePVPWaitingForOpponentReqBattleMode_hotfix;

		// Token: 0x04005DAF RID: 23983
		private LuaFunction m_SendRealTimePVPCancelWaitingForOpponentReq_hotfix;

		// Token: 0x04005DB0 RID: 23984
		private LuaFunction m_SendRealTimePVPGetInfoReq_hotfix;

		// Token: 0x04005DB1 RID: 23985
		private LuaFunction m_SendRealTimePVPGetTopPlayersReqInt32Boolean_hotfix;

		// Token: 0x04005DB2 RID: 23986
		private LuaFunction m_SendRealTimePVPAcquireWinsBonusReqInt32_hotfix;

		// Token: 0x04005DB3 RID: 23987
		private LuaFunction m_OnMessageDSRealTimePVPNtf_hotfix;

		// Token: 0x04005DB4 RID: 23988
		private LuaFunction m_OnMessageDSRealTimePVPPromotionBattleReportNtf_hotfix;

		// Token: 0x04005DB5 RID: 23989
		private LuaFunction m_OnMessageDSRealTimePVPBattleReportNtf_hotfix;

		// Token: 0x04005DB6 RID: 23990
		private LuaFunction m_OnMessageRealTimePVPWaitingForOpponentAck_hotfix;

		// Token: 0x04005DB7 RID: 23991
		private LuaFunction m_OnMessageRealTimePVPMatchupNtf_hotfix;

		// Token: 0x04005DB8 RID: 23992
		private LuaFunction m_OnMessageRealTimePVPCancelWaitingForOpponentAck_hotfix;

		// Token: 0x04005DB9 RID: 23993
		private LuaFunction m_OnMessageRealTimePVPGetInfoAck_hotfix;

		// Token: 0x04005DBA RID: 23994
		private LuaFunction m_OnMessageRealTimePVPGetTopPlayersAck_hotfix;

		// Token: 0x04005DBB RID: 23995
		private LuaFunction m_OnMessageRealTimePVPAcquireWinsBonusAck_hotfix;

		// Token: 0x04005DBC RID: 23996
		private LuaFunction m_OnMessageRealTimePVPLeaderboardInfoNtf_hotfix;

		// Token: 0x04005DBD RID: 23997
		private LuaFunction m_IsEmptyRealTimePVPPlayerInfo_hotfix;

		// Token: 0x04005DBE RID: 23998
		private LuaFunction m_IsNeedGetRealTimePVPPlayerInfo_hotfix;

		// Token: 0x04005DBF RID: 23999
		private LuaFunction m_GetPlayerRealTimePVPScore_hotfix;

		// Token: 0x04005DC0 RID: 24000
		private LuaFunction m_GetPlayerRealTimePVPDan_hotfix;

		// Token: 0x04005DC1 RID: 24001
		private LuaFunction m_GetPlayerRealTimePVPRankBoolean_hotfix;

		// Token: 0x04005DC2 RID: 24002
		private LuaFunction m_GetRealTimePVPLeaderboardPlayerInfosBoolean_hotfix;

		// Token: 0x04005DC3 RID: 24003
		private LuaFunction m_GetRealTimePVPLeaderboardUserSummarysBoolean_hotfix;

		// Token: 0x04005DC4 RID: 24004
		private LuaFunction m_GetRealTimePVPBattleReports_hotfix;

		// Token: 0x04005DC5 RID: 24005
		private LuaFunction m_GetRealTimePVPPromotionBattleReports_hotfix;

		// Token: 0x04005DC6 RID: 24006
		private LuaFunction m_IsRealTimePVPPromotion_hotfix;

		// Token: 0x04005DC7 RID: 24007
		private LuaFunction m_GetRealTimePVPConsecutiveWinsBattleMode_hotfix;

		// Token: 0x04005DC8 RID: 24008
		private LuaFunction m_CheckRealTimePVPAcquireWinsBonusInt32_hotfix;

		// Token: 0x04005DC9 RID: 24009
		private LuaFunction m_GetRealTimePVPWinsBonusStatusInt32_hotfix;

		// Token: 0x04005DCA RID: 24010
		private LuaFunction m_GetRealTimePVPLadderMatchStats_hotfix;

		// Token: 0x04005DCB RID: 24011
		private LuaFunction m_GetRealTimePVPFriendlyMatchStats_hotfix;

		// Token: 0x04005DCC RID: 24012
		private LuaFunction m_GetRealTimePVPHonour_hotfix;

		// Token: 0x04005DCD RID: 24013
		private LuaFunction m_IsRealTimePVPArenaAvailableBattleMode_hotfix;

		// Token: 0x04005DCE RID: 24014
		private LuaFunction m_IsRealTimePVPWillMatchBotBattleMode_hotfix;

		// Token: 0x04005DCF RID: 24015
		private LuaFunction m_add_EventOnRealTimePVPWaitingForOpponentAckAction;

		// Token: 0x04005DD0 RID: 24016
		private LuaFunction m_remove_EventOnRealTimePVPWaitingForOpponentAckAction;

		// Token: 0x04005DD1 RID: 24017
		private LuaFunction m_add_EventOnRealTimePVPMatchupNtfAction;

		// Token: 0x04005DD2 RID: 24018
		private LuaFunction m_remove_EventOnRealTimePVPMatchupNtfAction;

		// Token: 0x04005DD3 RID: 24019
		private LuaFunction m_add_EventOnRealTimePVPCancelWaitingForOpponentAckAction;

		// Token: 0x04005DD4 RID: 24020
		private LuaFunction m_remove_EventOnRealTimePVPCancelWaitingForOpponentAckAction;

		// Token: 0x04005DD5 RID: 24021
		private LuaFunction m_add_EventOnRealTimePVPGetInfoAckAction;

		// Token: 0x04005DD6 RID: 24022
		private LuaFunction m_remove_EventOnRealTimePVPGetInfoAckAction;

		// Token: 0x04005DD7 RID: 24023
		private LuaFunction m_add_EventOnRealTimePVPGetTopPlayersAckAction;

		// Token: 0x04005DD8 RID: 24024
		private LuaFunction m_remove_EventOnRealTimePVPGetTopPlayersAckAction;

		// Token: 0x04005DD9 RID: 24025
		private LuaFunction m_add_EventOnRealTimePVPAcquireWinsBonusAckAction;

		// Token: 0x04005DDA RID: 24026
		private LuaFunction m_remove_EventOnRealTimePVPAcquireWinsBonusAckAction;

		// Token: 0x04005DDB RID: 24027
		private LuaFunction m_add_EventOnRealTimePVPLeaderboardInfoNtfAction;

		// Token: 0x04005DDC RID: 24028
		private LuaFunction m_remove_EventOnRealTimePVPLeaderboardInfoNtfAction;

		// Token: 0x04005DDD RID: 24029
		private LuaFunction m_SendRechargeStoreCancelBuyReqInt32_hotfix;

		// Token: 0x04005DDE RID: 24030
		private LuaFunction m_SendRechargeStoreBuyGoodsReqInt32_hotfix;

		// Token: 0x04005DDF RID: 24031
		private LuaFunction m_OnMessageRechargeStoreCancelBuyAck_hotfix;

		// Token: 0x04005DE0 RID: 24032
		private LuaFunction m_OnMessageBoughtRechargeStoreItemNtf_hotfix;

		// Token: 0x04005DE1 RID: 24033
		private LuaFunction m_OnMessageRechargeStoreBuyGoodsAck_hotfix;

		// Token: 0x04005DE2 RID: 24034
		private LuaFunction m_OnMessageDSRechargeStoreNtf_hotfix;

		// Token: 0x04005DE3 RID: 24035
		private LuaFunction m_IsRechargeGoodsBoughtInt32_hotfix;

		// Token: 0x04005DE4 RID: 24036
		private LuaFunction m_CaculateGotCrystalNumsInt32_hotfix;

		// Token: 0x04005DE5 RID: 24037
		private LuaFunction m_GetRechargeCrystalOriginalNumsInt32_hotfix;

		// Token: 0x04005DE6 RID: 24038
		private LuaFunction m_GetRechargeCrystalFirstBoughtRewardNumsInt32_hotfix;

		// Token: 0x04005DE7 RID: 24039
		private LuaFunction m_GetRechargeCrystalRepeatlyBoughtRewardNumsInt32_hotfix;

		// Token: 0x04005DE8 RID: 24040
		private LuaFunction m_GetRechargeGoodsIconInt32_hotfix;

		// Token: 0x04005DE9 RID: 24041
		private LuaFunction m_add_EventOnRechargeBoughtSuccessNtfAction;

		// Token: 0x04005DEA RID: 24042
		private LuaFunction m_remove_EventOnRechargeBoughtSuccessNtfAction;

		// Token: 0x04005DEB RID: 24043
		private LuaFunction m_add_EventOnRechargeStoreItemBuyAckAction;

		// Token: 0x04005DEC RID: 24044
		private LuaFunction m_remove_EventOnRechargeStoreItemBuyAckAction;

		// Token: 0x04005DED RID: 24045
		private LuaFunction m_add_EventOnRechargeStoreCancelBuyAckAction;

		// Token: 0x04005DEE RID: 24046
		private LuaFunction m_remove_EventOnRechargeStoreCancelBuyAckAction;

		// Token: 0x04005DEF RID: 24047
		private LuaFunction m_OnMessageDSResourceNtf_hotfix;

		// Token: 0x04005DF0 RID: 24048
		private LuaFunction m_OnMessageMonthCardUpdateNtf_hotfix;

		// Token: 0x04005DF1 RID: 24049
		private LuaFunction m_SendRiftLevelAttackReqInt32_hotfix;

		// Token: 0x04005DF2 RID: 24050
		private LuaFunction m_SendRiftLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005DF3 RID: 24051
		private LuaFunction m_SendRiftLevelRaidReqInt32Int32_hotfix;

		// Token: 0x04005DF4 RID: 24052
		private LuaFunction m_SendRiftChapterRewardGainReqInt32Int32_hotfix;

		// Token: 0x04005DF5 RID: 24053
		private LuaFunction m_OnMessageDSRiftNtf_hotfix;

		// Token: 0x04005DF6 RID: 24054
		private LuaFunction m_OnMessageRiftLevelAttackAck_hotfix;

		// Token: 0x04005DF7 RID: 24055
		private LuaFunction m_OnMessageRiftLevelBattleFinishedAck_hotfix;

		// Token: 0x04005DF8 RID: 24056
		private LuaFunction m_OnMessageRiftLevelRaidAck_hotfix;

		// Token: 0x04005DF9 RID: 24057
		private LuaFunction m_OnMessageRiftChapterRewardGainAck_hotfix;

		// Token: 0x04005DFA RID: 24058
		private LuaFunction m_CanUnlockRiftChapterInt32_hotfix;

		// Token: 0x04005DFB RID: 24059
		private LuaFunction m_GetRiftChapterTotalStarsInt32_hotfix;

		// Token: 0x04005DFC RID: 24060
		private LuaFunction m_GetRiftChapterTotalStarsMaxInt32_hotfix;

		// Token: 0x04005DFD RID: 24061
		private LuaFunction m_GetRiftChapterTotalAchievementCountInt32_hotfix;

		// Token: 0x04005DFE RID: 24062
		private LuaFunction m_GetRiftChapterTotalAchievementCountMaxInt32_hotfix;

		// Token: 0x04005DFF RID: 24063
		private LuaFunction m_GetRiftChapterTotalBattleTreasureCountInt32_hotfix;

		// Token: 0x04005E00 RID: 24064
		private LuaFunction m_GetRiftChapterTotalBattleTreasureCountMaxInt32_hotfix;

		// Token: 0x04005E01 RID: 24065
		private LuaFunction m_IsRiftChapterUnlockConditionCompletedInt32RiftChapterUnlockConditionTypeInt32_hotfix;

		// Token: 0x04005E02 RID: 24066
		private LuaFunction m_CanUnlockRiftLevelInt32_hotfix;

		// Token: 0x04005E03 RID: 24067
		private LuaFunction m_CanAttackRiftLevelInt32_hotfix;

		// Token: 0x04005E04 RID: 24068
		private LuaFunction m_CanRaidRiftLevelInt32_hotfix;

		// Token: 0x04005E05 RID: 24069
		private LuaFunction m_GetRiftLevelStatusInt32_hotfix;

		// Token: 0x04005E06 RID: 24070
		private LuaFunction m_GetEventRiftLevelStatusInt32_hotfix;

		// Token: 0x04005E07 RID: 24071
		private LuaFunction m_IsRiftLevelUnlockConditionCompletedInt32RiftLevelUnlockConditionTypeInt32_hotfix;

		// Token: 0x04005E08 RID: 24072
		private LuaFunction m_GetRiftLevelChallengeNumInt32_hotfix;

		// Token: 0x04005E09 RID: 24073
		private LuaFunction m_GetRiftLevelCanChallengeNumsConfigDataRiftLevelInfo_hotfix;

		// Token: 0x04005E0A RID: 24074
		private LuaFunction m_GetRiftLevelCanChallengeMaxNumsConfigDataRiftLevelInfo_hotfix;

		// Token: 0x04005E0B RID: 24075
		private LuaFunction m_IsRiftLevelChallengedInt32_hotfix;

		// Token: 0x04005E0C RID: 24076
		private LuaFunction m_GetRiftLevelStarsInt32_hotfix;

		// Token: 0x04005E0D RID: 24077
		private LuaFunction m_GetRiftLevelAchievementCountInt32_hotfix;

		// Token: 0x04005E0E RID: 24078
		private LuaFunction m_HasRiftLevelAchievementInt32_hotfix;

		// Token: 0x04005E0F RID: 24079
		private LuaFunction m_CanGainRiftChapterStarRewardInt32Int32_hotfix;

		// Token: 0x04005E10 RID: 24080
		private LuaFunction m_GetRiftChapterStarRewardStatusInt32Int32_hotfix;

		// Token: 0x04005E11 RID: 24081
		private LuaFunction m_GetRiftLevelFinishedInt32_hotfix;

		// Token: 0x04005E12 RID: 24082
		private LuaFunction m_InitOpenedRiftChapters_hotfix;

		// Token: 0x04005E13 RID: 24083
		private LuaFunction m_CheckChangeOpenedRiftChapterInt32_hotfix;

		// Token: 0x04005E14 RID: 24084
		private LuaFunction m_CheckChangeLastOpenedRiftChapter_hotfix;

		// Token: 0x04005E15 RID: 24085
		private LuaFunction m_GetLastOpenedRiftChapterInfo_hotfix;

		// Token: 0x04005E16 RID: 24086
		private LuaFunction m_add_EventOnRiftLevelAttackAckAction;

		// Token: 0x04005E17 RID: 24087
		private LuaFunction m_remove_EventOnRiftLevelAttackAckAction;

		// Token: 0x04005E18 RID: 24088
		private LuaFunction m_add_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix;

		// Token: 0x04005E19 RID: 24089
		private LuaFunction m_remove_EventOnRiftLevelBattleFinishedAckRiftLevelBattleFinishedAckCallback_hotfix;

		// Token: 0x04005E1A RID: 24090
		private LuaFunction m_add_EventOnRiftLevelRaidAckAction;

		// Token: 0x04005E1B RID: 24091
		private LuaFunction m_remove_EventOnRiftLevelRaidAckAction;

		// Token: 0x04005E1C RID: 24092
		private LuaFunction m_add_EventOnRiftChapterRewardGainAckAction;

		// Token: 0x04005E1D RID: 24093
		private LuaFunction m_remove_EventOnRiftChapterRewardGainAckAction;

		// Token: 0x04005E1E RID: 24094
		private LuaFunction m_SendSelectCardReqInt32BooleanBoolean_hotfix;

		// Token: 0x04005E1F RID: 24095
		private LuaFunction m_OnMessageDSSelectCardNtf_hotfix;

		// Token: 0x04005E20 RID: 24096
		private LuaFunction m_OnMessageSelectCardAck_hotfix;

		// Token: 0x04005E21 RID: 24097
		private LuaFunction m_add_EventOnCardSelectAckAction;

		// Token: 0x04005E22 RID: 24098
		private LuaFunction m_remove_EventOnCardSelectAckAction;

		// Token: 0x04005E23 RID: 24099
		private LuaFunction m_GetSelectRewardsIsFirstGetArray_hotfix;

		// Token: 0x04005E24 RID: 24100
		private LuaFunction m_SetRewardFlagsList;

		// Token: 0x04005E25 RID: 24101
		private LuaFunction m_GetIsSelectHeroRewardTransferToFragmentDict_hotfix;

		// Token: 0x04005E26 RID: 24102
		private LuaFunction m_SetHeroRewardToFragmentDictList;

		// Token: 0x04005E27 RID: 24103
		private LuaFunction m_GetCardPoolByIdInt32_hotfix;

		// Token: 0x04005E28 RID: 24104
		private LuaFunction m_GetActivityCardPoolList_hotfix;

		// Token: 0x04005E29 RID: 24105
		private LuaFunction m_GetActivityTimeByPoolIdInt32_hotfix;

		// Token: 0x04005E2A RID: 24106
		private LuaFunction m_FindOperationalActivityByActivityCardPoolIdInt32_hotfix;

		// Token: 0x04005E2B RID: 24107
		private LuaFunction m_IsActivityCardPoolOnActivityTimeInt32_hotfix;

		// Token: 0x04005E2C RID: 24108
		private LuaFunction m_GetActivityCardPoolLastDaysCardPool_hotfix;

		// Token: 0x04005E2D RID: 24109
		private LuaFunction m_CanSelectCardInt32BooleanBoolean_hotfix;

		// Token: 0x04005E2E RID: 24110
		private LuaFunction m_SendEverydaySignReq_hotfix;

		// Token: 0x04005E2F RID: 24111
		private LuaFunction m_OnMessageEverydaySignAck_hotfix;

		// Token: 0x04005E30 RID: 24112
		private LuaFunction m_CanSignToday_hotfix;

		// Token: 0x04005E31 RID: 24113
		private LuaFunction m_GetSignDaysMonth_hotfix;

		// Token: 0x04005E32 RID: 24114
		private LuaFunction m_GetMonthRewardListInt32_hotfix;

		// Token: 0x04005E33 RID: 24115
		private LuaFunction m_GetSignRewardMonthListInt32_hotfix;

		// Token: 0x04005E34 RID: 24116
		private LuaFunction m_TodayIsSigned_hotfix;

		// Token: 0x04005E35 RID: 24117
		private LuaFunction m_GetTodaySignReward_hotfix;

		// Token: 0x04005E36 RID: 24118
		private LuaFunction m_GetOneDaySignRewardInt32Int32_hotfix;

		// Token: 0x04005E37 RID: 24119
		private LuaFunction m_add_EventOnEverydaySignAckAction;

		// Token: 0x04005E38 RID: 24120
		private LuaFunction m_remove_EventOnEverydaySignAckAction;

		// Token: 0x04005E39 RID: 24121
		private LuaFunction m_SendOpenSurveyReq_hotfix;

		// Token: 0x04005E3A RID: 24122
		private LuaFunction m_SendGetSurveyRewardReq_hotfix;

		// Token: 0x04005E3B RID: 24123
		private LuaFunction m_OnMessageDSSurveyNtf_hotfix;

		// Token: 0x04005E3C RID: 24124
		private LuaFunction m_OnMessageNewSurveyNtf_hotfix;

		// Token: 0x04005E3D RID: 24125
		private LuaFunction m_OnMessageUpdateSurveyNtf_hotfix;

		// Token: 0x04005E3E RID: 24126
		private LuaFunction m_OnMessageGetSurveyRewardAck_hotfix;

		// Token: 0x04005E3F RID: 24127
		private LuaFunction m_OnMessageOpenSurveyAck_hotfix;

		// Token: 0x04005E40 RID: 24128
		private LuaFunction m_GetCurrentSurveyStatus_hotfix;

		// Token: 0x04005E41 RID: 24129
		private LuaFunction m_add_EventOnOpenSurveyAckAction;

		// Token: 0x04005E42 RID: 24130
		private LuaFunction m_remove_EventOnOpenSurveyAckAction;

		// Token: 0x04005E43 RID: 24131
		private LuaFunction m_add_EventOnGetSurveyRewardAckAction;

		// Token: 0x04005E44 RID: 24132
		private LuaFunction m_remove_EventOnGetSurveyRewardAckAction;

		// Token: 0x04005E45 RID: 24133
		private LuaFunction m_CanGainSurveyReward_hotfix;

		// Token: 0x04005E46 RID: 24134
		private LuaFunction m_SendTeamRoomCreateReqTeamRoomSetting_hotfix;

		// Token: 0x04005E47 RID: 24135
		private LuaFunction m_SendTeamRoomViewReqGameFunctionTypeInt32Int32_hotfix;

		// Token: 0x04005E48 RID: 24136
		private LuaFunction m_SendTeamRoomAutoMatchReqGameFunctionTypeInt32_hotfix;

		// Token: 0x04005E49 RID: 24137
		private LuaFunction m_SendTeamRoomAutoMatchCancelReq_hotfix;

		// Token: 0x04005E4A RID: 24138
		private LuaFunction m_SendTeamRoomAuthorityChangeReqTeamRoomAuthority_hotfix;

		// Token: 0x04005E4B RID: 24139
		private LuaFunction m_SendTeamRoomJoinReqInt32GameFunctionTypeInt32UInt64_hotfix;

		// Token: 0x04005E4C RID: 24140
		private LuaFunction m_SendTeamRoomQuitReq_hotfix;

		// Token: 0x04005E4D RID: 24141
		private LuaFunction m_SendTeamRoomGetReq_hotfix;

		// Token: 0x04005E4E RID: 24142
		private LuaFunction m_SendTeamRoomInviteReqList;

		// Token: 0x04005E4F RID: 24143
		private LuaFunction m_SendTeamRoomInvitationRefusedReqUInt64Int32Int32_hotfix;

		// Token: 0x04005E50 RID: 24144
		private LuaFunction m_SendTeamRoomInviteeInfoGetReqList;

		// Token: 0x04005E51 RID: 24145
		private LuaFunction m_SendTeamRoomPlayerPositionChangeReqList;

		// Token: 0x04005E52 RID: 24146
		private LuaFunction m_OnMessageDSTeamNtf_hotfix;

		// Token: 0x04005E53 RID: 24147
		private LuaFunction m_OnMessageTeamRoomCreateAck_hotfix;

		// Token: 0x04005E54 RID: 24148
		private LuaFunction m_OnMessageTeamRoomViewAck_hotfix;

		// Token: 0x04005E55 RID: 24149
		private LuaFunction m_OnMessageTeamRoomAutoMatchAck_hotfix;

		// Token: 0x04005E56 RID: 24150
		private LuaFunction m_OnMessageTeamRoomAutoMatchCancelAck_hotfix;

		// Token: 0x04005E57 RID: 24151
		private LuaFunction m_OnMessageTeamRoomAuthorityChangeAck_hotfix;

		// Token: 0x04005E58 RID: 24152
		private LuaFunction m_OnMessageTeamRoomJoinAck_hotfix;

		// Token: 0x04005E59 RID: 24153
		private LuaFunction m_OnMessageTeamRoomQuitAck_hotfix;

		// Token: 0x04005E5A RID: 24154
		private LuaFunction m_OnMessageTeamRoomGetAck_hotfix;

		// Token: 0x04005E5B RID: 24155
		private LuaFunction m_OnMessageTeamRoomInviteAck_hotfix;

		// Token: 0x04005E5C RID: 24156
		private LuaFunction m_OnMessageTeamRoomInvitationRefusedAck_hotfix;

		// Token: 0x04005E5D RID: 24157
		private LuaFunction m_OnMessageTeamRoomInviteeInfoGetAck_hotfix;

		// Token: 0x04005E5E RID: 24158
		private LuaFunction m_OnMessageTeamRoomPlayerPositionChangeAck_hotfix;

		// Token: 0x04005E5F RID: 24159
		private LuaFunction m_OnMessageTeamRoomPlayerJoinNtf_hotfix;

		// Token: 0x04005E60 RID: 24160
		private LuaFunction m_OnMessageTeamRoomPlayerQuitNtf_hotfix;

		// Token: 0x04005E61 RID: 24161
		private LuaFunction m_OnMessageTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf_hotfix;

		// Token: 0x04005E62 RID: 24162
		private LuaFunction m_OnMessageTeamRoomAuthorityChangeNtf_hotfix;

		// Token: 0x04005E63 RID: 24163
		private LuaFunction m_OnMessageTeamRoomAutoMatchInfoNtf_hotfix;

		// Token: 0x04005E64 RID: 24164
		private LuaFunction m_OnMessageTeamRoomInviteNtf_hotfix;

		// Token: 0x04005E65 RID: 24165
		private LuaFunction m_OnMessageTeamRoomInvitationRefusedNtf_hotfix;

		// Token: 0x04005E66 RID: 24166
		private LuaFunction m_OnMessageTeamRoomSelfKickOutNtf_hotfix;

		// Token: 0x04005E67 RID: 24167
		private LuaFunction m_OnMessageTeamRoomInviteeLevelInfoNtf_hotfix;

		// Token: 0x04005E68 RID: 24168
		private LuaFunction m_OnMessageTeamRoomPlayerPositionChangeNtf_hotfix;

		// Token: 0x04005E69 RID: 24169
		private LuaFunction m_GetTeamRoom_hotfix;

		// Token: 0x04005E6A RID: 24170
		private LuaFunction m_IsInTeamRoom_hotfix;

		// Token: 0x04005E6B RID: 24171
		private LuaFunction m_IsInTeamRoomAutoMatchWaitingList_hotfix;

		// Token: 0x04005E6C RID: 24172
		private LuaFunction m_GetTeamRoomInviteInfos_hotfix;

		// Token: 0x04005E6D RID: 24173
		private LuaFunction m_RemoveTeamRoomAInviteInfoUInt64Int32_hotfix;

		// Token: 0x04005E6E RID: 24174
		private LuaFunction m_CanUnlockTeamBattleGameFunctionTypeInt32_hotfix;

		// Token: 0x04005E6F RID: 24175
		private LuaFunction m_SetTeamRoomInviteAgainBoolean_hotfix;

		// Token: 0x04005E70 RID: 24176
		private LuaFunction m_IsTeamRoomInviteAgain_hotfix;

		// Token: 0x04005E71 RID: 24177
		private LuaFunction m_CanCreateTeamTeamRoomSetting_hotfix;

		// Token: 0x04005E72 RID: 24178
		private LuaFunction m_CanViewTeamRoomGameFunctionTypeInt32Int32_hotfix;

		// Token: 0x04005E73 RID: 24179
		private LuaFunction m_CanJoinTeamRoomGameFunctionTypeInt32_hotfix;

		// Token: 0x04005E74 RID: 24180
		private LuaFunction m_CanAutoMatchTeamRoomGameFunctionTypeInt32_hotfix;

		// Token: 0x04005E75 RID: 24181
		private LuaFunction m_CanCancelAutoMatchTeamRoom_hotfix;

		// Token: 0x04005E76 RID: 24182
		private LuaFunction m_add_EventOnTeamRoomCreateAckAction;

		// Token: 0x04005E77 RID: 24183
		private LuaFunction m_remove_EventOnTeamRoomCreateAckAction;

		// Token: 0x04005E78 RID: 24184
		private LuaFunction m_add_EventOnTeamRoomViewAckAction;

		// Token: 0x04005E79 RID: 24185
		private LuaFunction m_remove_EventOnTeamRoomViewAckAction;

		// Token: 0x04005E7A RID: 24186
		private LuaFunction m_add_EventOnTeamRoomAutoMatchAckAction;

		// Token: 0x04005E7B RID: 24187
		private LuaFunction m_remove_EventOnTeamRoomAutoMatchAckAction;

		// Token: 0x04005E7C RID: 24188
		private LuaFunction m_add_EventOnTeamRoomAutoMatchCancelAckAction;

		// Token: 0x04005E7D RID: 24189
		private LuaFunction m_remove_EventOnTeamRoomAutoMatchCancelAckAction;

		// Token: 0x04005E7E RID: 24190
		private LuaFunction m_add_EventOnTeamRoomAuthorityChangeAckAction;

		// Token: 0x04005E7F RID: 24191
		private LuaFunction m_remove_EventOnTeamRoomAuthorityChangeAckAction;

		// Token: 0x04005E80 RID: 24192
		private LuaFunction m_add_EventOnTeamRoomJoinAckAction;

		// Token: 0x04005E81 RID: 24193
		private LuaFunction m_remove_EventOnTeamRoomJoinAckAction;

		// Token: 0x04005E82 RID: 24194
		private LuaFunction m_add_EventOnTeamRoomQuitAckAction;

		// Token: 0x04005E83 RID: 24195
		private LuaFunction m_remove_EventOnTeamRoomQuitAckAction;

		// Token: 0x04005E84 RID: 24196
		private LuaFunction m_add_EventOnTeamRoomGetAckAction;

		// Token: 0x04005E85 RID: 24197
		private LuaFunction m_remove_EventOnTeamRoomGetAckAction;

		// Token: 0x04005E86 RID: 24198
		private LuaFunction m_add_EventOnTeamRoomInviteAckAction;

		// Token: 0x04005E87 RID: 24199
		private LuaFunction m_remove_EventOnTeamRoomInviteAckAction;

		// Token: 0x04005E88 RID: 24200
		private LuaFunction m_add_EventOnTeamRoomInvitationRefusedAckAction;

		// Token: 0x04005E89 RID: 24201
		private LuaFunction m_remove_EventOnTeamRoomInvitationRefusedAckAction;

		// Token: 0x04005E8A RID: 24202
		private LuaFunction m_add_EventOnTeamRoomInviteeInfoGetAckAction;

		// Token: 0x04005E8B RID: 24203
		private LuaFunction m_remove_EventOnTeamRoomInviteeInfoGetAckAction;

		// Token: 0x04005E8C RID: 24204
		private LuaFunction m_add_EventOnTeamRoomPlayerJoinNtfAction;

		// Token: 0x04005E8D RID: 24205
		private LuaFunction m_remove_EventOnTeamRoomPlayerJoinNtfAction;

		// Token: 0x04005E8E RID: 24206
		private LuaFunction m_add_EventOnTeamRoomPlayerQuitNtfAction;

		// Token: 0x04005E8F RID: 24207
		private LuaFunction m_remove_EventOnTeamRoomPlayerQuitNtfAction;

		// Token: 0x04005E90 RID: 24208
		private LuaFunction m_add_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix;

		// Token: 0x04005E91 RID: 24209
		private LuaFunction m_remove_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtfAction_hotfix;

		// Token: 0x04005E92 RID: 24210
		private LuaFunction m_add_EventOnTeamRoomAuthorityChangeNtfAction;

		// Token: 0x04005E93 RID: 24211
		private LuaFunction m_remove_EventOnTeamRoomAuthorityChangeNtfAction;

		// Token: 0x04005E94 RID: 24212
		private LuaFunction m_add_EventOnTeamRoomAutoMatchInfoNtfAction;

		// Token: 0x04005E95 RID: 24213
		private LuaFunction m_remove_EventOnTeamRoomAutoMatchInfoNtfAction;

		// Token: 0x04005E96 RID: 24214
		private LuaFunction m_add_EventOnTeamRoomInviteNtfAction;

		// Token: 0x04005E97 RID: 24215
		private LuaFunction m_remove_EventOnTeamRoomInviteNtfAction;

		// Token: 0x04005E98 RID: 24216
		private LuaFunction m_add_EventOnTeamRoomInvitationRefusedNtfAction;

		// Token: 0x04005E99 RID: 24217
		private LuaFunction m_remove_EventOnTeamRoomInvitationRefusedNtfAction;

		// Token: 0x04005E9A RID: 24218
		private LuaFunction m_add_EventOnTeamRoomSelfKickOutNtfAction_hotfix;

		// Token: 0x04005E9B RID: 24219
		private LuaFunction m_remove_EventOnTeamRoomSelfKickOutNtfAction_hotfix;

		// Token: 0x04005E9C RID: 24220
		private LuaFunction m_add_EventOnTeamRoomInviteeInfoNtfAction;

		// Token: 0x04005E9D RID: 24221
		private LuaFunction m_remove_EventOnTeamRoomInviteeInfoNtfAction;

		// Token: 0x04005E9E RID: 24222
		private LuaFunction m_add_EventOnTeamRoomPlayerPositionChangeAckAction;

		// Token: 0x04005E9F RID: 24223
		private LuaFunction m_remove_EventOnTeamRoomPlayerPositionChangeAckAction;

		// Token: 0x04005EA0 RID: 24224
		private LuaFunction m_add_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix;

		// Token: 0x04005EA1 RID: 24225
		private LuaFunction m_remove_EventOnTeamRoomPlayerPositionChangeNtfAction_hotfix;

		// Token: 0x04005EA2 RID: 24226
		private LuaFunction m_SendThearchyTrialLevelAttackReqInt32_hotfix;

		// Token: 0x04005EA3 RID: 24227
		private LuaFunction m_SendThearchyTrialLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005EA4 RID: 24228
		private LuaFunction m_OnMessageDSThearchyTrialNtf_hotfix;

		// Token: 0x04005EA5 RID: 24229
		private LuaFunction m_OnMessageThearchyTrialLevelAttackAck_hotfix;

		// Token: 0x04005EA6 RID: 24230
		private LuaFunction m_OnMessageThearchyTrialLevelBattleFinishedAck_hotfix;

		// Token: 0x04005EA7 RID: 24231
		private LuaFunction m_IsThearchyOpenedInt32_hotfix;

		// Token: 0x04005EA8 RID: 24232
		private LuaFunction m_IsThearchyLevelOpenedInt32_hotfix;

		// Token: 0x04005EA9 RID: 24233
		private LuaFunction m_CanAttackThearchyLevelInt32_hotfix;

		// Token: 0x04005EAA RID: 24234
		private LuaFunction m_GetThearchyTicketCount_hotfix;

		// Token: 0x04005EAB RID: 24235
		private LuaFunction m_IsThearchyTrialLevelFinishedInt32_hotfix;

		// Token: 0x04005EAC RID: 24236
		private LuaFunction m_GetThearchyDailyRewardRestCount_hotfix;

		// Token: 0x04005EAD RID: 24237
		private LuaFunction m_add_EventOnThearchyTrialLevelAttackAckAction;

		// Token: 0x04005EAE RID: 24238
		private LuaFunction m_remove_EventOnThearchyTrialLevelAttackAckAction;

		// Token: 0x04005EAF RID: 24239
		private LuaFunction m_add_EventOnThearchyTrialLevelBattleFinishedAckAction;

		// Token: 0x04005EB0 RID: 24240
		private LuaFunction m_remove_EventOnThearchyTrialLevelBattleFinishedAckAction;

		// Token: 0x04005EB1 RID: 24241
		private LuaFunction m_SendTechLevelupReqInt32Int32_hotfix;

		// Token: 0x04005EB2 RID: 24242
		private LuaFunction m_OnMessageDSTrainingGroundNtf_hotfix;

		// Token: 0x04005EB3 RID: 24243
		private LuaFunction m_OnMessageTrainingGroundTechLevelupAck_hotfix;

		// Token: 0x04005EB4 RID: 24244
		private LuaFunction m_GetTrainingRoomByIdInt32_hotfix;

		// Token: 0x04005EB5 RID: 24245
		private LuaFunction m_CanTechLevelupInt32_hotfix;

		// Token: 0x04005EB6 RID: 24246
		private LuaFunction m_CanTrainingCourseLevelupTrainingCourse_hotfix;

		// Token: 0x04005EB7 RID: 24247
		private LuaFunction m_CanTrainingRoomLevelupTrainingRoom_hotfix;

		// Token: 0x04005EB8 RID: 24248
		private LuaFunction m_GetTrainingGroundAvailableTechs_hotfix;

		// Token: 0x04005EB9 RID: 24249
		private LuaFunction m_GetTrainingTechByIdInt32_hotfix;

		// Token: 0x04005EBA RID: 24250
		private LuaFunction m_GetTechMaxLevelInt32_hotfix;

		// Token: 0x04005EBB RID: 24251
		private LuaFunction m_IsTechLockedInt32_hotfix;

		// Token: 0x04005EBC RID: 24252
		private LuaFunction m_CanLevelupInt32Int32_hotfix;

		// Token: 0x04005EBD RID: 24253
		private LuaFunction m_GetResourceRequirementsByLevelInt32Int32_hotfix;

		// Token: 0x04005EBE RID: 24254
		private LuaFunction m_GetTrainingCourseIdByTechIdInt32_hotfix;

		// Token: 0x04005EBF RID: 24255
		private LuaFunction m_GetTrainingRoomIdByTechIdInt32_hotfix;

		// Token: 0x04005EC0 RID: 24256
		private LuaFunction m_CanGoToGetSoldierTechInt32_hotfix;

		// Token: 0x04005EC1 RID: 24257
		private LuaFunction m_add_EventOnTrainingGroundTechLevelupAckAction;

		// Token: 0x04005EC2 RID: 24258
		private LuaFunction m_remove_EventOnTrainingGroundTechLevelupAckAction;

		// Token: 0x04005EC3 RID: 24259
		private LuaFunction m_SendTreasureLevelAttackReqInt32_hotfix;

		// Token: 0x04005EC4 RID: 24260
		private LuaFunction m_SendTreasureLevelBattleFinishedReqInt32ProBattleReport_hotfix;

		// Token: 0x04005EC5 RID: 24261
		private LuaFunction m_OnMessageDSTreasureMapNtf_hotfix;

		// Token: 0x04005EC6 RID: 24262
		private LuaFunction m_OnMessageTreasureLevelAttackAck_hotfix;

		// Token: 0x04005EC7 RID: 24263
		private LuaFunction m_OnMessageTreasureLevelBattleFinishedAck_hotfix;

		// Token: 0x04005EC8 RID: 24264
		private LuaFunction m_IsTreasureLevelOpenedInt32_hotfix;

		// Token: 0x04005EC9 RID: 24265
		private LuaFunction m_CanAttackTreasureLevelInt32_hotfix;

		// Token: 0x04005ECA RID: 24266
		private LuaFunction m_GetTreasureTicketCount_hotfix;

		// Token: 0x04005ECB RID: 24267
		private LuaFunction m_IsTreasureLevelFinishedInt32_hotfix;

		// Token: 0x04005ECC RID: 24268
		private LuaFunction m_add_EventOnTreasureLevelAttackAckAction;

		// Token: 0x04005ECD RID: 24269
		private LuaFunction m_remove_EventOnTreasureLevelAttackAckAction;

		// Token: 0x04005ECE RID: 24270
		private LuaFunction m_add_EventOnTreasureLevelBattleFinishedAckAction;

		// Token: 0x04005ECF RID: 24271
		private LuaFunction m_remove_EventOnTreasureLevelBattleFinishedAckAction;

		// Token: 0x04005ED0 RID: 24272
		private LuaFunction m_SendUnchartedScoreChallengeLevelAttackReqInt32Int32_hotfix;

		// Token: 0x04005ED1 RID: 24273
		private LuaFunction m_SendUnchartedScoreChallengeLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix;

		// Token: 0x04005ED2 RID: 24274
		private LuaFunction m_SendUnchartedScoreScoreLevelAttackReqInt32Int32_hotfix;

		// Token: 0x04005ED3 RID: 24275
		private LuaFunction m_SendUnchartedScoreScoreLevelBattleFinishedReqInt32Int32ProBattleReport_hotfix;

		// Token: 0x04005ED4 RID: 24276
		private LuaFunction m_OnMessageDSUnchartedScoreNtf_hotfix;

		// Token: 0x04005ED5 RID: 24277
		private LuaFunction m_OnMessageUnchartedScoreChallengeLevelAttackAck_hotfix;

		// Token: 0x04005ED6 RID: 24278
		private LuaFunction m_OnMessageUnchartedScoreChallengeLevelBattleFinishedAck_hotfix;

		// Token: 0x04005ED7 RID: 24279
		private LuaFunction m_OnMessageUnchartedScoreScoreLevelAttackAck_hotfix;

		// Token: 0x04005ED8 RID: 24280
		private LuaFunction m_OnMessageUnchartedScoreScoreLevelBattleFinishedAck_hotfix;

		// Token: 0x04005ED9 RID: 24281
		private LuaFunction m_IsUnchartedScoreOpenedInt32_hotfix;

		// Token: 0x04005EDA RID: 24282
		private LuaFunction m_IsUnchartedScoreDisplayInt32_hotfix;

		// Token: 0x04005EDB RID: 24283
		private LuaFunction m_GetUnchartedScoreOpenTimeInt32DateTime_DateTime__hotfix;

		// Token: 0x04005EDC RID: 24284
		private LuaFunction m_IsUnchartedScoreLevelTimeUnlockInt32Int32_hotfix;

		// Token: 0x04005EDD RID: 24285
		private LuaFunction m_IsUnchartedScoreLevelPlayerLevelVaildInt32_hotfix;

		// Token: 0x04005EDE RID: 24286
		private LuaFunction m_IsUnchartedChallengePrevLevelCompleteInt32Int32_hotfix;

		// Token: 0x04005EDF RID: 24287
		private LuaFunction m_GetUnchartedChallengeLevelTimeUnlockDayInt32Int32_hotfix;

		// Token: 0x04005EE0 RID: 24288
		private LuaFunction m_CanAttackUnchartedScoreLevelInt32Int32_hotfix;

		// Token: 0x04005EE1 RID: 24289
		private LuaFunction m_CanAttackUnchartedChallengeLevelInt32Int32_hotfix;

		// Token: 0x04005EE2 RID: 24290
		private LuaFunction m_IsUnchartedScoreLevelFinishedInt32Int32_hotfix;

		// Token: 0x04005EE3 RID: 24291
		private LuaFunction m_IsUnchartedChallengeLevelFinishedInt32Int32_hotfix;

		// Token: 0x04005EE4 RID: 24292
		private LuaFunction m_IsUnchartedScoreRewardGotInt32Int32_hotfix;

		// Token: 0x04005EE5 RID: 24293
		private LuaFunction m_GetUnchartedScoreScoreInt32_hotfix;

		// Token: 0x04005EE6 RID: 24294
		private LuaFunction m_GetUnchartedScoreDailyRewardRestCountInt32_hotfix;

		// Token: 0x04005EE7 RID: 24295
		private LuaFunction m_add_EventOnUnchartedScoreChallengeLevelAttackAckAction;

		// Token: 0x04005EE8 RID: 24296
		private LuaFunction m_remove_EventOnUnchartedScoreChallengeLevelAttackAckAction;

		// Token: 0x04005EE9 RID: 24297
		private LuaFunction m_add_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction;

		// Token: 0x04005EEA RID: 24298
		private LuaFunction m_remove_EventOnUnchartedScoreChallengeLevelBattleFinishedAckAction;

		// Token: 0x04005EEB RID: 24299
		private LuaFunction m_add_EventOnUnchartedScoreScoreLevelAttackAckAction;

		// Token: 0x04005EEC RID: 24300
		private LuaFunction m_remove_EventOnUnchartedScoreScoreLevelAttackAckAction;

		// Token: 0x04005EED RID: 24301
		private LuaFunction m_add_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction;

		// Token: 0x04005EEE RID: 24302
		private LuaFunction m_remove_EventOnUnchartedScoreScoreLevelBattleFinishedAckAction;

		// Token: 0x04005EEF RID: 24303
		private LuaFunction m_SendUserGuideSetReqInt32_hotfix;

		// Token: 0x04005EF0 RID: 24304
		private LuaFunction m_SendUserGuideSetReqInt32be_hotfix;

		// Token: 0x04005EF1 RID: 24305
		private LuaFunction m_SendUserGuideClearReq_hotfix;

		// Token: 0x04005EF2 RID: 24306
		private LuaFunction m_OnMessageUserGuideSetAck_hotfix;

		// Token: 0x04005EF3 RID: 24307
		private LuaFunction m_IsGameFunctionOpenedGameFunctionType_hotfix;

		// Token: 0x04005EF4 RID: 24308
		private LuaFunction m_IsUserGuideCompleteInt32_hotfix;

		// Token: 0x04005EF5 RID: 24309
		private LuaFunction m_add_EventOnUserGuideSetAckAction;

		// Token: 0x04005EF6 RID: 24310
		private LuaFunction m_remove_EventOnUserGuideSetAckAction;

		// Token: 0x020008F4 RID: 2292
		// (Invoke) Token: 0x060081C1 RID: 33217
		public delegate void HeroDungeonLevelBattleFinishedAckCallback(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements);

		// Token: 0x020008F5 RID: 2293
		// (Invoke) Token: 0x060081C5 RID: 33221
		public delegate void HeroPhantomBattleFinishedAckCallback(int result, bool isWin, BattleReward reward, bool isFirstWin, List<int> achievements);

		// Token: 0x020008F6 RID: 2294
		public class CurrentWaypointEvent
		{
			// Token: 0x04005EF7 RID: 24311
			public int WaypointId;

			// Token: 0x04005EF8 RID: 24312
			public ConfigDataEventInfo EventInfo;

			// Token: 0x04005EF9 RID: 24313
			public RandomEvent RandomEvent;
		}

		// Token: 0x020008F7 RID: 2295
		// (Invoke) Token: 0x060081CA RID: 33226
		public delegate void RiftLevelBattleFinishedAckCallback(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements);

		// Token: 0x020008F8 RID: 2296
		public new class LuaExportHelper
		{
			// Token: 0x060081CD RID: 33229 RVA: 0x00263BDC File Offset: 0x00261DDC
			public LuaExportHelper(ProjectLPlayerContext owner)
			{
				this.m_owner = owner;
			}

			// Token: 0x060081CE RID: 33230 RVA: 0x00263BEC File Offset: 0x00261DEC
			public bool __callBase_IsInited()
			{
				return this.m_owner.__callBase_IsInited();
			}

			// Token: 0x060081CF RID: 33231 RVA: 0x00263BFC File Offset: 0x00261DFC
			public void __callBase_OnPlayerInfoInitEndNtf()
			{
				this.m_owner.__callBase_OnPlayerInfoInitEndNtf();
			}

			// Token: 0x060081D0 RID: 33232 RVA: 0x00263C0C File Offset: 0x00261E0C
			public void __callBase_SyncServerTime(DateTime serverTime)
			{
				this.m_owner.__callBase_SyncServerTime(serverTime);
			}

			// Token: 0x060081D1 RID: 33233 RVA: 0x00263C1C File Offset: 0x00261E1C
			public DateTime __callBase_GetCurrServerTime()
			{
				return this.m_owner.__callBase_GetCurrServerTime();
			}

			// Token: 0x060081D2 RID: 33234 RVA: 0x00263C2C File Offset: 0x00261E2C
			public DateTime __callBase_GetCurrTickServerTime()
			{
				return this.m_owner.__callBase_GetCurrTickServerTime();
			}

			// Token: 0x060081D3 RID: 33235 RVA: 0x00263C3C File Offset: 0x00261E3C
			public bool __callBase_Disconnect()
			{
				return this.m_owner.__callBase_Disconnect();
			}

			// Token: 0x060081D4 RID: 33236 RVA: 0x00263C4C File Offset: 0x00261E4C
			public bool __callBase_StartGameAuthLogin(string serverAddress, int serverPort, string authToken, string localization, int loginChannelId, int bornChannelId)
			{
				return this.m_owner.__callBase_StartGameAuthLogin(serverAddress, serverPort, authToken, localization, loginChannelId, bornChannelId);
			}

			// Token: 0x060081D5 RID: 33237 RVA: 0x00263C64 File Offset: 0x00261E64
			public void __callBase_SetSessionToken(string sessionToken, int channelId, int bornChannelId)
			{
				this.m_owner.__callBase_SetSessionToken(sessionToken, channelId, bornChannelId);
			}

			// Token: 0x060081D6 RID: 33238 RVA: 0x00263C74 File Offset: 0x00261E74
			public bool __callBase_StartGameSessionLogin()
			{
				return this.m_owner.__callBase_StartGameSessionLogin();
			}

			// Token: 0x060081D7 RID: 33239 RVA: 0x00263C84 File Offset: 0x00261E84
			public bool __callBase_SendPlayerInfoInitReq()
			{
				return this.m_owner.__callBase_SendPlayerInfoInitReq();
			}

			// Token: 0x060081D8 RID: 33240 RVA: 0x00263C94 File Offset: 0x00261E94
			public bool __callBase_SendPlayerInfoReqOnReloginBySession(bool checkOnly)
			{
				return this.m_owner.__callBase_SendPlayerInfoReqOnReloginBySession(checkOnly);
			}

			// Token: 0x060081D9 RID: 33241 RVA: 0x00263CA4 File Offset: 0x00261EA4
			public bool __callBase_SendWorldEnterReqOnReloginBySession()
			{
				return this.m_owner.__callBase_SendWorldEnterReqOnReloginBySession();
			}

			// Token: 0x060081DA RID: 33242 RVA: 0x00263CB4 File Offset: 0x00261EB4
			public bool __callBase_CheckForSessionLogin()
			{
				return this.m_owner.__callBase_CheckForSessionLogin();
			}

			// Token: 0x060081DB RID: 33243 RVA: 0x00263CC4 File Offset: 0x00261EC4
			public string __callBase_GetDeviceId()
			{
				return this.m_owner.__callBase_GetDeviceId();
			}

			// Token: 0x060081DC RID: 33244 RVA: 0x00263CD4 File Offset: 0x00261ED4
			public string __callBase_GetClientVersion()
			{
				return this.m_owner.__callBase_GetClientVersion();
			}

			// Token: 0x060081DD RID: 33245 RVA: 0x00263CE4 File Offset: 0x00261EE4
			public void __callBase_OnTimeJumped()
			{
				this.m_owner.__callBase_OnTimeJumped();
			}

			// Token: 0x060081DE RID: 33246 RVA: 0x00263CF4 File Offset: 0x00261EF4
			public void __callDele_EventOnClientCheatNtf()
			{
				this.m_owner.__callDele_EventOnClientCheatNtf();
			}

			// Token: 0x060081DF RID: 33247 RVA: 0x00263D04 File Offset: 0x00261F04
			public void __clearDele_EventOnClientCheatNtf()
			{
				this.m_owner.__clearDele_EventOnClientCheatNtf();
			}

			// Token: 0x060081E0 RID: 33248 RVA: 0x00263D14 File Offset: 0x00261F14
			public void __callDele_EventOnServerDisconnectNtf(int obj)
			{
				this.m_owner.__callDele_EventOnServerDisconnectNtf(obj);
			}

			// Token: 0x060081E1 RID: 33249 RVA: 0x00263D24 File Offset: 0x00261F24
			public void __clearDele_EventOnServerDisconnectNtf(int obj)
			{
				this.m_owner.__clearDele_EventOnServerDisconnectNtf(obj);
			}

			// Token: 0x060081E2 RID: 33250 RVA: 0x00263D34 File Offset: 0x00261F34
			public void __callDele_EventOnAnikiGymLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnAnikiGymLevelAttackAck(obj);
			}

			// Token: 0x060081E3 RID: 33251 RVA: 0x00263D44 File Offset: 0x00261F44
			public void __clearDele_EventOnAnikiGymLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnAnikiGymLevelAttackAck(obj);
			}

			// Token: 0x060081E4 RID: 33252 RVA: 0x00263D54 File Offset: 0x00261F54
			public void __callDele_EventOnAnikiGymLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnAnikiGymLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x060081E5 RID: 33253 RVA: 0x00263D64 File Offset: 0x00261F64
			public void __clearDele_EventOnAnikiGymLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnAnikiGymLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x060081E6 RID: 33254 RVA: 0x00263D74 File Offset: 0x00261F74
			public void __callDele_EventOnArenaPlayerInfoGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaPlayerInfoGetAck(obj);
			}

			// Token: 0x060081E7 RID: 33255 RVA: 0x00263D84 File Offset: 0x00261F84
			public void __clearDele_EventOnArenaPlayerInfoGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaPlayerInfoGetAck(obj);
			}

			// Token: 0x060081E8 RID: 33256 RVA: 0x00263D94 File Offset: 0x00261F94
			public void __callDele_EventOnArenaOpponentViewAck(int arg1, List<ProBattleHero> arg2, int arg3)
			{
				this.m_owner.__callDele_EventOnArenaOpponentViewAck(arg1, arg2, arg3);
			}

			// Token: 0x060081E9 RID: 33257 RVA: 0x00263DA4 File Offset: 0x00261FA4
			public void __clearDele_EventOnArenaOpponentViewAck(int arg1, List<ProBattleHero> arg2, int arg3)
			{
				this.m_owner.__clearDele_EventOnArenaOpponentViewAck(arg1, arg2, arg3);
			}

			// Token: 0x060081EA RID: 33258 RVA: 0x00263DB4 File Offset: 0x00261FB4
			public void __callDele_EventOnArenaOpponentAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaOpponentAttackAck(obj);
			}

			// Token: 0x060081EB RID: 33259 RVA: 0x00263DC4 File Offset: 0x00261FC4
			public void __clearDele_EventOnArenaOpponentAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaOpponentAttackAck(obj);
			}

			// Token: 0x060081EC RID: 33260 RVA: 0x00263DD4 File Offset: 0x00261FD4
			public void __callDele_EventOnArenaRevengeOpponentGetAck(int arg1, ProArenaOpponent arg2, List<ProBattleHero> arg3, int arg4)
			{
				this.m_owner.__callDele_EventOnArenaRevengeOpponentGetAck(arg1, arg2, arg3, arg4);
			}

			// Token: 0x060081ED RID: 33261 RVA: 0x00263DE8 File Offset: 0x00261FE8
			public void __clearDele_EventOnArenaRevengeOpponentGetAck(int arg1, ProArenaOpponent arg2, List<ProBattleHero> arg3, int arg4)
			{
				this.m_owner.__clearDele_EventOnArenaRevengeOpponentGetAck(arg1, arg2, arg3, arg4);
			}

			// Token: 0x060081EE RID: 33262 RVA: 0x00263DFC File Offset: 0x00261FFC
			public void __callDele_EventOnArenaOpponentRevengeAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaOpponentRevengeAck(obj);
			}

			// Token: 0x060081EF RID: 33263 RVA: 0x00263E0C File Offset: 0x0026200C
			public void __clearDele_EventOnArenaOpponentRevengeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaOpponentRevengeAck(obj);
			}

			// Token: 0x060081F0 RID: 33264 RVA: 0x00263E1C File Offset: 0x0026201C
			public void __callDele_EventOnArenaOpponentAttackFightingAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaOpponentAttackFightingAck(obj);
			}

			// Token: 0x060081F1 RID: 33265 RVA: 0x00263E2C File Offset: 0x0026202C
			public void __clearDele_EventOnArenaOpponentAttackFightingAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaOpponentAttackFightingAck(obj);
			}

			// Token: 0x060081F2 RID: 33266 RVA: 0x00263E3C File Offset: 0x0026203C
			public void __callDele_EventOnArenaBattleFinishedAck(int arg1, BattleReward arg2, bool arg3)
			{
				this.m_owner.__callDele_EventOnArenaBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x060081F3 RID: 33267 RVA: 0x00263E4C File Offset: 0x0026204C
			public void __clearDele_EventOnArenaBattleFinishedAck(int arg1, BattleReward arg2, bool arg3)
			{
				this.m_owner.__clearDele_EventOnArenaBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x060081F4 RID: 33268 RVA: 0x00263E5C File Offset: 0x0026205C
			public void __callDele_EventOnArenaPlayerSetDefensiveTeamAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaPlayerSetDefensiveTeamAck(obj);
			}

			// Token: 0x060081F5 RID: 33269 RVA: 0x00263E6C File Offset: 0x0026206C
			public void __clearDele_EventOnArenaPlayerSetDefensiveTeamAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaPlayerSetDefensiveTeamAck(obj);
			}

			// Token: 0x060081F6 RID: 33270 RVA: 0x00263E7C File Offset: 0x0026207C
			public void __callDele_EventOnArenaVictoryPointsRewardGainAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__callDele_EventOnArenaVictoryPointsRewardGainAck(arg1, arg2);
			}

			// Token: 0x060081F7 RID: 33271 RVA: 0x00263E8C File Offset: 0x0026208C
			public void __clearDele_EventOnArenaVictoryPointsRewardGainAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__clearDele_EventOnArenaVictoryPointsRewardGainAck(arg1, arg2);
			}

			// Token: 0x060081F8 RID: 33272 RVA: 0x00263E9C File Offset: 0x0026209C
			public void __callDele_EventOnArenaBattleReportBasicDataGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaBattleReportBasicDataGetAck(obj);
			}

			// Token: 0x060081F9 RID: 33273 RVA: 0x00263EAC File Offset: 0x002620AC
			public void __clearDele_EventOnArenaBattleReportBasicDataGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaBattleReportBasicDataGetAck(obj);
			}

			// Token: 0x060081FA RID: 33274 RVA: 0x00263EBC File Offset: 0x002620BC
			public void __callDele_EventOnArenaBattleReportPlayBackDataGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaBattleReportPlayBackDataGetAck(obj);
			}

			// Token: 0x060081FB RID: 33275 RVA: 0x00263ECC File Offset: 0x002620CC
			public void __clearDele_EventOnArenaBattleReportPlayBackDataGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaBattleReportPlayBackDataGetAck(obj);
			}

			// Token: 0x060081FC RID: 33276 RVA: 0x00263EDC File Offset: 0x002620DC
			public void __callDele_EventOnArenaTopRankPlayersGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaTopRankPlayersGetAck(obj);
			}

			// Token: 0x060081FD RID: 33277 RVA: 0x00263EEC File Offset: 0x002620EC
			public void __clearDele_EventOnArenaTopRankPlayersGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaTopRankPlayersGetAck(obj);
			}

			// Token: 0x060081FE RID: 33278 RVA: 0x00263EFC File Offset: 0x002620FC
			public void __callDele_EventOnArenaBattleReconnectAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaBattleReconnectAck(obj);
			}

			// Token: 0x060081FF RID: 33279 RVA: 0x00263F0C File Offset: 0x0026210C
			public void __clearDele_EventOnArenaBattleReconnectAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaBattleReconnectAck(obj);
			}

			// Token: 0x06008200 RID: 33280 RVA: 0x00263F1C File Offset: 0x0026211C
			public void __callDele_EventOnArenaBattleReportNtf()
			{
				this.m_owner.__callDele_EventOnArenaBattleReportNtf();
			}

			// Token: 0x06008201 RID: 33281 RVA: 0x00263F2C File Offset: 0x0026212C
			public void __clearDele_EventOnArenaBattleReportNtf()
			{
				this.m_owner.__clearDele_EventOnArenaBattleReportNtf();
			}

			// Token: 0x06008202 RID: 33282 RVA: 0x00263F3C File Offset: 0x0026213C
			public void __callDele_EventOnArenaFlushOpponentsNtf()
			{
				this.m_owner.__callDele_EventOnArenaFlushOpponentsNtf();
			}

			// Token: 0x06008203 RID: 33283 RVA: 0x00263F4C File Offset: 0x0026214C
			public void __clearDele_EventOnArenaFlushOpponentsNtf()
			{
				this.m_owner.__clearDele_EventOnArenaFlushOpponentsNtf();
			}

			// Token: 0x06008204 RID: 33284 RVA: 0x00263F5C File Offset: 0x0026215C
			public void __callDele_EventOnBagItemChangeNtf()
			{
				this.m_owner.__callDele_EventOnBagItemChangeNtf();
			}

			// Token: 0x06008205 RID: 33285 RVA: 0x00263F6C File Offset: 0x0026216C
			public void __clearDele_EventOnBagItemChangeNtf()
			{
				this.m_owner.__clearDele_EventOnBagItemChangeNtf();
			}

			// Token: 0x06008206 RID: 33286 RVA: 0x00263F7C File Offset: 0x0026217C
			public void __callDele_EventOnUseBagItemAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnUseBagItemAck(arg1, arg2);
			}

			// Token: 0x06008207 RID: 33287 RVA: 0x00263F8C File Offset: 0x0026218C
			public void __clearDele_EventOnUseBagItemAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnUseBagItemAck(arg1, arg2);
			}

			// Token: 0x06008208 RID: 33288 RVA: 0x00263F9C File Offset: 0x0026219C
			public void __callDele_EventOnSellBagItemAck(int obj)
			{
				this.m_owner.__callDele_EventOnSellBagItemAck(obj);
			}

			// Token: 0x06008209 RID: 33289 RVA: 0x00263FAC File Offset: 0x002621AC
			public void __clearDele_EventOnSellBagItemAck(int obj)
			{
				this.m_owner.__clearDele_EventOnSellBagItemAck(obj);
			}

			// Token: 0x0600820A RID: 33290 RVA: 0x00263FBC File Offset: 0x002621BC
			public void __callDele_EventOnEquipmentLockAndUnLockAck(int obj)
			{
				this.m_owner.__callDele_EventOnEquipmentLockAndUnLockAck(obj);
			}

			// Token: 0x0600820B RID: 33291 RVA: 0x00263FCC File Offset: 0x002621CC
			public void __clearDele_EventOnEquipmentLockAndUnLockAck(int obj)
			{
				this.m_owner.__clearDele_EventOnEquipmentLockAndUnLockAck(obj);
			}

			// Token: 0x0600820C RID: 33292 RVA: 0x00263FDC File Offset: 0x002621DC
			public void __callDele_EventOnEquipmentEnhanceAck(int obj)
			{
				this.m_owner.__callDele_EventOnEquipmentEnhanceAck(obj);
			}

			// Token: 0x0600820D RID: 33293 RVA: 0x00263FEC File Offset: 0x002621EC
			public void __clearDele_EventOnEquipmentEnhanceAck(int obj)
			{
				this.m_owner.__clearDele_EventOnEquipmentEnhanceAck(obj);
			}

			// Token: 0x0600820E RID: 33294 RVA: 0x00263FFC File Offset: 0x002621FC
			public void __callDele_EventOnEquipmentStarLevelUpAck(int obj)
			{
				this.m_owner.__callDele_EventOnEquipmentStarLevelUpAck(obj);
			}

			// Token: 0x0600820F RID: 33295 RVA: 0x0026400C File Offset: 0x0026220C
			public void __clearDele_EventOnEquipmentStarLevelUpAck(int obj)
			{
				this.m_owner.__clearDele_EventOnEquipmentStarLevelUpAck(obj);
			}

			// Token: 0x06008210 RID: 33296 RVA: 0x0026401C File Offset: 0x0026221C
			public void __callDele_EventOnBagItemDecomposeAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnBagItemDecomposeAck(arg1, arg2);
			}

			// Token: 0x06008211 RID: 33297 RVA: 0x0026402C File Offset: 0x0026222C
			public void __clearDele_EventOnBagItemDecomposeAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnBagItemDecomposeAck(arg1, arg2);
			}

			// Token: 0x06008212 RID: 33298 RVA: 0x0026403C File Offset: 0x0026223C
			public void __callDele_EventOnEquipmentEnchantAck(int arg1, int arg2, List<CommonBattleProperty> arg3)
			{
				this.m_owner.__callDele_EventOnEquipmentEnchantAck(arg1, arg2, arg3);
			}

			// Token: 0x06008213 RID: 33299 RVA: 0x0026404C File Offset: 0x0026224C
			public void __clearDele_EventOnEquipmentEnchantAck(int arg1, int arg2, List<CommonBattleProperty> arg3)
			{
				this.m_owner.__clearDele_EventOnEquipmentEnchantAck(arg1, arg2, arg3);
			}

			// Token: 0x06008214 RID: 33300 RVA: 0x0026405C File Offset: 0x0026225C
			public void __callDele_EventOnEquipmentEnchantSaveAck(int arg1, EquipmentBagItem arg2)
			{
				this.m_owner.__callDele_EventOnEquipmentEnchantSaveAck(arg1, arg2);
			}

			// Token: 0x06008215 RID: 33301 RVA: 0x0026406C File Offset: 0x0026226C
			public void __clearDele_EventOnEquipmentEnchantSaveAck(int arg1, EquipmentBagItem arg2)
			{
				this.m_owner.__clearDele_EventOnEquipmentEnchantSaveAck(arg1, arg2);
			}

			// Token: 0x06008216 RID: 33302 RVA: 0x0026407C File Offset: 0x0026227C
			public void __callDele_EventOnBattleCancelAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleCancelAck(obj);
			}

			// Token: 0x06008217 RID: 33303 RVA: 0x0026408C File Offset: 0x0026228C
			public void __clearDele_EventOnBattleCancelAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleCancelAck(obj);
			}

			// Token: 0x06008218 RID: 33304 RVA: 0x0026409C File Offset: 0x0026229C
			public void __callDele_EventOnBattleTeamSetAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleTeamSetAck(obj);
			}

			// Token: 0x06008219 RID: 33305 RVA: 0x002640AC File Offset: 0x002622AC
			public void __clearDele_EventOnBattleTeamSetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleTeamSetAck(obj);
			}

			// Token: 0x0600821A RID: 33306 RVA: 0x002640BC File Offset: 0x002622BC
			public void __callDele_EventOnBattleArmyRandomSeedGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleArmyRandomSeedGetAck(obj);
			}

			// Token: 0x0600821B RID: 33307 RVA: 0x002640CC File Offset: 0x002622CC
			public void __clearDele_EventOnBattleArmyRandomSeedGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleArmyRandomSeedGetAck(obj);
			}

			// Token: 0x0600821C RID: 33308 RVA: 0x002640DC File Offset: 0x002622DC
			public void __callDele_EventOnBattleRoomCreateAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomCreateAck(obj);
			}

			// Token: 0x0600821D RID: 33309 RVA: 0x002640EC File Offset: 0x002622EC
			public void __clearDele_EventOnBattleRoomCreateAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomCreateAck(obj);
			}

			// Token: 0x0600821E RID: 33310 RVA: 0x002640FC File Offset: 0x002622FC
			public void __callDele_EventOnBattleRoomPlayerStatusChangeAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomPlayerStatusChangeAck(obj);
			}

			// Token: 0x0600821F RID: 33311 RVA: 0x0026410C File Offset: 0x0026230C
			public void __clearDele_EventOnBattleRoomPlayerStatusChangeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomPlayerStatusChangeAck(obj);
			}

			// Token: 0x06008220 RID: 33312 RVA: 0x0026411C File Offset: 0x0026231C
			public void __callDele_EventOnBattleRoomHeroSetupAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomHeroSetupAck(obj);
			}

			// Token: 0x06008221 RID: 33313 RVA: 0x0026412C File Offset: 0x0026232C
			public void __clearDele_EventOnBattleRoomHeroSetupAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomHeroSetupAck(obj);
			}

			// Token: 0x06008222 RID: 33314 RVA: 0x0026413C File Offset: 0x0026233C
			public void __callDele_EventOnBattleRoomHeroSwapAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomHeroSwapAck(obj);
			}

			// Token: 0x06008223 RID: 33315 RVA: 0x0026414C File Offset: 0x0026234C
			public void __clearDele_EventOnBattleRoomHeroSwapAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomHeroSwapAck(obj);
			}

			// Token: 0x06008224 RID: 33316 RVA: 0x0026415C File Offset: 0x0026235C
			public void __callDele_EventOnBattleRoomHeroPutdownAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomHeroPutdownAck(obj);
			}

			// Token: 0x06008225 RID: 33317 RVA: 0x0026416C File Offset: 0x0026236C
			public void __clearDele_EventOnBattleRoomHeroPutdownAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomHeroPutdownAck(obj);
			}

			// Token: 0x06008226 RID: 33318 RVA: 0x0026417C File Offset: 0x0026237C
			public void __callDele_EventOnBattleRoomHeroProtectAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomHeroProtectAck(obj);
			}

			// Token: 0x06008227 RID: 33319 RVA: 0x0026418C File Offset: 0x0026238C
			public void __clearDele_EventOnBattleRoomHeroProtectAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomHeroProtectAck(obj);
			}

			// Token: 0x06008228 RID: 33320 RVA: 0x0026419C File Offset: 0x0026239C
			public void __callDele_EventOnBattleRoomHeroBanAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomHeroBanAck(obj);
			}

			// Token: 0x06008229 RID: 33321 RVA: 0x002641AC File Offset: 0x002623AC
			public void __clearDele_EventOnBattleRoomHeroBanAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomHeroBanAck(obj);
			}

			// Token: 0x0600822A RID: 33322 RVA: 0x002641BC File Offset: 0x002623BC
			public void __callDele_EventOnBattleRoomBattleCommandExecuteAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomBattleCommandExecuteAck(obj);
			}

			// Token: 0x0600822B RID: 33323 RVA: 0x002641CC File Offset: 0x002623CC
			public void __clearDele_EventOnBattleRoomBattleCommandExecuteAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomBattleCommandExecuteAck(obj);
			}

			// Token: 0x0600822C RID: 33324 RVA: 0x002641DC File Offset: 0x002623DC
			public void __callDele_EventOnBattleRoomQuitAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomQuitAck(obj);
			}

			// Token: 0x0600822D RID: 33325 RVA: 0x002641EC File Offset: 0x002623EC
			public void __clearDele_EventOnBattleRoomQuitAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomQuitAck(obj);
			}

			// Token: 0x0600822E RID: 33326 RVA: 0x002641FC File Offset: 0x002623FC
			public void __callDele_EventOnBattleRoomPlayerActionBeginAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomPlayerActionBeginAck(obj);
			}

			// Token: 0x0600822F RID: 33327 RVA: 0x0026420C File Offset: 0x0026240C
			public void __clearDele_EventOnBattleRoomPlayerActionBeginAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomPlayerActionBeginAck(obj);
			}

			// Token: 0x06008230 RID: 33328 RVA: 0x0026421C File Offset: 0x0026241C
			public void __callDele_EventOnBattleRoomGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomGetAck(obj);
			}

			// Token: 0x06008231 RID: 33329 RVA: 0x0026422C File Offset: 0x0026242C
			public void __clearDele_EventOnBattleRoomGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomGetAck(obj);
			}

			// Token: 0x06008232 RID: 33330 RVA: 0x0026423C File Offset: 0x0026243C
			public void __callDele_EventOnBattleRoomEndCurrentBPTurnAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomEndCurrentBPTurnAck(obj);
			}

			// Token: 0x06008233 RID: 33331 RVA: 0x0026424C File Offset: 0x0026244C
			public void __clearDele_EventOnBattleRoomEndCurrentBPTurnAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomEndCurrentBPTurnAck(obj);
			}

			// Token: 0x06008234 RID: 33332 RVA: 0x0026425C File Offset: 0x0026245C
			public void __callDele_EventOnBattleRoomTeamBattleJoinNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomTeamBattleJoinNtf();
			}

			// Token: 0x06008235 RID: 33333 RVA: 0x0026426C File Offset: 0x0026246C
			public void __clearDele_EventOnBattleRoomTeamBattleJoinNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomTeamBattleJoinNtf();
			}

			// Token: 0x06008236 RID: 33334 RVA: 0x0026427C File Offset: 0x0026247C
			public void __callDele_EventOnBattleRoomPVPBattleJoinNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomPVPBattleJoinNtf();
			}

			// Token: 0x06008237 RID: 33335 RVA: 0x0026428C File Offset: 0x0026248C
			public void __clearDele_EventOnBattleRoomPVPBattleJoinNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomPVPBattleJoinNtf();
			}

			// Token: 0x06008238 RID: 33336 RVA: 0x0026429C File Offset: 0x0026249C
			public void __callDele_EventOnBattleRoomRealTimePVPBattleJoinNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomRealTimePVPBattleJoinNtf();
			}

			// Token: 0x06008239 RID: 33337 RVA: 0x002642AC File Offset: 0x002624AC
			public void __clearDele_EventOnBattleRoomRealTimePVPBattleJoinNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomRealTimePVPBattleJoinNtf();
			}

			// Token: 0x0600823A RID: 33338 RVA: 0x002642BC File Offset: 0x002624BC
			public void __callDele_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf();
			}

			// Token: 0x0600823B RID: 33339 RVA: 0x002642CC File Offset: 0x002624CC
			public void __clearDele_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomGuildMassiveCombatBattleJoinNtf();
			}

			// Token: 0x0600823C RID: 33340 RVA: 0x002642DC File Offset: 0x002624DC
			public void __callDele_EventOnBattleRoomPlayerStatusChangedNtf(ulong obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomPlayerStatusChangedNtf(obj);
			}

			// Token: 0x0600823D RID: 33341 RVA: 0x002642EC File Offset: 0x002624EC
			public void __clearDele_EventOnBattleRoomPlayerStatusChangedNtf(ulong obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomPlayerStatusChangedNtf(obj);
			}

			// Token: 0x0600823E RID: 33342 RVA: 0x002642FC File Offset: 0x002624FC
			public void __callDele_EventOnBattleRoomPlayerQuitNtf(ulong arg1, BattleRoomQuitReason arg2)
			{
				this.m_owner.__callDele_EventOnBattleRoomPlayerQuitNtf(arg1, arg2);
			}

			// Token: 0x0600823F RID: 33343 RVA: 0x0026430C File Offset: 0x0026250C
			public void __clearDele_EventOnBattleRoomPlayerQuitNtf(ulong arg1, BattleRoomQuitReason arg2)
			{
				this.m_owner.__clearDele_EventOnBattleRoomPlayerQuitNtf(arg1, arg2);
			}

			// Token: 0x06008240 RID: 33344 RVA: 0x0026431C File Offset: 0x0026251C
			public void __callDele_EventOnBattleRoomHeroSetupNtf(List<int> obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomHeroSetupNtf(obj);
			}

			// Token: 0x06008241 RID: 33345 RVA: 0x0026432C File Offset: 0x0026252C
			public void __clearDele_EventOnBattleRoomHeroSetupNtf(List<int> obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomHeroSetupNtf(obj);
			}

			// Token: 0x06008242 RID: 33346 RVA: 0x0026433C File Offset: 0x0026253C
			public void __callDele_EventOnBattleRoomTeamBattleStartNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomTeamBattleStartNtf();
			}

			// Token: 0x06008243 RID: 33347 RVA: 0x0026434C File Offset: 0x0026254C
			public void __clearDele_EventOnBattleRoomTeamBattleStartNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomTeamBattleStartNtf();
			}

			// Token: 0x06008244 RID: 33348 RVA: 0x0026435C File Offset: 0x0026255C
			public void __callDele_EventOnBattleRoomPVPBattleStartNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomPVPBattleStartNtf();
			}

			// Token: 0x06008245 RID: 33349 RVA: 0x0026436C File Offset: 0x0026256C
			public void __clearDele_EventOnBattleRoomPVPBattleStartNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomPVPBattleStartNtf();
			}

			// Token: 0x06008246 RID: 33350 RVA: 0x0026437C File Offset: 0x0026257C
			public void __callDele_EventOnBattleRoomRealTimePVPBattleStartNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomRealTimePVPBattleStartNtf();
			}

			// Token: 0x06008247 RID: 33351 RVA: 0x0026438C File Offset: 0x0026258C
			public void __clearDele_EventOnBattleRoomRealTimePVPBattleStartNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomRealTimePVPBattleStartNtf();
			}

			// Token: 0x06008248 RID: 33352 RVA: 0x0026439C File Offset: 0x0026259C
			public void __callDele_EventOnBattleRoomBattleCommandExecuteNtf(ulong obj)
			{
				this.m_owner.__callDele_EventOnBattleRoomBattleCommandExecuteNtf(obj);
			}

			// Token: 0x06008249 RID: 33353 RVA: 0x002643AC File Offset: 0x002625AC
			public void __clearDele_EventOnBattleRoomBattleCommandExecuteNtf(ulong obj)
			{
				this.m_owner.__clearDele_EventOnBattleRoomBattleCommandExecuteNtf(obj);
			}

			// Token: 0x0600824A RID: 33354 RVA: 0x002643BC File Offset: 0x002625BC
			public void __callDele_EventOnBattleRoomTeamBattleFinishNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomTeamBattleFinishNtf();
			}

			// Token: 0x0600824B RID: 33355 RVA: 0x002643CC File Offset: 0x002625CC
			public void __clearDele_EventOnBattleRoomTeamBattleFinishNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomTeamBattleFinishNtf();
			}

			// Token: 0x0600824C RID: 33356 RVA: 0x002643DC File Offset: 0x002625DC
			public void __callDele_EventOnBattleRoomPVPBattleFinishNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomPVPBattleFinishNtf();
			}

			// Token: 0x0600824D RID: 33357 RVA: 0x002643EC File Offset: 0x002625EC
			public void __clearDele_EventOnBattleRoomPVPBattleFinishNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomPVPBattleFinishNtf();
			}

			// Token: 0x0600824E RID: 33358 RVA: 0x002643FC File Offset: 0x002625FC
			public void __callDele_EventOnBattleRoomRealTimePVPBattleFinishNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomRealTimePVPBattleFinishNtf();
			}

			// Token: 0x0600824F RID: 33359 RVA: 0x0026440C File Offset: 0x0026260C
			public void __clearDele_EventOnBattleRoomRealTimePVPBattleFinishNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomRealTimePVPBattleFinishNtf();
			}

			// Token: 0x06008250 RID: 33360 RVA: 0x0026441C File Offset: 0x0026261C
			public void __callDele_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf();
			}

			// Token: 0x06008251 RID: 33361 RVA: 0x0026442C File Offset: 0x0026262C
			public void __clearDele_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomGuildMassiveCombatBattleFinishNtf();
			}

			// Token: 0x06008252 RID: 33362 RVA: 0x0026443C File Offset: 0x0026263C
			public void __callDele_EventOnBattleRoomPlayerBattleInfoInitNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomPlayerBattleInfoInitNtf();
			}

			// Token: 0x06008253 RID: 33363 RVA: 0x0026444C File Offset: 0x0026264C
			public void __clearDele_EventOnBattleRoomPlayerBattleInfoInitNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomPlayerBattleInfoInitNtf();
			}

			// Token: 0x06008254 RID: 33364 RVA: 0x0026445C File Offset: 0x0026265C
			public void __callDele_EventOnBattleRoomDataChangeNtf()
			{
				this.m_owner.__callDele_EventOnBattleRoomDataChangeNtf();
			}

			// Token: 0x06008255 RID: 33365 RVA: 0x0026446C File Offset: 0x0026266C
			public void __clearDele_EventOnBattleRoomDataChangeNtf()
			{
				this.m_owner.__clearDele_EventOnBattleRoomDataChangeNtf();
			}

			// Token: 0x06008256 RID: 33366 RVA: 0x0026447C File Offset: 0x0026267C
			public void __callDele_EventOnChatMessageNtf(ChatMessage obj)
			{
				this.m_owner.__callDele_EventOnChatMessageNtf(obj);
			}

			// Token: 0x06008257 RID: 33367 RVA: 0x0026448C File Offset: 0x0026268C
			public void __clearDele_EventOnChatMessageNtf(ChatMessage obj)
			{
				this.m_owner.__clearDele_EventOnChatMessageNtf(obj);
			}

			// Token: 0x06008258 RID: 33368 RVA: 0x0026449C File Offset: 0x0026269C
			public void __callDele_EventOnChatContactUserSummaryInfoAck()
			{
				this.m_owner.__callDele_EventOnChatContactUserSummaryInfoAck();
			}

			// Token: 0x06008259 RID: 33369 RVA: 0x002644AC File Offset: 0x002626AC
			public void __clearDele_EventOnChatContactUserSummaryInfoAck()
			{
				this.m_owner.__clearDele_EventOnChatContactUserSummaryInfoAck();
			}

			// Token: 0x0600825A RID: 33370 RVA: 0x002644BC File Offset: 0x002626BC
			public void __callDele_EventOnChatMessageAck(int obj)
			{
				this.m_owner.__callDele_EventOnChatMessageAck(obj);
			}

			// Token: 0x0600825B RID: 33371 RVA: 0x002644CC File Offset: 0x002626CC
			public void __clearDele_EventOnChatMessageAck(int obj)
			{
				this.m_owner.__clearDele_EventOnChatMessageAck(obj);
			}

			// Token: 0x0600825C RID: 33372 RVA: 0x002644DC File Offset: 0x002626DC
			public void __callDele_EventOnChatGetVoiceContentAck(ChatVoiceMessage obj)
			{
				this.m_owner.__callDele_EventOnChatGetVoiceContentAck(obj);
			}

			// Token: 0x0600825D RID: 33373 RVA: 0x002644EC File Offset: 0x002626EC
			public void __clearDele_EventOnChatGetVoiceContentAck(ChatVoiceMessage obj)
			{
				this.m_owner.__clearDele_EventOnChatGetVoiceContentAck(obj);
			}

			// Token: 0x0600825E RID: 33374 RVA: 0x002644FC File Offset: 0x002626FC
			public void __callDele_EventOnChatEnterRoomAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnChatEnterRoomAck(arg1, arg2);
			}

			// Token: 0x0600825F RID: 33375 RVA: 0x0026450C File Offset: 0x0026270C
			public void __clearDele_EventOnChatEnterRoomAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnChatEnterRoomAck(arg1, arg2);
			}

			// Token: 0x06008260 RID: 33376 RVA: 0x0026451C File Offset: 0x0026271C
			public void __callDele_EventOnCreateChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
			{
				this.m_owner.__callDele_EventOnCreateChatGroupAck(arg1, arg2, arg3);
			}

			// Token: 0x06008261 RID: 33377 RVA: 0x0026452C File Offset: 0x0026272C
			public void __clearDele_EventOnCreateChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
			{
				this.m_owner.__clearDele_EventOnCreateChatGroupAck(arg1, arg2, arg3);
			}

			// Token: 0x06008262 RID: 33378 RVA: 0x0026453C File Offset: 0x0026273C
			public void __callDele_EventOnGetAllChatGroupAck(int arg1, List<ProChatGroupCompactInfo> arg2)
			{
				this.m_owner.__callDele_EventOnGetAllChatGroupAck(arg1, arg2);
			}

			// Token: 0x06008263 RID: 33379 RVA: 0x0026454C File Offset: 0x0026274C
			public void __clearDele_EventOnGetAllChatGroupAck(int arg1, List<ProChatGroupCompactInfo> arg2)
			{
				this.m_owner.__clearDele_EventOnGetAllChatGroupAck(arg1, arg2);
			}

			// Token: 0x06008264 RID: 33380 RVA: 0x0026455C File Offset: 0x0026275C
			public void __callDele_EventOnGetChatGroupMemberAck(int arg1, ProChatGroupInfo arg2)
			{
				this.m_owner.__callDele_EventOnGetChatGroupMemberAck(arg1, arg2);
			}

			// Token: 0x06008265 RID: 33381 RVA: 0x0026456C File Offset: 0x0026276C
			public void __clearDele_EventOnGetChatGroupMemberAck(int arg1, ProChatGroupInfo arg2)
			{
				this.m_owner.__clearDele_EventOnGetChatGroupMemberAck(arg1, arg2);
			}

			// Token: 0x06008266 RID: 33382 RVA: 0x0026457C File Offset: 0x0026277C
			public void __callDele_EventOnChatGroupChangeOwnerAck(int obj)
			{
				this.m_owner.__callDele_EventOnChatGroupChangeOwnerAck(obj);
			}

			// Token: 0x06008267 RID: 33383 RVA: 0x0026458C File Offset: 0x0026278C
			public void __clearDele_EventOnChatGroupChangeOwnerAck(int obj)
			{
				this.m_owner.__clearDele_EventOnChatGroupChangeOwnerAck(obj);
			}

			// Token: 0x06008268 RID: 33384 RVA: 0x0026459C File Offset: 0x0026279C
			public void __callDele_EventOnChatGroupChangeNameAck(int obj)
			{
				this.m_owner.__callDele_EventOnChatGroupChangeNameAck(obj);
			}

			// Token: 0x06008269 RID: 33385 RVA: 0x002645AC File Offset: 0x002627AC
			public void __clearDele_EventOnChatGroupChangeNameAck(int obj)
			{
				this.m_owner.__clearDele_EventOnChatGroupChangeNameAck(obj);
			}

			// Token: 0x0600826A RID: 33386 RVA: 0x002645BC File Offset: 0x002627BC
			public void __callDele_EventOnInviteToChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
			{
				this.m_owner.__callDele_EventOnInviteToChatGroupAck(arg1, arg2, arg3);
			}

			// Token: 0x0600826B RID: 33387 RVA: 0x002645CC File Offset: 0x002627CC
			public void __clearDele_EventOnInviteToChatGroupAck(int arg1, ProChatGroupInfo arg2, ProChatUserInfo arg3)
			{
				this.m_owner.__clearDele_EventOnInviteToChatGroupAck(arg1, arg2, arg3);
			}

			// Token: 0x0600826C RID: 33388 RVA: 0x002645DC File Offset: 0x002627DC
			public void __callDele_EventOnLeaveChatGroupAck(int obj)
			{
				this.m_owner.__callDele_EventOnLeaveChatGroupAck(obj);
			}

			// Token: 0x0600826D RID: 33389 RVA: 0x002645EC File Offset: 0x002627EC
			public void __clearDele_EventOnLeaveChatGroupAck(int obj)
			{
				this.m_owner.__clearDele_EventOnLeaveChatGroupAck(obj);
			}

			// Token: 0x0600826E RID: 33390 RVA: 0x002645FC File Offset: 0x002627FC
			public void __callDele_EventOnKickUserFromGroupAck(int obj)
			{
				this.m_owner.__callDele_EventOnKickUserFromGroupAck(obj);
			}

			// Token: 0x0600826F RID: 33391 RVA: 0x0026460C File Offset: 0x0026280C
			public void __clearDele_EventOnKickUserFromGroupAck(int obj)
			{
				this.m_owner.__clearDele_EventOnKickUserFromGroupAck(obj);
			}

			// Token: 0x06008270 RID: 33392 RVA: 0x0026461C File Offset: 0x0026281C
			public void __callDele_EventOnGetUserSummaryAck(int arg1, List<UserSummary> arg2)
			{
				this.m_owner.__callDele_EventOnGetUserSummaryAck(arg1, arg2);
			}

			// Token: 0x06008271 RID: 33393 RVA: 0x0026462C File Offset: 0x0026282C
			public void __clearDele_EventOnGetUserSummaryAck(int arg1, List<UserSummary> arg2)
			{
				this.m_owner.__clearDele_EventOnGetUserSummaryAck(arg1, arg2);
			}

			// Token: 0x06008272 RID: 33394 RVA: 0x0026463C File Offset: 0x0026283C
			public void __callDele_EventOnChatGroupUpdateNtf(ProChatGroupInfo obj)
			{
				this.m_owner.__callDele_EventOnChatGroupUpdateNtf(obj);
			}

			// Token: 0x06008273 RID: 33395 RVA: 0x0026464C File Offset: 0x0026284C
			public void __clearDele_EventOnChatGroupUpdateNtf(ProChatGroupInfo obj)
			{
				this.m_owner.__clearDele_EventOnChatGroupUpdateNtf(obj);
			}

			// Token: 0x06008274 RID: 33396 RVA: 0x0026465C File Offset: 0x0026285C
			public void __callDele_EventOnClimbTowerGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnClimbTowerGetAck(obj);
			}

			// Token: 0x06008275 RID: 33397 RVA: 0x0026466C File Offset: 0x0026286C
			public void __clearDele_EventOnClimbTowerGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnClimbTowerGetAck(obj);
			}

			// Token: 0x06008276 RID: 33398 RVA: 0x0026467C File Offset: 0x0026287C
			public void __callDele_EventOnClimbTowerLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnClimbTowerLevelAttackAck(obj);
			}

			// Token: 0x06008277 RID: 33399 RVA: 0x0026468C File Offset: 0x0026288C
			public void __clearDele_EventOnClimbTowerLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnClimbTowerLevelAttackAck(obj);
			}

			// Token: 0x06008278 RID: 33400 RVA: 0x0026469C File Offset: 0x0026289C
			public void __callDele_EventOnClimbTowerLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnClimbTowerLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008279 RID: 33401 RVA: 0x002646AC File Offset: 0x002628AC
			public void __clearDele_EventOnClimbTowerLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnClimbTowerLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x0600827A RID: 33402 RVA: 0x002646BC File Offset: 0x002628BC
			public void __callDele_EventOnClimbTowerRaidAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__callDele_EventOnClimbTowerRaidAck(arg1, arg2);
			}

			// Token: 0x0600827B RID: 33403 RVA: 0x002646CC File Offset: 0x002628CC
			public void __clearDele_EventOnClimbTowerRaidAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__clearDele_EventOnClimbTowerRaidAck(arg1, arg2);
			}

			// Token: 0x0600827C RID: 33404 RVA: 0x002646DC File Offset: 0x002628DC
			public void __callDele_EventOnHeroCommentGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroCommentGetAck(obj);
			}

			// Token: 0x0600827D RID: 33405 RVA: 0x002646EC File Offset: 0x002628EC
			public void __clearDele_EventOnHeroCommentGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroCommentGetAck(obj);
			}

			// Token: 0x0600827E RID: 33406 RVA: 0x002646FC File Offset: 0x002628FC
			public void __callDele_EventOnHeroCommentSendAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroCommentSendAck(obj);
			}

			// Token: 0x0600827F RID: 33407 RVA: 0x0026470C File Offset: 0x0026290C
			public void __clearDele_EventOnHeroCommentSendAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroCommentSendAck(obj);
			}

			// Token: 0x06008280 RID: 33408 RVA: 0x0026471C File Offset: 0x0026291C
			public void __callDele_EventOnHeroCommentPraisedAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroCommentPraisedAck(obj);
			}

			// Token: 0x06008281 RID: 33409 RVA: 0x0026472C File Offset: 0x0026292C
			public void __clearDele_EventOnHeroCommentPraisedAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroCommentPraisedAck(obj);
			}

			// Token: 0x06008282 RID: 33410 RVA: 0x0026473C File Offset: 0x0026293C
			public void __callDele_EventOnCommenterHeroViewAck(int arg1, Hero arg2)
			{
				this.m_owner.__callDele_EventOnCommenterHeroViewAck(arg1, arg2);
			}

			// Token: 0x06008283 RID: 33411 RVA: 0x0026474C File Offset: 0x0026294C
			public void __clearDele_EventOnCommenterHeroViewAck(int arg1, Hero arg2)
			{
				this.m_owner.__clearDele_EventOnCommenterHeroViewAck(arg1, arg2);
			}

			// Token: 0x06008284 RID: 33412 RVA: 0x0026475C File Offset: 0x0026295C
			public void __callDele_EventOnGetLevelDanmakuAck(int obj)
			{
				this.m_owner.__callDele_EventOnGetLevelDanmakuAck(obj);
			}

			// Token: 0x06008285 RID: 33413 RVA: 0x0026476C File Offset: 0x0026296C
			public void __clearDele_EventOnGetLevelDanmakuAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGetLevelDanmakuAck(obj);
			}

			// Token: 0x06008286 RID: 33414 RVA: 0x0026477C File Offset: 0x0026297C
			public void __callDele_EventOnSendLevelDanmakuAck(int obj)
			{
				this.m_owner.__callDele_EventOnSendLevelDanmakuAck(obj);
			}

			// Token: 0x06008287 RID: 33415 RVA: 0x0026478C File Offset: 0x0026298C
			public void __clearDele_EventOnSendLevelDanmakuAck(int obj)
			{
				this.m_owner.__clearDele_EventOnSendLevelDanmakuAck(obj);
			}

			// Token: 0x06008288 RID: 33416 RVA: 0x0026479C File Offset: 0x0026299C
			public void __callDele_EventOnFixedStoreBuyStoreItemAck(int obj)
			{
				this.m_owner.__callDele_EventOnFixedStoreBuyStoreItemAck(obj);
			}

			// Token: 0x06008289 RID: 33417 RVA: 0x002647AC File Offset: 0x002629AC
			public void __clearDele_EventOnFixedStoreBuyStoreItemAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFixedStoreBuyStoreItemAck(obj);
			}

			// Token: 0x0600828A RID: 33418 RVA: 0x002647BC File Offset: 0x002629BC
			public void __callDele_EventOnBusinessCardRandomShowChangeAck(int obj)
			{
				this.m_owner.__callDele_EventOnBusinessCardRandomShowChangeAck(obj);
			}

			// Token: 0x0600828B RID: 33419 RVA: 0x002647CC File Offset: 0x002629CC
			public void __clearDele_EventOnBusinessCardRandomShowChangeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBusinessCardRandomShowChangeAck(obj);
			}

			// Token: 0x0600828C RID: 33420 RVA: 0x002647DC File Offset: 0x002629DC
			public void __callDele_EventOnLikeAck(int obj)
			{
				this.m_owner.__callDele_EventOnLikeAck(obj);
			}

			// Token: 0x0600828D RID: 33421 RVA: 0x002647EC File Offset: 0x002629EC
			public void __clearDele_EventOnLikeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnLikeAck(obj);
			}

			// Token: 0x0600828E RID: 33422 RVA: 0x002647FC File Offset: 0x002629FC
			public void __callDele_EventOnBusinessCardGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnBusinessCardGetAck(obj);
			}

			// Token: 0x0600828F RID: 33423 RVA: 0x0026480C File Offset: 0x00262A0C
			public void __clearDele_EventOnBusinessCardGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBusinessCardGetAck(obj);
			}

			// Token: 0x06008290 RID: 33424 RVA: 0x0026481C File Offset: 0x00262A1C
			public void __callDele_EventOnBusinessCardDescUpdateAck(int obj)
			{
				this.m_owner.__callDele_EventOnBusinessCardDescUpdateAck(obj);
			}

			// Token: 0x06008291 RID: 33425 RVA: 0x0026482C File Offset: 0x00262A2C
			public void __clearDele_EventOnBusinessCardDescUpdateAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBusinessCardDescUpdateAck(obj);
			}

			// Token: 0x06008292 RID: 33426 RVA: 0x0026483C File Offset: 0x00262A3C
			public void __callDele_EventOnBusinessCardHeroSetUpdateAck(int obj)
			{
				this.m_owner.__callDele_EventOnBusinessCardHeroSetUpdateAck(obj);
			}

			// Token: 0x06008293 RID: 33427 RVA: 0x0026484C File Offset: 0x00262A4C
			public void __clearDele_EventOnBusinessCardHeroSetUpdateAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBusinessCardHeroSetUpdateAck(obj);
			}

			// Token: 0x06008294 RID: 33428 RVA: 0x0026485C File Offset: 0x00262A5C
			public void __callDele_EventOnFriendGetSocialRelationAck(int obj)
			{
				this.m_owner.__callDele_EventOnFriendGetSocialRelationAck(obj);
			}

			// Token: 0x06008295 RID: 33429 RVA: 0x0026486C File Offset: 0x00262A6C
			public void __clearDele_EventOnFriendGetSocialRelationAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFriendGetSocialRelationAck(obj);
			}

			// Token: 0x06008296 RID: 33430 RVA: 0x0026487C File Offset: 0x00262A7C
			public void __callDele_EventOnFriendInviteAck(int arg1, UserSummary arg2)
			{
				this.m_owner.__callDele_EventOnFriendInviteAck(arg1, arg2);
			}

			// Token: 0x06008297 RID: 33431 RVA: 0x0026488C File Offset: 0x00262A8C
			public void __clearDele_EventOnFriendInviteAck(int arg1, UserSummary arg2)
			{
				this.m_owner.__clearDele_EventOnFriendInviteAck(arg1, arg2);
			}

			// Token: 0x06008298 RID: 33432 RVA: 0x0026489C File Offset: 0x00262A9C
			public void __callDele_EventOnFriendInviteNtf()
			{
				this.m_owner.__callDele_EventOnFriendInviteNtf();
			}

			// Token: 0x06008299 RID: 33433 RVA: 0x002648AC File Offset: 0x00262AAC
			public void __clearDele_EventOnFriendInviteNtf()
			{
				this.m_owner.__clearDele_EventOnFriendInviteNtf();
			}

			// Token: 0x0600829A RID: 33434 RVA: 0x002648BC File Offset: 0x00262ABC
			public void __callDele_EventOnFriendInviteAcceptAck(int arg1, UserSummary arg2)
			{
				this.m_owner.__callDele_EventOnFriendInviteAcceptAck(arg1, arg2);
			}

			// Token: 0x0600829B RID: 33435 RVA: 0x002648CC File Offset: 0x00262ACC
			public void __clearDele_EventOnFriendInviteAcceptAck(int arg1, UserSummary arg2)
			{
				this.m_owner.__clearDele_EventOnFriendInviteAcceptAck(arg1, arg2);
			}

			// Token: 0x0600829C RID: 33436 RVA: 0x002648DC File Offset: 0x00262ADC
			public void __callDele_EventOnFriendInviteAcceptNtf(UserSummary obj)
			{
				this.m_owner.__callDele_EventOnFriendInviteAcceptNtf(obj);
			}

			// Token: 0x0600829D RID: 33437 RVA: 0x002648EC File Offset: 0x00262AEC
			public void __clearDele_EventOnFriendInviteAcceptNtf(UserSummary obj)
			{
				this.m_owner.__clearDele_EventOnFriendInviteAcceptNtf(obj);
			}

			// Token: 0x0600829E RID: 33438 RVA: 0x002648FC File Offset: 0x00262AFC
			public void __callDele_EventOnFriendInviteDeclineAck(int obj)
			{
				this.m_owner.__callDele_EventOnFriendInviteDeclineAck(obj);
			}

			// Token: 0x0600829F RID: 33439 RVA: 0x0026490C File Offset: 0x00262B0C
			public void __clearDele_EventOnFriendInviteDeclineAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFriendInviteDeclineAck(obj);
			}

			// Token: 0x060082A0 RID: 33440 RVA: 0x0026491C File Offset: 0x00262B1C
			public void __callDele_EventOnFriendInviteDeclineNtf(UserSummary obj)
			{
				this.m_owner.__callDele_EventOnFriendInviteDeclineNtf(obj);
			}

			// Token: 0x060082A1 RID: 33441 RVA: 0x0026492C File Offset: 0x00262B2C
			public void __clearDele_EventOnFriendInviteDeclineNtf(UserSummary obj)
			{
				this.m_owner.__clearDele_EventOnFriendInviteDeclineNtf(obj);
			}

			// Token: 0x060082A2 RID: 33442 RVA: 0x0026493C File Offset: 0x00262B3C
			public void __callDele_EventOnFriendDeleteAck(int obj)
			{
				this.m_owner.__callDele_EventOnFriendDeleteAck(obj);
			}

			// Token: 0x060082A3 RID: 33443 RVA: 0x0026494C File Offset: 0x00262B4C
			public void __clearDele_EventOnFriendDeleteAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFriendDeleteAck(obj);
			}

			// Token: 0x060082A4 RID: 33444 RVA: 0x0026495C File Offset: 0x00262B5C
			public void __callDele_EventOnPlayerBlockAck(int obj)
			{
				this.m_owner.__callDele_EventOnPlayerBlockAck(obj);
			}

			// Token: 0x060082A5 RID: 33445 RVA: 0x0026496C File Offset: 0x00262B6C
			public void __clearDele_EventOnPlayerBlockAck(int obj)
			{
				this.m_owner.__clearDele_EventOnPlayerBlockAck(obj);
			}

			// Token: 0x060082A6 RID: 33446 RVA: 0x0026497C File Offset: 0x00262B7C
			public void __callDele_EventOnPlayerUnblockAck(int obj)
			{
				this.m_owner.__callDele_EventOnPlayerUnblockAck(obj);
			}

			// Token: 0x060082A7 RID: 33447 RVA: 0x0026498C File Offset: 0x00262B8C
			public void __clearDele_EventOnPlayerUnblockAck(int obj)
			{
				this.m_owner.__clearDele_EventOnPlayerUnblockAck(obj);
			}

			// Token: 0x060082A8 RID: 33448 RVA: 0x0026499C File Offset: 0x00262B9C
			public void __callDele_EventOnFriendFindAck(int obj)
			{
				this.m_owner.__callDele_EventOnFriendFindAck(obj);
			}

			// Token: 0x060082A9 RID: 33449 RVA: 0x002649AC File Offset: 0x00262BAC
			public void __clearDele_EventOnFriendFindAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFriendFindAck(obj);
			}

			// Token: 0x060082AA RID: 33450 RVA: 0x002649BC File Offset: 0x00262BBC
			public void __callDele_EventOnFriendSuggestedAck(int obj)
			{
				this.m_owner.__callDele_EventOnFriendSuggestedAck(obj);
			}

			// Token: 0x060082AB RID: 33451 RVA: 0x002649CC File Offset: 0x00262BCC
			public void __clearDele_EventOnFriendSuggestedAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFriendSuggestedAck(obj);
			}

			// Token: 0x060082AC RID: 33452 RVA: 0x002649DC File Offset: 0x00262BDC
			public void __callDele_EventOnFriendSummaryUpdateNtf(UserSummary obj)
			{
				this.m_owner.__callDele_EventOnFriendSummaryUpdateNtf(obj);
			}

			// Token: 0x060082AD RID: 33453 RVA: 0x002649EC File Offset: 0x00262BEC
			public void __clearDele_EventOnFriendSummaryUpdateNtf(UserSummary obj)
			{
				this.m_owner.__clearDele_EventOnFriendSummaryUpdateNtf(obj);
			}

			// Token: 0x060082AE RID: 33454 RVA: 0x002649FC File Offset: 0x00262BFC
			public void __callDele_EventOnBattlePracticeInviteAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattlePracticeInviteAck(obj);
			}

			// Token: 0x060082AF RID: 33455 RVA: 0x00264A0C File Offset: 0x00262C0C
			public void __clearDele_EventOnBattlePracticeInviteAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattlePracticeInviteAck(obj);
			}

			// Token: 0x060082B0 RID: 33456 RVA: 0x00264A1C File Offset: 0x00262C1C
			public void __callDele_EventOnBattlePracticeAcceptAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattlePracticeAcceptAck(obj);
			}

			// Token: 0x060082B1 RID: 33457 RVA: 0x00264A2C File Offset: 0x00262C2C
			public void __clearDele_EventOnBattlePracticeAcceptAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattlePracticeAcceptAck(obj);
			}

			// Token: 0x060082B2 RID: 33458 RVA: 0x00264A3C File Offset: 0x00262C3C
			public void __callDele_EventOnBattlePracticeDeclineAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattlePracticeDeclineAck(obj);
			}

			// Token: 0x060082B3 RID: 33459 RVA: 0x00264A4C File Offset: 0x00262C4C
			public void __clearDele_EventOnBattlePracticeDeclineAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattlePracticeDeclineAck(obj);
			}

			// Token: 0x060082B4 RID: 33460 RVA: 0x00264A5C File Offset: 0x00262C5C
			public void __callDele_EventOnBattlePracticeCancelAck(int obj)
			{
				this.m_owner.__callDele_EventOnBattlePracticeCancelAck(obj);
			}

			// Token: 0x060082B5 RID: 33461 RVA: 0x00264A6C File Offset: 0x00262C6C
			public void __clearDele_EventOnBattlePracticeCancelAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBattlePracticeCancelAck(obj);
			}

			// Token: 0x060082B6 RID: 33462 RVA: 0x00264A7C File Offset: 0x00262C7C
			public void __callDele_EventOnBattlePracticeInvitedNtf(PVPInviteInfo obj)
			{
				this.m_owner.__callDele_EventOnBattlePracticeInvitedNtf(obj);
			}

			// Token: 0x060082B7 RID: 33463 RVA: 0x00264A8C File Offset: 0x00262C8C
			public void __clearDele_EventOnBattlePracticeInvitedNtf(PVPInviteInfo obj)
			{
				this.m_owner.__clearDele_EventOnBattlePracticeInvitedNtf(obj);
			}

			// Token: 0x060082B8 RID: 33464 RVA: 0x00264A9C File Offset: 0x00262C9C
			public void __callDele_EventOnBattlePracticeFailNtf()
			{
				this.m_owner.__callDele_EventOnBattlePracticeFailNtf();
			}

			// Token: 0x060082B9 RID: 33465 RVA: 0x00264AAC File Offset: 0x00262CAC
			public void __clearDele_EventOnBattlePracticeFailNtf()
			{
				this.m_owner.__clearDele_EventOnBattlePracticeFailNtf();
			}

			// Token: 0x060082BA RID: 33466 RVA: 0x00264ABC File Offset: 0x00262CBC
			public void __callDele_EventOnBattlePracticeDeclinedNtf()
			{
				this.m_owner.__callDele_EventOnBattlePracticeDeclinedNtf();
			}

			// Token: 0x060082BB RID: 33467 RVA: 0x00264ACC File Offset: 0x00262CCC
			public void __clearDele_EventOnBattlePracticeDeclinedNtf()
			{
				this.m_owner.__clearDele_EventOnBattlePracticeDeclinedNtf();
			}

			// Token: 0x060082BC RID: 33468 RVA: 0x00264ADC File Offset: 0x00262CDC
			public void __callDele_EventOnFriendshipPointsSendAck(int obj)
			{
				this.m_owner.__callDele_EventOnFriendshipPointsSendAck(obj);
			}

			// Token: 0x060082BD RID: 33469 RVA: 0x00264AEC File Offset: 0x00262CEC
			public void __clearDele_EventOnFriendshipPointsSendAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFriendshipPointsSendAck(obj);
			}

			// Token: 0x060082BE RID: 33470 RVA: 0x00264AFC File Offset: 0x00262CFC
			public void __callDele_EventOnFriendshipPointsClaimAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnFriendshipPointsClaimAck(arg1, arg2);
			}

			// Token: 0x060082BF RID: 33471 RVA: 0x00264B0C File Offset: 0x00262D0C
			public void __clearDele_EventOnFriendshipPointsClaimAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnFriendshipPointsClaimAck(arg1, arg2);
			}

			// Token: 0x060082C0 RID: 33472 RVA: 0x00264B1C File Offset: 0x00262D1C
			public void __callDele_EventOnFriendshipPointsReceivedNtf()
			{
				this.m_owner.__callDele_EventOnFriendshipPointsReceivedNtf();
			}

			// Token: 0x060082C1 RID: 33473 RVA: 0x00264B2C File Offset: 0x00262D2C
			public void __clearDele_EventOnFriendshipPointsReceivedNtf()
			{
				this.m_owner.__clearDele_EventOnFriendshipPointsReceivedNtf();
			}

			// Token: 0x060082C2 RID: 33474 RVA: 0x00264B3C File Offset: 0x00262D3C
			public void __callDele_EventOnGiftStoreItemBuyAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnGiftStoreItemBuyAck(arg1, arg2);
			}

			// Token: 0x060082C3 RID: 33475 RVA: 0x00264B4C File Offset: 0x00262D4C
			public void __clearDele_EventOnGiftStoreItemBuyAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnGiftStoreItemBuyAck(arg1, arg2);
			}

			// Token: 0x060082C4 RID: 33476 RVA: 0x00264B5C File Offset: 0x00262D5C
			public void __callDele_EventOnGiftStoreAppleSubscribeAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnGiftStoreAppleSubscribeAck(arg1, arg2);
			}

			// Token: 0x060082C5 RID: 33477 RVA: 0x00264B6C File Offset: 0x00262D6C
			public void __clearDele_EventOnGiftStoreAppleSubscribeAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnGiftStoreAppleSubscribeAck(arg1, arg2);
			}

			// Token: 0x060082C6 RID: 33478 RVA: 0x00264B7C File Offset: 0x00262D7C
			public void __callDele_EventOnGiftStoreBuyGoodsNtf(string obj)
			{
				this.m_owner.__callDele_EventOnGiftStoreBuyGoodsNtf(obj);
			}

			// Token: 0x060082C7 RID: 33479 RVA: 0x00264B8C File Offset: 0x00262D8C
			public void __clearDele_EventOnGiftStoreBuyGoodsNtf(string obj)
			{
				this.m_owner.__clearDele_EventOnGiftStoreBuyGoodsNtf(obj);
			}

			// Token: 0x060082C8 RID: 33480 RVA: 0x00264B9C File Offset: 0x00262D9C
			public void __callDele_EventOnGiftStoreOperationalGoodsUpdateNtf()
			{
				this.m_owner.__callDele_EventOnGiftStoreOperationalGoodsUpdateNtf();
			}

			// Token: 0x060082C9 RID: 33481 RVA: 0x00264BAC File Offset: 0x00262DAC
			public void __clearDele_EventOnGiftStoreOperationalGoodsUpdateNtf()
			{
				this.m_owner.__clearDele_EventOnGiftStoreOperationalGoodsUpdateNtf();
			}

			// Token: 0x060082CA RID: 33482 RVA: 0x00264BBC File Offset: 0x00262DBC
			public void __callDele_EventOnGiftStoreItemCancelBuyAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnGiftStoreItemCancelBuyAck(arg1, arg2);
			}

			// Token: 0x060082CB RID: 33483 RVA: 0x00264BCC File Offset: 0x00262DCC
			public void __clearDele_EventOnGiftStoreItemCancelBuyAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnGiftStoreItemCancelBuyAck(arg1, arg2);
			}

			// Token: 0x060082CC RID: 33484 RVA: 0x00264BDC File Offset: 0x00262DDC
			public void __callDele_EventOnPullOrderRewardAck(int arg1, string arg2, OrderReward arg3)
			{
				this.m_owner.__callDele_EventOnPullOrderRewardAck(arg1, arg2, arg3);
			}

			// Token: 0x060082CD RID: 33485 RVA: 0x00264BEC File Offset: 0x00262DEC
			public void __clearDele_EventOnPullOrderRewardAck(int arg1, string arg2, OrderReward arg3)
			{
				this.m_owner.__clearDele_EventOnPullOrderRewardAck(arg1, arg2, arg3);
			}

			// Token: 0x060082CE RID: 33486 RVA: 0x00264BFC File Offset: 0x00262DFC
			public void __callDele_EventOnGmCommandAck(int obj)
			{
				this.m_owner.__callDele_EventOnGmCommandAck(obj);
			}

			// Token: 0x060082CF RID: 33487 RVA: 0x00264C0C File Offset: 0x00262E0C
			public void __clearDele_EventOnGmCommandAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGmCommandAck(obj);
			}

			// Token: 0x060082D0 RID: 33488 RVA: 0x00264C1C File Offset: 0x00262E1C
			public void __callDele_EventOnGuildCreateAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildCreateAck(obj);
			}

			// Token: 0x060082D1 RID: 33489 RVA: 0x00264C2C File Offset: 0x00262E2C
			public void __clearDele_EventOnGuildCreateAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildCreateAck(obj);
			}

			// Token: 0x060082D2 RID: 33490 RVA: 0x00264C3C File Offset: 0x00262E3C
			public void __callDele_EventOnGuildJoinApplyAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildJoinApplyAck(obj);
			}

			// Token: 0x060082D3 RID: 33491 RVA: 0x00264C4C File Offset: 0x00262E4C
			public void __clearDele_EventOnGuildJoinApplyAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildJoinApplyAck(obj);
			}

			// Token: 0x060082D4 RID: 33492 RVA: 0x00264C5C File Offset: 0x00262E5C
			public void __callDele_EventOnGuildJoinAdminConfirmAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildJoinAdminConfirmAck(obj);
			}

			// Token: 0x060082D5 RID: 33493 RVA: 0x00264C6C File Offset: 0x00262E6C
			public void __clearDele_EventOnGuildJoinAdminConfirmAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildJoinAdminConfirmAck(obj);
			}

			// Token: 0x060082D6 RID: 33494 RVA: 0x00264C7C File Offset: 0x00262E7C
			public void __callDele_EventOnGuildJoinApplyRefuseAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildJoinApplyRefuseAck(obj);
			}

			// Token: 0x060082D7 RID: 33495 RVA: 0x00264C8C File Offset: 0x00262E8C
			public void __clearDele_EventOnGuildJoinApplyRefuseAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildJoinApplyRefuseAck(obj);
			}

			// Token: 0x060082D8 RID: 33496 RVA: 0x00264C9C File Offset: 0x00262E9C
			public void __callDele_EventOnGuildJoinPlayerConfirmAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildJoinPlayerConfirmAck(obj);
			}

			// Token: 0x060082D9 RID: 33497 RVA: 0x00264CAC File Offset: 0x00262EAC
			public void __clearDele_EventOnGuildJoinPlayerConfirmAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildJoinPlayerConfirmAck(obj);
			}

			// Token: 0x060082DA RID: 33498 RVA: 0x00264CBC File Offset: 0x00262EBC
			public void __callDele_EventOnGuildSearchAck(int arg1, List<GuildSearchInfo> arg2)
			{
				this.m_owner.__callDele_EventOnGuildSearchAck(arg1, arg2);
			}

			// Token: 0x060082DB RID: 33499 RVA: 0x00264CCC File Offset: 0x00262ECC
			public void __clearDele_EventOnGuildSearchAck(int arg1, List<GuildSearchInfo> arg2)
			{
				this.m_owner.__clearDele_EventOnGuildSearchAck(arg1, arg2);
			}

			// Token: 0x060082DC RID: 33500 RVA: 0x00264CDC File Offset: 0x00262EDC
			public void __callDele_EventOnGuildRandomListAck(int arg1, List<GuildSearchInfo> arg2)
			{
				this.m_owner.__callDele_EventOnGuildRandomListAck(arg1, arg2);
			}

			// Token: 0x060082DD RID: 33501 RVA: 0x00264CEC File Offset: 0x00262EEC
			public void __clearDele_EventOnGuildRandomListAck(int arg1, List<GuildSearchInfo> arg2)
			{
				this.m_owner.__clearDele_EventOnGuildRandomListAck(arg1, arg2);
			}

			// Token: 0x060082DE RID: 33502 RVA: 0x00264CFC File Offset: 0x00262EFC
			public void __callDele_EventOnGuildQuitAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildQuitAck(obj);
			}

			// Token: 0x060082DF RID: 33503 RVA: 0x00264D0C File Offset: 0x00262F0C
			public void __clearDele_EventOnGuildQuitAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildQuitAck(obj);
			}

			// Token: 0x060082E0 RID: 33504 RVA: 0x00264D1C File Offset: 0x00262F1C
			public void __callDele_EventOnGuildInvitePlayerListAck(int arg1, List<UserSummary> arg2)
			{
				this.m_owner.__callDele_EventOnGuildInvitePlayerListAck(arg1, arg2);
			}

			// Token: 0x060082E1 RID: 33505 RVA: 0x00264D2C File Offset: 0x00262F2C
			public void __clearDele_EventOnGuildInvitePlayerListAck(int arg1, List<UserSummary> arg2)
			{
				this.m_owner.__clearDele_EventOnGuildInvitePlayerListAck(arg1, arg2);
			}

			// Token: 0x060082E2 RID: 33506 RVA: 0x00264D3C File Offset: 0x00262F3C
			public void __callDele_EventOnGuildHiringDeclarationSetAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildHiringDeclarationSetAck(obj);
			}

			// Token: 0x060082E3 RID: 33507 RVA: 0x00264D4C File Offset: 0x00262F4C
			public void __clearDele_EventOnGuildHiringDeclarationSetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildHiringDeclarationSetAck(obj);
			}

			// Token: 0x060082E4 RID: 33508 RVA: 0x00264D5C File Offset: 0x00262F5C
			public void __callDele_EventOnGuildJoinInvitationGetAck(int arg1, List<GuildJoinInvitation> arg2)
			{
				this.m_owner.__callDele_EventOnGuildJoinInvitationGetAck(arg1, arg2);
			}

			// Token: 0x060082E5 RID: 33509 RVA: 0x00264D6C File Offset: 0x00262F6C
			public void __clearDele_EventOnGuildJoinInvitationGetAck(int arg1, List<GuildJoinInvitation> arg2)
			{
				this.m_owner.__clearDele_EventOnGuildJoinInvitationGetAck(arg1, arg2);
			}

			// Token: 0x060082E6 RID: 33510 RVA: 0x00264D7C File Offset: 0x00262F7C
			public void __callDele_EventOnGuildJoinInvitationRefuseAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildJoinInvitationRefuseAck(obj);
			}

			// Token: 0x060082E7 RID: 33511 RVA: 0x00264D8C File Offset: 0x00262F8C
			public void __clearDele_EventOnGuildJoinInvitationRefuseAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildJoinInvitationRefuseAck(obj);
			}

			// Token: 0x060082E8 RID: 33512 RVA: 0x00264D9C File Offset: 0x00262F9C
			public void __callDele_EventOnAllGuildJoinInvitationRefuseAck(int obj)
			{
				this.m_owner.__callDele_EventOnAllGuildJoinInvitationRefuseAck(obj);
			}

			// Token: 0x060082E9 RID: 33513 RVA: 0x00264DAC File Offset: 0x00262FAC
			public void __clearDele_EventOnAllGuildJoinInvitationRefuseAck(int obj)
			{
				this.m_owner.__clearDele_EventOnAllGuildJoinInvitationRefuseAck(obj);
			}

			// Token: 0x060082EA RID: 33514 RVA: 0x00264DBC File Offset: 0x00262FBC
			public void __callDele_EventOnGuildGetAck(int arg1, Guild arg2)
			{
				this.m_owner.__callDele_EventOnGuildGetAck(arg1, arg2);
			}

			// Token: 0x060082EB RID: 33515 RVA: 0x00264DCC File Offset: 0x00262FCC
			public void __clearDele_EventOnGuildGetAck(int arg1, Guild arg2)
			{
				this.m_owner.__clearDele_EventOnGuildGetAck(arg1, arg2);
			}

			// Token: 0x060082EC RID: 33516 RVA: 0x00264DDC File Offset: 0x00262FDC
			public void __callDele_EventOnGuildBasicSetAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildBasicSetAck(obj);
			}

			// Token: 0x060082ED RID: 33517 RVA: 0x00264DEC File Offset: 0x00262FEC
			public void __clearDele_EventOnGuildBasicSetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildBasicSetAck(obj);
			}

			// Token: 0x060082EE RID: 33518 RVA: 0x00264DFC File Offset: 0x00262FFC
			public void __callDele_EventOnGuildAnnouncementSetAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildAnnouncementSetAck(obj);
			}

			// Token: 0x060082EF RID: 33519 RVA: 0x00264E0C File Offset: 0x0026300C
			public void __clearDele_EventOnGuildAnnouncementSetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildAnnouncementSetAck(obj);
			}

			// Token: 0x060082F0 RID: 33520 RVA: 0x00264E1C File Offset: 0x0026301C
			public void __callDele_EventOnGuildJoinApplyGetAck(int arg1, List<UserSummary> arg2)
			{
				this.m_owner.__callDele_EventOnGuildJoinApplyGetAck(arg1, arg2);
			}

			// Token: 0x060082F1 RID: 33521 RVA: 0x00264E2C File Offset: 0x0026302C
			public void __clearDele_EventOnGuildJoinApplyGetAck(int arg1, List<UserSummary> arg2)
			{
				this.m_owner.__clearDele_EventOnGuildJoinApplyGetAck(arg1, arg2);
			}

			// Token: 0x060082F2 RID: 33522 RVA: 0x00264E3C File Offset: 0x0026303C
			public void __callDele_EventOnGuildNameChangeAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildNameChangeAck(obj);
			}

			// Token: 0x060082F3 RID: 33523 RVA: 0x00264E4C File Offset: 0x0026304C
			public void __clearDele_EventOnGuildNameChangeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildNameChangeAck(obj);
			}

			// Token: 0x060082F4 RID: 33524 RVA: 0x00264E5C File Offset: 0x0026305C
			public void __callDele_EventOnGuildLogGetAck(int arg1, List<GuildLog> arg2)
			{
				this.m_owner.__callDele_EventOnGuildLogGetAck(arg1, arg2);
			}

			// Token: 0x060082F5 RID: 33525 RVA: 0x00264E6C File Offset: 0x0026306C
			public void __clearDele_EventOnGuildLogGetAck(int arg1, List<GuildLog> arg2)
			{
				this.m_owner.__clearDele_EventOnGuildLogGetAck(arg1, arg2);
			}

			// Token: 0x060082F6 RID: 33526 RVA: 0x00264E7C File Offset: 0x0026307C
			public void __callDele_EventOnGuildJoinInviteAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildJoinInviteAck(obj);
			}

			// Token: 0x060082F7 RID: 33527 RVA: 0x00264E8C File Offset: 0x0026308C
			public void __clearDele_EventOnGuildJoinInviteAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildJoinInviteAck(obj);
			}

			// Token: 0x060082F8 RID: 33528 RVA: 0x00264E9C File Offset: 0x0026309C
			public void __callDele_EventOnGuildVicePresidentAppointAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildVicePresidentAppointAck(obj);
			}

			// Token: 0x060082F9 RID: 33529 RVA: 0x00264EAC File Offset: 0x002630AC
			public void __clearDele_EventOnGuildVicePresidentAppointAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildVicePresidentAppointAck(obj);
			}

			// Token: 0x060082FA RID: 33530 RVA: 0x00264EBC File Offset: 0x002630BC
			public void __callDele_EventOnGuildKickOutAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildKickOutAck(obj);
			}

			// Token: 0x060082FB RID: 33531 RVA: 0x00264ECC File Offset: 0x002630CC
			public void __clearDele_EventOnGuildKickOutAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildKickOutAck(obj);
			}

			// Token: 0x060082FC RID: 33532 RVA: 0x00264EDC File Offset: 0x002630DC
			public void __callDele_EventOnGuildPresidentRelieveAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildPresidentRelieveAck(obj);
			}

			// Token: 0x060082FD RID: 33533 RVA: 0x00264EEC File Offset: 0x002630EC
			public void __clearDele_EventOnGuildPresidentRelieveAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildPresidentRelieveAck(obj);
			}

			// Token: 0x060082FE RID: 33534 RVA: 0x00264EFC File Offset: 0x002630FC
			public void __callDele_EventOnGuildPresidentAppointAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildPresidentAppointAck(obj);
			}

			// Token: 0x060082FF RID: 33535 RVA: 0x00264F0C File Offset: 0x0026310C
			public void __clearDele_EventOnGuildPresidentAppointAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildPresidentAppointAck(obj);
			}

			// Token: 0x06008300 RID: 33536 RVA: 0x00264F1C File Offset: 0x0026311C
			public void __callDele_EventOnAllGuildJoinApplyRefuseAck(int obj)
			{
				this.m_owner.__callDele_EventOnAllGuildJoinApplyRefuseAck(obj);
			}

			// Token: 0x06008301 RID: 33537 RVA: 0x00264F2C File Offset: 0x0026312C
			public void __clearDele_EventOnAllGuildJoinApplyRefuseAck(int obj)
			{
				this.m_owner.__clearDele_EventOnAllGuildJoinApplyRefuseAck(obj);
			}

			// Token: 0x06008302 RID: 33538 RVA: 0x00264F3C File Offset: 0x0026313C
			public void __callDele_EventOnGuildUpdateInfo(GuildLog obj)
			{
				this.m_owner.__callDele_EventOnGuildUpdateInfo(obj);
			}

			// Token: 0x06008303 RID: 33539 RVA: 0x00264F4C File Offset: 0x0026314C
			public void __clearDele_EventOnGuildUpdateInfo(GuildLog obj)
			{
				this.m_owner.__clearDele_EventOnGuildUpdateInfo(obj);
			}

			// Token: 0x06008304 RID: 33540 RVA: 0x00264F5C File Offset: 0x0026315C
			public void __callDele_EventOnGuildMassiveCombatAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildMassiveCombatAttackAck(obj);
			}

			// Token: 0x06008305 RID: 33541 RVA: 0x00264F6C File Offset: 0x0026316C
			public void __clearDele_EventOnGuildMassiveCombatAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildMassiveCombatAttackAck(obj);
			}

			// Token: 0x06008306 RID: 33542 RVA: 0x00264F7C File Offset: 0x0026317C
			public void __callDele_EventOnGuildMassiveCombatAttackFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnGuildMassiveCombatAttackFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008307 RID: 33543 RVA: 0x00264F8C File Offset: 0x0026318C
			public void __clearDele_EventOnGuildMassiveCombatAttackFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnGuildMassiveCombatAttackFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008308 RID: 33544 RVA: 0x00264F9C File Offset: 0x0026319C
			public void __callDele_EventOnGuildMassiveCombatDataAck(int arg1, GuildMassiveCombatGeneral arg2)
			{
				this.m_owner.__callDele_EventOnGuildMassiveCombatDataAck(arg1, arg2);
			}

			// Token: 0x06008309 RID: 33545 RVA: 0x00264FAC File Offset: 0x002631AC
			public void __clearDele_EventOnGuildMassiveCombatDataAck(int arg1, GuildMassiveCombatGeneral arg2)
			{
				this.m_owner.__clearDele_EventOnGuildMassiveCombatDataAck(arg1, arg2);
			}

			// Token: 0x0600830A RID: 33546 RVA: 0x00264FBC File Offset: 0x002631BC
			public void __callDele_EventOnGuildMassiveCombatNtf(GuildMassiveCombatGeneral obj)
			{
				this.m_owner.__callDele_EventOnGuildMassiveCombatNtf(obj);
			}

			// Token: 0x0600830B RID: 33547 RVA: 0x00264FCC File Offset: 0x002631CC
			public void __clearDele_EventOnGuildMassiveCombatNtf(GuildMassiveCombatGeneral obj)
			{
				this.m_owner.__clearDele_EventOnGuildMassiveCombatNtf(obj);
			}

			// Token: 0x0600830C RID: 33548 RVA: 0x00264FDC File Offset: 0x002631DC
			public void __callDele_EventOnGuildMassiveCombatPlayerNtf(GuildPlayerMassiveCombatInfo obj)
			{
				this.m_owner.__callDele_EventOnGuildMassiveCombatPlayerNtf(obj);
			}

			// Token: 0x0600830D RID: 33549 RVA: 0x00264FEC File Offset: 0x002631EC
			public void __clearDele_EventOnGuildMassiveCombatPlayerNtf(GuildPlayerMassiveCombatInfo obj)
			{
				this.m_owner.__clearDele_EventOnGuildMassiveCombatPlayerNtf(obj);
			}

			// Token: 0x0600830E RID: 33550 RVA: 0x00264FFC File Offset: 0x002631FC
			public void __callDele_EventOnGuildMassiveCombatStartAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildMassiveCombatStartAck(obj);
			}

			// Token: 0x0600830F RID: 33551 RVA: 0x0026500C File Offset: 0x0026320C
			public void __clearDele_EventOnGuildMassiveCombatStartAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildMassiveCombatStartAck(obj);
			}

			// Token: 0x06008310 RID: 33552 RVA: 0x0026501C File Offset: 0x0026321C
			public void __callDele_EventOnGuildMassiveCombatSurrenderAck(int obj)
			{
				this.m_owner.__callDele_EventOnGuildMassiveCombatSurrenderAck(obj);
			}

			// Token: 0x06008311 RID: 33553 RVA: 0x0026502C File Offset: 0x0026322C
			public void __clearDele_EventOnGuildMassiveCombatSurrenderAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGuildMassiveCombatSurrenderAck(obj);
			}

			// Token: 0x06008312 RID: 33554 RVA: 0x0026503C File Offset: 0x0026323C
			public void __callDele_EventOnSetProtagonistAck(int obj)
			{
				this.m_owner.__callDele_EventOnSetProtagonistAck(obj);
			}

			// Token: 0x06008313 RID: 33555 RVA: 0x0026504C File Offset: 0x0026324C
			public void __clearDele_EventOnSetProtagonistAck(int obj)
			{
				this.m_owner.__clearDele_EventOnSetProtagonistAck(obj);
			}

			// Token: 0x06008314 RID: 33556 RVA: 0x0026505C File Offset: 0x0026325C
			public void __callDele_EventOnHeroJobTransferAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroJobTransferAck(obj);
			}

			// Token: 0x06008315 RID: 33557 RVA: 0x0026506C File Offset: 0x0026326C
			public void __clearDele_EventOnHeroJobTransferAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroJobTransferAck(obj);
			}

			// Token: 0x06008316 RID: 33558 RVA: 0x0026507C File Offset: 0x0026327C
			public void __callDele_EventOnHeroStarLevelUpAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroStarLevelUpAck(obj);
			}

			// Token: 0x06008317 RID: 33559 RVA: 0x0026508C File Offset: 0x0026328C
			public void __clearDele_EventOnHeroStarLevelUpAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroStarLevelUpAck(obj);
			}

			// Token: 0x06008318 RID: 33560 RVA: 0x0026509C File Offset: 0x0026329C
			public void __callDele_EventOnHeroJobLevelUpAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroJobLevelUpAck(obj);
			}

			// Token: 0x06008319 RID: 33561 RVA: 0x002650AC File Offset: 0x002632AC
			public void __clearDele_EventOnHeroJobLevelUpAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroJobLevelUpAck(obj);
			}

			// Token: 0x0600831A RID: 33562 RVA: 0x002650BC File Offset: 0x002632BC
			public void __callDele_EventOnHeroSkillsSelectAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroSkillsSelectAck(obj);
			}

			// Token: 0x0600831B RID: 33563 RVA: 0x002650CC File Offset: 0x002632CC
			public void __clearDele_EventOnHeroSkillsSelectAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroSkillsSelectAck(obj);
			}

			// Token: 0x0600831C RID: 33564 RVA: 0x002650DC File Offset: 0x002632DC
			public void __callDele_EventOnHeroSoldierSelectAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroSoldierSelectAck(obj);
			}

			// Token: 0x0600831D RID: 33565 RVA: 0x002650EC File Offset: 0x002632EC
			public void __clearDele_EventOnHeroSoldierSelectAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroSoldierSelectAck(obj);
			}

			// Token: 0x0600831E RID: 33566 RVA: 0x002650FC File Offset: 0x002632FC
			public void __callDele_EventOnHeroComposeAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroComposeAck(obj);
			}

			// Token: 0x0600831F RID: 33567 RVA: 0x0026510C File Offset: 0x0026330C
			public void __clearDele_EventOnHeroComposeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroComposeAck(obj);
			}

			// Token: 0x06008320 RID: 33568 RVA: 0x0026511C File Offset: 0x0026331C
			public void __callDele_EventOnHeroExpAddAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroExpAddAck(obj);
			}

			// Token: 0x06008321 RID: 33569 RVA: 0x0026512C File Offset: 0x0026332C
			public void __clearDele_EventOnHeroExpAddAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroExpAddAck(obj);
			}

			// Token: 0x06008322 RID: 33570 RVA: 0x0026513C File Offset: 0x0026333C
			public void __callDele_EventOnHeroJobUnlockAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroJobUnlockAck(obj);
			}

			// Token: 0x06008323 RID: 33571 RVA: 0x0026514C File Offset: 0x0026334C
			public void __clearDele_EventOnHeroJobUnlockAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroJobUnlockAck(obj);
			}

			// Token: 0x06008324 RID: 33572 RVA: 0x0026515C File Offset: 0x0026335C
			public void __callDele_EventOnEquipmentWearAck(int obj)
			{
				this.m_owner.__callDele_EventOnEquipmentWearAck(obj);
			}

			// Token: 0x06008325 RID: 33573 RVA: 0x0026516C File Offset: 0x0026336C
			public void __clearDele_EventOnEquipmentWearAck(int obj)
			{
				this.m_owner.__clearDele_EventOnEquipmentWearAck(obj);
			}

			// Token: 0x06008326 RID: 33574 RVA: 0x0026517C File Offset: 0x0026337C
			public void __callDele_EventOnEquipmentTakeOffAck(int obj)
			{
				this.m_owner.__callDele_EventOnEquipmentTakeOffAck(obj);
			}

			// Token: 0x06008327 RID: 33575 RVA: 0x0026518C File Offset: 0x0026338C
			public void __clearDele_EventOnEquipmentTakeOffAck(int obj)
			{
				this.m_owner.__clearDele_EventOnEquipmentTakeOffAck(obj);
			}

			// Token: 0x06008328 RID: 33576 RVA: 0x0026519C File Offset: 0x0026339C
			public void __callDele_EventOnAutoEquipAck(int obj)
			{
				this.m_owner.__callDele_EventOnAutoEquipAck(obj);
			}

			// Token: 0x06008329 RID: 33577 RVA: 0x002651AC File Offset: 0x002633AC
			public void __clearDele_EventOnAutoEquipAck(int obj)
			{
				this.m_owner.__clearDele_EventOnAutoEquipAck(obj);
			}

			// Token: 0x0600832A RID: 33578 RVA: 0x002651BC File Offset: 0x002633BC
			public void __callDele_EventOnHeroFetterLevelUpAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroFetterLevelUpAck(obj);
			}

			// Token: 0x0600832B RID: 33579 RVA: 0x002651CC File Offset: 0x002633CC
			public void __clearDele_EventOnHeroFetterLevelUpAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroFetterLevelUpAck(obj);
			}

			// Token: 0x0600832C RID: 33580 RVA: 0x002651DC File Offset: 0x002633DC
			public void __callDele_EventOnHeroConfessAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnHeroConfessAck(arg1, arg2);
			}

			// Token: 0x0600832D RID: 33581 RVA: 0x002651EC File Offset: 0x002633EC
			public void __clearDele_EventOnHeroConfessAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnHeroConfessAck(arg1, arg2);
			}

			// Token: 0x0600832E RID: 33582 RVA: 0x002651FC File Offset: 0x002633FC
			public void __callDele_EventOnHeroFavorabilityExpAddAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnHeroFavorabilityExpAddAck(arg1, arg2);
			}

			// Token: 0x0600832F RID: 33583 RVA: 0x0026520C File Offset: 0x0026340C
			public void __clearDele_EventOnHeroFavorabilityExpAddAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnHeroFavorabilityExpAddAck(arg1, arg2);
			}

			// Token: 0x06008330 RID: 33584 RVA: 0x0026521C File Offset: 0x0026341C
			public void __callDele_EventOnFetterUnlockAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnFetterUnlockAck(arg1, arg2);
			}

			// Token: 0x06008331 RID: 33585 RVA: 0x0026522C File Offset: 0x0026342C
			public void __clearDele_EventOnFetterUnlockAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnFetterUnlockAck(arg1, arg2);
			}

			// Token: 0x06008332 RID: 33586 RVA: 0x0026523C File Offset: 0x0026343C
			public void __callDele_EventOnHeroInteractAck(HeroInteractAck arg1, List<Goods> arg2, int arg3)
			{
				this.m_owner.__callDele_EventOnHeroInteractAck(arg1, arg2, arg3);
			}

			// Token: 0x06008333 RID: 33587 RVA: 0x0026524C File Offset: 0x0026344C
			public void __clearDele_EventOnHeroInteractAck(HeroInteractAck arg1, List<Goods> arg2, int arg3)
			{
				this.m_owner.__clearDele_EventOnHeroInteractAck(arg1, arg2, arg3);
			}

			// Token: 0x06008334 RID: 33588 RVA: 0x0026525C File Offset: 0x0026345C
			public void __callDele_EventOnCharSkinWearAck(int obj)
			{
				this.m_owner.__callDele_EventOnCharSkinWearAck(obj);
			}

			// Token: 0x06008335 RID: 33589 RVA: 0x0026526C File Offset: 0x0026346C
			public void __clearDele_EventOnCharSkinWearAck(int obj)
			{
				this.m_owner.__clearDele_EventOnCharSkinWearAck(obj);
			}

			// Token: 0x06008336 RID: 33590 RVA: 0x0026527C File Offset: 0x0026347C
			public void __callDele_EventOnCharSkinTakeOffAck(int obj)
			{
				this.m_owner.__callDele_EventOnCharSkinTakeOffAck(obj);
			}

			// Token: 0x06008337 RID: 33591 RVA: 0x0026528C File Offset: 0x0026348C
			public void __clearDele_EventOnCharSkinTakeOffAck(int obj)
			{
				this.m_owner.__clearDele_EventOnCharSkinTakeOffAck(obj);
			}

			// Token: 0x06008338 RID: 33592 RVA: 0x0026529C File Offset: 0x0026349C
			public void __callDele_EventOnModelSkinWearAck(int obj)
			{
				this.m_owner.__callDele_EventOnModelSkinWearAck(obj);
			}

			// Token: 0x06008339 RID: 33593 RVA: 0x002652AC File Offset: 0x002634AC
			public void __clearDele_EventOnModelSkinWearAck(int obj)
			{
				this.m_owner.__clearDele_EventOnModelSkinWearAck(obj);
			}

			// Token: 0x0600833A RID: 33594 RVA: 0x002652BC File Offset: 0x002634BC
			public void __callDele_EventOnModelSkinTakeOffAck(int obj)
			{
				this.m_owner.__callDele_EventOnModelSkinTakeOffAck(obj);
			}

			// Token: 0x0600833B RID: 33595 RVA: 0x002652CC File Offset: 0x002634CC
			public void __clearDele_EventOnModelSkinTakeOffAck(int obj)
			{
				this.m_owner.__clearDele_EventOnModelSkinTakeOffAck(obj);
			}

			// Token: 0x0600833C RID: 33596 RVA: 0x002652DC File Offset: 0x002634DC
			public void __callDele_EventOnSoldierSkinWearAck(int obj)
			{
				this.m_owner.__callDele_EventOnSoldierSkinWearAck(obj);
			}

			// Token: 0x0600833D RID: 33597 RVA: 0x002652EC File Offset: 0x002634EC
			public void __clearDele_EventOnSoldierSkinWearAck(int obj)
			{
				this.m_owner.__clearDele_EventOnSoldierSkinWearAck(obj);
			}

			// Token: 0x0600833E RID: 33598 RVA: 0x002652FC File Offset: 0x002634FC
			public void __callDele_EventOnSoldierSkinTakeOffAck(int obj)
			{
				this.m_owner.__callDele_EventOnSoldierSkinTakeOffAck(obj);
			}

			// Token: 0x0600833F RID: 33599 RVA: 0x0026530C File Offset: 0x0026350C
			public void __clearDele_EventOnSoldierSkinTakeOffAck(int obj)
			{
				this.m_owner.__clearDele_EventOnSoldierSkinTakeOffAck(obj);
			}

			// Token: 0x06008340 RID: 33600 RVA: 0x0026531C File Offset: 0x0026351C
			public void __callDele_EventOnExchangeHeroFragementAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnExchangeHeroFragementAck(arg1, arg2);
			}

			// Token: 0x06008341 RID: 33601 RVA: 0x0026532C File Offset: 0x0026352C
			public void __clearDele_EventOnExchangeHeroFragementAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnExchangeHeroFragementAck(arg1, arg2);
			}

			// Token: 0x06008342 RID: 33602 RVA: 0x0026533C File Offset: 0x0026353C
			public void __callDele_EventOnAutoTakeOffEquipmentsAck(int obj)
			{
				this.m_owner.__callDele_EventOnAutoTakeOffEquipmentsAck(obj);
			}

			// Token: 0x06008343 RID: 33603 RVA: 0x0026534C File Offset: 0x0026354C
			public void __clearDele_EventOnAutoTakeOffEquipmentsAck(int obj)
			{
				this.m_owner.__clearDele_EventOnAutoTakeOffEquipmentsAck(obj);
			}

			// Token: 0x06008344 RID: 33604 RVA: 0x0026535C File Offset: 0x0026355C
			public void __callDele_EventOnHeroChangeNtf()
			{
				this.m_owner.__callDele_EventOnHeroChangeNtf();
			}

			// Token: 0x06008345 RID: 33605 RVA: 0x0026536C File Offset: 0x0026356C
			public void __clearDele_EventOnHeroChangeNtf()
			{
				this.m_owner.__clearDele_EventOnHeroChangeNtf();
			}

			// Token: 0x06008346 RID: 33606 RVA: 0x0026537C File Offset: 0x0026357C
			public void __callDele_EventOnHeroAssistantAssignToTaskAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroAssistantAssignToTaskAck(obj);
			}

			// Token: 0x06008347 RID: 33607 RVA: 0x0026538C File Offset: 0x0026358C
			public void __clearDele_EventOnHeroAssistantAssignToTaskAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroAssistantAssignToTaskAck(obj);
			}

			// Token: 0x06008348 RID: 33608 RVA: 0x0026539C File Offset: 0x0026359C
			public void __callDele_EventOnHeroAssistantCancelTaskAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroAssistantCancelTaskAck(obj);
			}

			// Token: 0x06008349 RID: 33609 RVA: 0x002653AC File Offset: 0x002635AC
			public void __clearDele_EventOnHeroAssistantCancelTaskAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroAssistantCancelTaskAck(obj);
			}

			// Token: 0x0600834A RID: 33610 RVA: 0x002653BC File Offset: 0x002635BC
			public void __callDele_EventOnHeroAssistantClaimRewardAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnHeroAssistantClaimRewardAck(arg1, arg2);
			}

			// Token: 0x0600834B RID: 33611 RVA: 0x002653CC File Offset: 0x002635CC
			public void __clearDele_EventOnHeroAssistantClaimRewardAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnHeroAssistantClaimRewardAck(arg1, arg2);
			}

			// Token: 0x0600834C RID: 33612 RVA: 0x002653DC File Offset: 0x002635DC
			public void __callDele_EventOnHeroDungeonLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroDungeonLevelAttackAck(obj);
			}

			// Token: 0x0600834D RID: 33613 RVA: 0x002653EC File Offset: 0x002635EC
			public void __clearDele_EventOnHeroDungeonLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroDungeonLevelAttackAck(obj);
			}

			// Token: 0x0600834E RID: 33614 RVA: 0x002653FC File Offset: 0x002635FC
			public void __callDele_EventOnHeroDungeonLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
			{
				this.m_owner.__callDele_EventOnHeroDungeonLevelRaidAck(arg1, arg2, arg3);
			}

			// Token: 0x0600834F RID: 33615 RVA: 0x0026540C File Offset: 0x0026360C
			public void __clearDele_EventOnHeroDungeonLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
			{
				this.m_owner.__clearDele_EventOnHeroDungeonLevelRaidAck(arg1, arg2, arg3);
			}

			// Token: 0x06008350 RID: 33616 RVA: 0x0026541C File Offset: 0x0026361C
			public void __callDele_EventOnHeroDungeonRewardGainAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__callDele_EventOnHeroDungeonRewardGainAck(arg1, arg2);
			}

			// Token: 0x06008351 RID: 33617 RVA: 0x0026542C File Offset: 0x0026362C
			public void __clearDele_EventOnHeroDungeonRewardGainAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__clearDele_EventOnHeroDungeonRewardGainAck(arg1, arg2);
			}

			// Token: 0x06008352 RID: 33618 RVA: 0x0026543C File Offset: 0x0026363C
			public void __callDele_EventOnHeroDungeonLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
			{
				this.m_owner.__callDele_EventOnHeroDungeonLevelBattleFinishedAck(result, stars, reward, isFirstWin, achievements);
			}

			// Token: 0x06008353 RID: 33619 RVA: 0x00265450 File Offset: 0x00263650
			public void __clearDele_EventOnHeroDungeonLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
			{
				this.m_owner.__clearDele_EventOnHeroDungeonLevelBattleFinishedAck(result, stars, reward, isFirstWin, achievements);
			}

			// Token: 0x06008354 RID: 33620 RVA: 0x00265464 File Offset: 0x00263664
			public void __callDele_EventOnHeroPhantomAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroPhantomAttackAck(obj);
			}

			// Token: 0x06008355 RID: 33621 RVA: 0x00265474 File Offset: 0x00263674
			public void __clearDele_EventOnHeroPhantomAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroPhantomAttackAck(obj);
			}

			// Token: 0x06008356 RID: 33622 RVA: 0x00265484 File Offset: 0x00263684
			public void __callDele_EventOnHeroPhantomBattleFinishedAck(int result, bool isWin, BattleReward reward, bool isFirstWin, List<int> achievements)
			{
				this.m_owner.__callDele_EventOnHeroPhantomBattleFinishedAck(result, isWin, reward, isFirstWin, achievements);
			}

			// Token: 0x06008357 RID: 33623 RVA: 0x00265498 File Offset: 0x00263698
			public void __clearDele_EventOnHeroPhantomBattleFinishedAck(int result, bool isWin, BattleReward reward, bool isFirstWin, List<int> achievements)
			{
				this.m_owner.__clearDele_EventOnHeroPhantomBattleFinishedAck(result, isWin, reward, isFirstWin, achievements);
			}

			// Token: 0x06008358 RID: 33624 RVA: 0x002654AC File Offset: 0x002636AC
			public void __callDele_EventOnHeroTrainningLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeroTrainningLevelAttackAck(obj);
			}

			// Token: 0x06008359 RID: 33625 RVA: 0x002654BC File Offset: 0x002636BC
			public void __clearDele_EventOnHeroTrainningLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeroTrainningLevelAttackAck(obj);
			}

			// Token: 0x0600835A RID: 33626 RVA: 0x002654CC File Offset: 0x002636CC
			public void __callDele_EventOnHeroTrainningLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnHeroTrainningLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x0600835B RID: 33627 RVA: 0x002654DC File Offset: 0x002636DC
			public void __clearDele_EventOnHeroTrainningLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnHeroTrainningLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x0600835C RID: 33628 RVA: 0x002654EC File Offset: 0x002636EC
			public void __callDele_EventOnLevelWayPointMoveAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__callDele_EventOnLevelWayPointMoveAck(arg1, arg2);
			}

			// Token: 0x0600835D RID: 33629 RVA: 0x002654FC File Offset: 0x002636FC
			public void __clearDele_EventOnLevelWayPointMoveAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__clearDele_EventOnLevelWayPointMoveAck(arg1, arg2);
			}

			// Token: 0x0600835E RID: 33630 RVA: 0x0026550C File Offset: 0x0026370C
			public void __callDele_EventOnLevelScenarioHandleAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__callDele_EventOnLevelScenarioHandleAck(arg1, arg2);
			}

			// Token: 0x0600835F RID: 33631 RVA: 0x0026551C File Offset: 0x0026371C
			public void __clearDele_EventOnLevelScenarioHandleAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__clearDele_EventOnLevelScenarioHandleAck(arg1, arg2);
			}

			// Token: 0x06008360 RID: 33632 RVA: 0x0026552C File Offset: 0x0026372C
			public void __callDele_EventOnLevelWayPointBattleFinishAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnLevelWayPointBattleFinishAck(arg1, arg2, arg3);
			}

			// Token: 0x06008361 RID: 33633 RVA: 0x0026553C File Offset: 0x0026373C
			public void __clearDele_EventOnLevelWayPointBattleFinishAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnLevelWayPointBattleFinishAck(arg1, arg2, arg3);
			}

			// Token: 0x06008362 RID: 33634 RVA: 0x0026554C File Offset: 0x0026374C
			public void __callDele_EventOnRandomEventNtf()
			{
				this.m_owner.__callDele_EventOnRandomEventNtf();
			}

			// Token: 0x06008363 RID: 33635 RVA: 0x0026555C File Offset: 0x0026375C
			public void __clearDele_EventOnRandomEventNtf()
			{
				this.m_owner.__clearDele_EventOnRandomEventNtf();
			}

			// Token: 0x06008364 RID: 33636 RVA: 0x0026556C File Offset: 0x0026376C
			public void __callDele_EventOnMailsGetAck()
			{
				this.m_owner.__callDele_EventOnMailsGetAck();
			}

			// Token: 0x06008365 RID: 33637 RVA: 0x0026557C File Offset: 0x0026377C
			public void __clearDele_EventOnMailsGetAck()
			{
				this.m_owner.__clearDele_EventOnMailsGetAck();
			}

			// Token: 0x06008366 RID: 33638 RVA: 0x0026558C File Offset: 0x0026378C
			public void __callDele_EventOnMailsChangedNtf()
			{
				this.m_owner.__callDele_EventOnMailsChangedNtf();
			}

			// Token: 0x06008367 RID: 33639 RVA: 0x0026559C File Offset: 0x0026379C
			public void __clearDele_EventOnMailsChangedNtf()
			{
				this.m_owner.__clearDele_EventOnMailsChangedNtf();
			}

			// Token: 0x06008368 RID: 33640 RVA: 0x002655AC File Offset: 0x002637AC
			public void __callDele_EventOnMailReadAck(int obj)
			{
				this.m_owner.__callDele_EventOnMailReadAck(obj);
			}

			// Token: 0x06008369 RID: 33641 RVA: 0x002655BC File Offset: 0x002637BC
			public void __clearDele_EventOnMailReadAck(int obj)
			{
				this.m_owner.__clearDele_EventOnMailReadAck(obj);
			}

			// Token: 0x0600836A RID: 33642 RVA: 0x002655CC File Offset: 0x002637CC
			public void __callDele_EventOnMailAttachmentsGetAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnMailAttachmentsGetAck(arg1, arg2);
			}

			// Token: 0x0600836B RID: 33643 RVA: 0x002655DC File Offset: 0x002637DC
			public void __clearDele_EventOnMailAttachmentsGetAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnMailAttachmentsGetAck(arg1, arg2);
			}

			// Token: 0x0600836C RID: 33644 RVA: 0x002655EC File Offset: 0x002637EC
			public void __callDele_EventOnMailAttachmentsAutoGetAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnMailAttachmentsAutoGetAck(arg1, arg2);
			}

			// Token: 0x0600836D RID: 33645 RVA: 0x002655FC File Offset: 0x002637FC
			public void __clearDele_EventOnMailAttachmentsAutoGetAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnMailAttachmentsAutoGetAck(arg1, arg2);
			}

			// Token: 0x0600836E RID: 33646 RVA: 0x0026560C File Offset: 0x0026380C
			public void __callDele_EventOnMemoryCorridorLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnMemoryCorridorLevelAttackAck(obj);
			}

			// Token: 0x0600836F RID: 33647 RVA: 0x0026561C File Offset: 0x0026381C
			public void __clearDele_EventOnMemoryCorridorLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnMemoryCorridorLevelAttackAck(obj);
			}

			// Token: 0x06008370 RID: 33648 RVA: 0x0026562C File Offset: 0x0026382C
			public void __callDele_EventOnMemoryCorridorLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnMemoryCorridorLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008371 RID: 33649 RVA: 0x0026563C File Offset: 0x0026383C
			public void __clearDele_EventOnMemoryCorridorLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnMemoryCorridorLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008372 RID: 33650 RVA: 0x0026564C File Offset: 0x0026384C
			public void __callDele_EventOnMissionRewardGetAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnMissionRewardGetAck(arg1, arg2);
			}

			// Token: 0x06008373 RID: 33651 RVA: 0x0026565C File Offset: 0x0026385C
			public void __clearDele_EventOnMissionRewardGetAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnMissionRewardGetAck(arg1, arg2);
			}

			// Token: 0x06008374 RID: 33652 RVA: 0x0026566C File Offset: 0x0026386C
			public void __callDele_EventOnNoviceClaimRewardAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnNoviceClaimRewardAck(arg1, arg2);
			}

			// Token: 0x06008375 RID: 33653 RVA: 0x0026567C File Offset: 0x0026387C
			public void __clearDele_EventOnNoviceClaimRewardAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnNoviceClaimRewardAck(arg1, arg2);
			}

			// Token: 0x06008376 RID: 33654 RVA: 0x0026568C File Offset: 0x0026388C
			public void __callDele_EventOnActivityGainRewardAck(int obj)
			{
				this.m_owner.__callDele_EventOnActivityGainRewardAck(obj);
			}

			// Token: 0x06008377 RID: 33655 RVA: 0x0026569C File Offset: 0x0026389C
			public void __clearDele_EventOnActivityGainRewardAck(int obj)
			{
				this.m_owner.__clearDele_EventOnActivityGainRewardAck(obj);
			}

			// Token: 0x06008378 RID: 33656 RVA: 0x002656AC File Offset: 0x002638AC
			public void __callDele_EventOnActivityExchangeItemGroupAck(int obj)
			{
				this.m_owner.__callDele_EventOnActivityExchangeItemGroupAck(obj);
			}

			// Token: 0x06008379 RID: 33657 RVA: 0x002656BC File Offset: 0x002638BC
			public void __clearDele_EventOnActivityExchangeItemGroupAck(int obj)
			{
				this.m_owner.__clearDele_EventOnActivityExchangeItemGroupAck(obj);
			}

			// Token: 0x0600837A RID: 33658 RVA: 0x002656CC File Offset: 0x002638CC
			public void __callDele_EventOnNewMarqueeNtf(Marquee obj)
			{
				this.m_owner.__callDele_EventOnNewMarqueeNtf(obj);
			}

			// Token: 0x0600837B RID: 33659 RVA: 0x002656DC File Offset: 0x002638DC
			public void __clearDele_EventOnNewMarqueeNtf(Marquee obj)
			{
				this.m_owner.__clearDele_EventOnNewMarqueeNtf(obj);
			}

			// Token: 0x0600837C RID: 33660 RVA: 0x002656EC File Offset: 0x002638EC
			public void __callDele_EventOnActivityRedeemClaimAck(int obj)
			{
				this.m_owner.__callDele_EventOnActivityRedeemClaimAck(obj);
			}

			// Token: 0x0600837D RID: 33661 RVA: 0x002656FC File Offset: 0x002638FC
			public void __clearDele_EventOnActivityRedeemClaimAck(int obj)
			{
				this.m_owner.__clearDele_EventOnActivityRedeemClaimAck(obj);
			}

			// Token: 0x0600837E RID: 33662 RVA: 0x0026570C File Offset: 0x0026390C
			public void __callDele_EventOnActivityFansRewardsFromPBTCBT(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnActivityFansRewardsFromPBTCBT(arg1, arg2);
			}

			// Token: 0x0600837F RID: 33663 RVA: 0x0026571C File Offset: 0x0026391C
			public void __clearDele_EventOnActivityFansRewardsFromPBTCBT(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnActivityFansRewardsFromPBTCBT(arg1, arg2);
			}

			// Token: 0x06008380 RID: 33664 RVA: 0x0026572C File Offset: 0x0026392C
			public void __callDele_EventOnExchangeGiftCDKeyAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnExchangeGiftCDKeyAck(arg1, arg2);
			}

			// Token: 0x06008381 RID: 33665 RVA: 0x0026573C File Offset: 0x0026393C
			public void __clearDele_EventOnExchangeGiftCDKeyAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnExchangeGiftCDKeyAck(arg1, arg2);
			}

			// Token: 0x06008382 RID: 33666 RVA: 0x0026574C File Offset: 0x0026394C
			public void __callDele_EventOnPlayerInfoInitAck(object obj)
			{
				this.m_owner.__callDele_EventOnPlayerInfoInitAck(obj);
			}

			// Token: 0x06008383 RID: 33667 RVA: 0x0026575C File Offset: 0x0026395C
			public void __clearDele_EventOnPlayerInfoInitAck(object obj)
			{
				this.m_owner.__clearDele_EventOnPlayerInfoInitAck(obj);
			}

			// Token: 0x06008384 RID: 33668 RVA: 0x0026576C File Offset: 0x0026396C
			public void __callDele_EventOnPlayerInfoInitEnd()
			{
				this.m_owner.__callDele_EventOnPlayerInfoInitEnd();
			}

			// Token: 0x06008385 RID: 33669 RVA: 0x0026577C File Offset: 0x0026397C
			public void __clearDele_EventOnPlayerInfoInitEnd()
			{
				this.m_owner.__clearDele_EventOnPlayerInfoInitEnd();
			}

			// Token: 0x06008386 RID: 33670 RVA: 0x0026578C File Offset: 0x0026398C
			public void __callDele_EventOnCreateCharactorAck(int obj)
			{
				this.m_owner.__callDele_EventOnCreateCharactorAck(obj);
			}

			// Token: 0x06008387 RID: 33671 RVA: 0x0026579C File Offset: 0x0026399C
			public void __clearDele_EventOnCreateCharactorAck(int obj)
			{
				this.m_owner.__clearDele_EventOnCreateCharactorAck(obj);
			}

			// Token: 0x06008388 RID: 33672 RVA: 0x002657AC File Offset: 0x002639AC
			public void __callDele_EventOnBuyEnergyAck(int obj)
			{
				this.m_owner.__callDele_EventOnBuyEnergyAck(obj);
			}

			// Token: 0x06008389 RID: 33673 RVA: 0x002657BC File Offset: 0x002639BC
			public void __clearDele_EventOnBuyEnergyAck(int obj)
			{
				this.m_owner.__clearDele_EventOnBuyEnergyAck(obj);
			}

			// Token: 0x0600838A RID: 33674 RVA: 0x002657CC File Offset: 0x002639CC
			public void __callDele_EventOnHeadPortraitAndHeadFrameSetAck(int obj)
			{
				this.m_owner.__callDele_EventOnHeadPortraitAndHeadFrameSetAck(obj);
			}

			// Token: 0x0600838B RID: 33675 RVA: 0x002657DC File Offset: 0x002639DC
			public void __clearDele_EventOnHeadPortraitAndHeadFrameSetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnHeadPortraitAndHeadFrameSetAck(obj);
			}

			// Token: 0x0600838C RID: 33676 RVA: 0x002657EC File Offset: 0x002639EC
			public void __callDele_EventOnPlayerNameChangeAck(int obj)
			{
				this.m_owner.__callDele_EventOnPlayerNameChangeAck(obj);
			}

			// Token: 0x0600838D RID: 33677 RVA: 0x002657FC File Offset: 0x002639FC
			public void __clearDele_EventOnPlayerNameChangeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnPlayerNameChangeAck(obj);
			}

			// Token: 0x0600838E RID: 33678 RVA: 0x0026580C File Offset: 0x00263A0C
			public void __callDele_EventOnPlayerInfoChangeNtf()
			{
				this.m_owner.__callDele_EventOnPlayerInfoChangeNtf();
			}

			// Token: 0x0600838F RID: 33679 RVA: 0x0026581C File Offset: 0x00263A1C
			public void __clearDele_EventOnPlayerInfoChangeNtf()
			{
				this.m_owner.__clearDele_EventOnPlayerInfoChangeNtf();
			}

			// Token: 0x06008390 RID: 33680 RVA: 0x0026582C File Offset: 0x00263A2C
			public void __callDele_EventOnArenaTicketsBuyAck(int obj)
			{
				this.m_owner.__callDele_EventOnArenaTicketsBuyAck(obj);
			}

			// Token: 0x06008391 RID: 33681 RVA: 0x0026583C File Offset: 0x00263A3C
			public void __clearDele_EventOnArenaTicketsBuyAck(int obj)
			{
				this.m_owner.__clearDele_EventOnArenaTicketsBuyAck(obj);
			}

			// Token: 0x06008392 RID: 33682 RVA: 0x0026584C File Offset: 0x00263A4C
			public void __callDele_EventOnOpenGameRatingAck()
			{
				this.m_owner.__callDele_EventOnOpenGameRatingAck();
			}

			// Token: 0x06008393 RID: 33683 RVA: 0x0026585C File Offset: 0x00263A5C
			public void __clearDele_EventOnOpenGameRatingAck()
			{
				this.m_owner.__clearDele_EventOnOpenGameRatingAck();
			}

			// Token: 0x06008394 RID: 33684 RVA: 0x0026586C File Offset: 0x00263A6C
			public void __callDele_EventOnShareAck()
			{
				this.m_owner.__callDele_EventOnShareAck();
			}

			// Token: 0x06008395 RID: 33685 RVA: 0x0026587C File Offset: 0x00263A7C
			public void __clearDele_EventOnShareAck()
			{
				this.m_owner.__clearDele_EventOnShareAck();
			}

			// Token: 0x06008396 RID: 33686 RVA: 0x0026588C File Offset: 0x00263A8C
			public void __callDele_EventOnCheckOnlineAck()
			{
				this.m_owner.__callDele_EventOnCheckOnlineAck();
			}

			// Token: 0x06008397 RID: 33687 RVA: 0x0026589C File Offset: 0x00263A9C
			public void __clearDele_EventOnCheckOnlineAck()
			{
				this.m_owner.__clearDele_EventOnCheckOnlineAck();
			}

			// Token: 0x06008398 RID: 33688 RVA: 0x002658AC File Offset: 0x00263AAC
			public void __callDele_EventOnSendClientHeartBeatNtfFail()
			{
				this.m_owner.__callDele_EventOnSendClientHeartBeatNtfFail();
			}

			// Token: 0x06008399 RID: 33689 RVA: 0x002658BC File Offset: 0x00263ABC
			public void __clearDele_EventOnSendClientHeartBeatNtfFail()
			{
				this.m_owner.__clearDele_EventOnSendClientHeartBeatNtfFail();
			}

			// Token: 0x0600839A RID: 33690 RVA: 0x002658CC File Offset: 0x00263ACC
			public void __callDele_EventOnSendClientAppResumeNtfFail()
			{
				this.m_owner.__callDele_EventOnSendClientAppResumeNtfFail();
			}

			// Token: 0x0600839B RID: 33691 RVA: 0x002658DC File Offset: 0x00263ADC
			public void __clearDele_EventOnSendClientAppResumeNtfFail()
			{
				this.m_owner.__clearDele_EventOnSendClientAppResumeNtfFail();
			}

			// Token: 0x0600839C RID: 33692 RVA: 0x002658EC File Offset: 0x00263AEC
			public void __callDele_EventOpenMemoryStoreAck()
			{
				this.m_owner.__callDele_EventOpenMemoryStoreAck();
			}

			// Token: 0x0600839D RID: 33693 RVA: 0x002658FC File Offset: 0x00263AFC
			public void __clearDele_EventOpenMemoryStoreAck()
			{
				this.m_owner.__clearDele_EventOpenMemoryStoreAck();
			}

			// Token: 0x0600839E RID: 33694 RVA: 0x0026590C File Offset: 0x00263B0C
			public void __callDele_EventOnResetPushNotification()
			{
				this.m_owner.__callDele_EventOnResetPushNotification();
			}

			// Token: 0x0600839F RID: 33695 RVA: 0x0026591C File Offset: 0x00263B1C
			public void __clearDele_EventOnResetPushNotification()
			{
				this.m_owner.__clearDele_EventOnResetPushNotification();
			}

			// Token: 0x060083A0 RID: 33696 RVA: 0x0026592C File Offset: 0x00263B2C
			public void __callDele_EventOnRaffleDrawAck(int arg1, int arg2, Goods arg3)
			{
				this.m_owner.__callDele_EventOnRaffleDrawAck(arg1, arg2, arg3);
			}

			// Token: 0x060083A1 RID: 33697 RVA: 0x0026593C File Offset: 0x00263B3C
			public void __clearDele_EventOnRaffleDrawAck(int arg1, int arg2, Goods arg3)
			{
				this.m_owner.__clearDele_EventOnRaffleDrawAck(arg1, arg2, arg3);
			}

			// Token: 0x060083A2 RID: 33698 RVA: 0x0026594C File Offset: 0x00263B4C
			public void __callDele_EventOnGetRandomStoreListAck(int obj)
			{
				this.m_owner.__callDele_EventOnGetRandomStoreListAck(obj);
			}

			// Token: 0x060083A3 RID: 33699 RVA: 0x0026595C File Offset: 0x00263B5C
			public void __clearDele_EventOnGetRandomStoreListAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGetRandomStoreListAck(obj);
			}

			// Token: 0x060083A4 RID: 33700 RVA: 0x0026596C File Offset: 0x00263B6C
			public void __callDele_EventOnFlushRandomStoreAck(int obj)
			{
				this.m_owner.__callDele_EventOnFlushRandomStoreAck(obj);
			}

			// Token: 0x060083A5 RID: 33701 RVA: 0x0026597C File Offset: 0x00263B7C
			public void __clearDele_EventOnFlushRandomStoreAck(int obj)
			{
				this.m_owner.__clearDele_EventOnFlushRandomStoreAck(obj);
			}

			// Token: 0x060083A6 RID: 33702 RVA: 0x0026598C File Offset: 0x00263B8C
			public void __callDele_EventOnRandomStoreBuyStoreItemAck(int obj)
			{
				this.m_owner.__callDele_EventOnRandomStoreBuyStoreItemAck(obj);
			}

			// Token: 0x060083A7 RID: 33703 RVA: 0x0026599C File Offset: 0x00263B9C
			public void __clearDele_EventOnRandomStoreBuyStoreItemAck(int obj)
			{
				this.m_owner.__clearDele_EventOnRandomStoreBuyStoreItemAck(obj);
			}

			// Token: 0x060083A8 RID: 33704 RVA: 0x002659AC File Offset: 0x00263BAC
			public void __callDele_EventOnRankingListInfoQueryAck(int obj)
			{
				this.m_owner.__callDele_EventOnRankingListInfoQueryAck(obj);
			}

			// Token: 0x060083A9 RID: 33705 RVA: 0x002659BC File Offset: 0x00263BBC
			public void __clearDele_EventOnRankingListInfoQueryAck(int obj)
			{
				this.m_owner.__clearDele_EventOnRankingListInfoQueryAck(obj);
			}

			// Token: 0x060083AA RID: 33706 RVA: 0x002659CC File Offset: 0x00263BCC
			public void __callDele_EventOnRealTimePVPWaitingForOpponentAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnRealTimePVPWaitingForOpponentAck(arg1, arg2);
			}

			// Token: 0x060083AB RID: 33707 RVA: 0x002659DC File Offset: 0x00263BDC
			public void __clearDele_EventOnRealTimePVPWaitingForOpponentAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnRealTimePVPWaitingForOpponentAck(arg1, arg2);
			}

			// Token: 0x060083AC RID: 33708 RVA: 0x002659EC File Offset: 0x00263BEC
			public void __callDele_EventOnRealTimePVPMatchupNtf(int obj)
			{
				this.m_owner.__callDele_EventOnRealTimePVPMatchupNtf(obj);
			}

			// Token: 0x060083AD RID: 33709 RVA: 0x002659FC File Offset: 0x00263BFC
			public void __clearDele_EventOnRealTimePVPMatchupNtf(int obj)
			{
				this.m_owner.__clearDele_EventOnRealTimePVPMatchupNtf(obj);
			}

			// Token: 0x060083AE RID: 33710 RVA: 0x00265A0C File Offset: 0x00263C0C
			public void __callDele_EventOnRealTimePVPCancelWaitingForOpponentAck(int obj)
			{
				this.m_owner.__callDele_EventOnRealTimePVPCancelWaitingForOpponentAck(obj);
			}

			// Token: 0x060083AF RID: 33711 RVA: 0x00265A1C File Offset: 0x00263C1C
			public void __clearDele_EventOnRealTimePVPCancelWaitingForOpponentAck(int obj)
			{
				this.m_owner.__clearDele_EventOnRealTimePVPCancelWaitingForOpponentAck(obj);
			}

			// Token: 0x060083B0 RID: 33712 RVA: 0x00265A2C File Offset: 0x00263C2C
			public void __callDele_EventOnRealTimePVPGetInfoAck(int obj)
			{
				this.m_owner.__callDele_EventOnRealTimePVPGetInfoAck(obj);
			}

			// Token: 0x060083B1 RID: 33713 RVA: 0x00265A3C File Offset: 0x00263C3C
			public void __clearDele_EventOnRealTimePVPGetInfoAck(int obj)
			{
				this.m_owner.__clearDele_EventOnRealTimePVPGetInfoAck(obj);
			}

			// Token: 0x060083B2 RID: 33714 RVA: 0x00265A4C File Offset: 0x00263C4C
			public void __callDele_EventOnRealTimePVPGetTopPlayersAck(int obj)
			{
				this.m_owner.__callDele_EventOnRealTimePVPGetTopPlayersAck(obj);
			}

			// Token: 0x060083B3 RID: 33715 RVA: 0x00265A5C File Offset: 0x00263C5C
			public void __clearDele_EventOnRealTimePVPGetTopPlayersAck(int obj)
			{
				this.m_owner.__clearDele_EventOnRealTimePVPGetTopPlayersAck(obj);
			}

			// Token: 0x060083B4 RID: 33716 RVA: 0x00265A6C File Offset: 0x00263C6C
			public void __callDele_EventOnRealTimePVPAcquireWinsBonusAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__callDele_EventOnRealTimePVPAcquireWinsBonusAck(arg1, arg2);
			}

			// Token: 0x060083B5 RID: 33717 RVA: 0x00265A7C File Offset: 0x00263C7C
			public void __clearDele_EventOnRealTimePVPAcquireWinsBonusAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__clearDele_EventOnRealTimePVPAcquireWinsBonusAck(arg1, arg2);
			}

			// Token: 0x060083B6 RID: 33718 RVA: 0x00265A8C File Offset: 0x00263C8C
			public void __callDele_EventOnRealTimePVPLeaderboardInfoNtf(ProRealTimePVPUserInfo obj)
			{
				this.m_owner.__callDele_EventOnRealTimePVPLeaderboardInfoNtf(obj);
			}

			// Token: 0x060083B7 RID: 33719 RVA: 0x00265A9C File Offset: 0x00263C9C
			public void __clearDele_EventOnRealTimePVPLeaderboardInfoNtf(ProRealTimePVPUserInfo obj)
			{
				this.m_owner.__clearDele_EventOnRealTimePVPLeaderboardInfoNtf(obj);
			}

			// Token: 0x060083B8 RID: 33720 RVA: 0x00265AAC File Offset: 0x00263CAC
			public void __callDele_EventOnRechargeBoughtSuccessNtf(string obj)
			{
				this.m_owner.__callDele_EventOnRechargeBoughtSuccessNtf(obj);
			}

			// Token: 0x060083B9 RID: 33721 RVA: 0x00265ABC File Offset: 0x00263CBC
			public void __clearDele_EventOnRechargeBoughtSuccessNtf(string obj)
			{
				this.m_owner.__clearDele_EventOnRechargeBoughtSuccessNtf(obj);
			}

			// Token: 0x060083BA RID: 33722 RVA: 0x00265ACC File Offset: 0x00263CCC
			public void __callDele_EventOnRechargeStoreItemBuyAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnRechargeStoreItemBuyAck(arg1, arg2);
			}

			// Token: 0x060083BB RID: 33723 RVA: 0x00265ADC File Offset: 0x00263CDC
			public void __clearDele_EventOnRechargeStoreItemBuyAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnRechargeStoreItemBuyAck(arg1, arg2);
			}

			// Token: 0x060083BC RID: 33724 RVA: 0x00265AEC File Offset: 0x00263CEC
			public void __callDele_EventOnRechargeStoreCancelBuyAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnRechargeStoreCancelBuyAck(arg1, arg2);
			}

			// Token: 0x060083BD RID: 33725 RVA: 0x00265AFC File Offset: 0x00263CFC
			public void __clearDele_EventOnRechargeStoreCancelBuyAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnRechargeStoreCancelBuyAck(arg1, arg2);
			}

			// Token: 0x060083BE RID: 33726 RVA: 0x00265B0C File Offset: 0x00263D0C
			public void __callDele_EventOnRiftLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnRiftLevelAttackAck(obj);
			}

			// Token: 0x060083BF RID: 33727 RVA: 0x00265B1C File Offset: 0x00263D1C
			public void __clearDele_EventOnRiftLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnRiftLevelAttackAck(obj);
			}

			// Token: 0x060083C0 RID: 33728 RVA: 0x00265B2C File Offset: 0x00263D2C
			public void __callDele_EventOnRiftLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
			{
				this.m_owner.__callDele_EventOnRiftLevelBattleFinishedAck(result, stars, reward, isFirstWin, achievements);
			}

			// Token: 0x060083C1 RID: 33729 RVA: 0x00265B40 File Offset: 0x00263D40
			public void __clearDele_EventOnRiftLevelBattleFinishedAck(int result, int stars, BattleReward reward, bool isFirstWin, List<int> achievements)
			{
				this.m_owner.__clearDele_EventOnRiftLevelBattleFinishedAck(result, stars, reward, isFirstWin, achievements);
			}

			// Token: 0x060083C2 RID: 33730 RVA: 0x00265B54 File Offset: 0x00263D54
			public void __callDele_EventOnRiftLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
			{
				this.m_owner.__callDele_EventOnRiftLevelRaidAck(arg1, arg2, arg3);
			}

			// Token: 0x060083C3 RID: 33731 RVA: 0x00265B64 File Offset: 0x00263D64
			public void __clearDele_EventOnRiftLevelRaidAck(int arg1, BattleReward arg2, List<Goods> arg3)
			{
				this.m_owner.__clearDele_EventOnRiftLevelRaidAck(arg1, arg2, arg3);
			}

			// Token: 0x060083C4 RID: 33732 RVA: 0x00265B74 File Offset: 0x00263D74
			public void __callDele_EventOnRiftChapterRewardGainAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__callDele_EventOnRiftChapterRewardGainAck(arg1, arg2);
			}

			// Token: 0x060083C5 RID: 33733 RVA: 0x00265B84 File Offset: 0x00263D84
			public void __clearDele_EventOnRiftChapterRewardGainAck(int arg1, BattleReward arg2)
			{
				this.m_owner.__clearDele_EventOnRiftChapterRewardGainAck(arg1, arg2);
			}

			// Token: 0x060083C6 RID: 33734 RVA: 0x00265B94 File Offset: 0x00263D94
			public void __callDele_EventOnCardSelectAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnCardSelectAck(arg1, arg2);
			}

			// Token: 0x060083C7 RID: 33735 RVA: 0x00265BA4 File Offset: 0x00263DA4
			public void __clearDele_EventOnCardSelectAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnCardSelectAck(arg1, arg2);
			}

			// Token: 0x060083C8 RID: 33736 RVA: 0x00265BB4 File Offset: 0x00263DB4
			public void __callDele_EventOnEverydaySignAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__callDele_EventOnEverydaySignAck(arg1, arg2);
			}

			// Token: 0x060083C9 RID: 33737 RVA: 0x00265BC4 File Offset: 0x00263DC4
			public void __clearDele_EventOnEverydaySignAck(int arg1, List<Goods> arg2)
			{
				this.m_owner.__clearDele_EventOnEverydaySignAck(arg1, arg2);
			}

			// Token: 0x060083CA RID: 33738 RVA: 0x00265BD4 File Offset: 0x00263DD4
			public void __callDele_EventOnOpenSurveyAck(int obj)
			{
				this.m_owner.__callDele_EventOnOpenSurveyAck(obj);
			}

			// Token: 0x060083CB RID: 33739 RVA: 0x00265BE4 File Offset: 0x00263DE4
			public void __clearDele_EventOnOpenSurveyAck(int obj)
			{
				this.m_owner.__clearDele_EventOnOpenSurveyAck(obj);
			}

			// Token: 0x060083CC RID: 33740 RVA: 0x00265BF4 File Offset: 0x00263DF4
			public void __callDele_EventOnGetSurveyRewardAck(int obj)
			{
				this.m_owner.__callDele_EventOnGetSurveyRewardAck(obj);
			}

			// Token: 0x060083CD RID: 33741 RVA: 0x00265C04 File Offset: 0x00263E04
			public void __clearDele_EventOnGetSurveyRewardAck(int obj)
			{
				this.m_owner.__clearDele_EventOnGetSurveyRewardAck(obj);
			}

			// Token: 0x060083CE RID: 33742 RVA: 0x00265C14 File Offset: 0x00263E14
			public void __callDele_EventOnTeamRoomCreateAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomCreateAck(obj);
			}

			// Token: 0x060083CF RID: 33743 RVA: 0x00265C24 File Offset: 0x00263E24
			public void __clearDele_EventOnTeamRoomCreateAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomCreateAck(obj);
			}

			// Token: 0x060083D0 RID: 33744 RVA: 0x00265C34 File Offset: 0x00263E34
			public void __callDele_EventOnTeamRoomViewAck(int arg1, List<TeamRoom> arg2)
			{
				this.m_owner.__callDele_EventOnTeamRoomViewAck(arg1, arg2);
			}

			// Token: 0x060083D1 RID: 33745 RVA: 0x00265C44 File Offset: 0x00263E44
			public void __clearDele_EventOnTeamRoomViewAck(int arg1, List<TeamRoom> arg2)
			{
				this.m_owner.__clearDele_EventOnTeamRoomViewAck(arg1, arg2);
			}

			// Token: 0x060083D2 RID: 33746 RVA: 0x00265C54 File Offset: 0x00263E54
			public void __callDele_EventOnTeamRoomAutoMatchAck(int arg1, int arg2, bool arg3)
			{
				this.m_owner.__callDele_EventOnTeamRoomAutoMatchAck(arg1, arg2, arg3);
			}

			// Token: 0x060083D3 RID: 33747 RVA: 0x00265C64 File Offset: 0x00263E64
			public void __clearDele_EventOnTeamRoomAutoMatchAck(int arg1, int arg2, bool arg3)
			{
				this.m_owner.__clearDele_EventOnTeamRoomAutoMatchAck(arg1, arg2, arg3);
			}

			// Token: 0x060083D4 RID: 33748 RVA: 0x00265C74 File Offset: 0x00263E74
			public void __callDele_EventOnTeamRoomAutoMatchCancelAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomAutoMatchCancelAck(obj);
			}

			// Token: 0x060083D5 RID: 33749 RVA: 0x00265C84 File Offset: 0x00263E84
			public void __clearDele_EventOnTeamRoomAutoMatchCancelAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomAutoMatchCancelAck(obj);
			}

			// Token: 0x060083D6 RID: 33750 RVA: 0x00265C94 File Offset: 0x00263E94
			public void __callDele_EventOnTeamRoomAuthorityChangeAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomAuthorityChangeAck(obj);
			}

			// Token: 0x060083D7 RID: 33751 RVA: 0x00265CA4 File Offset: 0x00263EA4
			public void __clearDele_EventOnTeamRoomAuthorityChangeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomAuthorityChangeAck(obj);
			}

			// Token: 0x060083D8 RID: 33752 RVA: 0x00265CB4 File Offset: 0x00263EB4
			public void __callDele_EventOnTeamRoomJoinAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomJoinAck(obj);
			}

			// Token: 0x060083D9 RID: 33753 RVA: 0x00265CC4 File Offset: 0x00263EC4
			public void __clearDele_EventOnTeamRoomJoinAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomJoinAck(obj);
			}

			// Token: 0x060083DA RID: 33754 RVA: 0x00265CD4 File Offset: 0x00263ED4
			public void __callDele_EventOnTeamRoomQuitAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomQuitAck(obj);
			}

			// Token: 0x060083DB RID: 33755 RVA: 0x00265CE4 File Offset: 0x00263EE4
			public void __clearDele_EventOnTeamRoomQuitAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomQuitAck(obj);
			}

			// Token: 0x060083DC RID: 33756 RVA: 0x00265CF4 File Offset: 0x00263EF4
			public void __callDele_EventOnTeamRoomGetAck(int arg1, int arg2)
			{
				this.m_owner.__callDele_EventOnTeamRoomGetAck(arg1, arg2);
			}

			// Token: 0x060083DD RID: 33757 RVA: 0x00265D04 File Offset: 0x00263F04
			public void __clearDele_EventOnTeamRoomGetAck(int arg1, int arg2)
			{
				this.m_owner.__clearDele_EventOnTeamRoomGetAck(arg1, arg2);
			}

			// Token: 0x060083DE RID: 33758 RVA: 0x00265D14 File Offset: 0x00263F14
			public void __callDele_EventOnTeamRoomInviteAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomInviteAck(obj);
			}

			// Token: 0x060083DF RID: 33759 RVA: 0x00265D24 File Offset: 0x00263F24
			public void __clearDele_EventOnTeamRoomInviteAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomInviteAck(obj);
			}

			// Token: 0x060083E0 RID: 33760 RVA: 0x00265D34 File Offset: 0x00263F34
			public void __callDele_EventOnTeamRoomInvitationRefusedAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomInvitationRefusedAck(obj);
			}

			// Token: 0x060083E1 RID: 33761 RVA: 0x00265D44 File Offset: 0x00263F44
			public void __clearDele_EventOnTeamRoomInvitationRefusedAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomInvitationRefusedAck(obj);
			}

			// Token: 0x060083E2 RID: 33762 RVA: 0x00265D54 File Offset: 0x00263F54
			public void __callDele_EventOnTeamRoomInviteeInfoGetAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomInviteeInfoGetAck(obj);
			}

			// Token: 0x060083E3 RID: 33763 RVA: 0x00265D64 File Offset: 0x00263F64
			public void __clearDele_EventOnTeamRoomInviteeInfoGetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomInviteeInfoGetAck(obj);
			}

			// Token: 0x060083E4 RID: 33764 RVA: 0x00265D74 File Offset: 0x00263F74
			public void __callDele_EventOnTeamRoomPlayerJoinNtf(TeamRoomPlayer obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomPlayerJoinNtf(obj);
			}

			// Token: 0x060083E5 RID: 33765 RVA: 0x00265D84 File Offset: 0x00263F84
			public void __clearDele_EventOnTeamRoomPlayerJoinNtf(TeamRoomPlayer obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomPlayerJoinNtf(obj);
			}

			// Token: 0x060083E6 RID: 33766 RVA: 0x00265D94 File Offset: 0x00263F94
			public void __callDele_EventOnTeamRoomPlayerQuitNtf(TeamRoomPlayer obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomPlayerQuitNtf(obj);
			}

			// Token: 0x060083E7 RID: 33767 RVA: 0x00265DA4 File Offset: 0x00263FA4
			public void __clearDele_EventOnTeamRoomPlayerQuitNtf(TeamRoomPlayer obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomPlayerQuitNtf(obj);
			}

			// Token: 0x060083E8 RID: 33768 RVA: 0x00265DB4 File Offset: 0x00263FB4
			public void __callDele_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf()
			{
				this.m_owner.__callDele_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf();
			}

			// Token: 0x060083E9 RID: 33769 RVA: 0x00265DC4 File Offset: 0x00263FC4
			public void __clearDele_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf()
			{
				this.m_owner.__clearDele_EventOnTeamRoomPlayerLeaveWaitingListAndJoinRoomNtf();
			}

			// Token: 0x060083EA RID: 33770 RVA: 0x00265DD4 File Offset: 0x00263FD4
			public void __callDele_EventOnTeamRoomAuthorityChangeNtf(TeamRoomAuthority obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomAuthorityChangeNtf(obj);
			}

			// Token: 0x060083EB RID: 33771 RVA: 0x00265DE4 File Offset: 0x00263FE4
			public void __clearDele_EventOnTeamRoomAuthorityChangeNtf(TeamRoomAuthority obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomAuthorityChangeNtf(obj);
			}

			// Token: 0x060083EC RID: 33772 RVA: 0x00265DF4 File Offset: 0x00263FF4
			public void __callDele_EventOnTeamRoomAutoMatchInfoNtf(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomAutoMatchInfoNtf(obj);
			}

			// Token: 0x060083ED RID: 33773 RVA: 0x00265E04 File Offset: 0x00264004
			public void __clearDele_EventOnTeamRoomAutoMatchInfoNtf(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomAutoMatchInfoNtf(obj);
			}

			// Token: 0x060083EE RID: 33774 RVA: 0x00265E14 File Offset: 0x00264014
			public void __callDele_EventOnTeamRoomInviteNtf(TeamRoomInviteInfo obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomInviteNtf(obj);
			}

			// Token: 0x060083EF RID: 33775 RVA: 0x00265E24 File Offset: 0x00264024
			public void __clearDele_EventOnTeamRoomInviteNtf(TeamRoomInviteInfo obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomInviteNtf(obj);
			}

			// Token: 0x060083F0 RID: 33776 RVA: 0x00265E34 File Offset: 0x00264034
			public void __callDele_EventOnTeamRoomInvitationRefusedNtf(int arg1, string arg2)
			{
				this.m_owner.__callDele_EventOnTeamRoomInvitationRefusedNtf(arg1, arg2);
			}

			// Token: 0x060083F1 RID: 33777 RVA: 0x00265E44 File Offset: 0x00264044
			public void __clearDele_EventOnTeamRoomInvitationRefusedNtf(int arg1, string arg2)
			{
				this.m_owner.__clearDele_EventOnTeamRoomInvitationRefusedNtf(arg1, arg2);
			}

			// Token: 0x060083F2 RID: 33778 RVA: 0x00265E54 File Offset: 0x00264054
			public void __callDele_EventOnTeamRoomSelfKickOutNtf()
			{
				this.m_owner.__callDele_EventOnTeamRoomSelfKickOutNtf();
			}

			// Token: 0x060083F3 RID: 33779 RVA: 0x00265E64 File Offset: 0x00264064
			public void __clearDele_EventOnTeamRoomSelfKickOutNtf()
			{
				this.m_owner.__clearDele_EventOnTeamRoomSelfKickOutNtf();
			}

			// Token: 0x060083F4 RID: 33780 RVA: 0x00265E74 File Offset: 0x00264074
			public void __callDele_EventOnTeamRoomInviteeInfoNtf(string arg1, int arg2, int arg3)
			{
				this.m_owner.__callDele_EventOnTeamRoomInviteeInfoNtf(arg1, arg2, arg3);
			}

			// Token: 0x060083F5 RID: 33781 RVA: 0x00265E84 File Offset: 0x00264084
			public void __clearDele_EventOnTeamRoomInviteeInfoNtf(string arg1, int arg2, int arg3)
			{
				this.m_owner.__clearDele_EventOnTeamRoomInviteeInfoNtf(arg1, arg2, arg3);
			}

			// Token: 0x060083F6 RID: 33782 RVA: 0x00265E94 File Offset: 0x00264094
			public void __callDele_EventOnTeamRoomPlayerPositionChangeAck(int obj)
			{
				this.m_owner.__callDele_EventOnTeamRoomPlayerPositionChangeAck(obj);
			}

			// Token: 0x060083F7 RID: 33783 RVA: 0x00265EA4 File Offset: 0x002640A4
			public void __clearDele_EventOnTeamRoomPlayerPositionChangeAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTeamRoomPlayerPositionChangeAck(obj);
			}

			// Token: 0x060083F8 RID: 33784 RVA: 0x00265EB4 File Offset: 0x002640B4
			public void __callDele_EventOnTeamRoomPlayerPositionChangeNtf()
			{
				this.m_owner.__callDele_EventOnTeamRoomPlayerPositionChangeNtf();
			}

			// Token: 0x060083F9 RID: 33785 RVA: 0x00265EC4 File Offset: 0x002640C4
			public void __clearDele_EventOnTeamRoomPlayerPositionChangeNtf()
			{
				this.m_owner.__clearDele_EventOnTeamRoomPlayerPositionChangeNtf();
			}

			// Token: 0x060083FA RID: 33786 RVA: 0x00265ED4 File Offset: 0x002640D4
			public void __callDele_EventOnThearchyTrialLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnThearchyTrialLevelAttackAck(obj);
			}

			// Token: 0x060083FB RID: 33787 RVA: 0x00265EE4 File Offset: 0x002640E4
			public void __clearDele_EventOnThearchyTrialLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnThearchyTrialLevelAttackAck(obj);
			}

			// Token: 0x060083FC RID: 33788 RVA: 0x00265EF4 File Offset: 0x002640F4
			public void __callDele_EventOnThearchyTrialLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnThearchyTrialLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x060083FD RID: 33789 RVA: 0x00265F04 File Offset: 0x00264104
			public void __clearDele_EventOnThearchyTrialLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnThearchyTrialLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x060083FE RID: 33790 RVA: 0x00265F14 File Offset: 0x00264114
			public void __callDele_EventOnTrainingGroundTechLevelupAck(int obj)
			{
				this.m_owner.__callDele_EventOnTrainingGroundTechLevelupAck(obj);
			}

			// Token: 0x060083FF RID: 33791 RVA: 0x00265F24 File Offset: 0x00264124
			public void __clearDele_EventOnTrainingGroundTechLevelupAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTrainingGroundTechLevelupAck(obj);
			}

			// Token: 0x06008400 RID: 33792 RVA: 0x00265F34 File Offset: 0x00264134
			public void __callDele_EventOnTreasureLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnTreasureLevelAttackAck(obj);
			}

			// Token: 0x06008401 RID: 33793 RVA: 0x00265F44 File Offset: 0x00264144
			public void __clearDele_EventOnTreasureLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnTreasureLevelAttackAck(obj);
			}

			// Token: 0x06008402 RID: 33794 RVA: 0x00265F54 File Offset: 0x00264154
			public void __callDele_EventOnTreasureLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnTreasureLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008403 RID: 33795 RVA: 0x00265F64 File Offset: 0x00264164
			public void __clearDele_EventOnTreasureLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnTreasureLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008404 RID: 33796 RVA: 0x00265F74 File Offset: 0x00264174
			public void __callDele_EventOnUnchartedScoreChallengeLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnUnchartedScoreChallengeLevelAttackAck(obj);
			}

			// Token: 0x06008405 RID: 33797 RVA: 0x00265F84 File Offset: 0x00264184
			public void __clearDele_EventOnUnchartedScoreChallengeLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnUnchartedScoreChallengeLevelAttackAck(obj);
			}

			// Token: 0x06008406 RID: 33798 RVA: 0x00265F94 File Offset: 0x00264194
			public void __callDele_EventOnUnchartedScoreChallengeLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnUnchartedScoreChallengeLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008407 RID: 33799 RVA: 0x00265FA4 File Offset: 0x002641A4
			public void __clearDele_EventOnUnchartedScoreChallengeLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnUnchartedScoreChallengeLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x06008408 RID: 33800 RVA: 0x00265FB4 File Offset: 0x002641B4
			public void __callDele_EventOnUnchartedScoreScoreLevelAttackAck(int obj)
			{
				this.m_owner.__callDele_EventOnUnchartedScoreScoreLevelAttackAck(obj);
			}

			// Token: 0x06008409 RID: 33801 RVA: 0x00265FC4 File Offset: 0x002641C4
			public void __clearDele_EventOnUnchartedScoreScoreLevelAttackAck(int obj)
			{
				this.m_owner.__clearDele_EventOnUnchartedScoreScoreLevelAttackAck(obj);
			}

			// Token: 0x0600840A RID: 33802 RVA: 0x00265FD4 File Offset: 0x002641D4
			public void __callDele_EventOnUnchartedScoreScoreLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__callDele_EventOnUnchartedScoreScoreLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x0600840B RID: 33803 RVA: 0x00265FE4 File Offset: 0x002641E4
			public void __clearDele_EventOnUnchartedScoreScoreLevelBattleFinishedAck(int arg1, bool arg2, BattleReward arg3)
			{
				this.m_owner.__clearDele_EventOnUnchartedScoreScoreLevelBattleFinishedAck(arg1, arg2, arg3);
			}

			// Token: 0x0600840C RID: 33804 RVA: 0x00265FF4 File Offset: 0x002641F4
			public void __callDele_EventOnUserGuideSetAck(int obj)
			{
				this.m_owner.__callDele_EventOnUserGuideSetAck(obj);
			}

			// Token: 0x0600840D RID: 33805 RVA: 0x00266004 File Offset: 0x00264204
			public void __clearDele_EventOnUserGuideSetAck(int obj)
			{
				this.m_owner.__clearDele_EventOnUserGuideSetAck(obj);
			}

			// Token: 0x17001BF2 RID: 7154
			// (get) Token: 0x0600840E RID: 33806 RVA: 0x00266014 File Offset: 0x00264214
			// (set) Token: 0x0600840F RID: 33807 RVA: 0x00266024 File Offset: 0x00264224
			public float m_testMarqueeTime
			{
				get
				{
					return this.m_owner.m_testMarqueeTime;
				}
				set
				{
					this.m_owner.m_testMarqueeTime = value;
				}
			}

			// Token: 0x17001BF3 RID: 7155
			// (get) Token: 0x06008410 RID: 33808 RVA: 0x00266034 File Offset: 0x00264234
			// (set) Token: 0x06008411 RID: 33809 RVA: 0x00266044 File Offset: 0x00264244
			public float m_testChatTime
			{
				get
				{
					return this.m_owner.m_testChatTime;
				}
				set
				{
					this.m_owner.m_testChatTime = value;
				}
			}

			// Token: 0x17001BF4 RID: 7156
			// (get) Token: 0x06008412 RID: 33810 RVA: 0x00266054 File Offset: 0x00264254
			// (set) Token: 0x06008413 RID: 33811 RVA: 0x00266064 File Offset: 0x00264264
			public long m_serverTime
			{
				get
				{
					return this.m_owner.m_serverTime;
				}
				set
				{
					this.m_owner.m_serverTime = value;
				}
			}

			// Token: 0x17001BF5 RID: 7157
			// (get) Token: 0x06008414 RID: 33812 RVA: 0x00266074 File Offset: 0x00264274
			// (set) Token: 0x06008415 RID: 33813 RVA: 0x00266084 File Offset: 0x00264284
			public IConfigDataLoader m_configDataLoader
			{
				get
				{
					return this.m_owner.m_configDataLoader;
				}
				set
				{
					this.m_owner.m_configDataLoader = value;
				}
			}

			// Token: 0x17001BF6 RID: 7158
			// (get) Token: 0x06008416 RID: 33814 RVA: 0x00266094 File Offset: 0x00264294
			// (set) Token: 0x06008417 RID: 33815 RVA: 0x002660A4 File Offset: 0x002642A4
			public ComponenetManager<IComponentBase> m_components
			{
				get
				{
					return this.m_owner.m_components;
				}
				set
				{
					this.m_owner.m_components = value;
				}
			}

			// Token: 0x17001BF7 RID: 7159
			// (get) Token: 0x06008418 RID: 33816 RVA: 0x002660B4 File Offset: 0x002642B4
			// (set) Token: 0x06008419 RID: 33817 RVA: 0x002660C4 File Offset: 0x002642C4
			public HeroComponent m_heroComponent
			{
				get
				{
					return this.m_owner.m_heroComponent;
				}
				set
				{
					this.m_owner.m_heroComponent = value;
				}
			}

			// Token: 0x17001BF8 RID: 7160
			// (get) Token: 0x0600841A RID: 33818 RVA: 0x002660D4 File Offset: 0x002642D4
			// (set) Token: 0x0600841B RID: 33819 RVA: 0x002660E4 File Offset: 0x002642E4
			public BagComponent m_bagComponent
			{
				get
				{
					return this.m_owner.m_bagComponent;
				}
				set
				{
					this.m_owner.m_bagComponent = value;
				}
			}

			// Token: 0x17001BF9 RID: 7161
			// (get) Token: 0x0600841C RID: 33820 RVA: 0x002660F4 File Offset: 0x002642F4
			// (set) Token: 0x0600841D RID: 33821 RVA: 0x00266104 File Offset: 0x00264304
			public BattleComponent m_battleComponent
			{
				get
				{
					return this.m_owner.m_battleComponent;
				}
				set
				{
					this.m_owner.m_battleComponent = value;
				}
			}

			// Token: 0x17001BFA RID: 7162
			// (get) Token: 0x0600841E RID: 33822 RVA: 0x00266114 File Offset: 0x00264314
			// (set) Token: 0x0600841F RID: 33823 RVA: 0x00266124 File Offset: 0x00264324
			public LevelComponent m_levelComponent
			{
				get
				{
					return this.m_owner.m_levelComponent;
				}
				set
				{
					this.m_owner.m_levelComponent = value;
				}
			}

			// Token: 0x17001BFB RID: 7163
			// (get) Token: 0x06008420 RID: 33824 RVA: 0x00266134 File Offset: 0x00264334
			// (set) Token: 0x06008421 RID: 33825 RVA: 0x00266144 File Offset: 0x00264344
			public RiftComponent m_riftComponent
			{
				get
				{
					return this.m_owner.m_riftComponent;
				}
				set
				{
					this.m_owner.m_riftComponent = value;
				}
			}

			// Token: 0x17001BFC RID: 7164
			// (get) Token: 0x06008422 RID: 33826 RVA: 0x00266154 File Offset: 0x00264354
			// (set) Token: 0x06008423 RID: 33827 RVA: 0x00266164 File Offset: 0x00264364
			public HeroDungeonComponent m_heroDungeonComponent
			{
				get
				{
					return this.m_owner.m_heroDungeonComponent;
				}
				set
				{
					this.m_owner.m_heroDungeonComponent = value;
				}
			}

			// Token: 0x17001BFD RID: 7165
			// (get) Token: 0x06008424 RID: 33828 RVA: 0x00266174 File Offset: 0x00264374
			// (set) Token: 0x06008425 RID: 33829 RVA: 0x00266184 File Offset: 0x00264384
			public ThearchyTrialComponent m_thearchyTrialComponent
			{
				get
				{
					return this.m_owner.m_thearchyTrialComponent;
				}
				set
				{
					this.m_owner.m_thearchyTrialComponent = value;
				}
			}

			// Token: 0x17001BFE RID: 7166
			// (get) Token: 0x06008426 RID: 33830 RVA: 0x00266194 File Offset: 0x00264394
			// (set) Token: 0x06008427 RID: 33831 RVA: 0x002661A4 File Offset: 0x002643A4
			public AnikiGymComponent m_anikiGymComponent
			{
				get
				{
					return this.m_owner.m_anikiGymComponent;
				}
				set
				{
					this.m_owner.m_anikiGymComponent = value;
				}
			}

			// Token: 0x17001BFF RID: 7167
			// (get) Token: 0x06008428 RID: 33832 RVA: 0x002661B4 File Offset: 0x002643B4
			// (set) Token: 0x06008429 RID: 33833 RVA: 0x002661C4 File Offset: 0x002643C4
			public TreasureMapComponent m_treasureMapComponent
			{
				get
				{
					return this.m_owner.m_treasureMapComponent;
				}
				set
				{
					this.m_owner.m_treasureMapComponent = value;
				}
			}

			// Token: 0x17001C00 RID: 7168
			// (get) Token: 0x0600842A RID: 33834 RVA: 0x002661D4 File Offset: 0x002643D4
			// (set) Token: 0x0600842B RID: 33835 RVA: 0x002661E4 File Offset: 0x002643E4
			public MemoryCorridorCompoment m_memoryCorridorComponent
			{
				get
				{
					return this.m_owner.m_memoryCorridorComponent;
				}
				set
				{
					this.m_owner.m_memoryCorridorComponent = value;
				}
			}

			// Token: 0x17001C01 RID: 7169
			// (get) Token: 0x0600842C RID: 33836 RVA: 0x002661F4 File Offset: 0x002643F4
			// (set) Token: 0x0600842D RID: 33837 RVA: 0x00266204 File Offset: 0x00264404
			public MailComponent m_mailComponent
			{
				get
				{
					return this.m_owner.m_mailComponent;
				}
				set
				{
					this.m_owner.m_mailComponent = value;
				}
			}

			// Token: 0x17001C02 RID: 7170
			// (get) Token: 0x0600842E RID: 33838 RVA: 0x00266214 File Offset: 0x00264414
			// (set) Token: 0x0600842F RID: 33839 RVA: 0x00266224 File Offset: 0x00264424
			public FixedStoreComponent m_fixedStoreComponent
			{
				get
				{
					return this.m_owner.m_fixedStoreComponent;
				}
				set
				{
					this.m_owner.m_fixedStoreComponent = value;
				}
			}

			// Token: 0x17001C03 RID: 7171
			// (get) Token: 0x06008430 RID: 33840 RVA: 0x00266234 File Offset: 0x00264434
			// (set) Token: 0x06008431 RID: 33841 RVA: 0x00266244 File Offset: 0x00264444
			public RandomStoreComponent m_randomStoreComponent
			{
				get
				{
					return this.m_owner.m_randomStoreComponent;
				}
				set
				{
					this.m_owner.m_randomStoreComponent = value;
				}
			}

			// Token: 0x17001C04 RID: 7172
			// (get) Token: 0x06008432 RID: 33842 RVA: 0x00266254 File Offset: 0x00264454
			// (set) Token: 0x06008433 RID: 33843 RVA: 0x00266264 File Offset: 0x00264464
			public SelectCardComponent m_selectCardComponent
			{
				get
				{
					return this.m_owner.m_selectCardComponent;
				}
				set
				{
					this.m_owner.m_selectCardComponent = value;
				}
			}

			// Token: 0x17001C05 RID: 7173
			// (get) Token: 0x06008434 RID: 33844 RVA: 0x00266274 File Offset: 0x00264474
			// (set) Token: 0x06008435 RID: 33845 RVA: 0x00266284 File Offset: 0x00264484
			public RaffleComponent m_raffleComponent
			{
				get
				{
					return this.m_owner.m_raffleComponent;
				}
				set
				{
					this.m_owner.m_raffleComponent = value;
				}
			}

			// Token: 0x17001C06 RID: 7174
			// (get) Token: 0x06008436 RID: 33846 RVA: 0x00266294 File Offset: 0x00264494
			// (set) Token: 0x06008437 RID: 33847 RVA: 0x002662A4 File Offset: 0x002644A4
			public ChatComponent m_chatComponent
			{
				get
				{
					return this.m_owner.m_chatComponent;
				}
				set
				{
					this.m_owner.m_chatComponent = value;
				}
			}

			// Token: 0x17001C07 RID: 7175
			// (get) Token: 0x06008438 RID: 33848 RVA: 0x002662B4 File Offset: 0x002644B4
			// (set) Token: 0x06008439 RID: 33849 RVA: 0x002662C4 File Offset: 0x002644C4
			public ChatGroupComponent m_chatGroupComponent
			{
				get
				{
					return this.m_owner.m_chatGroupComponent;
				}
				set
				{
					this.m_owner.m_chatGroupComponent = value;
				}
			}

			// Token: 0x17001C08 RID: 7176
			// (get) Token: 0x0600843A RID: 33850 RVA: 0x002662D4 File Offset: 0x002644D4
			// (set) Token: 0x0600843B RID: 33851 RVA: 0x002662E4 File Offset: 0x002644E4
			public MissionComponent m_missionComponent
			{
				get
				{
					return this.m_owner.m_missionComponent;
				}
				set
				{
					this.m_owner.m_missionComponent = value;
				}
			}

			// Token: 0x17001C09 RID: 7177
			// (get) Token: 0x0600843C RID: 33852 RVA: 0x002662F4 File Offset: 0x002644F4
			// (set) Token: 0x0600843D RID: 33853 RVA: 0x00266304 File Offset: 0x00264504
			public CommentComponent m_commentComponent
			{
				get
				{
					return this.m_owner.m_commentComponent;
				}
				set
				{
					this.m_owner.m_commentComponent = value;
				}
			}

			// Token: 0x17001C0A RID: 7178
			// (get) Token: 0x0600843E RID: 33854 RVA: 0x00266314 File Offset: 0x00264514
			// (set) Token: 0x0600843F RID: 33855 RVA: 0x00266324 File Offset: 0x00264524
			public TrainingGroundCompoment m_trainingGroundComponent
			{
				get
				{
					return this.m_owner.m_trainingGroundComponent;
				}
				set
				{
					this.m_owner.m_trainingGroundComponent = value;
				}
			}

			// Token: 0x17001C0B RID: 7179
			// (get) Token: 0x06008440 RID: 33856 RVA: 0x00266334 File Offset: 0x00264534
			// (set) Token: 0x06008441 RID: 33857 RVA: 0x00266344 File Offset: 0x00264544
			public ArenaComponent m_arenaComponent
			{
				get
				{
					return this.m_owner.m_arenaComponent;
				}
				set
				{
					this.m_owner.m_arenaComponent = value;
				}
			}

			// Token: 0x17001C0C RID: 7180
			// (get) Token: 0x06008442 RID: 33858 RVA: 0x00266354 File Offset: 0x00264554
			// (set) Token: 0x06008443 RID: 33859 RVA: 0x00266364 File Offset: 0x00264564
			public OperationalActivityCompoment m_operationalActivityComponent
			{
				get
				{
					return this.m_owner.m_operationalActivityComponent;
				}
				set
				{
					this.m_owner.m_operationalActivityComponent = value;
				}
			}

			// Token: 0x17001C0D RID: 7181
			// (get) Token: 0x06008444 RID: 33860 RVA: 0x00266374 File Offset: 0x00264574
			// (set) Token: 0x06008445 RID: 33861 RVA: 0x00266384 File Offset: 0x00264584
			public SurveyComponent m_surveyComponent
			{
				get
				{
					return this.m_owner.m_surveyComponent;
				}
				set
				{
					this.m_owner.m_surveyComponent = value;
				}
			}

			// Token: 0x17001C0E RID: 7182
			// (get) Token: 0x06008446 RID: 33862 RVA: 0x00266394 File Offset: 0x00264594
			// (set) Token: 0x06008447 RID: 33863 RVA: 0x002663A4 File Offset: 0x002645A4
			public DanmakuComponent m_danmakuComponent
			{
				get
				{
					return this.m_owner.m_danmakuComponent;
				}
				set
				{
					this.m_owner.m_danmakuComponent = value;
				}
			}

			// Token: 0x17001C0F RID: 7183
			// (get) Token: 0x06008448 RID: 33864 RVA: 0x002663B4 File Offset: 0x002645B4
			// (set) Token: 0x06008449 RID: 33865 RVA: 0x002663C4 File Offset: 0x002645C4
			public HeroTrainningComponent m_heroTrainningComponent
			{
				get
				{
					return this.m_owner.m_heroTrainningComponent;
				}
				set
				{
					this.m_owner.m_heroTrainningComponent = value;
				}
			}

			// Token: 0x17001C10 RID: 7184
			// (get) Token: 0x0600844A RID: 33866 RVA: 0x002663D4 File Offset: 0x002645D4
			// (set) Token: 0x0600844B RID: 33867 RVA: 0x002663E4 File Offset: 0x002645E4
			public FriendComponent m_friendComponent
			{
				get
				{
					return this.m_owner.m_friendComponent;
				}
				set
				{
					this.m_owner.m_friendComponent = value;
				}
			}

			// Token: 0x17001C11 RID: 7185
			// (get) Token: 0x0600844C RID: 33868 RVA: 0x002663F4 File Offset: 0x002645F4
			// (set) Token: 0x0600844D RID: 33869 RVA: 0x00266404 File Offset: 0x00264604
			public GlobalRankingListComponent m_globalRankingListComponent
			{
				get
				{
					return this.m_owner.m_globalRankingListComponent;
				}
				set
				{
					this.m_owner.m_globalRankingListComponent = value;
				}
			}

			// Token: 0x17001C12 RID: 7186
			// (get) Token: 0x0600844E RID: 33870 RVA: 0x00266414 File Offset: 0x00264614
			// (set) Token: 0x0600844F RID: 33871 RVA: 0x00266424 File Offset: 0x00264624
			public TeamComponent m_teamComponent
			{
				get
				{
					return this.m_owner.m_teamComponent;
				}
				set
				{
					this.m_owner.m_teamComponent = value;
				}
			}

			// Token: 0x17001C13 RID: 7187
			// (get) Token: 0x06008450 RID: 33872 RVA: 0x00266434 File Offset: 0x00264634
			// (set) Token: 0x06008451 RID: 33873 RVA: 0x00266444 File Offset: 0x00264644
			public HeroAssistantsCompoment m_heroAssistantsComponent
			{
				get
				{
					return this.m_owner.m_heroAssistantsComponent;
				}
				set
				{
					this.m_owner.m_heroAssistantsComponent = value;
				}
			}

			// Token: 0x17001C14 RID: 7188
			// (get) Token: 0x06008452 RID: 33874 RVA: 0x00266454 File Offset: 0x00264654
			// (set) Token: 0x06008453 RID: 33875 RVA: 0x00266464 File Offset: 0x00264664
			public HeroPhantomCompoment m_heroPhantomComponent
			{
				get
				{
					return this.m_owner.m_heroPhantomComponent;
				}
				set
				{
					this.m_owner.m_heroPhantomComponent = value;
				}
			}

			// Token: 0x17001C15 RID: 7189
			// (get) Token: 0x06008454 RID: 33876 RVA: 0x00266474 File Offset: 0x00264674
			// (set) Token: 0x06008455 RID: 33877 RVA: 0x00266484 File Offset: 0x00264684
			public CooperateBattleCompoment m_cooperateBattleComponent
			{
				get
				{
					return this.m_owner.m_cooperateBattleComponent;
				}
				set
				{
					this.m_owner.m_cooperateBattleComponent = value;
				}
			}

			// Token: 0x17001C16 RID: 7190
			// (get) Token: 0x06008456 RID: 33878 RVA: 0x00266494 File Offset: 0x00264694
			// (set) Token: 0x06008457 RID: 33879 RVA: 0x002664A4 File Offset: 0x002646A4
			public NoviceComponent m_noviceComponent
			{
				get
				{
					return this.m_owner.m_noviceComponent;
				}
				set
				{
					this.m_owner.m_noviceComponent = value;
				}
			}

			// Token: 0x17001C17 RID: 7191
			// (get) Token: 0x06008458 RID: 33880 RVA: 0x002664B4 File Offset: 0x002646B4
			// (set) Token: 0x06008459 RID: 33881 RVA: 0x002664C4 File Offset: 0x002646C4
			public RechargeStoreComponent m_rechargeStoreComponent
			{
				get
				{
					return this.m_owner.m_rechargeStoreComponent;
				}
				set
				{
					this.m_owner.m_rechargeStoreComponent = value;
				}
			}

			// Token: 0x17001C18 RID: 7192
			// (get) Token: 0x0600845A RID: 33882 RVA: 0x002664D4 File Offset: 0x002646D4
			// (set) Token: 0x0600845B RID: 33883 RVA: 0x002664E4 File Offset: 0x002646E4
			public ResourceComponent m_resourceComponent
			{
				get
				{
					return this.m_owner.m_resourceComponent;
				}
				set
				{
					this.m_owner.m_resourceComponent = value;
				}
			}

			// Token: 0x17001C19 RID: 7193
			// (get) Token: 0x0600845C RID: 33884 RVA: 0x002664F4 File Offset: 0x002646F4
			// (set) Token: 0x0600845D RID: 33885 RVA: 0x00266504 File Offset: 0x00264704
			public RealTimePVPComponent m_realTimePVPComponent
			{
				get
				{
					return this.m_owner.m_realTimePVPComponent;
				}
				set
				{
					this.m_owner.m_realTimePVPComponent = value;
				}
			}

			// Token: 0x17001C1A RID: 7194
			// (get) Token: 0x0600845E RID: 33886 RVA: 0x00266514 File Offset: 0x00264714
			// (set) Token: 0x0600845F RID: 33887 RVA: 0x00266524 File Offset: 0x00264724
			public GiftStoreComponent m_giftStoreComponent
			{
				get
				{
					return this.m_owner.m_giftStoreComponent;
				}
				set
				{
					this.m_owner.m_giftStoreComponent = value;
				}
			}

			// Token: 0x17001C1B RID: 7195
			// (get) Token: 0x06008460 RID: 33888 RVA: 0x00266534 File Offset: 0x00264734
			// (set) Token: 0x06008461 RID: 33889 RVA: 0x00266544 File Offset: 0x00264744
			public GuildComponent m_guildComponent
			{
				get
				{
					return this.m_owner.m_guildComponent;
				}
				set
				{
					this.m_owner.m_guildComponent = value;
				}
			}

			// Token: 0x17001C1C RID: 7196
			// (get) Token: 0x06008462 RID: 33890 RVA: 0x00266554 File Offset: 0x00264754
			// (set) Token: 0x06008463 RID: 33891 RVA: 0x00266564 File Offset: 0x00264764
			public UnchartedScoreComponent m_unchartedScoreComponent
			{
				get
				{
					return this.m_owner.m_unchartedScoreComponent;
				}
				set
				{
					this.m_owner.m_unchartedScoreComponent = value;
				}
			}

			// Token: 0x17001C1D RID: 7197
			// (get) Token: 0x06008464 RID: 33892 RVA: 0x00266574 File Offset: 0x00264774
			// (set) Token: 0x06008465 RID: 33893 RVA: 0x00266584 File Offset: 0x00264784
			public ClimbTowerComponent m_climbTowerComponent
			{
				get
				{
					return this.m_owner.m_climbTowerComponent;
				}
				set
				{
					this.m_owner.m_climbTowerComponent = value;
				}
			}

			// Token: 0x17001C1E RID: 7198
			// (get) Token: 0x06008466 RID: 33894 RVA: 0x00266594 File Offset: 0x00264794
			// (set) Token: 0x06008467 RID: 33895 RVA: 0x002665A4 File Offset: 0x002647A4
			public TimeSpan m_diffToServerTime
			{
				get
				{
					return this.m_owner.m_diffToServerTime;
				}
				set
				{
					this.m_owner.m_diffToServerTime = value;
				}
			}

			// Token: 0x17001C1F RID: 7199
			// (get) Token: 0x06008468 RID: 33896 RVA: 0x002665B4 File Offset: 0x002647B4
			// (set) Token: 0x06008469 RID: 33897 RVA: 0x002665C4 File Offset: 0x002647C4
			public DateTime? m_serverTimeSynced
			{
				get
				{
					return this.m_owner.m_serverTimeSynced;
				}
				set
				{
					this.m_owner.m_serverTimeSynced = value;
				}
			}

			// Token: 0x17001C20 RID: 7200
			// (get) Token: 0x0600846A RID: 33898 RVA: 0x002665D4 File Offset: 0x002647D4
			// (set) Token: 0x0600846B RID: 33899 RVA: 0x002665E4 File Offset: 0x002647E4
			public float m_realtimeSinceStartupAtServerTimeSynced
			{
				get
				{
					return this.m_owner.m_realtimeSinceStartupAtServerTimeSynced;
				}
				set
				{
					this.m_owner.m_realtimeSinceStartupAtServerTimeSynced = value;
				}
			}

			// Token: 0x17001C21 RID: 7201
			// (get) Token: 0x0600846C RID: 33900 RVA: 0x002665F4 File Offset: 0x002647F4
			// (set) Token: 0x0600846D RID: 33901 RVA: 0x00266604 File Offset: 0x00264804
			public bool m_isPlayerInfoInitEnd
			{
				get
				{
					return this.m_owner.m_isPlayerInfoInitEnd;
				}
				set
				{
					this.m_owner.m_isPlayerInfoInitEnd = value;
				}
			}

			// Token: 0x17001C22 RID: 7202
			// (get) Token: 0x0600846E RID: 33902 RVA: 0x00266614 File Offset: 0x00264814
			// (set) Token: 0x0600846F RID: 33903 RVA: 0x00266624 File Offset: 0x00264824
			public bool m_isDataError
			{
				get
				{
					return this.m_owner.m_isDataError;
				}
				set
				{
					this.m_owner.m_isDataError = value;
				}
			}

			// Token: 0x17001C23 RID: 7203
			// (get) Token: 0x06008470 RID: 33904 RVA: 0x00266634 File Offset: 0x00264834
			// (set) Token: 0x06008471 RID: 33905 RVA: 0x00266644 File Offset: 0x00264844
			public bool m_initOpenStates
			{
				get
				{
					return this.m_owner.m_initOpenStates;
				}
				set
				{
					this.m_owner.m_initOpenStates = value;
				}
			}

			// Token: 0x17001C24 RID: 7204
			// (get) Token: 0x06008472 RID: 33906 RVA: 0x00266654 File Offset: 0x00264854
			// (set) Token: 0x06008473 RID: 33907 RVA: 0x00266664 File Offset: 0x00264864
			public Happening m_happening
			{
				get
				{
					return this.m_owner.m_happening;
				}
				set
				{
					this.m_owner.m_happening = value;
				}
			}

			// Token: 0x17001C25 RID: 7205
			// (get) Token: 0x06008474 RID: 33908 RVA: 0x00266674 File Offset: 0x00264874
			// (set) Token: 0x06008475 RID: 33909 RVA: 0x00266684 File Offset: 0x00264884
			public CurrentBattle m_currentBattle
			{
				get
				{
					return this.m_owner.m_currentBattle;
				}
				set
				{
					this.m_owner.m_currentBattle = value;
				}
			}

			// Token: 0x17001C26 RID: 7206
			// (get) Token: 0x06008476 RID: 33910 RVA: 0x00266694 File Offset: 0x00264894
			// (set) Token: 0x06008477 RID: 33911 RVA: 0x002666A4 File Offset: 0x002648A4
			public int m_playerArenaRank
			{
				get
				{
					return this.m_owner.m_playerArenaRank;
				}
				set
				{
					this.m_owner.m_playerArenaRank = value;
				}
			}

			// Token: 0x17001C27 RID: 7207
			// (get) Token: 0x06008478 RID: 33912 RVA: 0x002666B4 File Offset: 0x002648B4
			// (set) Token: 0x06008479 RID: 33913 RVA: 0x002666C4 File Offset: 0x002648C4
			public bool m_isNeedGetArenaPlayerInfo
			{
				get
				{
					return this.m_owner.m_isNeedGetArenaPlayerInfo;
				}
				set
				{
					this.m_owner.m_isNeedGetArenaPlayerInfo = value;
				}
			}

			// Token: 0x17001C28 RID: 7208
			// (get) Token: 0x0600847A RID: 33914 RVA: 0x002666D4 File Offset: 0x002648D4
			// (set) Token: 0x0600847B RID: 33915 RVA: 0x002666E4 File Offset: 0x002648E4
			public List<ProArenaTopRankPlayer> m_arenaTopRankPlayers
			{
				get
				{
					return this.m_owner.m_arenaTopRankPlayers;
				}
				set
				{
					this.m_owner.m_arenaTopRankPlayers = value;
				}
			}

			// Token: 0x17001C29 RID: 7209
			// (get) Token: 0x0600847C RID: 33916 RVA: 0x002666F4 File Offset: 0x002648F4
			// (set) Token: 0x0600847D RID: 33917 RVA: 0x00266704 File Offset: 0x00264904
			public bool ShowEnchantCancelConfirmPanel
			{
				get
				{
					return this.m_owner.ShowEnchantCancelConfirmPanel;
				}
				set
				{
					this.m_owner.ShowEnchantCancelConfirmPanel = value;
				}
			}

			// Token: 0x17001C2A RID: 7210
			// (get) Token: 0x0600847E RID: 33918 RVA: 0x00266714 File Offset: 0x00264914
			// (set) Token: 0x0600847F RID: 33919 RVA: 0x00266724 File Offset: 0x00264924
			public bool ShowEnchantSaveConfirmPanel
			{
				get
				{
					return this.m_owner.ShowEnchantSaveConfirmPanel;
				}
				set
				{
					this.m_owner.ShowEnchantSaveConfirmPanel = value;
				}
			}

			// Token: 0x17001C2B RID: 7211
			// (get) Token: 0x06008480 RID: 33920 RVA: 0x00266734 File Offset: 0x00264934
			// (set) Token: 0x06008481 RID: 33921 RVA: 0x00266744 File Offset: 0x00264944
			public RewardPlayerStatus m_beforeRewardPlayerStatus
			{
				get
				{
					return this.m_owner.m_beforeRewardPlayerStatus;
				}
				set
				{
					this.m_owner.m_beforeRewardPlayerStatus = value;
				}
			}

			// Token: 0x17001C2C RID: 7212
			// (get) Token: 0x06008482 RID: 33922 RVA: 0x00266754 File Offset: 0x00264954
			// (set) Token: 0x06008483 RID: 33923 RVA: 0x00266764 File Offset: 0x00264964
			public List<RewardHeroStatus> m_beforeRewardHeroStatus
			{
				get
				{
					return this.m_owner.m_beforeRewardHeroStatus;
				}
				set
				{
					this.m_owner.m_beforeRewardHeroStatus = value;
				}
			}

			// Token: 0x17001C2D RID: 7213
			// (get) Token: 0x06008484 RID: 33924 RVA: 0x00266774 File Offset: 0x00264974
			// (set) Token: 0x06008485 RID: 33925 RVA: 0x00266784 File Offset: 0x00264984
			public List<int> m_battleHeroIDs
			{
				get
				{
					return this.m_owner.m_battleHeroIDs;
				}
				set
				{
					this.m_owner.m_battleHeroIDs = value;
				}
			}

			// Token: 0x17001C2E RID: 7214
			// (get) Token: 0x06008486 RID: 33926 RVA: 0x00266794 File Offset: 0x00264994
			// (set) Token: 0x06008487 RID: 33927 RVA: 0x002667A4 File Offset: 0x002649A4
			public bool m_isNeedRebuildBattle
			{
				get
				{
					return this.m_owner.m_isNeedRebuildBattle;
				}
				set
				{
					this.m_owner.m_isNeedRebuildBattle = value;
				}
			}

			// Token: 0x17001C2F RID: 7215
			// (get) Token: 0x06008488 RID: 33928 RVA: 0x002667B4 File Offset: 0x002649B4
			// (set) Token: 0x06008489 RID: 33929 RVA: 0x002667C4 File Offset: 0x002649C4
			public int m_battleRegretCount
			{
				get
				{
					return this.m_owner.m_battleRegretCount;
				}
				set
				{
					this.m_owner.m_battleRegretCount = value;
				}
			}

			// Token: 0x17001C30 RID: 7216
			// (get) Token: 0x0600848A RID: 33930 RVA: 0x002667D4 File Offset: 0x002649D4
			// (set) Token: 0x0600848B RID: 33931 RVA: 0x002667E4 File Offset: 0x002649E4
			public ConfigDataBattleInfo m_firstBattleInfo
			{
				get
				{
					return this.m_owner.m_firstBattleInfo;
				}
				set
				{
					this.m_owner.m_firstBattleInfo = value;
				}
			}

			// Token: 0x17001C31 RID: 7217
			// (get) Token: 0x0600848C RID: 33932 RVA: 0x002667F4 File Offset: 0x002649F4
			// (set) Token: 0x0600848D RID: 33933 RVA: 0x00266804 File Offset: 0x00264A04
			public List<NoticeText> m_waitingNoticeStringList
			{
				get
				{
					return this.m_owner.m_waitingNoticeStringList;
				}
				set
				{
					this.m_owner.m_waitingNoticeStringList = value;
				}
			}

			// Token: 0x17001C32 RID: 7218
			// (get) Token: 0x0600848E RID: 33934 RVA: 0x00266814 File Offset: 0x00264A14
			// (set) Token: 0x0600848F RID: 33935 RVA: 0x00266824 File Offset: 0x00264A24
			public bool m_isShowingNotice
			{
				get
				{
					return this.m_owner.m_isShowingNotice;
				}
				set
				{
					this.m_owner.m_isShowingNotice = value;
				}
			}

			// Token: 0x17001C33 RID: 7219
			// (get) Token: 0x06008490 RID: 33936 RVA: 0x00266834 File Offset: 0x00264A34
			// (set) Token: 0x06008491 RID: 33937 RVA: 0x00266844 File Offset: 0x00264A44
			public int summaryToken
			{
				get
				{
					return this.m_owner.summaryToken;
				}
				set
				{
					this.m_owner.summaryToken = value;
				}
			}

			// Token: 0x17001C34 RID: 7220
			// (get) Token: 0x06008492 RID: 33938 RVA: 0x00266854 File Offset: 0x00264A54
			// (set) Token: 0x06008493 RID: 33939 RVA: 0x00266864 File Offset: 0x00264A64
			public bool m_needGetFriendSocialRelation
			{
				get
				{
					return this.m_owner.m_needGetFriendSocialRelation;
				}
				set
				{
					this.m_owner.m_needGetFriendSocialRelation = value;
				}
			}

			// Token: 0x17001C35 RID: 7221
			// (get) Token: 0x06008494 RID: 33940 RVA: 0x00266874 File Offset: 0x00264A74
			// (set) Token: 0x06008495 RID: 33941 RVA: 0x00266884 File Offset: 0x00264A84
			public List<UserSummary> m_friendList
			{
				get
				{
					return this.m_owner.m_friendList;
				}
				set
				{
					this.m_owner.m_friendList = value;
				}
			}

			// Token: 0x17001C36 RID: 7222
			// (get) Token: 0x06008496 RID: 33942 RVA: 0x00266894 File Offset: 0x00264A94
			// (set) Token: 0x06008497 RID: 33943 RVA: 0x002668A4 File Offset: 0x00264AA4
			public List<UserSummary> m_acrossServerFriendList
			{
				get
				{
					return this.m_owner.m_acrossServerFriendList;
				}
				set
				{
					this.m_owner.m_acrossServerFriendList = value;
				}
			}

			// Token: 0x17001C37 RID: 7223
			// (get) Token: 0x06008498 RID: 33944 RVA: 0x002668B4 File Offset: 0x00264AB4
			// (set) Token: 0x06008499 RID: 33945 RVA: 0x002668C4 File Offset: 0x00264AC4
			public List<UserSummary> m_findFriendList
			{
				get
				{
					return this.m_owner.m_findFriendList;
				}
				set
				{
					this.m_owner.m_findFriendList = value;
				}
			}

			// Token: 0x17001C38 RID: 7224
			// (get) Token: 0x0600849A RID: 33946 RVA: 0x002668D4 File Offset: 0x00264AD4
			// (set) Token: 0x0600849B RID: 33947 RVA: 0x002668E4 File Offset: 0x00264AE4
			public List<UserSummary> m_recommendFriendList
			{
				get
				{
					return this.m_owner.m_recommendFriendList;
				}
				set
				{
					this.m_owner.m_recommendFriendList = value;
				}
			}

			// Token: 0x17001C39 RID: 7225
			// (get) Token: 0x0600849C RID: 33948 RVA: 0x002668F4 File Offset: 0x00264AF4
			// (set) Token: 0x0600849D RID: 33949 RVA: 0x00266904 File Offset: 0x00264B04
			public Dictionary<int, Hero> m_allDefaultHeros
			{
				get
				{
					return this.m_owner.m_allDefaultHeros;
				}
				set
				{
					this.m_owner.m_allDefaultHeros = value;
				}
			}

			// Token: 0x17001C3A RID: 7226
			// (get) Token: 0x0600849E RID: 33950 RVA: 0x00266914 File Offset: 0x00264B14
			// (set) Token: 0x0600849F RID: 33951 RVA: 0x00266924 File Offset: 0x00264B24
			public ConfigDataScenarioInfo m_currentScenarioInfo
			{
				get
				{
					return this.m_owner.m_currentScenarioInfo;
				}
				set
				{
					this.m_owner.m_currentScenarioInfo = value;
				}
			}

			// Token: 0x17001C3B RID: 7227
			// (get) Token: 0x060084A0 RID: 33952 RVA: 0x00266934 File Offset: 0x00264B34
			// (set) Token: 0x060084A1 RID: 33953 RVA: 0x00266944 File Offset: 0x00264B44
			public Dictionary<int, ProjectLPlayerContext.CurrentWaypointEvent> m_currentWaypointEvents
			{
				get
				{
					return this.m_owner.m_currentWaypointEvents;
				}
				set
				{
					this.m_owner.m_currentWaypointEvents = value;
				}
			}

			// Token: 0x17001C3C RID: 7228
			// (get) Token: 0x060084A2 RID: 33954 RVA: 0x00266954 File Offset: 0x00264B54
			// (set) Token: 0x060084A3 RID: 33955 RVA: 0x00266964 File Offset: 0x00264B64
			public List<ulong> ReadAnnounceActivityList
			{
				get
				{
					return this.m_owner.ReadAnnounceActivityList;
				}
				set
				{
					this.m_owner.ReadAnnounceActivityList = value;
				}
			}

			// Token: 0x17001C3D RID: 7229
			// (get) Token: 0x060084A4 RID: 33956 RVA: 0x00266974 File Offset: 0x00264B74
			// (set) Token: 0x060084A5 RID: 33957 RVA: 0x00266984 File Offset: 0x00264B84
			public bool m_isBuyGuideActivityViewed
			{
				get
				{
					return this.m_owner.m_isBuyGuideActivityViewed;
				}
				set
				{
					this.m_owner.m_isBuyGuideActivityViewed = value;
				}
			}

			// Token: 0x17001C3E RID: 7230
			// (get) Token: 0x060084A6 RID: 33958 RVA: 0x00266994 File Offset: 0x00264B94
			public static string OpenActivityNoticeUIFlag
			{
				get
				{
					return "OpenActivityNoticeUIFlag";
				}
			}

			// Token: 0x17001C3F RID: 7231
			// (get) Token: 0x060084A7 RID: 33959 RVA: 0x0026699C File Offset: 0x00264B9C
			// (set) Token: 0x060084A8 RID: 33960 RVA: 0x002669AC File Offset: 0x00264BAC
			public RedeemInfoAck m_RedeemInfo
			{
				get
				{
					return this.m_owner.m_RedeemInfo;
				}
				set
				{
					this.m_owner.m_RedeemInfo = value;
				}
			}

			// Token: 0x17001C40 RID: 7232
			// (get) Token: 0x060084A9 RID: 33961 RVA: 0x002669BC File Offset: 0x00264BBC
			public static int RedeemActivityConfigId
			{
				get
				{
					return 17;
				}
			}

			// Token: 0x17001C41 RID: 7233
			// (get) Token: 0x060084AA RID: 33962 RVA: 0x002669C0 File Offset: 0x00264BC0
			public static int FansRewardsFromPBTCBTActivityId
			{
				get
				{
					return 30;
				}
			}

			// Token: 0x17001C42 RID: 7234
			// (get) Token: 0x060084AB RID: 33963 RVA: 0x002669C4 File Offset: 0x00264BC4
			// (set) Token: 0x060084AC RID: 33964 RVA: 0x002669D4 File Offset: 0x00264BD4
			public ProRealTimePVPLeaderboardPlayerInfo m_realtimePVPPlayerInfo
			{
				get
				{
					return this.m_owner.m_realtimePVPPlayerInfo;
				}
				set
				{
					this.m_owner.m_realtimePVPPlayerInfo = value;
				}
			}

			// Token: 0x17001C43 RID: 7235
			// (get) Token: 0x060084AD RID: 33965 RVA: 0x002669E4 File Offset: 0x00264BE4
			// (set) Token: 0x060084AE RID: 33966 RVA: 0x002669F4 File Offset: 0x00264BF4
			public ProRealTimePVPUserInfo m_realtimePVPOpponentPlayerInfo
			{
				get
				{
					return this.m_owner.m_realtimePVPOpponentPlayerInfo;
				}
				set
				{
					this.m_owner.m_realtimePVPOpponentPlayerInfo = value;
				}
			}

			// Token: 0x17001C44 RID: 7236
			// (get) Token: 0x060084AF RID: 33967 RVA: 0x00266A04 File Offset: 0x00264C04
			// (set) Token: 0x060084B0 RID: 33968 RVA: 0x00266A14 File Offset: 0x00264C14
			public List<ProRealTimePVPLeaderboardPlayerInfo> m_realtimePVPLocalLeaderboardPlayerInfos
			{
				get
				{
					return this.m_owner.m_realtimePVPLocalLeaderboardPlayerInfos;
				}
				set
				{
					this.m_owner.m_realtimePVPLocalLeaderboardPlayerInfos = value;
				}
			}

			// Token: 0x17001C45 RID: 7237
			// (get) Token: 0x060084B1 RID: 33969 RVA: 0x00266A24 File Offset: 0x00264C24
			// (set) Token: 0x060084B2 RID: 33970 RVA: 0x00266A34 File Offset: 0x00264C34
			public List<ProUserSummary> m_realtimePVPLocalLeaderboardUserSummarys
			{
				get
				{
					return this.m_owner.m_realtimePVPLocalLeaderboardUserSummarys;
				}
				set
				{
					this.m_owner.m_realtimePVPLocalLeaderboardUserSummarys = value;
				}
			}

			// Token: 0x17001C46 RID: 7238
			// (get) Token: 0x060084B3 RID: 33971 RVA: 0x00266A44 File Offset: 0x00264C44
			// (set) Token: 0x060084B4 RID: 33972 RVA: 0x00266A54 File Offset: 0x00264C54
			public List<ProRealTimePVPLeaderboardPlayerInfo> m_realtimePVPGlobalLeaderboardPlayerInfos
			{
				get
				{
					return this.m_owner.m_realtimePVPGlobalLeaderboardPlayerInfos;
				}
				set
				{
					this.m_owner.m_realtimePVPGlobalLeaderboardPlayerInfos = value;
				}
			}

			// Token: 0x17001C47 RID: 7239
			// (get) Token: 0x060084B5 RID: 33973 RVA: 0x00266A64 File Offset: 0x00264C64
			// (set) Token: 0x060084B6 RID: 33974 RVA: 0x00266A74 File Offset: 0x00264C74
			public List<ProUserSummary> m_realtimePVPGlobalLeaderboardUserSummarys
			{
				get
				{
					return this.m_owner.m_realtimePVPGlobalLeaderboardUserSummarys;
				}
				set
				{
					this.m_owner.m_realtimePVPGlobalLeaderboardUserSummarys = value;
				}
			}

			// Token: 0x17001C48 RID: 7240
			// (get) Token: 0x060084B7 RID: 33975 RVA: 0x00266A84 File Offset: 0x00264C84
			// (set) Token: 0x060084B8 RID: 33976 RVA: 0x00266A94 File Offset: 0x00264C94
			public bool m_isRealTimePVPGetTopPlayersReqGlobal
			{
				get
				{
					return this.m_owner.m_isRealTimePVPGetTopPlayersReqGlobal;
				}
				set
				{
					this.m_owner.m_isRealTimePVPGetTopPlayersReqGlobal = value;
				}
			}

			// Token: 0x17001C49 RID: 7241
			// (get) Token: 0x060084B9 RID: 33977 RVA: 0x00266AA4 File Offset: 0x00264CA4
			// (set) Token: 0x060084BA RID: 33978 RVA: 0x00266AB4 File Offset: 0x00264CB4
			public List<int> m_opendRiftChapterIds
			{
				get
				{
					return this.m_owner.m_opendRiftChapterIds;
				}
				set
				{
					this.m_owner.m_opendRiftChapterIds = value;
				}
			}

			// Token: 0x17001C4A RID: 7242
			// (get) Token: 0x060084BB RID: 33979 RVA: 0x00266AC4 File Offset: 0x00264CC4
			// (set) Token: 0x060084BC RID: 33980 RVA: 0x00266AD4 File Offset: 0x00264CD4
			public ConfigDataRiftChapterInfo m_lastOpenedRiftChapterInfo
			{
				get
				{
					return this.m_owner.m_lastOpenedRiftChapterInfo;
				}
				set
				{
					this.m_owner.m_lastOpenedRiftChapterInfo = value;
				}
			}

			// Token: 0x17001C4B RID: 7243
			// (get) Token: 0x060084BD RID: 33981 RVA: 0x00266AE4 File Offset: 0x00264CE4
			// (set) Token: 0x060084BE RID: 33982 RVA: 0x00266AF4 File Offset: 0x00264CF4
			public bool[] m_rewardFlags
			{
				get
				{
					return this.m_owner.m_rewardFlags;
				}
				set
				{
					this.m_owner.m_rewardFlags = value;
				}
			}

			// Token: 0x17001C4C RID: 7244
			// (get) Token: 0x060084BF RID: 33983 RVA: 0x00266B04 File Offset: 0x00264D04
			// (set) Token: 0x060084C0 RID: 33984 RVA: 0x00266B14 File Offset: 0x00264D14
			public Dictionary<int, bool> m_isSelectHeroRewardTransferToFragmentDict
			{
				get
				{
					return this.m_owner.m_isSelectHeroRewardTransferToFragmentDict;
				}
				set
				{
					this.m_owner.m_isSelectHeroRewardTransferToFragmentDict = value;
				}
			}

			// Token: 0x17001C4D RID: 7245
			// (set) Token: 0x060084C1 RID: 33985 RVA: 0x00266B24 File Offset: 0x00264D24
			public bool IsNeedBattleReportLog
			{
				set
				{
					this.m_owner.IsNeedBattleReportLog = value;
				}
			}

			// Token: 0x060084C2 RID: 33986 RVA: 0x00266B34 File Offset: 0x00264D34
			public bool SendMessage(object msg)
			{
				return this.m_owner.SendMessage(msg);
			}

			// Token: 0x060084C3 RID: 33987 RVA: 0x00266B44 File Offset: 0x00264D44
			public void OnMessage(ServerHeartBeatNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084C4 RID: 33988 RVA: 0x00266B54 File Offset: 0x00264D54
			public void OnMessage(ServerDisconnectNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x060084C5 RID: 33989 RVA: 0x00266B64 File Offset: 0x00264D64
			public void OnMessage(ClientCheatNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x060084C6 RID: 33990 RVA: 0x00266B74 File Offset: 0x00264D74
			public void TestMarquee()
			{
				this.m_owner.TestMarquee();
			}

			// Token: 0x060084C7 RID: 33991 RVA: 0x00266B84 File Offset: 0x00264D84
			public void TestChat()
			{
				this.m_owner.TestChat();
			}

			// Token: 0x060084C8 RID: 33992 RVA: 0x00266B94 File Offset: 0x00264D94
			public string GetDeviceId()
			{
				return this.m_owner.GetDeviceId();
			}

			// Token: 0x060084C9 RID: 33993 RVA: 0x00266BA4 File Offset: 0x00264DA4
			public string GetClientVersion()
			{
				return this.m_owner.GetClientVersion();
			}

			// Token: 0x060084CA RID: 33994 RVA: 0x00266BB4 File Offset: 0x00264DB4
			public void DataError(int result)
			{
				this.m_owner.DataError(result);
			}

			// Token: 0x060084CB RID: 33995 RVA: 0x00266BC4 File Offset: 0x00264DC4
			public void OnMessage(DSAnikiGymNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084CC RID: 33996 RVA: 0x00266BD4 File Offset: 0x00264DD4
			public void OnMessage(AnikiGymLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084CD RID: 33997 RVA: 0x00266BE4 File Offset: 0x00264DE4
			public void OnMessage(AnikiGymLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084CE RID: 33998 RVA: 0x00266BF4 File Offset: 0x00264DF4
			public void OnMessage(DSArenaNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084CF RID: 33999 RVA: 0x00266C04 File Offset: 0x00264E04
			public void OnMessage(ArenaPlayerInfoGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D0 RID: 34000 RVA: 0x00266C14 File Offset: 0x00264E14
			public void OnMessage(ArenaOpponentViewAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D1 RID: 34001 RVA: 0x00266C24 File Offset: 0x00264E24
			public void OnMessage(ArenaOpponentAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D2 RID: 34002 RVA: 0x00266C34 File Offset: 0x00264E34
			public void OnMessage(ArenaRevengeOpponentGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D3 RID: 34003 RVA: 0x00266C44 File Offset: 0x00264E44
			public void OnMessage(ArenaOpponentRevengeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D4 RID: 34004 RVA: 0x00266C54 File Offset: 0x00264E54
			public void OnMessage(ArenaOpponentAttackFightingAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D5 RID: 34005 RVA: 0x00266C64 File Offset: 0x00264E64
			public void OnMessage(ArenaBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D6 RID: 34006 RVA: 0x00266C74 File Offset: 0x00264E74
			public void OnMessage(ArenaPlayerSetDefensiveTeamAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D7 RID: 34007 RVA: 0x00266C84 File Offset: 0x00264E84
			public void OnMessage(ArenaVictoryPointsRewardGainAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D8 RID: 34008 RVA: 0x00266C94 File Offset: 0x00264E94
			public void OnMessage(ArenaBattleReportBasicDataGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084D9 RID: 34009 RVA: 0x00266CA4 File Offset: 0x00264EA4
			public void OnMessage(ArenaBattleReportPlayBackDataGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084DA RID: 34010 RVA: 0x00266CB4 File Offset: 0x00264EB4
			public void OnMessage(ArenaTopRankPlayersGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084DB RID: 34011 RVA: 0x00266CC4 File Offset: 0x00264EC4
			public void OnMessage(ArenaBattleReconnectAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084DC RID: 34012 RVA: 0x00266CD4 File Offset: 0x00264ED4
			public void OnMessage(ArenaBattleReportNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x060084DD RID: 34013 RVA: 0x00266CE4 File Offset: 0x00264EE4
			public void OnMessage(ArenaFlushOpponentsNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084DE RID: 34014 RVA: 0x00266CF4 File Offset: 0x00264EF4
			public bool IsEmptyArenaPlayerInfo()
			{
				return this.m_owner.IsEmptyArenaPlayerInfo();
			}

			// Token: 0x060084DF RID: 34015 RVA: 0x00266D04 File Offset: 0x00264F04
			public int GetArenaPointChangeValue(ulong instanceId)
			{
				return this.m_owner.GetArenaPointChangeValue(instanceId);
			}

			// Token: 0x060084E0 RID: 34016 RVA: 0x00266D14 File Offset: 0x00264F14
			public void OnMessage(DSBagNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E1 RID: 34017 RVA: 0x00266D24 File Offset: 0x00264F24
			public void OnMessage(DSBagExtraNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E2 RID: 34018 RVA: 0x00266D34 File Offset: 0x00264F34
			public void OnMessage(UseBagItemAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E3 RID: 34019 RVA: 0x00266D44 File Offset: 0x00264F44
			public void OnMessage(SellBagItemAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E4 RID: 34020 RVA: 0x00266D54 File Offset: 0x00264F54
			public void OnMessage(EquipmentLockAndUnLockAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E5 RID: 34021 RVA: 0x00266D64 File Offset: 0x00264F64
			public void OnMessage(EquipmentEnhanceAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E6 RID: 34022 RVA: 0x00266D74 File Offset: 0x00264F74
			public void OnMessage(EquipmentStarLevelUpAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E7 RID: 34023 RVA: 0x00266D84 File Offset: 0x00264F84
			public void OnMessage(BagItemDecomposeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E8 RID: 34024 RVA: 0x00266D94 File Offset: 0x00264F94
			public void OnMessage(EquipmentEnchantAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084E9 RID: 34025 RVA: 0x00266DA4 File Offset: 0x00264FA4
			public void OnMessage(EquipmentEnchantSaveAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084EA RID: 34026 RVA: 0x00266DB4 File Offset: 0x00264FB4
			public bool NeedUpdatePlayerResource(GoodsType goodsType, int itemId)
			{
				return this.m_owner.NeedUpdatePlayerResource(goodsType, itemId);
			}

			// Token: 0x060084EB RID: 34027 RVA: 0x00266DC4 File Offset: 0x00264FC4
			public void OnMessage(DSBattleNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084EC RID: 34028 RVA: 0x00266DD4 File Offset: 0x00264FD4
			public void OnMessage(BattleCancelAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084ED RID: 34029 RVA: 0x00266DE4 File Offset: 0x00264FE4
			public void OnMessage(BattleTeamSetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084EE RID: 34030 RVA: 0x00266DF4 File Offset: 0x00264FF4
			public void OnMessage(BattleArmyRandomSeedGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084EF RID: 34031 RVA: 0x00266E04 File Offset: 0x00265004
			public void BattleFinishedError(int result)
			{
				this.m_owner.BattleFinishedError(result);
			}

			// Token: 0x060084F0 RID: 34032 RVA: 0x00266E14 File Offset: 0x00265014
			public static int CompareInviteTimeout(GeneralInviteInfo i1, GeneralInviteInfo i2)
			{
				return ProjectLPlayerContext.CompareInviteTimeout(i1, i2);
			}

			// Token: 0x060084F1 RID: 34033 RVA: 0x00266E20 File Offset: 0x00265020
			public void OnMessage(BattleRoomQuitNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F2 RID: 34034 RVA: 0x00266E30 File Offset: 0x00265030
			public void OnMessage(BattleRoomCreateAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F3 RID: 34035 RVA: 0x00266E40 File Offset: 0x00265040
			public void OnMessage(BattleRoomPlayerStatusChangeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F4 RID: 34036 RVA: 0x00266E50 File Offset: 0x00265050
			public void OnMessage(BattleRoomHeroSetupAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F5 RID: 34037 RVA: 0x00266E60 File Offset: 0x00265060
			public void OnMessage(BattleRoomHeroSwapAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F6 RID: 34038 RVA: 0x00266E70 File Offset: 0x00265070
			public void OnMessage(BattleRoomHeroPutdownAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F7 RID: 34039 RVA: 0x00266E80 File Offset: 0x00265080
			public void OnMessage(BattleRoomHeroProtectAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F8 RID: 34040 RVA: 0x00266E90 File Offset: 0x00265090
			public void OnMessage(BattleRoomHeroBanAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084F9 RID: 34041 RVA: 0x00266EA0 File Offset: 0x002650A0
			public void OnMessage(BattleRoomEndCurrentBPTurnAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084FA RID: 34042 RVA: 0x00266EB0 File Offset: 0x002650B0
			public void OnMessage(BattleRoomBattleCommandExecuteAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084FB RID: 34043 RVA: 0x00266EC0 File Offset: 0x002650C0
			public void OnMessage(BattleRoomQuitAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084FC RID: 34044 RVA: 0x00266ED0 File Offset: 0x002650D0
			public void OnMessage(BattleRoomPlayerActionBeginAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084FD RID: 34045 RVA: 0x00266EE0 File Offset: 0x002650E0
			public void OnMessage(BattleRoomGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084FE RID: 34046 RVA: 0x00266EF0 File Offset: 0x002650F0
			public void OnMessage(BattleRoomTeamBattleJoinNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060084FF RID: 34047 RVA: 0x00266F00 File Offset: 0x00265100
			public void OnMessage(BattleRoomPVPBattleJoinNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008500 RID: 34048 RVA: 0x00266F10 File Offset: 0x00265110
			public void OnMessage(BattleRoomRealTimePVPBattleJoinNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008501 RID: 34049 RVA: 0x00266F20 File Offset: 0x00265120
			public void OnMessage(BattleRoomGuildMassiveCombatBattleJoinNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008502 RID: 34050 RVA: 0x00266F30 File Offset: 0x00265130
			public void OnMessage(BattleRoomPlayerStatusChangedNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008503 RID: 34051 RVA: 0x00266F40 File Offset: 0x00265140
			public void OnMessage(BattleRoomHeroSetupNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008504 RID: 34052 RVA: 0x00266F50 File Offset: 0x00265150
			public void OnMessage(BattleRoomTeamBattleStartNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008505 RID: 34053 RVA: 0x00266F60 File Offset: 0x00265160
			public void OnMessage(BattleRoomPVPBattleStartNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008506 RID: 34054 RVA: 0x00266F70 File Offset: 0x00265170
			public void OnMessage(BattleRoomRealTimePVPBattleStartNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008507 RID: 34055 RVA: 0x00266F80 File Offset: 0x00265180
			public void OnMessage(BattleRoomBattleCommandExecuteNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008508 RID: 34056 RVA: 0x00266F90 File Offset: 0x00265190
			public void OnMessage(BattleRoomTeamBattleFinishNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008509 RID: 34057 RVA: 0x00266FA0 File Offset: 0x002651A0
			public void OnMessage(BattleRoomPVPBattleFinishNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600850A RID: 34058 RVA: 0x00266FB0 File Offset: 0x002651B0
			public void OnMessage(BattleRoomRealTimePVPBattleFinishNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600850B RID: 34059 RVA: 0x00266FC0 File Offset: 0x002651C0
			public void OnMessage(BattleGuildMassiveCombatBattleFinishNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600850C RID: 34060 RVA: 0x00266FD0 File Offset: 0x002651D0
			public void OnMessage(BattleRoomPlayerBattleInfoInitNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600850D RID: 34061 RVA: 0x00266FE0 File Offset: 0x002651E0
			public void OnMessage(BattleRoomDataChangeNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600850E RID: 34062 RVA: 0x00266FF0 File Offset: 0x002651F0
			public void OnMessage(ChatContactUserSummaryInfoAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600850F RID: 34063 RVA: 0x00267000 File Offset: 0x00265200
			public void OnMessage(DSChatNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008510 RID: 34064 RVA: 0x00267010 File Offset: 0x00265210
			public void OnMessage(ChatMessageNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008511 RID: 34065 RVA: 0x00267020 File Offset: 0x00265220
			public void OnMessage(ChatMessageSendAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008512 RID: 34066 RVA: 0x00267030 File Offset: 0x00265230
			public void OnMessage(ChatBannedNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008513 RID: 34067 RVA: 0x00267040 File Offset: 0x00265240
			public void OnMessage(ChatVoiceContentAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008514 RID: 34068 RVA: 0x00267050 File Offset: 0x00265250
			public void OnMessage(ChatWorldChannelRoomEnterAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008515 RID: 34069 RVA: 0x00267060 File Offset: 0x00265260
			public void OnMessage(ChatGuildHistoryMessageNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008516 RID: 34070 RVA: 0x00267070 File Offset: 0x00265270
			public List<ChatComponent.ChatMessageClient> GetChatMsgWithBlacklist(ChatChannel channel)
			{
				return this.m_owner.GetChatMsgWithBlacklist(channel);
			}

			// Token: 0x06008517 RID: 34071 RVA: 0x00267080 File Offset: 0x00265280
			public void OnMessage(ChatGroupChangeOwnerAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008518 RID: 34072 RVA: 0x00267090 File Offset: 0x00265290
			public void OnMessage(ChatGroupChangeNameAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008519 RID: 34073 RVA: 0x002670A0 File Offset: 0x002652A0
			public void OnMessage(ChatGroupCreateChatGroupAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600851A RID: 34074 RVA: 0x002670B0 File Offset: 0x002652B0
			public void OnMessage(ChatGroupGetChatGroupAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600851B RID: 34075 RVA: 0x002670C0 File Offset: 0x002652C0
			public void OnMessage(ChatGroupGetChatGroupMemberAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600851C RID: 34076 RVA: 0x002670D0 File Offset: 0x002652D0
			public void OnMessage(ChatGroupInviteToChatGroupAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600851D RID: 34077 RVA: 0x002670E0 File Offset: 0x002652E0
			public void OnMessage(ChatGroupLeaveChatGroupAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600851E RID: 34078 RVA: 0x002670F0 File Offset: 0x002652F0
			public void OnMessage(ChatGroupKickUserAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600851F RID: 34079 RVA: 0x00267100 File Offset: 0x00265300
			public void OnMessage(FriendGetUserSummaryAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008520 RID: 34080 RVA: 0x00267110 File Offset: 0x00265310
			public void OnMessage(ChatGroupUpdateNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008521 RID: 34081 RVA: 0x00267120 File Offset: 0x00265320
			public void OnGetGuildMemberSummary(FriendGetUserSummaryAck msg)
			{
				this.m_owner.OnGetGuildMemberSummary(msg);
			}

			// Token: 0x06008522 RID: 34082 RVA: 0x00267130 File Offset: 0x00265330
			public void OnMessage(DSClimbTowerNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008523 RID: 34083 RVA: 0x00267140 File Offset: 0x00265340
			public void OnMessage(ClimbTowerGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008524 RID: 34084 RVA: 0x00267150 File Offset: 0x00265350
			public void OnMessage(ClimbTowerLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008525 RID: 34085 RVA: 0x00267160 File Offset: 0x00265360
			public void OnMessage(ClimbTowerLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008526 RID: 34086 RVA: 0x00267170 File Offset: 0x00265370
			public void OnMessage(ClimbTowerRaidAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008527 RID: 34087 RVA: 0x00267180 File Offset: 0x00265380
			public void OnMessage(HeroCommentGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008528 RID: 34088 RVA: 0x00267190 File Offset: 0x00265390
			public void OnMessage(HeroCommentAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008529 RID: 34089 RVA: 0x002671A0 File Offset: 0x002653A0
			public void OnMessage(HeroCommentEntryPraiseAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600852A RID: 34090 RVA: 0x002671B0 File Offset: 0x002653B0
			public void OnMessage(CommenterHeroViewAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600852B RID: 34091 RVA: 0x002671C0 File Offset: 0x002653C0
			public void OnMessage(DSCooperateBattleNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x0600852C RID: 34092 RVA: 0x002671D0 File Offset: 0x002653D0
			public void OnMessage(LevelDanmakuGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600852D RID: 34093 RVA: 0x002671E0 File Offset: 0x002653E0
			public void OnMessage(LevelDanmakuPostAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600852E RID: 34094 RVA: 0x002671F0 File Offset: 0x002653F0
			public void OnMessage(DSFixedStoreNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600852F RID: 34095 RVA: 0x00267200 File Offset: 0x00265400
			public void OnMessage(FixedStoreBuyStoreItemAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008530 RID: 34096 RVA: 0x00267210 File Offset: 0x00265410
			public void OnMessage(HeroRandomActionSetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008531 RID: 34097 RVA: 0x00267220 File Offset: 0x00265420
			public void OnMessage(LikesSendAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008532 RID: 34098 RVA: 0x00267230 File Offset: 0x00265430
			public void OnMessage(BusinessCardSelectAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008533 RID: 34099 RVA: 0x00267240 File Offset: 0x00265440
			public void OnMessage(BusinessCardDescUpdateAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008534 RID: 34100 RVA: 0x00267250 File Offset: 0x00265450
			public void OnMessage(BusinessCardHeroSetUpdateAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008535 RID: 34101 RVA: 0x00267260 File Offset: 0x00265460
			public void UpdateMineBusinessCard(bool isDescUpdate)
			{
				this.m_owner.UpdateMineBusinessCard(isDescUpdate);
			}

			// Token: 0x06008536 RID: 34102 RVA: 0x00267270 File Offset: 0x00265470
			public void OnMessage(DSFriendNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x06008537 RID: 34103 RVA: 0x00267280 File Offset: 0x00265480
			public void OnMessage(FriendInfoUpdateNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x06008538 RID: 34104 RVA: 0x00267290 File Offset: 0x00265490
			public void OnMessage(FriendSocialRelationUpdateNtf Ntf)
			{
				this.m_owner.OnMessage(Ntf);
			}

			// Token: 0x06008539 RID: 34105 RVA: 0x002672A0 File Offset: 0x002654A0
			public void OnMessage(FriendInviteAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600853A RID: 34106 RVA: 0x002672B0 File Offset: 0x002654B0
			public void OnMessage(FriendInviteNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600853B RID: 34107 RVA: 0x002672C0 File Offset: 0x002654C0
			public void OnMessage(FriendInviteAcceptAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600853C RID: 34108 RVA: 0x002672D0 File Offset: 0x002654D0
			public void OnMessage(FriendInviteAcceptNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600853D RID: 34109 RVA: 0x002672E0 File Offset: 0x002654E0
			public void OnMessage(FriendInviteDeclineAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600853E RID: 34110 RVA: 0x002672F0 File Offset: 0x002654F0
			public void OnMessage(FriendInviteDeclineNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600853F RID: 34111 RVA: 0x00267300 File Offset: 0x00265500
			public void OnMessage(FriendDeleteAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008540 RID: 34112 RVA: 0x00267310 File Offset: 0x00265510
			public void OnMessage(FriendBlockAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008541 RID: 34113 RVA: 0x00267320 File Offset: 0x00265520
			public void OnMessage(FriendUnblockAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008542 RID: 34114 RVA: 0x00267330 File Offset: 0x00265530
			public void OnMessage(FriendFindAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008543 RID: 34115 RVA: 0x00267340 File Offset: 0x00265540
			public void OnMessage(FriendSuggestedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008544 RID: 34116 RVA: 0x00267350 File Offset: 0x00265550
			public void OnMessage(FriendSummaryUpdateNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008545 RID: 34117 RVA: 0x00267360 File Offset: 0x00265560
			public void OnMessage(BattlePracticeInviteAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008546 RID: 34118 RVA: 0x00267370 File Offset: 0x00265570
			public void OnMessage(BattlePracticeAcceptAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008547 RID: 34119 RVA: 0x00267380 File Offset: 0x00265580
			public void OnMessage(BattlePracticeDeclineAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008548 RID: 34120 RVA: 0x00267390 File Offset: 0x00265590
			public void OnMessage(BattlePracticeCancelAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008549 RID: 34121 RVA: 0x002673A0 File Offset: 0x002655A0
			public void OnMessage(BattlePracticeInvitedNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600854A RID: 34122 RVA: 0x002673B0 File Offset: 0x002655B0
			public void OnMessage(BattlePracticeFailNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600854B RID: 34123 RVA: 0x002673C0 File Offset: 0x002655C0
			public void OnMessage(BattlePracticeDeclinedNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600854C RID: 34124 RVA: 0x002673D0 File Offset: 0x002655D0
			public void OnMessage(FriendshipPointsSendAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600854D RID: 34125 RVA: 0x002673E0 File Offset: 0x002655E0
			public void OnMessage(FriendshipPointsClaimAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600854E RID: 34126 RVA: 0x002673F0 File Offset: 0x002655F0
			public bool IsAcrossServerFriend(string userId)
			{
				return this.m_owner.IsAcrossServerFriend(userId);
			}

			// Token: 0x0600854F RID: 34127 RVA: 0x00267400 File Offset: 0x00265600
			public void OnMessage(PullOrderRewardAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008550 RID: 34128 RVA: 0x00267410 File Offset: 0x00265610
			public void OnMessage(DSGiftStoreNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008551 RID: 34129 RVA: 0x00267420 File Offset: 0x00265620
			public void OnMessage(GiftStoreCancelBuyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008552 RID: 34130 RVA: 0x00267430 File Offset: 0x00265630
			public void OnMessage(GiftStoreBuyGoodsNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008553 RID: 34131 RVA: 0x00267440 File Offset: 0x00265640
			public void OnMessage(GiftStoreOperationalGoodsUpdateNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008554 RID: 34132 RVA: 0x00267450 File Offset: 0x00265650
			public void OnMessage(GiftStoreItemBuyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008555 RID: 34133 RVA: 0x00267460 File Offset: 0x00265660
			public void OnMessage(GiftStoreAppleSubscribeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008556 RID: 34134 RVA: 0x00267470 File Offset: 0x00265670
			public void OnMessage(GmCommandAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008557 RID: 34135 RVA: 0x00267480 File Offset: 0x00265680
			public void OnMessage(GuildUpdateAnnouncementNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008558 RID: 34136 RVA: 0x00267490 File Offset: 0x00265690
			public void OnMessage(DSGuildNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008559 RID: 34137 RVA: 0x002674A0 File Offset: 0x002656A0
			public void OnMessage(GuildCreateAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600855A RID: 34138 RVA: 0x002674B0 File Offset: 0x002656B0
			public void OnMessage(GuildJoinApplyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600855B RID: 34139 RVA: 0x002674C0 File Offset: 0x002656C0
			public void OnMessage(GuildJoinApplyConfirmAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600855C RID: 34140 RVA: 0x002674D0 File Offset: 0x002656D0
			public void OnMessage(GuildJoinApplyRefuseAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600855D RID: 34141 RVA: 0x002674E0 File Offset: 0x002656E0
			public void OnMessage(GuildJoinInvitationConfirmAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600855E RID: 34142 RVA: 0x002674F0 File Offset: 0x002656F0
			public void OnMessage(GuildSearchAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600855F RID: 34143 RVA: 0x00267500 File Offset: 0x00265700
			public void OnMessage(GuildRandomListAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008560 RID: 34144 RVA: 0x00267510 File Offset: 0x00265710
			public void OnMessage(GuildQuitAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008561 RID: 34145 RVA: 0x00267520 File Offset: 0x00265720
			public void OnMessage(GuildInvitePlayerListAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008562 RID: 34146 RVA: 0x00267530 File Offset: 0x00265730
			public void OnMessage(GuildHiringDeclarationSetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008563 RID: 34147 RVA: 0x00267540 File Offset: 0x00265740
			public void OnMessage(GuildJoinInvitationGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008564 RID: 34148 RVA: 0x00267550 File Offset: 0x00265750
			public void OnMessage(GuildJoinInvitationRefuseAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008565 RID: 34149 RVA: 0x00267560 File Offset: 0x00265760
			public void OnMessage(AllGuildJoinInvitationRefuseAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008566 RID: 34150 RVA: 0x00267570 File Offset: 0x00265770
			public void OnMessage(GuildGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008567 RID: 34151 RVA: 0x00267580 File Offset: 0x00265780
			public void OnMessage(GuildBasicSetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008568 RID: 34152 RVA: 0x00267590 File Offset: 0x00265790
			public void OnMessage(GuildAnnouncementSetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008569 RID: 34153 RVA: 0x002675A0 File Offset: 0x002657A0
			public void OnMessage(GuildJoinApplyGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600856A RID: 34154 RVA: 0x002675B0 File Offset: 0x002657B0
			public void OnMessage(GuildNameChangeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600856B RID: 34155 RVA: 0x002675C0 File Offset: 0x002657C0
			public void OnMessage(GuildLogGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600856C RID: 34156 RVA: 0x002675D0 File Offset: 0x002657D0
			public void OnMessage(GuildJoinInviteAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600856D RID: 34157 RVA: 0x002675E0 File Offset: 0x002657E0
			public void OnMessage(GuildVicePresidentAppointAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600856E RID: 34158 RVA: 0x002675F0 File Offset: 0x002657F0
			public void OnMessage(GuildKickOutAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600856F RID: 34159 RVA: 0x00267600 File Offset: 0x00265800
			public void OnMessage(GuildPresidentRelieveAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008570 RID: 34160 RVA: 0x00267610 File Offset: 0x00265810
			public void OnMessage(GuildPresidentAppointAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008571 RID: 34161 RVA: 0x00267620 File Offset: 0x00265820
			public void OnMessage(AllGuildJoinApplyRefuseAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008572 RID: 34162 RVA: 0x00267630 File Offset: 0x00265830
			public void OnMessage(GuildJoinApplyAdminNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008573 RID: 34163 RVA: 0x00267640 File Offset: 0x00265840
			public void OnMessage(GuildJoinInvitationNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008574 RID: 34164 RVA: 0x00267650 File Offset: 0x00265850
			public void RemoveGuildJoinApplyListById(string userId)
			{
				this.m_owner.RemoveGuildJoinApplyListById(userId);
			}

			// Token: 0x06008575 RID: 34165 RVA: 0x00267660 File Offset: 0x00265860
			public void OnMessage(GuildMassiveCombatDataAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008576 RID: 34166 RVA: 0x00267670 File Offset: 0x00265870
			public void OnMessage(GuildMassiveCombatNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008577 RID: 34167 RVA: 0x00267680 File Offset: 0x00265880
			public void OnMessage(GuildMassiveCombatPlayerNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008578 RID: 34168 RVA: 0x00267690 File Offset: 0x00265890
			public void OnMessage(GuildMassiveCombatStartAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008579 RID: 34169 RVA: 0x002676A0 File Offset: 0x002658A0
			public void OnMessage(GuildMassiveCombatSurrenderAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600857A RID: 34170 RVA: 0x002676B0 File Offset: 0x002658B0
			public void OnMessage(GuildMassiveCombatAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600857B RID: 34171 RVA: 0x002676C0 File Offset: 0x002658C0
			public void OnMessage(GuildMassiveCombatAttackFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600857C RID: 34172 RVA: 0x002676D0 File Offset: 0x002658D0
			public void OnMessage(AutoTakeOffEquipmentsAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600857D RID: 34173 RVA: 0x002676E0 File Offset: 0x002658E0
			public void OnMessage(ExchangeHeroFragmentAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600857E RID: 34174 RVA: 0x002676F0 File Offset: 0x002658F0
			public void OnMessage(DSHeroNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600857F RID: 34175 RVA: 0x00267700 File Offset: 0x00265900
			public void OnMessage(HeroConfessAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008580 RID: 34176 RVA: 0x00267710 File Offset: 0x00265910
			public void OnMessage(HeroInteractAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008581 RID: 34177 RVA: 0x00267720 File Offset: 0x00265920
			public void OnMessage(HeroFavorabilityExpAddAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008582 RID: 34178 RVA: 0x00267730 File Offset: 0x00265930
			public void OnMessage(SetProtagonistAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008583 RID: 34179 RVA: 0x00267740 File Offset: 0x00265940
			public void OnMessage(HeroJobTransferAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008584 RID: 34180 RVA: 0x00267750 File Offset: 0x00265950
			public void OnMessage(HeroStarLevelLevelUpAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008585 RID: 34181 RVA: 0x00267760 File Offset: 0x00265960
			public void OnMessage(HeroJobLevelUpAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008586 RID: 34182 RVA: 0x00267770 File Offset: 0x00265970
			public void OnMessage(HeroSkillsSelectAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008587 RID: 34183 RVA: 0x00267780 File Offset: 0x00265980
			public void OnMessage(HeroSoldierSelectAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008588 RID: 34184 RVA: 0x00267790 File Offset: 0x00265990
			public void OnMessage(HeroComposeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008589 RID: 34185 RVA: 0x002677A0 File Offset: 0x002659A0
			public void OnMessage(HeroExpAddAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600858A RID: 34186 RVA: 0x002677B0 File Offset: 0x002659B0
			public void OnMessage(HeroJobUnlockAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600858B RID: 34187 RVA: 0x002677C0 File Offset: 0x002659C0
			public void OnMessage(EquipmentWearAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600858C RID: 34188 RVA: 0x002677D0 File Offset: 0x002659D0
			public void OnMessage(EquipmentTakeOffAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600858D RID: 34189 RVA: 0x002677E0 File Offset: 0x002659E0
			public void OnMessage(EquipmentAutoAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600858E RID: 34190 RVA: 0x002677F0 File Offset: 0x002659F0
			public void OnMessage(HeroFetterLevelUpAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600858F RID: 34191 RVA: 0x00267800 File Offset: 0x00265A00
			public void OnMessage(HeroFetterUnlockAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008590 RID: 34192 RVA: 0x00267810 File Offset: 0x00265A10
			public void OnMessage(CharSkinWearAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008591 RID: 34193 RVA: 0x00267820 File Offset: 0x00265A20
			public void OnMessage(CharSkinTakeOffAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008592 RID: 34194 RVA: 0x00267830 File Offset: 0x00265A30
			public void OnMessage(ModelSkinWearAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008593 RID: 34195 RVA: 0x00267840 File Offset: 0x00265A40
			public void OnMessage(ModelSkinTakeOffAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008594 RID: 34196 RVA: 0x00267850 File Offset: 0x00265A50
			public void OnMessage(SoldierSkinWearAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008595 RID: 34197 RVA: 0x00267860 File Offset: 0x00265A60
			public void OnMessage(SoldierSkinTakeOffAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008596 RID: 34198 RVA: 0x00267870 File Offset: 0x00265A70
			public void InitAllDefaultConfigHeros()
			{
				this.m_owner.InitAllDefaultConfigHeros();
			}

			// Token: 0x06008597 RID: 34199 RVA: 0x00267880 File Offset: 0x00265A80
			public void OnMessage(DSHeroAssistantNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x06008598 RID: 34200 RVA: 0x00267890 File Offset: 0x00265A90
			public void OnMessage(HeroAssistantAssignToTaskAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008599 RID: 34201 RVA: 0x002678A0 File Offset: 0x00265AA0
			public void OnMessage(HeroAssistantCancelTaskAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600859A RID: 34202 RVA: 0x002678B0 File Offset: 0x00265AB0
			public void OnMessage(HeroAssistantClaimRewardAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600859B RID: 34203 RVA: 0x002678C0 File Offset: 0x00265AC0
			public void OnMessage(DSHeroDungeonNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600859C RID: 34204 RVA: 0x002678D0 File Offset: 0x00265AD0
			public void OnMessage(HeroDungeonLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600859D RID: 34205 RVA: 0x002678E0 File Offset: 0x00265AE0
			public void OnMessage(HeroDungeonLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600859E RID: 34206 RVA: 0x002678F0 File Offset: 0x00265AF0
			public void OnMessage(HeroDungeonLevelRaidAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600859F RID: 34207 RVA: 0x00267900 File Offset: 0x00265B00
			public void OnMessage(HeroDungeonChapterStarRewardGainAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A0 RID: 34208 RVA: 0x00267910 File Offset: 0x00265B10
			public void OnMessage(DSHeroPhantomNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x060085A1 RID: 34209 RVA: 0x00267920 File Offset: 0x00265B20
			public void OnMessage(HeroPhantomAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A2 RID: 34210 RVA: 0x00267930 File Offset: 0x00265B30
			public void OnMessage(HeroPhantomBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A3 RID: 34211 RVA: 0x00267940 File Offset: 0x00265B40
			public void OnMessage(DSHeroTrainningNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A4 RID: 34212 RVA: 0x00267950 File Offset: 0x00265B50
			public void OnMessage(HeroTrainningLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A5 RID: 34213 RVA: 0x00267960 File Offset: 0x00265B60
			public void OnMessage(HeroTrainningLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A6 RID: 34214 RVA: 0x00267970 File Offset: 0x00265B70
			public void OnMessage(DSLevelNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A7 RID: 34215 RVA: 0x00267980 File Offset: 0x00265B80
			public void OnMessage(LevelWayPointMoveAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A8 RID: 34216 RVA: 0x00267990 File Offset: 0x00265B90
			public void OnMessage(LevelScenarioHandleAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085A9 RID: 34217 RVA: 0x002679A0 File Offset: 0x00265BA0
			public void OnMessage(LevelWayPointBattleFinishAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085AA RID: 34218 RVA: 0x002679B0 File Offset: 0x00265BB0
			public void OnMessage(RandomEventNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085AB RID: 34219 RVA: 0x002679C0 File Offset: 0x00265BC0
			public void AppendChangedGoodsToRewards(List<ProGoods> changedGoods, List<Goods> rewards)
			{
				this.m_owner.AppendChangedGoodsToRewards(changedGoods, rewards);
			}

			// Token: 0x060085AC RID: 34220 RVA: 0x002679D0 File Offset: 0x00265BD0
			public static void AppendGoodsToRewards(GoodsType goodsType, int id, int count, List<Goods> rewards)
			{
				ProjectLPlayerContext.AppendGoodsToRewards(goodsType, id, count, rewards);
			}

			// Token: 0x060085AD RID: 34221 RVA: 0x002679DC File Offset: 0x00265BDC
			public int GetNotBagItemCount(Goods goods)
			{
				return this.m_owner.GetNotBagItemCount(goods);
			}

			// Token: 0x060085AE RID: 34222 RVA: 0x002679EC File Offset: 0x00265BEC
			public void GetWaypointEvent(int waypointId, out ConfigDataEventInfo eventInfo, out RandomEvent randomEvent)
			{
				this.m_owner.GetWaypointEvent(waypointId, out eventInfo, out randomEvent);
			}

			// Token: 0x060085AF RID: 34223 RVA: 0x002679FC File Offset: 0x00265BFC
			public ConfigDataScenarioInfo GetLastFinishedScenarioInfo()
			{
				return this.m_owner.GetLastFinishedScenarioInfo();
			}

			// Token: 0x060085B0 RID: 34224 RVA: 0x00267A0C File Offset: 0x00265C0C
			public ConfigDataScenarioInfo GetNextScenarioInfo()
			{
				return this.m_owner.GetNextScenarioInfo();
			}

			// Token: 0x060085B1 RID: 34225 RVA: 0x00267A1C File Offset: 0x00265C1C
			public void InitCurrentScenarioInfo()
			{
				this.m_owner.InitCurrentScenarioInfo();
			}

			// Token: 0x060085B2 RID: 34226 RVA: 0x00267A2C File Offset: 0x00265C2C
			public void OnMessage(DSMailNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085B3 RID: 34227 RVA: 0x00267A3C File Offset: 0x00265C3C
			public void OnMessage(MailsGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085B4 RID: 34228 RVA: 0x00267A4C File Offset: 0x00265C4C
			public void OnMessage(MailsChangedNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085B5 RID: 34229 RVA: 0x00267A5C File Offset: 0x00265C5C
			public void OnMessage(MailReadAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085B6 RID: 34230 RVA: 0x00267A6C File Offset: 0x00265C6C
			public void OnMessage(MailAttachmentsGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085B7 RID: 34231 RVA: 0x00267A7C File Offset: 0x00265C7C
			public void OnMessage(MailAttachmentAutoGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085B8 RID: 34232 RVA: 0x00267A8C File Offset: 0x00265C8C
			public void OnMessage(DSMemoryCorridorNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085B9 RID: 34233 RVA: 0x00267A9C File Offset: 0x00265C9C
			public void OnMessage(MemoryCorridorLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085BA RID: 34234 RVA: 0x00267AAC File Offset: 0x00265CAC
			public void OnMessage(MemoryCorridorLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085BB RID: 34235 RVA: 0x00267ABC File Offset: 0x00265CBC
			public void OnMessage(DirectelyActivitedMissionUpdateNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085BC RID: 34236 RVA: 0x00267ACC File Offset: 0x00265CCC
			public void OnMessage(DSMissionNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085BD RID: 34237 RVA: 0x00267ADC File Offset: 0x00265CDC
			public void OnMessage(GetMissionRewardAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085BE RID: 34238 RVA: 0x00267AEC File Offset: 0x00265CEC
			public void OnMessage(DSNoviceNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085BF RID: 34239 RVA: 0x00267AFC File Offset: 0x00265CFC
			public void OnMessage(NoviceClaimRewardAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C0 RID: 34240 RVA: 0x00267B0C File Offset: 0x00265D0C
			public void OnMessage(OperationalActivityGainRewardAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C1 RID: 34241 RVA: 0x00267B1C File Offset: 0x00265D1C
			public void OnMessage(OperationalActivityExchangeItemGroupAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C2 RID: 34242 RVA: 0x00267B2C File Offset: 0x00265D2C
			public void OnMessage(AdvertisementFlowLayoutUpdateNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C3 RID: 34243 RVA: 0x00267B3C File Offset: 0x00265D3C
			public void OnMessage(DSOperationalActivityNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C4 RID: 34244 RVA: 0x00267B4C File Offset: 0x00265D4C
			public void OnMessage(RemoveAnnouncementNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C5 RID: 34245 RVA: 0x00267B5C File Offset: 0x00265D5C
			public void OnMessage(DSAnnouncementNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C6 RID: 34246 RVA: 0x00267B6C File Offset: 0x00265D6C
			public void OnMessage(NewOperationalActivityNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C7 RID: 34247 RVA: 0x00267B7C File Offset: 0x00265D7C
			public void OnMessage(NewAnnouncementNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x060085C8 RID: 34248 RVA: 0x00267B8C File Offset: 0x00265D8C
			public void OnMessage(UpdateOperationalActivityNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085C9 RID: 34249 RVA: 0x00267B9C File Offset: 0x00265D9C
			public void OnMessage(NewMarqueeNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x060085CA RID: 34250 RVA: 0x00267BAC File Offset: 0x00265DAC
			public void OnMessage(RedeemInfoAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085CB RID: 34251 RVA: 0x00267BBC File Offset: 0x00265DBC
			public void OnMessage(RedeemClaimAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085CC RID: 34252 RVA: 0x00267BCC File Offset: 0x00265DCC
			public void OnMessage(FansRewardsFromPBTCBTInfoAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085CD RID: 34253 RVA: 0x00267BDC File Offset: 0x00265DDC
			public void OnMessage(FansRewardsFromPBTCBTClaimAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085CE RID: 34254 RVA: 0x00267BEC File Offset: 0x00265DEC
			public bool CanShowActivity(OperationalActivityBase activity)
			{
				return this.m_owner.CanShowActivity(activity);
			}

			// Token: 0x060085CF RID: 34255 RVA: 0x00267BFC File Offset: 0x00265DFC
			public PlayerInfoInitReq BuildPlayerInfoInitReq(bool sendDSVersion)
			{
				return this.m_owner.BuildPlayerInfoInitReq(sendDSVersion);
			}

			// Token: 0x060085D0 RID: 34256 RVA: 0x00267C0C File Offset: 0x00265E0C
			public void OnMessage(OpenMemoryStoreAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D1 RID: 34257 RVA: 0x00267C1C File Offset: 0x00265E1C
			public void OnMessage(DailyFlushNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D2 RID: 34258 RVA: 0x00267C2C File Offset: 0x00265E2C
			public void OnMessage(ShareAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D3 RID: 34259 RVA: 0x00267C3C File Offset: 0x00265E3C
			public void OnMessage(HeadPortraitAndHeadFrameSetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D4 RID: 34260 RVA: 0x00267C4C File Offset: 0x00265E4C
			public void OnMessage(RMBUpdateNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D5 RID: 34261 RVA: 0x00267C5C File Offset: 0x00265E5C
			public void OnMessage(FlushConfigNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x060085D6 RID: 34262 RVA: 0x00267C6C File Offset: 0x00265E6C
			public void OnMessage(ExchangeGiftCDKeyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D7 RID: 34263 RVA: 0x00267C7C File Offset: 0x00265E7C
			public void OnMessage(PlayerInfoInitAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D8 RID: 34264 RVA: 0x00267C8C File Offset: 0x00265E8C
			public void OnMessage(CreateCharactorAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085D9 RID: 34265 RVA: 0x00267C9C File Offset: 0x00265E9C
			public void OnMessage(DSPlayerBasicNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085DA RID: 34266 RVA: 0x00267CAC File Offset: 0x00265EAC
			public void OnMessage(PlayerInfoInitEndNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085DB RID: 34267 RVA: 0x00267CBC File Offset: 0x00265EBC
			public void OnMessage(ProChangedGoodsNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085DC RID: 34268 RVA: 0x00267CCC File Offset: 0x00265ECC
			public void OnMessage(BuyEnergyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085DD RID: 34269 RVA: 0x00267CDC File Offset: 0x00265EDC
			public void OnMessage(ArenaTicketsBuyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085DE RID: 34270 RVA: 0x00267CEC File Offset: 0x00265EEC
			public void OnMessage(PlayerNameChangeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085DF RID: 34271 RVA: 0x00267CFC File Offset: 0x00265EFC
			public void OnMessage(GameRatingOpenAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085E0 RID: 34272 RVA: 0x00267D0C File Offset: 0x00265F0C
			public void SetChangedGoodsListStatus(List<ProGoods> goodsList)
			{
				this.m_owner.SetChangedGoodsListStatus(goodsList);
			}

			// Token: 0x060085E1 RID: 34273 RVA: 0x00267D1C File Offset: 0x00265F1C
			public void SetChangedGoodsStatus(ProGoods goods, ref bool bagChange, ref bool playerInfoChange, ref bool heroChange)
			{
				this.m_owner.SetChangedGoodsStatus(goods, ref bagChange, ref playerInfoChange, ref heroChange);
			}

			// Token: 0x060085E2 RID: 34274 RVA: 0x00267D30 File Offset: 0x00265F30
			public void OnMessage(UpdateServerTimeNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085E3 RID: 34275 RVA: 0x00267D40 File Offset: 0x00265F40
			public void InitPlayerInfo(PlayerInfoInitAck msg)
			{
				this.m_owner.InitPlayerInfo(msg);
			}

			// Token: 0x060085E4 RID: 34276 RVA: 0x00267D50 File Offset: 0x00265F50
			public void UpdateServerTime(long serverTimeTicks)
			{
				this.m_owner.UpdateServerTime(serverTimeTicks);
			}

			// Token: 0x060085E5 RID: 34277 RVA: 0x00267D60 File Offset: 0x00265F60
			public void InitPlayerBasic(DSPlayerBasicNtf msg)
			{
				this.m_owner.InitPlayerBasic(msg);
			}

			// Token: 0x060085E6 RID: 34278 RVA: 0x00267D70 File Offset: 0x00265F70
			public void OnMessage(DSRaffleNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085E7 RID: 34279 RVA: 0x00267D80 File Offset: 0x00265F80
			public void OnMessage(RaffleDrawAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085E8 RID: 34280 RVA: 0x00267D90 File Offset: 0x00265F90
			public void OnMessage(DSRandomStoreNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085E9 RID: 34281 RVA: 0x00267DA0 File Offset: 0x00265FA0
			public void OnMessage(DSRealTimePVPNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085EA RID: 34282 RVA: 0x00267DB0 File Offset: 0x00265FB0
			public void OnMessage(DSRealTimePVPPromotionBattleReportNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085EB RID: 34283 RVA: 0x00267DC0 File Offset: 0x00265FC0
			public void OnMessage(DSRealTimePVPBattleReportNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085EC RID: 34284 RVA: 0x00267DD0 File Offset: 0x00265FD0
			public void OnMessage(RealTimePVPWaitingForOpponentAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085ED RID: 34285 RVA: 0x00267DE0 File Offset: 0x00265FE0
			public void OnMessage(RealTimePVPMatchupNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085EE RID: 34286 RVA: 0x00267DF0 File Offset: 0x00265FF0
			public void OnMessage(RealTimePVPCancelWaitingForOpponentAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085EF RID: 34287 RVA: 0x00267E00 File Offset: 0x00266000
			public void OnMessage(RealTimePVPGetInfoAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F0 RID: 34288 RVA: 0x00267E10 File Offset: 0x00266010
			public void OnMessage(RealTimePVPGetTopPlayersAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F1 RID: 34289 RVA: 0x00267E20 File Offset: 0x00266020
			public void OnMessage(RealTimePVPAcquireWinsBonusAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F2 RID: 34290 RVA: 0x00267E30 File Offset: 0x00266030
			public void OnMessage(RealTimePVPLeaderboardInfoNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F3 RID: 34291 RVA: 0x00267E40 File Offset: 0x00266040
			public bool IsEmptyRealTimePVPPlayerInfo()
			{
				return this.m_owner.IsEmptyRealTimePVPPlayerInfo();
			}

			// Token: 0x060085F4 RID: 34292 RVA: 0x00267E50 File Offset: 0x00266050
			public void OnMessage(RechargeStoreCancelBuyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F5 RID: 34293 RVA: 0x00267E60 File Offset: 0x00266060
			public void OnMessage(DSResourceNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F6 RID: 34294 RVA: 0x00267E70 File Offset: 0x00266070
			public void OnMessage(MonthCardUpdateNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F7 RID: 34295 RVA: 0x00267E80 File Offset: 0x00266080
			public void OnMessage(DSRiftNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F8 RID: 34296 RVA: 0x00267E90 File Offset: 0x00266090
			public void OnMessage(RiftLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085F9 RID: 34297 RVA: 0x00267EA0 File Offset: 0x002660A0
			public void OnMessage(RiftLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085FA RID: 34298 RVA: 0x00267EB0 File Offset: 0x002660B0
			public void OnMessage(RiftLevelRaidAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085FB RID: 34299 RVA: 0x00267EC0 File Offset: 0x002660C0
			public void OnMessage(RiftChapterRewardGainAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085FC RID: 34300 RVA: 0x00267ED0 File Offset: 0x002660D0
			public void InitOpenedRiftChapters()
			{
				this.m_owner.InitOpenedRiftChapters();
			}

			// Token: 0x060085FD RID: 34301 RVA: 0x00267EE0 File Offset: 0x002660E0
			public void OnMessage(DSSelectCardNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085FE RID: 34302 RVA: 0x00267EF0 File Offset: 0x002660F0
			public void OnMessage(SelectCardAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x060085FF RID: 34303 RVA: 0x00267F00 File Offset: 0x00266100
			public void SetRewardFlags(List<ProGoods> goodsList)
			{
				this.m_owner.SetRewardFlags(goodsList);
			}

			// Token: 0x06008600 RID: 34304 RVA: 0x00267F10 File Offset: 0x00266110
			public void SetHeroRewardToFragmentDict(List<ProGoods> goodsList)
			{
				this.m_owner.SetHeroRewardToFragmentDict(goodsList);
			}

			// Token: 0x06008601 RID: 34305 RVA: 0x00267F20 File Offset: 0x00266120
			public void OnMessage(EverydaySignAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008602 RID: 34306 RVA: 0x00267F30 File Offset: 0x00266130
			public void OnMessage(DSSurveyNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008603 RID: 34307 RVA: 0x00267F40 File Offset: 0x00266140
			public void OnMessage(NewSurveyNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008604 RID: 34308 RVA: 0x00267F50 File Offset: 0x00266150
			public void OnMessage(UpdateSurveyNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008605 RID: 34309 RVA: 0x00267F60 File Offset: 0x00266160
			public void OnMessage(GetSurveyRewardAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008606 RID: 34310 RVA: 0x00267F70 File Offset: 0x00266170
			public void OnMessage(OpenSurveyAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008607 RID: 34311 RVA: 0x00267F80 File Offset: 0x00266180
			public void OnMessage(DSTeamNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008608 RID: 34312 RVA: 0x00267F90 File Offset: 0x00266190
			public void OnMessage(TeamRoomCreateAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008609 RID: 34313 RVA: 0x00267FA0 File Offset: 0x002661A0
			public void OnMessage(TeamRoomViewAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600860A RID: 34314 RVA: 0x00267FB0 File Offset: 0x002661B0
			public void OnMessage(TeamRoomAutoMatchAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600860B RID: 34315 RVA: 0x00267FC0 File Offset: 0x002661C0
			public void OnMessage(TeamRoomAutoMatchCancelAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600860C RID: 34316 RVA: 0x00267FD0 File Offset: 0x002661D0
			public void OnMessage(TeamRoomAuthorityChangeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600860D RID: 34317 RVA: 0x00267FE0 File Offset: 0x002661E0
			public void OnMessage(TeamRoomJoinAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600860E RID: 34318 RVA: 0x00267FF0 File Offset: 0x002661F0
			public void OnMessage(TeamRoomQuitAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600860F RID: 34319 RVA: 0x00268000 File Offset: 0x00266200
			public void OnMessage(TeamRoomGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008610 RID: 34320 RVA: 0x00268010 File Offset: 0x00266210
			public void OnMessage(TeamRoomInviteAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008611 RID: 34321 RVA: 0x00268020 File Offset: 0x00266220
			public void OnMessage(TeamRoomInvitationRefusedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008612 RID: 34322 RVA: 0x00268030 File Offset: 0x00266230
			public void OnMessage(TeamRoomInviteeInfoGetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008613 RID: 34323 RVA: 0x00268040 File Offset: 0x00266240
			public void OnMessage(TeamRoomPlayerPositionChangeAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008614 RID: 34324 RVA: 0x00268050 File Offset: 0x00266250
			public void OnMessage(TeamRoomPlayerJoinNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008615 RID: 34325 RVA: 0x00268060 File Offset: 0x00266260
			public void OnMessage(TeamRoomPlayerQuitNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008616 RID: 34326 RVA: 0x00268070 File Offset: 0x00266270
			public void OnMessage(TeamRoomPlayerLeaveWaitingListAndJoinRoomNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008617 RID: 34327 RVA: 0x00268080 File Offset: 0x00266280
			public void OnMessage(TeamRoomAuthorityChangeNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008618 RID: 34328 RVA: 0x00268090 File Offset: 0x00266290
			public void OnMessage(TeamRoomAutoMatchInfoNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008619 RID: 34329 RVA: 0x002680A0 File Offset: 0x002662A0
			public void OnMessage(TeamRoomInviteNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600861A RID: 34330 RVA: 0x002680B0 File Offset: 0x002662B0
			public void OnMessage(TeamRoomInvitationRefusedNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600861B RID: 34331 RVA: 0x002680C0 File Offset: 0x002662C0
			public void OnMessage(TeamRoomSelfKickOutNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600861C RID: 34332 RVA: 0x002680D0 File Offset: 0x002662D0
			public void OnMessage(TeamRoomInviteeLevelInfoNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600861D RID: 34333 RVA: 0x002680E0 File Offset: 0x002662E0
			public void OnMessage(TeamRoomPlayerPositionChangeNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600861E RID: 34334 RVA: 0x002680F0 File Offset: 0x002662F0
			public void OnMessage(DSThearchyTrialNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600861F RID: 34335 RVA: 0x00268100 File Offset: 0x00266300
			public void OnMessage(ThearchyTrialLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008620 RID: 34336 RVA: 0x00268110 File Offset: 0x00266310
			public void OnMessage(ThearchyTrialLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008621 RID: 34337 RVA: 0x00268120 File Offset: 0x00266320
			public void OnMessage(DSTrainingGroundNtf ntf)
			{
				this.m_owner.OnMessage(ntf);
			}

			// Token: 0x06008622 RID: 34338 RVA: 0x00268130 File Offset: 0x00266330
			public void OnMessage(TrainingGroundTechLevelupAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008623 RID: 34339 RVA: 0x00268140 File Offset: 0x00266340
			public void OnMessage(DSTreasureMapNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008624 RID: 34340 RVA: 0x00268150 File Offset: 0x00266350
			public void OnMessage(TreasureLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008625 RID: 34341 RVA: 0x00268160 File Offset: 0x00266360
			public void OnMessage(TreasureLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008626 RID: 34342 RVA: 0x00268170 File Offset: 0x00266370
			public void OnMessage(DSUnchartedScoreNtf msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008627 RID: 34343 RVA: 0x00268180 File Offset: 0x00266380
			public void OnMessage(UnchartedScoreChallengeLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008628 RID: 34344 RVA: 0x00268190 File Offset: 0x00266390
			public void OnMessage(UnchartedScoreChallengeLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x06008629 RID: 34345 RVA: 0x002681A0 File Offset: 0x002663A0
			public void OnMessage(UnchartedScoreScoreLevelAttackAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600862A RID: 34346 RVA: 0x002681B0 File Offset: 0x002663B0
			public void OnMessage(UnchartedScoreScoreLevelBattleFinishedAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x0600862B RID: 34347 RVA: 0x002681C0 File Offset: 0x002663C0
			public void OnMessage(UserGuideSetAck msg)
			{
				this.m_owner.OnMessage(msg);
			}

			// Token: 0x04005EFA RID: 24314
			private ProjectLPlayerContext m_owner;
		}
	}
}
